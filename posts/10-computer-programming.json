[
    {
        "id": 522,
        "date": "2020-10-24T11:16:52",
        "date_gmt": "2020-10-24T11:16:52",
        "guid": {
            "rendered": "http://computerprogramming.foobrdigital.com/?p=522"
        },
        "modified": "2020-10-24T11:16:52",
        "modified_gmt": "2020-10-24T11:16:52",
        "slug": "introduction-to-computer-program",
        "status": "publish",
        "type": "post",
        "link": "https://computerprogramming.foobrdigital.com/introduction-to-computer-program/",
        "title": {
            "rendered": "Introduction to Computer Program"
        },
        "content": {
            "rendered": "\n<p>Before getting into computer programming, let us first understand computer programs and what they do.</p>\n\n\n\n<p><em>A computer program is a sequence of instructions written using a Computer Programming Language to perform a specified task by the computer.</em></p>\n\n\n\n<p>The two important terms that we have used in the above definition are −</p>\n\n\n\n<ul><li>Sequence of instructions</li><li>Computer Programming Language</li></ul>\n\n\n\n<p>To understand these terms, consider a situation when someone asks you about how to go to a nearby KFC. What exactly do you do to tell him the way to go to KFC?</p>\n\n\n\n<p>You will use Human Language to tell the way to go to KFC, something as follows −</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>First go straight, after half kilometer, take left from the red light and then drive around one kilometer and you will find KFC at the right.</p></blockquote>\n\n\n\n<p>Here, you have used English Language to give several steps to be taken to reach KFC. If they are followed in the following sequence, then you will reach KFC −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>1.\tGo straight\n2.\tDrive half kilometer\n3.\tTake left\n4.\tDrive around one kilometer\n5.\tSearch for KFC at your right side\n</code></pre>\n\n\n\n<p>Now, try to map the situation with a computer program. The above sequence of instructions is actually a&nbsp;<strong>Human Program</strong>&nbsp;written in&nbsp;<strong>English Language</strong>, which instructs on how to reach KFC from a given starting point. This same sequence could have been given in Spanish, Hindi, Arabic, or any other human language, provided the person seeking direction knows any of these languages.</p>\n\n\n\n<p>Now, let&#8217;s go back and try to understand a computer program, which is a sequence of instructions written in a Computer Language to perform a specified task by the computer. Following is a simple program written in&nbsp;<strong>Python</strong>&nbsp;programming Language −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>print \"Hello, World!\"\n</code></pre>\n\n\n\n<p>The above computer program instructs the computer to print &#8220;Hello, World!&#8221; on the computer screen.</p>\n\n\n\n<ul><li>A computer program is also called a&nbsp;<strong>computer software</strong>, which can range from two lines to millions of lines of instructions.</li><li>Computer program instructions are also called program source code and&nbsp;<strong>computer programming</strong>&nbsp;is also called&nbsp;<strong>program coding</strong>.</li><li>A computer without a computer program is just a dump box; it is programs that make computers active.</li></ul>\n\n\n\n<p>As we have developed so many languages to communicate among ourselves, computer scientists have developed several computer-programming languages to provide instructions to the computer (i.e., to write computer programs). We will see several computer programming languages in the subsequent chapters.</p>\n\n\n\n<h2>Introduction to Computer Programming</h2>\n\n\n\n<p>If you understood what a&nbsp;<strong>computer program</strong>&nbsp;is, then we will say:&nbsp;<em>the act of writing computer programs is called computer programming.</em></p>\n\n\n\n<p>As we mentioned earlier, there are hundreds of programming languages, which can be used to write computer programs and following are a few of them −</p>\n\n\n\n<ul><li>Java</li><li>C</li><li>C++</li><li>Python</li><li>PHP</li><li>Perl</li><li>Ruby</li></ul>\n\n\n\n<h2>Uses of Computer Programs</h2>\n\n\n\n<p>Today computer programs are being used in almost every field, household, agriculture, medical, entertainment, defense, communication, etc. Listed below are a few applications of computer programs −</p>\n\n\n\n<ul><li>MS Word, MS Excel, Adobe Photoshop, Internet Explorer, Chrome, etc., are examples of computer programs.</li><li>Computer programs are being used to develop graphics and special effects in movie making.</li><li>Computer programs are being used to perform Ultrasounds, X-Rays, and other medical examinations.</li><li>Computer programs are being used in our mobile phones for SMS, Chat, and voice communication.</li></ul>\n\n\n\n<h2>Computer Programmer</h2>\n\n\n\n<p>Someone who can write computer programs or in other words, someone who can do computer programming is called a Computer Programmer.</p>\n\n\n\n<p>Based on computer programming language expertise, we can name a computer programmers as follows −</p>\n\n\n\n<ul><li>C Programmer</li><li>C++ Programmer</li><li>Java Programmer</li><li>Python Programmer</li><li>PHP Programmer</li><li>Perl Programmer</li><li>Ruby Programmer</li></ul>\n\n\n\n<h2>Algorithm</h2>\n\n\n\n<p>From programming point of view, an&nbsp;<strong>algorithm</strong>&nbsp;is a step-by-step procedure to resolve any problem. An algorithm is an effective method expressed as a finite set of well-defined instructions.</p>\n\n\n\n<p>Thus, a computer programmer lists down all the steps required to resolve a problem before writing the actual code. Following is a simple example of an algorithm to find out the largest number from a given list of numbers −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>1. Get a list of numbers L<sub>1</sub>, L<sub>2</sub>, L<sub>3</sub>....L<sub>N</sub>\n2. Assume L<sub>1</sub> is the largest, Largest = L<sub>1</sub>\n3. Take next number L<sub>i</sub> from the list and do the following\n4. If Largest is less than L<sub>i</sub>\n5. Largest = L<sub>i</sub>\n6. If L<sub>i</sub> is last number from the list then\n7. Print value stored in Largest and come out\n8. Else repeat same process starting from step 3\n</code></pre>\n\n\n\n<p>The above algorithm has been written in a crude way to help beginners understand the concept. You will come across more standardized ways of writing computer algorithms as you move on to advanced levels of computer programming.</p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Before getting into computer programming, let us first understand computer programs and what they do. A computer program is a sequence of instructions written using a Computer Programming Language to perform a specified task by the computer. The two important terms that we have used in the above definition are − Sequence of instructions Computer [&hellip;]</p>\n",
            "protected": false
        },
        "author": 2,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            10
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/522"
                }
            ],
            "collection": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
                }
            ],
            "about": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=522"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/522/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 523,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/522/revisions/523"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=522"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=522"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=522"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https://api.w.org/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 524,
        "date": "2020-10-24T11:17:34",
        "date_gmt": "2020-10-24T11:17:34",
        "guid": {
            "rendered": "http://computerprogramming.foobrdigital.com/?p=524"
        },
        "modified": "2020-10-24T11:17:34",
        "modified_gmt": "2020-10-24T11:17:34",
        "slug": "computer-programming-basics",
        "status": "publish",
        "type": "post",
        "link": "https://computerprogramming.foobrdigital.com/computer-programming-basics/",
        "title": {
            "rendered": "Basics"
        },
        "content": {
            "rendered": "\n<p>We assume you are well aware of English Language, which is a well-known&nbsp;<strong>Human Interface Language</strong>. English has a predefined grammar, which needs to be followed to write English statements in a correct way. Likewise, most of the Human Interface Languages (Hindi, English, Spanish, French, etc.) are made of several elements like verbs, nouns, adjectives, adverbs, propositions, and conjunctions, etc.</p>\n\n\n\n<p>Similar to Human Interface Languages, Computer Programming Languages are also made of several elements. We will take you through the basics of those elements and make you comfortable to use them in various programming languages. These basic elements include −</p>\n\n\n\n<ul><li>Programming Environment</li><li>Basic Syntax</li><li>Data Types</li><li>Variables</li><li>Keywords</li><li>Basic Operators</li><li>Decision Making</li><li>Loops</li><li>Numbers</li><li>Characters</li><li>Arrays</li><li>Strings</li><li>Functions</li><li>File I/O</li></ul>\n\n\n\n<p>We will explain all these elements in subsequent chapters with examples using different programming languages. First, we will try to understand the meaning of all these terms in general and then, we will see how these terms can be used in different programming languages.</p>\n\n\n\n<p>This tutorial has been designed to give you an idea about the following most popular programming languages −</p>\n\n\n\n<ul><li>C Programming</li><li>Java Programming</li><li>Python Programming</li></ul>\n\n\n\n<p>A major part of the tutorial has been explained by taking C as programming language and then we have shown how similar concepts work in Java and Python. So after completion of this tutorial, you will be quite familiar with these popular programming languages.</p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>We assume you are well aware of English Language, which is a well-known&nbsp;Human Interface Language. English has a predefined grammar, which needs to be followed to write English statements in a correct way. Likewise, most of the Human Interface Languages (Hindi, English, Spanish, French, etc.) are made of several elements like verbs, nouns, adjectives, adverbs, [&hellip;]</p>\n",
            "protected": false
        },
        "author": 2,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            10
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/524"
                }
            ],
            "collection": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
                }
            ],
            "about": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=524"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/524/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 525,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/524/revisions/525"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=524"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=524"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=524"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https://api.w.org/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 526,
        "date": "2020-10-24T11:18:05",
        "date_gmt": "2020-10-24T11:18:05",
        "guid": {
            "rendered": "http://computerprogramming.foobrdigital.com/?p=526"
        },
        "modified": "2020-10-24T11:18:05",
        "modified_gmt": "2020-10-24T11:18:05",
        "slug": "computer-programming-environment",
        "status": "publish",
        "type": "post",
        "link": "https://computerprogramming.foobrdigital.com/computer-programming-environment/",
        "title": {
            "rendered": "Environment"
        },
        "content": {
            "rendered": "\n<p>Though Environment Setup is not an element of any Programming Language, it is the first step to be followed before setting on to write a program.</p>\n\n\n\n<p>When we say Environment Setup, it simply implies a base on top of which we can do our programming. Thus, we need to have the required software setup, i.e., installation on our PC which will be used to write computer programs, compile, and execute them. For example, if you need to browse Internet, then you need the following setup on your machine −</p>\n\n\n\n<ul><li>A working Internet connection to connect to the Internet</li><li>A Web browser such as Internet Explorer, Chrome, Safari, etc.</li></ul>\n\n\n\n<p>If you are a PC user, then you will recognize the following screenshot, which we have taken from the Internet Explorer while browsing Codemeals.com.</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://www.tutorialspoint.com/computer_programming/images/internet_explorer.jpg\" alt=\"Internet Explorer\"/></figure>\n\n\n\n<p>Similarly, you will need the following setup to start with programming using any programming language.</p>\n\n\n\n<ul><li>A text editor to create computer programs.</li><li>A compiler to compile the programs into binary format.</li><li>An interpreter to execute the programs directly.</li></ul>\n\n\n\n<p>In case you don’t have sufficient exposure to computers, you will not be able to set up either of these software. So, we suggest you take the help from any technical person around you to set up the programming environment on your machine from where you can start. But for you, it is important to understand what these items are.</p>\n\n\n\n<h2>Text Editor</h2>\n\n\n\n<p>A text editor is a software that is used to write computer programs. Your Windows machine must have a Notepad, which can be used to type programs. You can launch it by following these steps −</p>\n\n\n\n<pre class=\"wp-block-preformatted\">Start Icon → All Programs → Accessories → Notepad → Mouse Click on Notepad\n</pre>\n\n\n\n<p>It will launch Notepad with the following window −</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://www.tutorialspoint.com/computer_programming/images/notepad.jpg\" alt=\"Notepad\"/></figure>\n\n\n\n<p>You can use this software to type your computer program and save it in a file at any location. You can download and install other good editors like&nbsp;<strong>Notepad++</strong>, which is freely available.</p>\n\n\n\n<p>If you are a Mac user, then you will have&nbsp;<strong>TextEdit</strong>&nbsp;or you can install some other commercial editor like&nbsp;<strong>BBEdit</strong>&nbsp;to start with.</p>\n\n\n\n<h2>Compiler?</h2>\n\n\n\n<p>You write your computer program using your favorite programming language and save it in a text file called the program file.</p>\n\n\n\n<p>Now let us try to get a little more detail on how the computer understands a program written by you using a programming language. Actually, the computer cannot understand your program directly given in the text format, so we need to convert this program in a binary format, which can be understood by the computer.</p>\n\n\n\n<p>The conversion from text program to binary file is done by another software called Compiler and this process of conversion from text formatted program to binary format file is called program compilation. Finally, you can execute binary file to perform the programmed task.</p>\n\n\n\n<p>We are not going into the details of a compiler and the different phases of compilation.</p>\n\n\n\n<p>The following flow diagram gives an illustration of the process −</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://www.tutorialspoint.com/computer_programming/images/compiler.jpg\" alt=\"Compiler\"/></figure>\n\n\n\n<p>So, if you are going to write your program in any such language, which needs compilation like C, C++, Java and Pascal, etc., then you will need to install their compilers before you start programming.</p>\n\n\n\n<h2>Interpreter</h2>\n\n\n\n<p>We just discussed about compilers and the compilation process. Compilers are required in case you are going to write your program in a programming language that needs to be compiled into binary format before its execution.</p>\n\n\n\n<p>There are other programming languages such as Python, PHP, and Perl, which do not need any compilation into binary format, rather an interpreter can be used to read such programs line by line and execute them directly without any further conversion.</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://www.tutorialspoint.com/computer_programming/images/interpreter.jpg\" alt=\"Interpreter\"/></figure>\n\n\n\n<p>So, if you are going to write your programs in PHP, Python, Perl, Ruby, etc., then you will need to install their interpreters before you start programming.</p>\n\n\n\n<h2>Online Compilation</h2>\n\n\n\n<p>If you are not able to set up any editor, compiler, or interpreter on your machine, then&nbsp;<em>Codemeals.com</em>&nbsp;provides a facility to compile and run almost all the programs online with an ease of a single click.</p>\n\n\n\n<p>So do not worry and let&#8217;s proceed further to have a thrilling experience to become a computer programmer in simple and easy steps.</p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Though Environment Setup is not an element of any Programming Language, it is the first step to be followed before setting on to write a program. When we say Environment Setup, it simply implies a base on top of which we can do our programming. Thus, we need to have the required software setup, i.e., [&hellip;]</p>\n",
            "protected": false
        },
        "author": 2,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            10
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/526"
                }
            ],
            "collection": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
                }
            ],
            "about": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=526"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/526/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 527,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/526/revisions/527"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=526"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=526"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=526"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https://api.w.org/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 528,
        "date": "2020-10-24T11:19:47",
        "date_gmt": "2020-10-24T11:19:47",
        "guid": {
            "rendered": "http://computerprogramming.foobrdigital.com/?p=528"
        },
        "modified": "2020-10-24T11:19:47",
        "modified_gmt": "2020-10-24T11:19:47",
        "slug": "computer-programming-basic-syntax",
        "status": "publish",
        "type": "post",
        "link": "https://computerprogramming.foobrdigital.com/computer-programming-basic-syntax/",
        "title": {
            "rendered": "Basic Syntax"
        },
        "content": {
            "rendered": "\n<p>Let’s start with a little coding, which will really make you a computer programmer. We are going to write a single-line computer program to write&nbsp;<strong>Hello, World!</strong>&nbsp;on your screen. Let’s see how it can be written using different programming languages.</p>\n\n\n\n<h2>Hello World Program in C</h2>\n\n\n\n<p>Try the following example using our online compiler option available at www.compileonline.com.</p>\n\n\n\n<p>For most of the examples given in this tutorial, you will find a&nbsp;<strong>Try it</strong>&nbsp;option in our website code sections at the top right corner that will take you to the online compiler.</p>\n\n\n\n<p>Try to change the content inside printf(), i.e., type anything in place of <strong>Hello World!</strong> and then check its result. It just prints whatever you keep inside the two double quotes.Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   /* printf() function to write Hello, World! */\n   printf( \"Hello, World!\" );\n}</code></pre>\n\n\n\n<p>which produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Hello, World!\n</code></pre>\n\n\n\n<p>This little Hello World program will help us understand various basic concepts related to C Programming.</p>\n\n\n\n<h3>Program Entry Point</h3>\n\n\n\n<p>For now, just forget about the&nbsp;<strong>#include <stdio.h></strong>&nbsp;statement, but keep a note that you have to put this statement at the top of a C program.</p>\n\n\n\n<p>Every C program starts with main(), which is called the main function, and then it is followed by a left curly brace. The rest of the program instruction is written in between and finally a right curly brace ends the program.</p>\n\n\n\n<p>The coding part inside these two curly braces is called the program body. The left curly brace can be in the same line as main(){ or in the next line like it has been mentioned in the above program.</p>\n\n\n\n<h3>Functions</h3>\n\n\n\n<p>Functions are small units of programs and they are used to carry out a specific task. For example, the above program makes use of two functions:&nbsp;<strong>main()</strong>&nbsp;and&nbsp;<strong>printf()</strong>. Here, the function main() provides the entry point for the program execution and the other function printf() is being used to print an information on the computer screen.</p>\n\n\n\n<p>You can write your own functions which we will see in a separate chapter, but C programming itself provides various built-in functions like main(), printf(), etc., which we can use in our programs based on our requirement.</p>\n\n\n\n<p>Some of the programming languages use the word&nbsp;<strong>sub-routine</strong>&nbsp;instead of function, but their functionality is more or less the same.</p>\n\n\n\n<h3>Comments</h3>\n\n\n\n<p>A C program can have statements enclosed inside&nbsp;<strong>/*&#8230;..*/</strong>. Such statements are called comments and these comments are used to make the programs user friendly and easy to understand. The good thing about comments is that they are completely ignored by compilers and interpreters. So you can use whatever language you want to write your comments.</p>\n\n\n\n<h3>Whitespaces</h3>\n\n\n\n<p>When we write a program using any programming language, we use various printable characters to prepare programming statements. These printable characters are&nbsp;<strong>a, b, c,&#8230;&#8230;z, A, B, C,&#8230;..Z, 1, 2, 3,&#8230;&#8230; 0, !, @, #, $, %, ^, &amp;, *, (, ), -, _, +, =, \\, |, {, }, [, ], :, ;, <, >, ?, /, \\, ~. `. &#8220;, &#8216;</strong>. Hope I&#8217;m not missing any printable characters from your keyboard.</p>\n\n\n\n<p>Apart from these characters, there are some characters which we use very frequently but they are invisible in your program and these characters are spaces, tabs (\\t), new lines(\\n). These characters are called&nbsp;<strong>whitespaces</strong>.</p>\n\n\n\n<p>These three important whitespace characters are common in all the programming languages and they remain invisible in your text document −</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Whitespace</th><th>Explanation</th><th>Representation</th></tr><tr><td>New Line</td><td>To create a new line</td><td>\\n</td></tr><tr><td>Tab</td><td>To create a tab.</td><td>\\t</td></tr><tr><td>Space</td><td>To create a space.</td><td>empty space</td></tr></tbody></table></figure>\n\n\n\n<p>A line containing only whitespace, possibly with a comment, is known as a blank line, and a C compiler totally ignores it. Whitespace is the term used in C to describe blanks, tabs, newline characters, and comments. So you can write <strong>printf(&#8220;Hello, World!&#8221; );</strong> as shown below. Here all the created spaces around &#8220;Hello, World!&#8221; are useless and the compiler will ignore them at the time of compilation.Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n\n   /* printf() function to write Hello, World! */\n   \n   printf(    \"Hello, World!\"      );\n   \n}</code></pre>\n\n\n\n<p>which produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Hello, World!\n</code></pre>\n\n\n\n<p>If we make all these whitespace characters visible, then the above program will look like this and you will not be able to compile it −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\\n\n\\n\nint main()\\n\n{\n   \\n\n   \\t/* printf() function to write Hello, World! */\n   \\n \n   \\tprintf(\\t\"Hello, World!\"\\t);\\n\n   \\n\n}\\n</code></pre>\n\n\n\n<h3>Semicolons</h3>\n\n\n\n<p>Every individual statement in a C Program must be ended with a semicolon (<strong>;</strong>), for example, if you want to write &#8220;Hello, World!&#8221; twice, then it will be written as follows −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   /* printf() function to write Hello, World! */\n   printf( \"Hello, World!\\n\" );\n   printf( \"Hello, World!\" );\n}</code></pre>\n\n\n\n<p>This program will produce the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Hello, World! \nHello, World!\n</code></pre>\n\n\n\n<p>Here, we are using a new line character <strong>\\n</strong> in the first printf() function to create a new line. Let us see what happens if we do not use this new line character −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   /* printf() function to write Hello, World! */\n   printf( \"Hello, World!\" );\n   printf( \"Hello, World!\" );\n}</code></pre>\n\n\n\n<p>This program will produce the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Hello, World! Hello, World!\n</code></pre>\n\n\n\n<p>We will learn identifiers and keywords in next few chapters.</p>\n\n\n\n<h3>Program Explanation</h3>\n\n\n\n<p>Let us understand how the above C program works. First of all, the above program is converted into a binary format using C compiler. So let’s put this code in test.c file and compile it as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>$gcc test.c -o demo\n</code></pre>\n\n\n\n<p>If there is any grammatical error (Syntax errors in computer terminologies), then we fix it before converting it into binary format. If everything goes fine, then it produces a binary file called&nbsp;<strong>demo</strong>. Finally, we execute the produced binary demo as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>$./demo\n</code></pre>\n\n\n\n<p>which produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Hello, World!\n</code></pre>\n\n\n\n<p>Here, when we execute the binary&nbsp;<strong>a.out</strong>&nbsp;file, the computer enters inside the program starting from main() and encounters a printf() statement. Keep a note that the line inside /*&#8230;.*/ is a comment and it is filtered at the time of compilation. So printf() function instructs the computer to print the given line at the computer screen. Finally, it encounters a right curly brace which indicates the end of main() function and exits the program.</p>\n\n\n\n<h2>Syntax Error</h2>\n\n\n\n<p>If you do not follow the rules defined by the programing language, then at the time of compilation, you will get syntax errors and the program will not be compiled. From syntax point of view, even a single dot or comma or a single semicolon matters and you should take care of such small syntax as well. In the following example, we have skipped a semicolon, let&#8217;s try to compile the program −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nmain() {\n   printf(\"Hello, World!\")\n}</code></pre>\n\n\n\n<p>This program will produce the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>main.c: In function 'main':\nmain.c:7:1: error: expected ';' before '}' token\n }\n ^\n</code></pre>\n\n\n\n<p>So the bottom-line is that if you are not following proper syntax defined by the programming language in your program, then you will get syntax errors. Before attempting another compilation, you will need to fix them and then proceed.</p>\n\n\n\n<h2>Hello World Program in Java</h2>\n\n\n\n<p>Following is the equivalent program written in Java. This program will also produce the same result <strong>Hello, World!</strong>.Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class HelloWorld { \n   public static void main(String &#91;]args) {\n      /* println() function to write Hello, World! */\n      System.out.println(\"Hello, World!\");     \n   }\n}</code></pre>\n\n\n\n<p>which produces the following result −</p>\n\n\n\n<pre class=\"wp-block-preformatted\">Hello, World!\n</pre>\n\n\n\n<h2>Hello World Program in Python</h2>\n\n\n\n<p>Following is the equivalent program written in Python. This program will also produce the same result <strong>Hello, World!</strong>.Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#  print function to write Hello, World! */\nprint \"Hello, World!\"</code></pre>\n\n\n\n<p>which produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Hello, World!\n</code></pre>\n\n\n\n<p>Hope you noted that for C and Java examples, first we are compiling the programs and then executing the produced binaries, but in Python program, we are directly executing it. As we explained in the previous chapter, Python is an interpreted language and it does not need an intermediate step called compilation.</p>\n\n\n\n<p>Python does not require a semicolon (;) to terminate a statement, rather a new line always means termination of the statement.</p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Let’s start with a little coding, which will really make you a computer programmer. We are going to write a single-line computer program to write&nbsp;Hello, World!&nbsp;on your screen. Let’s see how it can be written using different programming languages. Hello World Program in C Try the following example using our online compiler option available at www.compileonline.com. [&hellip;]</p>\n",
            "protected": false
        },
        "author": 2,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            10
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/528"
                }
            ],
            "collection": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
                }
            ],
            "about": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=528"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/528/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 529,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/528/revisions/529"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=528"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=528"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=528"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https://api.w.org/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 530,
        "date": "2020-10-24T11:21:30",
        "date_gmt": "2020-10-24T11:21:30",
        "guid": {
            "rendered": "http://computerprogramming.foobrdigital.com/?p=530"
        },
        "modified": "2020-10-24T11:21:30",
        "modified_gmt": "2020-10-24T11:21:30",
        "slug": "computer-programming-data-types",
        "status": "publish",
        "type": "post",
        "link": "https://computerprogramming.foobrdigital.com/computer-programming-data-types/",
        "title": {
            "rendered": "Data Types"
        },
        "content": {
            "rendered": "\n<p>Let&#8217;s discuss about a very simple but very important concept available in almost all the programming languages which is called&nbsp;<strong>data types</strong>. As its name indicates, a data type represents a type of the data which you can process using your computer program. It can be numeric, alphanumeric, decimal, etc.</p>\n\n\n\n<p>Let’s keep Computer Programming aside for a while and take an easy example of adding two whole numbers 10 &amp; 20, which can be done simply as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>10 + 20\n</code></pre>\n\n\n\n<p>Let&#8217;s take another problem where we want to add two decimal numbers 10.50 &amp; 20.50, which will be written as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>10.50 + 20.50\n</code></pre>\n\n\n\n<p>The two examples are straightforward. Now let&#8217;s take another example where we want to record student information in a notebook. Here we would like to record the following information −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Name:\nClass:\nSection:\nAge:\nSex:\n</code></pre>\n\n\n\n<p>Now, let&#8217;s put one student record as per the given requirement −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Name: Zara Ali\nClass: 6th\nSection: J\nAge: 13\nSex: F\n</code></pre>\n\n\n\n<p>The first example dealt with whole numbers, the second example added two decimal numbers, whereas the third example is dealing with a mix of different data. Let&#8217;s put it as follows −</p>\n\n\n\n<ul><li>Student name &#8220;Zara Ali&#8221; is a sequence of characters which is also called a string.</li><li>Student class &#8220;6th&#8221; has been represented by a mix of whole number and a string of two characters. Such a mix is called alphanumeric.</li><li>Student section has been represented by a single character which is &#8216;J&#8217;.</li><li>Student age has been represented by a whole number which is 13.</li><li>Student sex has been represented by a single character which is &#8216;F&#8217;.</li></ul>\n\n\n\n<p>This way, we realized that in our day-to-day life, we deal with different types of data such as strings, characters, whole numbers (integers), and decimal numbers (floating point numbers).</p>\n\n\n\n<p>Similarly, when we write a computer program to process different types of data, we need to specify its type clearly; otherwise the computer does not understand how different operations can be performed on that given data. Different programming languages use different keywords to specify different data types. For example, C and Java programming languages use&nbsp;<strong>int</strong>&nbsp;to specify integer data, whereas&nbsp;<strong>char</strong>&nbsp;specifies a character data type.</p>\n\n\n\n<p>Subsequent chapters will show you how to use different data types in different situations. For now, let&#8217;s check the important data types available in C, Java, and Python and the keywords we will use to specify those data types.</p>\n\n\n\n<h2>C and Java Data Types</h2>\n\n\n\n<p>C and Java support almost the same set of data types, though Java supports additional data types. For now, we are taking a few common data types supported by both the programming languages −</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Type</th><th>Keyword</th><th>Value range which can be represented by this data type</th></tr><tr><td>Character</td><td>char</td><td>-128 to 127 or 0 to 255</td></tr><tr><td>Number</td><td>int</td><td>-32,768 to 32,767 or -2,147,483,648 to 2,147,483,647</td></tr><tr><td>Small Number</td><td>short</td><td>-32,768 to 32,767</td></tr><tr><td>Long Number</td><td>long</td><td>-2,147,483,648 to 2,147,483,647</td></tr><tr><td>Decimal Number</td><td>float</td><td>1.2E-38 to 3.4E+38 till 6 decimal places</td></tr></tbody></table></figure>\n\n\n\n<p>These data types are called primitive data types and you can use these data types to build more complex data types, which are called user-defined data type, for example a string will be a sequence of characters.</p>\n\n\n\n<h2>Python Data Types</h2>\n\n\n\n<p>Python has five standard data types but this programming language does not make use of any keyword to specify a particular data type, rather Python is intelligent enough to understand a given data type automatically.</p>\n\n\n\n<ul><li>Numbers</li><li>String</li><li>List</li><li>Tuple</li><li>Dictionary</li></ul>\n\n\n\n<p>Here, Number specifies all types of numbers including decimal numbers and string represents a sequence of characters with a length of 1 or more characters. For now, let&#8217;s proceed with these two data types and skip List, Tuple, and Dictionary, which are advanced data types in Python.</p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Let&#8217;s discuss about a very simple but very important concept available in almost all the programming languages which is called&nbsp;data types. As its name indicates, a data type represents a type of the data which you can process using your computer program. It can be numeric, alphanumeric, decimal, etc. Let’s keep Computer Programming aside for [&hellip;]</p>\n",
            "protected": false
        },
        "author": 2,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            10
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/530"
                }
            ],
            "collection": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
                }
            ],
            "about": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=530"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/530/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 531,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/530/revisions/531"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=530"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=530"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=530"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https://api.w.org/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 532,
        "date": "2020-10-24T11:23:01",
        "date_gmt": "2020-10-24T11:23:01",
        "guid": {
            "rendered": "http://computerprogramming.foobrdigital.com/?p=532"
        },
        "modified": "2020-10-24T11:23:01",
        "modified_gmt": "2020-10-24T11:23:01",
        "slug": "computer-programming-variables",
        "status": "publish",
        "type": "post",
        "link": "https://computerprogramming.foobrdigital.com/computer-programming-variables/",
        "title": {
            "rendered": "Variables"
        },
        "content": {
            "rendered": "\n<p>Variables are the names you give to computer memory locations which are used to store values in a computer program.</p>\n\n\n\n<p>For example, assume you want to store two values 10 and 20 in your program and at a later stage, you want to use these two values. Let&#8217;s see how you will do it. Here are the following three simple steps −</p>\n\n\n\n<ul><li>Create variables with appropriate names.</li><li>Store your values in those two variables.</li><li>Retrieve and use the stored values from the variables.</li></ul>\n\n\n\n<h2>Creating variables</h2>\n\n\n\n<p>Creating variables is also called&nbsp;<strong>declaring variables</strong>&nbsp;in C programming. Different programming languages have different ways of creating variables inside a program. For example, C programming has the following simple way of creating variables −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   int a;\n   int b;\n}</code></pre>\n\n\n\n<p>The above program creates two variables to reserve two memory locations with names&nbsp;<strong>a</strong>&nbsp;and&nbsp;<strong>b</strong>. We created these variables using&nbsp;<strong>int</strong>&nbsp;keyword to specify variable&nbsp;<strong>data type</strong>&nbsp;which means we want to store integer values in these two variables. Similarly, you can create variables to store&nbsp;<strong>long</strong>,&nbsp;<strong>float</strong>,&nbsp;<strong>char</strong>&nbsp;or any other data type. For example −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>/* variable to store long value */\nlong a;\n\n/* variable to store float value */\nfloat b;</code></pre>\n\n\n\n<p>You can create variables of similar type by putting them in a single line but separated by comma as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   int a, b;\n}</code></pre>\n\n\n\n<p>Listed below are the key points about variables that you need to keep in mind −</p>\n\n\n\n<ul><li>A variable name can hold a single type of value. For example, if variable&nbsp;<strong>a</strong>&nbsp;has been defined&nbsp;<strong>int</strong>&nbsp;type, then it can store only integer.</li><li>C programming language requires a variable creation, i.e., declaration before its usage in your program. You cannot use a variable name in your program without creating it, though programming language like Python allows you to use a variable name without creating it.</li><li>You can use a variable name only once inside your program. For example, if a variable&nbsp;<strong>a</strong>&nbsp;has been defined to store an integer value, then you cannot define&nbsp;<strong>a</strong>&nbsp;again to store any other type of value.</li><li>There are programming languages like Python, PHP, Perl, etc., which do not want you to specify data type at the time of creating variables. So you can store integer, float, or long without specifying their data type.</li><li>You can give any name to a variable like&nbsp;<strong>age</strong>,&nbsp;<strong>sex</strong>,&nbsp;<strong>salary</strong>,&nbsp;<strong>year1990</strong>&nbsp;or anything else you like to give, but most of the programming languages allow to use only limited characters in their variables names. For now, we will suggest to use only&nbsp;<strong>a&#8230;.z, A&#8230;.Z, 0&#8230;.9</strong>&nbsp;in your variable names and start their names using alphabets only instead of digits.</li><li>Almost none of the programming languages allow to start their variable names with a digit, so&nbsp;<strong>1990year</strong>&nbsp;will not be a valid variable name whereas&nbsp;<strong>year1990</strong>&nbsp;or&nbsp;<strong>ye1990ar</strong>&nbsp;are valid variable names.</li></ul>\n\n\n\n<p>Every programming language provides more rules related to variables and you will learn them when you will go in further detail of that programming language.</p>\n\n\n\n<h2>Store Values in Variables</h2>\n\n\n\n<p>You have seen how we created variables in the previous section. Now, let&#8217;s store some values in those variables −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   int a;\n   int b;\n   \n   a = 10;\n   b = 20;\n}</code></pre>\n\n\n\n<p>The above program has two additional statements where we are storing 10 in variable&nbsp;<strong>a</strong>&nbsp;and 20 is being stored in variable&nbsp;<strong>b</strong>. Almost all the programming languages have similar way of storing values in variable where we keep variable name in the left hand side of an equal sign = and whatever value we want to store in the variable, we keep that value in the right hand side.</p>\n\n\n\n<p>Now, we have completed two steps, first we created two variables and then we stored required values in those variables. Now variable&nbsp;<strong>a</strong>&nbsp;has value 10 and variable&nbsp;<strong>b</strong>&nbsp;has value 20. In other words we can say, when above program is executed, the memory location named&nbsp;<strong>a</strong>&nbsp;will hold 10 and memory location&nbsp;<strong>b</strong>&nbsp;will hold 20.</p>\n\n\n\n<h2>Access stored values in variables</h2>\n\n\n\n<p>If we do not use the stored values in the variables, then there is no point in creating variables and storing values in them. We know that the above program has two variables <strong>a</strong> and <strong>b</strong> and they store the values 10 and 20, respectively. So let&#8217;s try to print the values stored in these two variables. Following is a C program, which prints the values stored in its variables −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   int a;\n   int b;\n   \n   a = 10;\n   b = 20;\n   \n   printf( \"Value of a = %d\\n\", a );\n   printf( \"Value of b = %d\\n\", b );\n}</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Value of a = 10\nValue of b = 20\n</code></pre>\n\n\n\n<p>You must have seen <strong>printf()</strong> function in the previous chapter where we had used it to print &#8220;Hello, World!&#8221;. This time, we are using it to print the values of variables. We are making use of <strong>%d</strong>, which will be replaced with the values of the given variable in printf() statements. We can print both the values using a single printf() statement as follows −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   int a;\n   int b;\n   \n   a = 10;\n   b = 20;\n   \n   printf( \"Value of a = %d and value of b = %d\\n\", a, b );\n}</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Value of a = 10 and value of b = 20\n</code></pre>\n\n\n\n<p>If you want to use&nbsp;<strong>float</strong>&nbsp;variable in C programming, then you will have to use&nbsp;<strong>%f</strong>&nbsp;instead of&nbsp;<strong>%d</strong>, and if you want to print a character value, then you will have to use&nbsp;<strong>%c</strong>. Similarly, different data types can be printed using different % and characters.</p>\n\n\n\n<h2>Variables in Java</h2>\n\n\n\n<p>Following is the equivalent program written in Java programming language. This program will create two variables <strong>a</strong> and <strong>b</strong> and very similar to C programming, it will assign 10 and 20 in these variables and finally print the values of the two variables in two ways −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class DemoJava {\n   public static void main(String &#91;]args) {\n      int a;\n      int b;\n   \n      a = 10;\n      b = 20;\n   \n      System.out.println(\"Value of a = \" + a);\n      System.out.println(\"Value of b = \" + b);\n      System.out.println(\"Value of a = \" + a + \" and value of b = \" + b);     \n   }\n}</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Value of a = 10\nValue of b = 20\nValue of a = 10 and value of b = 20\n</code></pre>\n\n\n\n<h2>Variables in Python</h2>\n\n\n\n<p>Following is the equivalent program written in Python. This program will create two variables&nbsp;<strong>a</strong>&nbsp;and&nbsp;<strong>b</strong>&nbsp;and at the same time, assign 10 and 20 in those variables.</p>\n\n\n\n<p>Python does not want you to specify the data type at the time of variable creation and there is no need to create variables in advance.Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>a = 10\nb = 20\n   \nprint \"Value of a = \", a\nprint \"Value of b = \", b\nprint \"Value of a = \", a, \" and value of b = \", b</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Value of a =  10\nValue of b =  20\nValue of a =  10  and value of b =  20\n</code></pre>\n\n\n\n<p>You can use the following syntax in C and Java programming to declare variables and assign values at the same time −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   int a = 10;\n   int b = 20;\n   \n   printf( \"Value of a = %d and value of b = %d\\n\", a, b );\n}</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Value of a = 10 and value of b = 20</code></pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Variables are the names you give to computer memory locations which are used to store values in a computer program. For example, assume you want to store two values 10 and 20 in your program and at a later stage, you want to use these two values. Let&#8217;s see how you will do it. Here [&hellip;]</p>\n",
            "protected": false
        },
        "author": 2,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            10
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/532"
                }
            ],
            "collection": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
                }
            ],
            "about": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=532"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/532/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 533,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/532/revisions/533"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=532"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=532"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=532"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https://api.w.org/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 534,
        "date": "2020-10-24T11:23:48",
        "date_gmt": "2020-10-24T11:23:48",
        "guid": {
            "rendered": "http://computerprogramming.foobrdigital.com/?p=534"
        },
        "modified": "2020-10-24T11:23:48",
        "modified_gmt": "2020-10-24T11:23:48",
        "slug": "computer-programming-keywords",
        "status": "publish",
        "type": "post",
        "link": "https://computerprogramming.foobrdigital.com/computer-programming-keywords/",
        "title": {
            "rendered": "Keywords"
        },
        "content": {
            "rendered": "\n<p>So far, we have covered two important concepts called variables and their data types. We discussed how to use&nbsp;<strong>int</strong>,&nbsp;<strong>long</strong>, and&nbsp;<strong>float</strong>&nbsp;to specify different data types. We also learnt how to name the variables to store different values.</p>\n\n\n\n<p>Though this chapter is not required separately because reserved keywords are a part of basic programming syntax, we kept it separate to explain it right after data types and variables to make it easy to understand.</p>\n\n\n\n<p>Like int, long, and float, there are many other keywords supported by C programming language which we will use for different purpose. Different programming languages provide different set of reserved keywords, but there is one important &amp; common rule in all the programming languages that we cannot use a reserved keyword to name our variables, which means we cannot name our variable like&nbsp;<strong>int</strong>&nbsp;or&nbsp;<strong>float</strong>&nbsp;rather these keywords can only be used to specify a variable data type.</p>\n\n\n\n<p>For example, if you will try to use any reserved keyword for the purpose of variable name, then you will get a syntax error.Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   int float;\n   float = 10;\n   \n   printf( \"Value of float = %d\\n\", float);\n}</code></pre>\n\n\n\n<p>When you compile the above program, it produces the following error −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>main.c: In function 'main':\nmain.c:5:8: error: two or more data types in declaration specifiers\n   int float;\n......\n</code></pre>\n\n\n\n<p>Let&#8217;s now give a proper name to our integer variable, then the above program should compile and execute successfully −<a href=\"http://tpcg.io/FMr0en\" target=\"_blank\" rel=\"noreferrer noopener\">Live Demo</a></p>\n\n\n\n<h2>C Programming Reserved Keywords</h2>\n\n\n\n<p>Here is a table having almost all the keywords supported by C Programming language −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   int count;\n   count = 10;\n\n   printf( \"Value of count = %d\\n\", count);\n}</code></pre>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><td>auto</td><td>else</td><td>long</td><td>switch</td></tr><tr><td>break</td><td>enum</td><td>register</td><td>typedef</td></tr><tr><td>case</td><td>extern</td><td>return</td><td>union</td></tr><tr><td>char</td><td>float</td><td>short</td><td>unsigned</td></tr><tr><td>const</td><td>for</td><td>signed</td><td>void</td></tr><tr><td>continue</td><td>goto</td><td>sizeof</td><td>volatile</td></tr><tr><td>default</td><td>if</td><td>static</td><td>while</td></tr><tr><td>do</td><td>int</td><td>struct</td><td>_Packed</td></tr><tr><td>double</td><td></td><td></td><td></td></tr></tbody></table></figure>\n\n\n\n<h2>Java Programming Reserved Keywords</h2>\n\n\n\n<p>Here is a table having almost all the keywords supported by Java Programming language −</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><td>abstract</td><td>assert</td><td>boolean</td><td>break</td></tr><tr><td>byte</td><td>case</td><td>catch</td><td>char</td></tr><tr><td>class</td><td>const</td><td>continue</td><td>default</td></tr><tr><td>do</td><td>double</td><td>else</td><td>enum</td></tr><tr><td>extends</td><td>final</td><td>finally</td><td>float</td></tr><tr><td>for</td><td>goto</td><td>if</td><td>implements</td></tr><tr><td>import</td><td>instanceof</td><td>int</td><td>interface</td></tr><tr><td>long</td><td>native</td><td>new</td><td>package</td></tr><tr><td>private</td><td>protected</td><td>public</td><td>return</td></tr><tr><td>short</td><td>static</td><td>strictfp</td><td>super</td></tr><tr><td>switch</td><td>synchronized</td><td>this</td><td>throw</td></tr><tr><td>throws</td><td>transient</td><td>try</td><td>void</td></tr><tr><td>volatile</td><td>while</td><td></td><td></td></tr></tbody></table></figure>\n\n\n\n<h2>Python Programming Reserved Keywords</h2>\n\n\n\n<p>Here is a table having almost all the keywords supported by Python Programming language −</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><td>and</td><td>exec</td><td>not</td></tr><tr><td>assert</td><td>finally</td><td>or</td></tr><tr><td>break</td><td>for</td><td>pass</td></tr><tr><td>class</td><td>from</td><td>print</td></tr><tr><td>continue</td><td>global</td><td>raise</td></tr><tr><td>def</td><td>if</td><td>return</td></tr><tr><td>del</td><td>import</td><td>try</td></tr><tr><td>elif</td><td>in</td><td>while</td></tr><tr><td>else</td><td>is</td><td>with</td></tr><tr><td>except</td><td>lambda</td><td>yield</td></tr></tbody></table></figure>\n\n\n\n<p>We know you cannot memorize all these keywords, but we have listed them down for your reference purpose and to explain the concept of&nbsp;<strong>reserved keywords</strong>. So just be careful while giving a name to your variable, you should not use any reserved keyword for that programming language.</p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>So far, we have covered two important concepts called variables and their data types. We discussed how to use&nbsp;int,&nbsp;long, and&nbsp;float&nbsp;to specify different data types. We also learnt how to name the variables to store different values. Though this chapter is not required separately because reserved keywords are a part of basic programming syntax, we kept [&hellip;]</p>\n",
            "protected": false
        },
        "author": 2,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            10
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/534"
                }
            ],
            "collection": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
                }
            ],
            "about": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=534"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/534/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 535,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/534/revisions/535"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=534"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=534"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=534"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https://api.w.org/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 536,
        "date": "2020-10-24T11:25:57",
        "date_gmt": "2020-10-24T11:25:57",
        "guid": {
            "rendered": "http://computerprogramming.foobrdigital.com/?p=536"
        },
        "modified": "2020-10-24T11:25:57",
        "modified_gmt": "2020-10-24T11:25:57",
        "slug": "computer-programming-operators",
        "status": "publish",
        "type": "post",
        "link": "https://computerprogramming.foobrdigital.com/computer-programming-operators/",
        "title": {
            "rendered": "Operators"
        },
        "content": {
            "rendered": "\n<p>An operator in a programming language is a symbol that tells the compiler or interpreter to perform specific mathematical, relational or logical operation and produce final result. This chapter will explain the concept of&nbsp;<strong>operators</strong>&nbsp;and it will take you through the important arithmetic and relational operators available in C, Java, and Python.</p>\n\n\n\n<h2>Arithmetic Operators</h2>\n\n\n\n<p>Computer programs are widely used for mathematical calculations. We can write a computer program which can do simple calculation like adding two numbers (2 + 3) and we can also write a program, which can solve a complex equation like P(x) = x<sup>4</sup>&nbsp;+ 7x<sup>3</sup>&nbsp;&#8211; 5x + 9. If you have been even a poor student, you must be aware that in first expression 2 and 3 are operands and + is an operator. Similar concepts exist in Computer Programming.</p>\n\n\n\n<p>Take a look at the following two examples −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>2 + 3\n\nP(x) = x<sup>4</sup> + 7x<sup>3</sup> - 5x + 9. \n</code></pre>\n\n\n\n<p>These two statements are called arithmetic expressions in a programming language and&nbsp;<strong>plus</strong>,&nbsp;<strong>minus</strong>&nbsp;used in these expressions are called arithmetic operators and the values used in these expressions like 2, 3 and x, etc., are called operands. In their simplest form, such expressions produce numerical results.</p>\n\n\n\n<p>Similarly, a programming language provides various arithmetic operators. The following table lists down a few of the important arithmetic operators available in C programming language. Assume variable A holds 10 and variable B holds 20, then −</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Operator</th><th>Description</th><th>Example</th></tr><tr><td>+</td><td>Adds two operands</td><td>A + B will give 30</td></tr><tr><td>&#8211;</td><td>Subtracts second operand from the first</td><td>A &#8211; B will give -10</td></tr><tr><td>*</td><td>Multiplies both operands</td><td>A * B will give 200</td></tr><tr><td>/</td><td>Divides numerator by de-numerator</td><td>B / A will give 2</td></tr><tr><td>%</td><td>This gives remainder of an integer division</td><td>B % A will give 0</td></tr></tbody></table></figure>\n\n\n\n<p>Following is a simple example of C Programming to understand the above mathematical operators −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   int a, b, c;\n   \n   a = 10;\n   b = 20;\n   \n   c = a + b;   \n   printf( \"Value of c = %d\\n\", c);\n   \n   c = a - b;   \n   printf( \"Value of c = %d\\n\", c);\n   \n   c = a * b;   \n   printf( \"Value of c = %d\\n\", c);\n   \n   c = b / a;   \n   printf( \"Value of c = %d\\n\", c);\n   \n   c = b % a;   \n   printf( \"Value of c = %d\\n\", c);\n}</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Value of c = 30\nValue of c = -10\nValue of c = 200\nValue of c = 2\nValue of c = 0\n</code></pre>\n\n\n\n<h2>Relational Operators</h2>\n\n\n\n<p>Consider a situation where we create two variables and assign them some values as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>A = 20\nB = 10\n</code></pre>\n\n\n\n<p>Here, it is obvious that variable A is greater than B in values. So, we need the help of some symbols to write such expressions which are called relational expressions. If we use C programming language, then it will be written as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>(A &amp;gt; B)\n</code></pre>\n\n\n\n<p>Here, we used a symbol > and it is called a relational operator and in their simplest form, they produce Boolean results which means the result will be either true or false. Similarly, a programming language provides various relational operators. The following table lists down a few of the important relational operators available in C programming language. Assume variable&nbsp;<strong>A</strong>&nbsp;holds 10 and variable&nbsp;<strong>B</strong>&nbsp;holds 20, then −</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Operator</th><th>Description</th><th>Example</th></tr><tr><td>==</td><td>Checks if the values of two operands are equal or not, if yes then condition becomes true.</td><td>(A == B) is not true.</td></tr><tr><td>!=</td><td>Checks if the values of two operands are equal or not, if values are not equal then condition becomes true.</td><td>(A != B) is true.</td></tr><tr><td>></td><td>Checks if the value of left operand is greater than the value of right operand, if yes then condition becomes true.</td><td>(A > B) is not true.</td></tr><tr><td><</td><td>Checks if the value of left operand is less than the value of right operand, if yes then condition becomes true.</td><td>(A < B) is true.</td></tr><tr><td>>=</td><td>Checks if the value of left operand is greater than or equal to the value of right operand, if yes then condition becomes true.</td><td>(A >= B) is not true.</td></tr><tr><td><=</td><td>Checks if the value of left operand is less than or equal to the value of right operand, if yes then condition becomes true.</td><td>(A <= B) is true.</td></tr></tbody></table></figure>\n\n\n\n<p>Here, we will show you one example of C Programming which makes use of <strong>if conditional statement</strong>. Though this statement will be discussed later in a separate chapter, but in short, we use <strong>if statement</strong> to check a condition and if the condition is true, then the body of <strong>if statement</strong> is executed, otherwise the body of <strong>if statement</strong> is skipped.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   int a, b;\n   \n   a = 10;\n   b = 20;\n   \n   /* Here we check whether a is equal to 10 or not */\n   if( a == 10 ) {\n\t   \n      /* if a is equal to 10 then this body will be executed */\n      printf( \"a is equal to 10\\n\");\n   }\n   \n   /* Here we check whether b is equal to 10 or not */\n   if( b == 10 ) {\n\t\n      /* if b is equal to 10 then this body will be executed */\n      printf( \"b is equal to 10\\n\");\n   }\n   \n   /* Here we check if a is less b than or not */\n   if( a &amp;lt; b ) {\n\t\n      /* if a is less than b then this body will be executed */\n      printf( \"a is less than b\\n\");\n   }\n   \n   /* Here we check whether a and b are not equal */\n   if( a != b ) {\n\t\n      /* if a is not equal to b then this body will be executed */\n      printf( \"a is not equal to b\\n\");\n   }\n}</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>a is equal to 10\na is less than b\na is not equal to b\n</code></pre>\n\n\n\n<h2>Logical Operators</h2>\n\n\n\n<p>Logical operators are very important in any programming language and they help us take decisions based on certain conditions. Suppose we want to combine the result of two conditions, then logical AND and OR logical operators help us in producing the final result.</p>\n\n\n\n<p>The following table shows all the logical operators supported by the C language. Assume variable&nbsp;<strong>A</strong>&nbsp;holds 1 and variable&nbsp;<strong>B</strong>&nbsp;holds 0, then −</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Operator</th><th>Description</th><th>Example</th></tr><tr><td>&amp;&amp;</td><td>Called Logical AND operator. If both the operands are non-zero, then condition becomes true.</td><td>(A &amp;&amp; B) is false.</td></tr><tr><td>||</td><td>Called Logical OR Operator. If any of the two operands is non-zero, then condition becomes true.</td><td>(A || B) is true.</td></tr><tr><td>!</td><td>Called Logical NOT Operator. Use to reverses the logical state of its operand. If a condition is true then Logical NOT operator will make false.</td><td>!(A &amp;&amp; B) is true.</td></tr></tbody></table></figure>\n\n\n\n<p>Try the following example to understand all the logical operators available in C programming language −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   int a = 1;\n   int b = 0;\n\n   if ( a &amp;amp;&amp;amp; b ) {\n\t\n      printf(\"This will never print because condition is false\\n\" );\n   }\n   if ( a || b ) {\n\t\n      printf(\"This will be printed print because condition is true\\n\" );\n   }\n   if ( !(a &amp;amp;&amp;amp; b) ) {\n\t\n      printf(\"This will be printed print because condition is true\\n\" );\n   }\n}</code></pre>\n\n\n\n<p>When you compile and execute the above program, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>This will be printed print because condition is true\nThis will be printed print because condition is true\n</code></pre>\n\n\n\n<h2>Operators in Java</h2>\n\n\n\n<p>Following is the equivalent program written in Java. C programming and Java provide almost identical set of operators and conditional statements. This program will create two variables&nbsp;<strong>a</strong>&nbsp;and&nbsp;<strong>b</strong>, very similar to C programming, then we assign 10 and 20 in these variables and finally, we will use different arithmetic and relational operators −</p>\n\n\n\n<p>You can try to execute the following program to see the output, which must be identical to the result generated by the above example.Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class DemoJava {\n   public static void main(String &#91;]args) {\n      int a, b, c;\n   \n      a = 10;\n      b = 20;\n   \n      c = a + b;   \n      System.out.println(\"Value of c = \" + c );\n   \n      c = a - b;\n      System.out.println(\"Value of c = \" + c );\n   \n      c = a * b;   \n      System.out.println(\"Value of c = \" + c );\n   \n      c = b / a;   \n      System.out.println(\"Value of c = \" + c );\n   \n      c = b % a;   \n      System.out.println(\"Value of c = \" + c );\n      \n      if( a == 10 ) {\n\t\t\n         System.out.println(\"a is equal to 10\" );\n      }\n   }\n}</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Value of c = 30\nValue of c = -10\nValue of c = 200\nValue of c = 2\nValue of c = 0\na is equal to 10\n</code></pre>\n\n\n\n<h2>Operators in Python</h2>\n\n\n\n<p>Following is the equivalent program written in Python. This program will create two variables&nbsp;<strong>a</strong>&nbsp;and&nbsp;<strong>b</strong>&nbsp;and at the same time, assign 10 and 20 in those variables. Fortunately, C programming and Python programming languages provide almost identical set of operators. This program will create two variables&nbsp;<strong>a</strong>&nbsp;and&nbsp;<strong>b</strong>, very similar to C programming, then we assign 10 and 20 in these variables and finally, we will use different arithmetic and relational operators.</p>\n\n\n\n<p>You can try to execute the following program to see the output, which must be identical to the result generated by the above example.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>a = 10\nb = 20\n   \nc = a + b   \nprint \"Value of c = \", c\n\nc = a - b   \nprint \"Value of c = \", c\n\nc = a * b   \nprint \"Value of c = \", c\n\nc = a / b   \nprint \"Value of c = \", c\n\nc = a % b   \nprint \"Value of c = \", c\n\nif( a == 10 ):\n   print \"a is equal to 10\"</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Value of c =  30\nValue of c =  -10\nValue of c =  200\nValue of c =  0\nValue of c =  10\na is equal to 10\n</code></pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>An operator in a programming language is a symbol that tells the compiler or interpreter to perform specific mathematical, relational or logical operation and produce final result. This chapter will explain the concept of&nbsp;operators&nbsp;and it will take you through the important arithmetic and relational operators available in C, Java, and Python. Arithmetic Operators Computer programs [&hellip;]</p>\n",
            "protected": false
        },
        "author": 2,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            10
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/536"
                }
            ],
            "collection": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
                }
            ],
            "about": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=536"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/536/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 537,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/536/revisions/537"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=536"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=536"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=536"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https://api.w.org/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 538,
        "date": "2020-10-24T11:27:57",
        "date_gmt": "2020-10-24T11:27:57",
        "guid": {
            "rendered": "http://computerprogramming.foobrdigital.com/?p=538"
        },
        "modified": "2020-10-24T11:27:57",
        "modified_gmt": "2020-10-24T11:27:57",
        "slug": "decision-statements",
        "status": "publish",
        "type": "post",
        "link": "https://computerprogramming.foobrdigital.com/decision-statements/",
        "title": {
            "rendered": "Decision Statements"
        },
        "content": {
            "rendered": "\n<p>Decision making is critical to computer programming. There will be many situations when you will be given two or more options and you will have to select an option based on the given conditions. For example, we want to print a remark about a student based on his secured marks. Following is the situation −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Assume given marks are x for a student:\n\nIf given marks are more than 95, then\nStudent is brilliant\n\nIf given marks are less than 30, then\nStudent is poor\n\nIf given marks are less than 95 and more than 30, then\nStudent is average\n</code></pre>\n\n\n\n<p>Now, the question is how to write a programming code to handle such situations. Almost all the programming languages provide conditional statements that work based on the following flow diagram −</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://www.tutorialspoint.com/computer_programming/images/decision_making.jpg\" alt=\"Decision making statements in C\"/></figure>\n\n\n\n<p>Let&#8217;s write a C program with the help of <strong>if conditional statements</strong> to convert the above given situation into a programming code −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   int x = 45;\n   \n   if( x &amp;gt; 95) {\n\t\n      printf( \"Student is brilliant\\n\");\n   }\n   if( x &amp;lt; 30) {\n\t\n      printf( \"Student is poor\\n\");\n   }\n   if( x &amp;lt; 95 &amp;amp;&amp;amp; x &amp;gt; 30 ) {\n\t\n      printf( \"Student is average\\n\");\n   }\n}</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Student is average\n</code></pre>\n\n\n\n<p>The above program uses&nbsp;<strong>if conditional statements</strong>. Here, the first&nbsp;<strong>if statement</strong>&nbsp;checks whether the given condition i.e., variable x is greater than 95 or not and if it finds the condition is true, then the conditional body is entered to execute the given statements. Here we have only one&nbsp;<em>printf()</em>&nbsp;statement to print a remark about the student.</p>\n\n\n\n<p>Similarly, the second&nbsp;<strong>if statement</strong>&nbsp;works. Finally, the third&nbsp;<strong>if statement</strong>&nbsp;is executed, here we have the following two conditions −</p>\n\n\n\n<ul><li>First condition is&nbsp;<strong>x > 95</strong></li><li>Second condition is&nbsp;<strong>x < 30</strong></li></ul>\n\n\n\n<p>The computer evaluates both the given conditions and then, the overall result is combined with the help of the binary operator&nbsp;<strong>&amp;&amp;</strong>. If the final result is true, then the conditional statement will be executed, otherwise no statement will be executed.</p>\n\n\n\n<p>This tutorial will give you a basic idea on various forms of&nbsp;<strong>if statements</strong>&nbsp;and an introduction to&nbsp;<strong>switch</strong>&nbsp;statements available in C programming language. Different programming languages provide different types of decision-making statements, but the basic concept remains the same as explained in this tutorial.</p>\n\n\n\n<h2>if&#8230;else statement</h2>\n\n\n\n<p>An&nbsp;<strong>if</strong>&nbsp;statement can be followed by an optional&nbsp;<strong>else</strong>&nbsp;statement, which executes when the Boolean expression is false. The syntax of an&nbsp;<strong>if&#8230;else</strong>&nbsp;statement in C programming language is −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>if(boolean_expression) {\n   \n   /* Statement(s) will execute if the boolean expression is true */\n} else {\n  \n  /* Statement(s) will execute if the boolean expression is false */\n}\n</code></pre>\n\n\n\n<p>The above syntax can be represented in the form of a flow diagram as shown below −</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://www.tutorialspoint.com/computer_programming/images/if_else_statement.jpg\" alt=\"C if...else statement\"/></figure>\n\n\n\n<p>An <strong>if&#8230;else</strong> statement is useful when we have to take a decision out of two options. For example, if a student secures more marks than 95, then the student is brilliant, otherwise no such situation can be coded, as follows −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   int x = 45;\n   \n   if( x &amp;gt; 95) {\n\t\n      printf( \"Student is brilliant\\n\");\n   } else {\n      printf( \"Student is not brilliant\\n\");\n   }\n}</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Student is not brilliant\n</code></pre>\n\n\n\n<h2>if&#8230;elseif&#8230;else statement</h2>\n\n\n\n<p>An&nbsp;<strong>if</strong>&nbsp;statement can be followed by an optional&nbsp;<strong>else if&#8230;else</strong>&nbsp;statement, which is very useful to test various conditions.</p>\n\n\n\n<p>While using&nbsp;<strong>if, else if, else</strong>&nbsp;statements, there are a few points to keep in mind −</p>\n\n\n\n<ul><li>An&nbsp;<strong>if</strong>&nbsp;can have zero or one&nbsp;<strong>else&#8217;s</strong>&nbsp;and it must come after an&nbsp;<strong>else if</strong>.</li><li>An&nbsp;<strong>if</strong>&nbsp;can have zero to many&nbsp;<strong>else…if&#8217;s</strong>&nbsp;and they must come before the&nbsp;<strong>else</strong>.</li><li>Once an&nbsp;<strong>else…if</strong>&nbsp;succeeds, none of the remaining&nbsp;<strong>else…if&#8217;s</strong>&nbsp;or&nbsp;<strong>else&#8217;s</strong>&nbsp;will be tested.</li></ul>\n\n\n\n<p>The syntax of an&nbsp;<strong>if&#8230;else if&#8230;else</strong>&nbsp;statement in C programming language is −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>if(boolean_expression 1) {\n\n   /* Executes when the boolean expression 1 is true */\n}\nelse if( boolean_expression 2) {\n\n   /* Executes when the boolean expression 2 is true */\n}\nelse if( boolean_expression 3) {\n\n   /* Executes when the boolean expression 3 is true */\n} else {\n   \n   /* Executes when the none of the above condition is true */\n}</code></pre>\n\n\n\n<p>Now with the help of <strong>if&#8230;elseif&#8230;else</strong> statement, the very first program can be coded as follows −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   int x = 45;\n   \n   if( x &amp;gt; 95) {\n      printf( \"Student is brilliant\\n\");\n   } \n   else if( x &amp;lt; 30) {\n      printf( \"Student is poor\\n\");\n   } \n   else if( x &amp;lt; 95 &amp;amp;&amp;amp; x &amp;gt; 30 ) {\n      printf( \"Student is average\\n\");\n   }\n}</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Student is average\n</code></pre>\n\n\n\n<h2>The Switch Statement</h2>\n\n\n\n<p>A&nbsp;<strong>switch</strong>&nbsp;statement is an alternative of&nbsp;<strong>if statements</strong>&nbsp;which allows a variable to be tested for equality against a list of values. Each value is called a&nbsp;<strong>case</strong>, and the variable being switched on is checked for each switch case. It has the following syntax −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>switch(expression){\n   case ONE :\n      statement(s);\n      break;\n   case TWO:\n      statement(s);\n      break;\n   ......\n   \n   default :\n      statement(s);\n}\n</code></pre>\n\n\n\n<p>The&nbsp;<strong>expression</strong>&nbsp;used in a&nbsp;<strong>switch</strong>&nbsp;statement must give an integer value, which will be compared for equality with different cases given. Wherever an expression value matches with a case value, the body of that case will be executed and finally, the switch will be terminated using a&nbsp;<strong>break</strong>&nbsp;statement. If no break statements are provided, then the computer continues executing other statements available below to the matched case. If none of the cases matches, then the default case body is executed.</p>\n\n\n\n<p>The above syntax can be represented in the form of a flow diagram as shown below −</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://www.tutorialspoint.com/computer_programming/images/switch_statement.jpg\" alt=\"Switch Statement in C\"/></figure>\n\n\n\n<p>Now, let&#8217;s consider another example where we want to write the equivalent English word for a given number. Then, it can be coded as follows −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   int x = 2;\n   \n   switch( x ){\n      case 1 :\n         printf( \"One\\n\");\n         break;\n      case 2 :\n         printf( \"Two\\n\");\n         break;\n      case 3 :\n         printf( \"Three\\n\");\n         break;\n      case 4 :\n         printf( \"Four\\n\");\n         break;\n      default :\n         printf( \"None of the above...\\n\");\n   }\n}</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Two\n</code></pre>\n\n\n\n<h2>Decisions in Java</h2>\n\n\n\n<p>Following is the equivalent program written in Java which too supports&nbsp;<strong>if</strong>,&nbsp;<strong>if&#8230;else</strong>,&nbsp;<strong>if&#8230;elseif&#8230;else</strong>, and&nbsp;<strong>switch</strong>&nbsp;statements.</p>\n\n\n\n<p>You can try to execute the following program to see the output, which must be identical to the result generated by the above C example.Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class DemoJava {\n   public static void main(String &#91;]args) {\n      int x = 45;\n   \n      if( x &amp;gt; 95) {\n         System.out.println( \"Student is brilliant\");\n      } \n      else if( x &amp;lt; 30) {\n         System.out.println( \"Student is poor\");\n      } \n      else if( x &amp;lt; 95 &amp;amp;&amp;amp; x &amp;gt; 30 ) {\n         System.out.println( \"Student is average\");\n      }\n   }\n}</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Student is average\n</code></pre>\n\n\n\n<h2>Decisions in Python</h2>\n\n\n\n<p>Following is the equivalent program written in Python. Python provides&nbsp;<strong>if</strong>,&nbsp;<strong>if&#8230;else</strong>,&nbsp;<strong>if&#8230;elif&#8230;else</strong>, and&nbsp;<strong>switch</strong>&nbsp;statements. Here, you must note that Python does not make use of curly braces for conditional body, instead it simply identifies the body of the block using indentation of the statements.</p>\n\n\n\n<p>You can try to execute the following program to see the output −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>x = 45\n\nif x &amp;gt; 95:\n   print \"Student is brilliant\"\nelif x &amp;lt; 30:\n   print \"Student is poor\"\nelif x &amp;lt; 95 and x &amp;gt; 30:\n   print \"Student is average\"\n\nprint \"The end\"</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Student is average\nThe end\n</code></pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Decision making is critical to computer programming. There will be many situations when you will be given two or more options and you will have to select an option based on the given conditions. For example, we want to print a remark about a student based on his secured marks. Following is the situation − [&hellip;]</p>\n",
            "protected": false
        },
        "author": 2,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            10
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/538"
                }
            ],
            "collection": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
                }
            ],
            "about": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=538"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/538/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 539,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/538/revisions/539"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=538"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=538"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=538"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https://api.w.org/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 540,
        "date": "2020-10-24T11:29:54",
        "date_gmt": "2020-10-24T11:29:54",
        "guid": {
            "rendered": "http://computerprogramming.foobrdigital.com/?p=540"
        },
        "modified": "2020-10-24T11:29:54",
        "modified_gmt": "2020-10-24T11:29:54",
        "slug": "computer-programming-loops",
        "status": "publish",
        "type": "post",
        "link": "https://computerprogramming.foobrdigital.com/computer-programming-loops/",
        "title": {
            "rendered": "Loops"
        },
        "content": {
            "rendered": "\n<p>Let&#8217;s consider a situation when you want to print <strong>Hello, World!</strong> five times. Here is a simple C program to do the same −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   printf( \"Hello, World!\\n\");\n   printf( \"Hello, World!\\n\");\n   printf( \"Hello, World!\\n\");\n   printf( \"Hello, World!\\n\");\n   printf( \"Hello, World!\\n\");\n}</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Hello, World!\nHello, World!\nHello, World!\nHello, World!\nHello, World!\n</code></pre>\n\n\n\n<p>It was simple, but again, let&#8217;s consider another situation when you want to write&nbsp;<strong>Hello, World!</strong>&nbsp;a thousand times. We can certainly not write printf() statements a thousand times. Almost all the programming languages provide a concept called&nbsp;<strong>loop</strong>, which helps in executing one or more statements up to a desired number of times. All high-level programming languages provide various forms of loops, which can be used to execute one or more statements repeatedly.</p>\n\n\n\n<p>Let&#8217;s write the above C program with the help of a <strong>while loop</strong> and later, we will discuss how this loop worksLive Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   int i = 0;\n   \n   while ( i &amp;lt; 5 ) {\n      printf( \"Hello, World!\\n\");\n      i = i + 1;\n   }\n}</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Hello, World!\nHello, World!\nHello, World!\nHello, World!\nHello, World!\n</code></pre>\n\n\n\n<p>The above program makes use of a&nbsp;<strong>while loop</strong>, which is being used to execute a set of programming statements enclosed within {&#8230;.}. Here, the computer first checks whether the given condition, i.e., variable &#8220;a&#8221; is less than 5 or not and if it finds the condition is true, then the loop body is entered to execute the given statements. Here, we have the following two statements in the loop body −</p>\n\n\n\n<ul><li>First statement is&nbsp;<em>printf()</em>&nbsp;function, which prints Hello World!</li><li>Second statement is&nbsp;<em>i = i + 1</em>, which is used to increase the value of variable&nbsp;<strong>i</strong></li></ul>\n\n\n\n<p>After executing all the statements given in the loop body, the computer goes back to while( i < 5) and the given condition, (i < 5), is checked again, and the loop is executed again if the condition holds true. This process repeats till the given condition remains true which means variable &#8220;a&#8221; has a value less than 5.</p>\n\n\n\n<p>To conclude, a loop statement allows us to execute a statement or group of statements multiple times. Given below is the general form of a loop statement in most of the programming languages −</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://www.tutorialspoint.com/computer_programming/images/loop_architecture.jpg\" alt=\"Loop Architecture\"/></figure>\n\n\n\n<p>This tutorial has been designed to present programming&#8217;s basic concepts to non-programmers, so let&#8217;s discuss the two most important loops available in C programming language. Once you are clear about these two loops, then you can pick-up C programming tutorial or a reference book and check other loops available in C and the way they work.</p>\n\n\n\n<h2>The while Loop</h2>\n\n\n\n<p>A&nbsp;<strong>while loop</strong>&nbsp;available in C Programming language has the following syntax −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>while ( condition ) {\n   /*....while loop body ....*/\n}\n</code></pre>\n\n\n\n<p>The above code can be represented in the form of a flow diagram as shown below −</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://www.tutorialspoint.com/computer_programming/images/cpp_while_loop.jpg\" alt=\"while loop in C\"/></figure>\n\n\n\n<p>The following important points are to be noted about a while loop −</p>\n\n\n\n<ul><li>A while loop starts with a keyword&nbsp;<strong>while</strong>&nbsp;followed by a&nbsp;<strong>condition</strong>&nbsp;enclosed in ( ).</li><li>Further to the while() statement, you will have the body of the loop enclosed in curly braces&nbsp;<strong>{&#8230;}</strong>.</li><li>A while loop body can have one or more lines of source code to be executed repeatedly.</li><li>If the body of a while loop has just one line, then its optional to use curly braces&nbsp;<strong>{&#8230;}</strong>.</li><li>A while loop keeps executing its body till a given&nbsp;<strong>condition</strong>&nbsp;holds true. As soon as the condition becomes false, the while loop comes out and continues executing from the immediate next statement after the while loop body.</li><li>A condition is usually a relational statement, which is evaluated to either true or false. A value equal to zero is treated as false and any non-zero value works like true.</li></ul>\n\n\n\n<h2>The do&#8230;while Loop</h2>\n\n\n\n<p>A while loop checks a given condition before it executes any statements given in the body part. C programming provides another form of loop, called&nbsp;<strong>do&#8230;while</strong>&nbsp;that allows to execute a loop body before checking a given condition. It has the following syntax −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>do {\n   /*....do...while loop body ....*/\n} \nwhile ( condition );\n</code></pre>\n\n\n\n<p>The above code can be represented in the form of a flow diagram as shown below −</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://www.tutorialspoint.com/computer_programming/images/cpp_do_while_loop.jpg\" alt=\"do...while loop in C\"/></figure>\n\n\n\n<p>If you will write the above example using <strong>do&#8230;while</strong> loop, then <strong>Hello, World</strong> will produce the same result −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   int i = 0;\n   \n   do {\n      printf( \"Hello, World!\\n\");\n      i = i + 1;\n   }\n   while ( i &amp;lt; 5 );\n}</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Hello, World!\nHello, World!\nHello, World!\nHello, World!\nHello, World!\n</code></pre>\n\n\n\n<h2>The break statement</h2>\n\n\n\n<p>When the&nbsp;<strong>break</strong>&nbsp;statement is encountered inside a loop, the loop is immediately terminated and the program control resumes at the next statement following the loop. The syntax for a&nbsp;<strong>break</strong>&nbsp;statement in C is as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>break;\n</code></pre>\n\n\n\n<p>A&nbsp;<strong>break</strong>&nbsp;statement can be represented in the form of a flow diagram as shown below −</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://www.tutorialspoint.com/computer_programming/images/cpp_break_statement.jpg\" alt=\"c break statement\"/></figure>\n\n\n\n<p>Following is a variant of the above program, but it will come out after printing Hello World! only three times −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   int i = 0;\n   do {\n      printf( \"Hello, World!\\n\");\n      i = i + 1;\n      \n      if( i == 3 ) {\n         break;\n      }\n   }\n   while ( i &amp;lt; 5 );\n}</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Hello, World!\nHello, World!\nHello, World!\n</code></pre>\n\n\n\n<h2>The continue statement</h2>\n\n\n\n<p>The&nbsp;<strong>continue</strong>&nbsp;statement in C programming language works somewhat like the&nbsp;<strong>break</strong>&nbsp;statement. Instead of forcing termination,&nbsp;<strong>continue</strong>&nbsp;forces the next iteration of the loop to take place, skipping any code in between. The syntax for a&nbsp;<strong>continue</strong>&nbsp;statement in C is as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>continue;\n</code></pre>\n\n\n\n<p>A&nbsp;<strong>continue</strong>&nbsp;statement can be represented in the form of a flow diagram as shown below −</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://www.tutorialspoint.com/computer_programming/images/cpp_continue_statement.jpg\" alt=\"C continue statement\"/></figure>\n\n\n\n<p>Following is a variant of the above program, but it will skip printing when the variable has a value equal to 3 −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   int i = 0;\n   do {\n      if( i == 3 ) {\n         i = i + 1;\n         continue;\n      }\n      printf( \"Hello, World!\\n\");\n      i = i + 1;\n   }\n   while ( i &amp;lt; 5 );\n}</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Hello, World!\nHello, World!\nHello, World!\nHello, World!\n</code></pre>\n\n\n\n<h2>Loops in Java</h2>\n\n\n\n<p>Following is the equivalent program written in Java that too supports&nbsp;<strong>while</strong>&nbsp;and&nbsp;<strong>do&#8230;while</strong>&nbsp;loops. The following program prints&nbsp;<strong>Hello, World!</strong>&nbsp;five times as we did in the case of C Programming −</p>\n\n\n\n<p>You can try to execute the following program to see the output, which must be identical to the result generated by the above example.Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class DemoJava {\n   public static void main(String &#91;]args) {\n      int i = 0;\n   \n      while ( i &amp;lt; 5 ) {\n         System.out.println(\"Hello, World!\");\n         i = i + 1;\n      }\n   }\n}</code></pre>\n\n\n\n<p>The&nbsp;<strong>break</strong>&nbsp;and&nbsp;<strong>continue</strong>&nbsp;statements in Java programming work quite the same way as they work in C programming.</p>\n\n\n\n<h2>Loops in Python</h2>\n\n\n\n<p>Following is the equivalent program written in Python. Python too supports&nbsp;<strong>while</strong>&nbsp;and&nbsp;<strong>do&#8230;while</strong>&nbsp;loops. The following program prints&nbsp;<strong>Hello, World!</strong>&nbsp;five times as we did in case of C Programming. Here you must note that Python does not make use of curly braces for the loop body, instead it simply identifies the body of the loop using indentation of the statements.</p>\n\n\n\n<p>You can try to execute the following program to see the output. To show the difference, we have used one more print statement, which will be executed when the loop will be over.Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>i = 0\n\nwhile (i &amp;lt; 5):\n   print \"Hello, World!\"\n   i = i + 1\nprint \"Loop ends\"</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Hello, World!\nHello, World!\nHello, World!\nHello, World!\nHello, World!\nLoop ends\n</code></pre>\n\n\n\n<p>The&nbsp;<strong>break</strong>&nbsp;and&nbsp;<strong>continue</strong>&nbsp;statements in Python work quite the same way as they do in C programming.</p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Let&#8217;s consider a situation when you want to print Hello, World! five times. Here is a simple C program to do the same −Live Demo When the above program is executed, it produces the following result − It was simple, but again, let&#8217;s consider another situation when you want to write&nbsp;Hello, World!&nbsp;a thousand times. We can certainly [&hellip;]</p>\n",
            "protected": false
        },
        "author": 2,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            10
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/540"
                }
            ],
            "collection": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
                }
            ],
            "about": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=540"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/540/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 541,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/540/revisions/541"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=540"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=540"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=540"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https://api.w.org/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 542,
        "date": "2020-10-24T11:31:14",
        "date_gmt": "2020-10-24T11:31:14",
        "guid": {
            "rendered": "http://computerprogramming.foobrdigital.com/?p=542"
        },
        "modified": "2020-10-24T11:31:14",
        "modified_gmt": "2020-10-24T11:31:14",
        "slug": "computer-programming-numbers",
        "status": "publish",
        "type": "post",
        "link": "https://computerprogramming.foobrdigital.com/computer-programming-numbers/",
        "title": {
            "rendered": "Numbers"
        },
        "content": {
            "rendered": "\n<p>Every programming language provides support for manipulating different types of numbers such as simple whole integers and floating point numbers. C, Java, and Python categorize these numbers in several categories based on their nature.</p>\n\n\n\n<p>Let&#8217;s go back and check the data types chapter, where we listed down the core data types related to numbers −</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Type</th><th>Keyword</th><th>Value range which can be represented by this data type</th></tr><tr><td>Number</td><td>int</td><td>-32,768 to 32,767 or -2,147,483,648 to 2,147,483,647</td></tr><tr><td>Small Number</td><td>short</td><td>-32,768 to 32,767</td></tr><tr><td>Long Number</td><td>long</td><td>-2,147,483,648 to 2,147,483,647</td></tr><tr><td>Decimal Number</td><td>float</td><td>1.2E-38 to 3.4E+38 till 6 decimal places</td></tr></tbody></table></figure>\n\n\n\n<p>These data types are called primitive data types and you can use these data types to build more data types, which are called user-defined data types.</p>\n\n\n\n<p>We have seen various mathematical and logical operations on numbers during a discussion on operators. So we know how to add numbers, subtract numbers, divide numbers, etc.</p>\n\n\n\n<p>First let&#8217;s see how to print various types of numbers available in C programming language −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   short  s;\n   int    i;\n   long   l;\n   float  f;\n   double d;\n\n   s = 10;\n   i = 1000;\n   l = 1000000;\n   f = 230.47;\n   d = 30949.374;\n\n   printf( \"s: %d\\n\", s);\n   printf( \"i: %d\\n\", i);\n   printf( \"l: %ld\\n\", l);\n   printf( \"f: %.3f\\n\", f);\n   printf( \"d: %.3f\\n\", d);\n}</code></pre>\n\n\n\n<p>Rest of the coding is very obvious, but we used&nbsp;<strong>%.3f</strong>&nbsp;to print float and double, which indicates the number of digits after the decimal to be printed. When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>s: 10\ni: 1000\nl: 1000000\nf: 230.470\nd: 30949.374\n</code></pre>\n\n\n\n<h2>Math Operations on Numbers</h2>\n\n\n\n<p>The following table lists down various useful built-in mathematical&nbsp;<strong>functions</strong>&nbsp;available in C programming language which can be used for various important mathematical calculations.</p>\n\n\n\n<p>For example, if you want to calculate the square root of a number, for example, 2304, then you have a built-in function available to calculate the square root.</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.</th><th>Function &amp; Purpose</th></tr><tr><td>1</td><td><strong>double cos(double);</strong>This function takes an angle (as a double) and returns the cosine.</td></tr><tr><td>2</td><td><strong>double sin(double);</strong>This function takes an angle (as a double) and returns the sine.</td></tr><tr><td>3</td><td><strong>double tan(double);</strong>This function takes an angle (as a double) and returns the tangent.</td></tr><tr><td>4</td><td><strong>double log(double);</strong>This function takes a number and returns the natural log of that number.</td></tr><tr><td>5</td><td><strong>double pow(double, double);</strong>The first is a number you wish to raise and the second is the power you wish to raise it to.</td></tr><tr><td>6</td><td><strong>double hypot(double, double);</strong>If you pass this function the length of two sides of a right triangle, it will return the length of the hypotenuse.</td></tr><tr><td>7</td><td><strong>double sqrt(double);</strong>You pass this function a number and it returns its square root.</td></tr><tr><td>8</td><td><strong>int abs(int);</strong>This function returns the absolute value of an integer that is passed to it.</td></tr><tr><td>9</td><td><strong>double fabs(double);</strong>This function returns the absolute value of any decimal number passed to it.</td></tr><tr><td>10</td><td><strong>double floor(double);</strong>Finds the integer which is less than or equal to the argument passed to it.</td></tr></tbody></table></figure>\n\n\n\n<p>Following is a simple example to show a few mathematical operations. To utilize these functions, you need to include the math header file <strong><math.h></strong> in your program in the same way you included <strong>stdio.h</strong> −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n#include &amp;lt;math.h&amp;gt;\n\nint main() {\n   short  s;\n   int    i;\n   long   l;\n   float  f;\n   double d;\n\n   printf( \"sin(s): %f\\n\", sin(10));\n   printf( \"abs(i): %f\\n\", abs(1000));\n   printf( \"floor(f): %f\\n\", floor(230.47));\n   printf( \"sqrt(l): %f\\n\", sqrt(1000000));\n   printf( \"pow(d, 2): %f\\n\", pow(2.374, 2));\n}</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>sin(s): -0.544021\nabs(i): -0.544021\nfloor(f): 230.000000\nsqrt(l): 1000.000000\npow(d, 2): 5.635876\n</code></pre>\n\n\n\n<p>Besides the above usage, you will use numbers in loop counting, flag representation, true or false values in C programming.</p>\n\n\n\n<h2>Numbers in Java</h2>\n\n\n\n<p>Following is the equivalent program written in Java. Java provides almost all the numeric data types available in C programming.</p>\n\n\n\n<p>You can try to execute the following program to see the output, which is identical to the result generated by the above C example.Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class DemoJava {\n   public static void main(String &#91;]args) {\n      short  s;\n      int    i;\n      long   l;\n      float  f;\n      double d;\n\n      s = 10;\n      i = 1000;\n      l = 1000000L;\n      f = 230.47f;\n      d = 30949.374;\n\n      System.out.format( \"s: %d\\n\", s);\n      System.out.format( \"i: %d\\n\", i);\n      System.out.format( \"l: %d\\n\", l);\n      System.out.format( \"f: %f\\n\", f);\n      System.out.format( \"d: %f\\n\", d);\n   }\n}</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>s: 10\ni: 1000\nl: 1000000\nf: 230.470001\nd: 30949.374000\n</code></pre>\n\n\n\n<p>Java also provides a full range of built-in functions for mathematical calculation and you can use them in the same way as you did in C programming.</p>\n\n\n\n<h2>Numbers in Python</h2>\n\n\n\n<p>Python is a little different from C and Java; it categorizes numbers in&nbsp;<strong>int</strong>,&nbsp;<strong>long</strong>,&nbsp;<strong>float</strong>&nbsp;and&nbsp;<strong>complex</strong>. Here are some examples of numbers in Python −</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>int</th><th>long</th><th>float</th><th>complex</th></tr><tr><td>10</td><td>51924361L</td><td>0.0</td><td>3.14j</td></tr><tr><td>100</td><td>-0x19323L</td><td>15.20</td><td>45.j</td></tr><tr><td>-786</td><td>0122L</td><td>-21.9</td><td>9.322e-36j</td></tr><tr><td>080</td><td>0xDEFABCECBDAECBFBAEl</td><td>32.3+e18</td><td>.876j</td></tr><tr><td>-0490</td><td>535633629843L</td><td>-90.</td><td>-.6545+0J</td></tr><tr><td>-0x260</td><td>-052318172735L</td><td>-32.54e100</td><td>3e+26J</td></tr><tr><td>0x69</td><td>-4721885298529L</td><td>70.2-E12</td><td>4.53e-7j</td></tr></tbody></table></figure>\n\n\n\n<p>Following is the equivalent program written in Python −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>s = 10\ni = 1000\nl = 1000000\nf = 230.47\nd = 30949.374\n\nprint \"s: \", s\nprint \"i: \", i\nprint \"l: \", l\nprint \"f: \", f\nprint \"d: \", d</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>s:  10\ni:  1000\nl:  1000000\nf:  230.47\nd:  30949.374\n</code></pre>\n\n\n\n<p>Python also provides a full range of built-in functions for mathematical calculations and you can use them in the same way you have used them in C programming.</p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Every programming language provides support for manipulating different types of numbers such as simple whole integers and floating point numbers. C, Java, and Python categorize these numbers in several categories based on their nature. Let&#8217;s go back and check the data types chapter, where we listed down the core data types related to numbers − [&hellip;]</p>\n",
            "protected": false
        },
        "author": 2,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            10
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/542"
                }
            ],
            "collection": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
                }
            ],
            "about": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=542"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/542/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 543,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/542/revisions/543"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=542"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=542"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=542"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https://api.w.org/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 544,
        "date": "2020-10-24T11:32:53",
        "date_gmt": "2020-10-24T11:32:53",
        "guid": {
            "rendered": "http://computerprogramming.foobrdigital.com/?p=544"
        },
        "modified": "2020-10-24T11:32:53",
        "modified_gmt": "2020-10-24T11:32:53",
        "slug": "computer-programming-characters",
        "status": "publish",
        "type": "post",
        "link": "https://computerprogramming.foobrdigital.com/computer-programming-characters/",
        "title": {
            "rendered": "Characters"
        },
        "content": {
            "rendered": "\n<p>If it was easy to work with numbers in computer programming, it would be even easier to work with characters. Characters are simple alphabets like a, b, c, d&#8230;., A, B, C, D,&#8230;.., but with an exception. In computer programming, any single digit number like 0, 1, 2,&#8230;.and special characters like $, %, +, -&#8230;. etc., are also treated as characters and to assign them in a character type variable, you simply need to put them inside&nbsp;<strong>single quotes</strong>. For example, the following statement defines a character type variable&nbsp;<strong>ch</strong>&nbsp;and we assign a value &#8216;a&#8217; to it −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>char ch = 'a';\n</code></pre>\n\n\n\n<p>Here,&nbsp;<strong>ch</strong>&nbsp;is a variable of character type which can hold a character of the implementation&#8217;s character set and&nbsp;<strong>&#8216;a&#8217;</strong>&nbsp;is called a&nbsp;<strong>character literal</strong>&nbsp;or a character constant. Not only a, b, c,&#8230;. but when any number like 1, 2, 3&#8230;. or any special character like !, @, #, #, $,&#8230;. is kept inside single quotes, then they will be treated as a character literal and can be assigned to a variable of character type, so the following is a valid statement −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>char ch = '1';\n</code></pre>\n\n\n\n<p>A character data type consumes 8 bits of memory which means you can store anything in a character whose ASCII value lies in between -127 to 127, so it can hold any of the 256 different values. A character data type can store any of the characters available on your keyboard including special characters like !, @, #, #, $, %, ^, &amp;, *, (, ), _, +, {, }, etc.</p>\n\n\n\n<p>Note that you can keep only a single alphabet or a single digit number inside single quotes and more than one alphabets or digits are not allowed inside single quotes. So the following statements are invalid in C programming −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>char ch1 = 'ab';\nchar ch2 = '10';\n</code></pre>\n\n\n\n<p>Given below is a simple example, which shows how to define, assign, and print characters in C Programming language −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   char  ch1;\n   char  ch2;\n   char  ch3;\n   char  ch4;\n   \n   ch1 = 'a';      \n   ch2 = '1';\n   ch3 = '$';\n   ch4 = '+';  \n\n   printf( \"ch1: %c\\n\", ch1);\n   printf( \"ch2: %c\\n\", ch2);\n   printf( \"ch3: %c\\n\", ch3);\n   printf( \"ch4: %c\\n\", ch4);\n}</code></pre>\n\n\n\n<p>Here, we used %c to print a character data type. When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>ch1: a\nch2: 1\nch3: $\nch4: +\n</code></pre>\n\n\n\n<h2>Escape Sequences</h2>\n\n\n\n<p>Many programming languages support a concept called&nbsp;<strong>Escape Sequence</strong>. When a character is preceded by a backslash (\\), it is called an escape sequence and it has a special meaning to the compiler. For example, \\n in the following statement is a valid character and it is called a new line character −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>char ch = '\\n';\n</code></pre>\n\n\n\n<p>Here, character&nbsp;<strong>n</strong>&nbsp;has been preceded by a backslash (\\), it has special meaning which is a new line but keep in mind that backslash (\\) has special meaning with a few characters only. The following statement will not convey any meaning in C programming and it will be assumed as an invalid statement −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>char ch = '\\1';\n</code></pre>\n\n\n\n<p>The following table lists the escape sequences available in C programming language −</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Escape Sequence</th><th>Description</th></tr><tr><td>\\t</td><td>Inserts a tab in the text at this point.</td></tr><tr><td>\\b</td><td>Inserts a backspace in the text at this point.</td></tr><tr><td>\\n</td><td>Inserts a newline in the text at this point.</td></tr><tr><td>\\r</td><td>Inserts a carriage return in the text at this point.</td></tr><tr><td>\\f</td><td>Inserts a form feed in the text at this point.</td></tr><tr><td>\\&#8217;</td><td>Inserts a single quote character in the text at this point.</td></tr><tr><td>\\&#8221;</td><td>Inserts a double quote character in the text at this point.</td></tr><tr><td>\\\\</td><td>Inserts a backslash character in the text at this point.</td></tr></tbody></table></figure>\n\n\n\n<p>The following example shows how the compiler interprets an escape sequence in a print statement −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   char  ch1;\n   char  ch2;\n   char  ch3;\n   char  ch4;\n   \n   ch1 = '\\t';      \n   ch2 = '\\n';\n\n   printf( \"Test for tabspace %c and a newline %c will start here\", ch1, ch2);\n}</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Test for tabspace     and a newline \nwill start here\n</code></pre>\n\n\n\n<h2>Characters in Java</h2>\n\n\n\n<p>Following is the equivalent program written in Java. Java handles character data types much in the same way as we have seen in C programming. However, Java provides additional support for character manipulation.</p>\n\n\n\n<p>You can try to execute the following program to see the output, which must be identical to the result generated by the above C example.Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class DemoJava {\n   public static void main(String &#91;]args) {\n      char  ch1;\n      char  ch2;\n      char  ch3;\n      char  ch4;\n   \n      ch1 = 'a';      \n      ch2 = '1';\n      ch3 = '$';\n      ch4 = '+';  \n\n      System.out.format( \"ch1: %c\\n\", ch1);\n      System.out.format( \"ch2: %c\\n\", ch2);\n      System.out.format( \"ch3: %c\\n\", ch3);\n      System.out.format( \"ch4: %c\\n\", ch4);\n   }\n}</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>ch1:  a\nch2:  1\nch3:  $\nch4:  +\n</code></pre>\n\n\n\n<p>Java also supports escape sequence in the same way you have used them in C programming.</p>\n\n\n\n<h2>Characters in Python</h2>\n\n\n\n<p>Python does not support any character data type but all the characters are treated as string, which is a sequence of characters. We will study strings in a separate chapter. You do not need to have any special arrangement while using a single character in Python.</p>\n\n\n\n<p>Following is the equivalent program written in Python −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>ch1 = 'a';      \nch2 = '1';\nch3 = '$';\nch4 = '+'; \n\nprint \"ch1: \", ch1\nprint \"ch2: \", ch2\nprint \"ch3: \", ch3\nprint \"ch4: \", ch4</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>ch1:  a\nch2:  1\nch3:  $\nch4:  +\n</code></pre>\n\n\n\n<p>Python supports escape sequences in the same way as you have used them in C programming.</p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>If it was easy to work with numbers in computer programming, it would be even easier to work with characters. Characters are simple alphabets like a, b, c, d&#8230;., A, B, C, D,&#8230;.., but with an exception. In computer programming, any single digit number like 0, 1, 2,&#8230;.and special characters like $, %, +, -&#8230;. [&hellip;]</p>\n",
            "protected": false
        },
        "author": 2,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            10
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/544"
                }
            ],
            "collection": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
                }
            ],
            "about": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=544"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/544/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 545,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/544/revisions/545"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=544"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=544"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=544"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https://api.w.org/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 546,
        "date": "2020-10-24T11:34:30",
        "date_gmt": "2020-10-24T11:34:30",
        "guid": {
            "rendered": "http://computerprogramming.foobrdigital.com/?p=546"
        },
        "modified": "2020-10-24T11:34:30",
        "modified_gmt": "2020-10-24T11:34:30",
        "slug": "computer-programming-arrays",
        "status": "publish",
        "type": "post",
        "link": "https://computerprogramming.foobrdigital.com/computer-programming-arrays/",
        "title": {
            "rendered": "Arrays"
        },
        "content": {
            "rendered": "\n<p>Consider a situation where we need to store five integer numbers. If we use programming&#8217;s simple variable and data type concepts, then we need five variables of <strong>int</strong> data type and the program will be as follows −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   int number1;\n   int number2;\n   int number3;\n   int number4;\n   int number5;\n   \n   number1 = 10;      \n   number2 = 20;   \n   number3 = 30;   \n   number4 = 40; \n   number5 = 50;     \n\n   printf( \"number1: %d\\n\", number1);\n   printf( \"number2: %d\\n\", number2);\n   printf( \"number3: %d\\n\", number3);\n   printf( \"number4: %d\\n\", number4);\n   printf( \"number5: %d\\n\", number5);\n}</code></pre>\n\n\n\n<p>It was simple, because we had to store just five integer numbers. Now let&#8217;s assume we have to store 5000 integer numbers. Are we going to use 5000 variables?</p>\n\n\n\n<p>To handle such situations, almost all the programming languages provide a concept called&nbsp;<strong>array</strong>. An array is a data structure, which can store a fixed-size collection of elements of the same data type. An array is used to store a collection of data, but it is often more useful to think of an array as a collection of variables of the same type.</p>\n\n\n\n<p>Instead of declaring individual variables, such as number1, number2, &#8230;, number99, you just declare one array variable&nbsp;<strong>number</strong>&nbsp;of integer type and use number1[0], number1[1], and &#8230;, number1[99] to represent individual variables. Here, 0, 1, 2, &#8230;..99 are&nbsp;<strong>index</strong>&nbsp;associated with&nbsp;<strong>var</strong>&nbsp;variable and they are being used to represent individual elements available in the array.</p>\n\n\n\n<p>All arrays consist of contiguous memory locations. The lowest address corresponds to the first element and the highest address to the last element.</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://www.tutorialspoint.com/computer_programming/images/arrays.jpg\" alt=\"Arrays in C\"/></figure>\n\n\n\n<h2>Create Arrays</h2>\n\n\n\n<p>To create an array variable in C, a programmer specifies the type of the elements and the number of elements to be stored in that array. Given below is a simple syntax to create an array in C programming −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>type arrayName &#91; arraySize ];\n</code></pre>\n\n\n\n<p>This is called a&nbsp;<em>single-dimensional</em>&nbsp;array. The&nbsp;<strong>arraySize</strong>&nbsp;must be an integer constant greater than zero and&nbsp;<strong>type</strong>&nbsp;can be any valid C data type. For example, now to declare a 10-element array called&nbsp;<strong>number</strong>&nbsp;of type&nbsp;<strong>int</strong>, use this statement −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>int number&#91;10];\n</code></pre>\n\n\n\n<p>Here,&nbsp;<em>number</em>&nbsp;is a variable array, which is sufficient to hold up to 10 integer numbers.</p>\n\n\n\n<h2>Initializing Arrays</h2>\n\n\n\n<p>You can initialize an array in C either one by one or using a single statement as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>int number&#91;5] = {10, 20, 30, 40, 50};\n</code></pre>\n\n\n\n<p>The number of values between braces { } cannot be larger than the number of elements that we declare for the array between square brackets [ ].</p>\n\n\n\n<p>If you omit the size of the array, an array just big enough to hold the initialization is created. Therefore, if you write −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>int number&#91;] = {10, 20, 30, 40, 50};\n</code></pre>\n\n\n\n<p>You will create exactly the same array as you did in the previous example. Following is an example to assign a single element of the array −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>number&#91;4] = 50;\n</code></pre>\n\n\n\n<p>The above statement assigns element number 5th in the array with a value of 50. All arrays have 0 as the index of their first element which is also called the base index and the last index of an array will be the total size of the array minus 1. The following image shows the pictorial representation of the array we discussed above −</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://www.tutorialspoint.com/computer_programming/images/array_presentation.jpg\" alt=\"Array Presentation\"/></figure>\n\n\n\n<h2>Accessing Array Elements</h2>\n\n\n\n<p>An element is accessed by indexing the array name. This is done by placing the index of the element within square brackets after the name of the array. For example −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>int var = number&#91;9];\n</code></pre>\n\n\n\n<p>The above statement will take the 10th element from the array and assign the value to <strong>var</strong> variable. The following example uses all the above-mentioned three concepts viz. creation, assignment, and accessing arrays −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n \nint main () {\n   int number&#91;10]; /* number is an array of 10 integers */\n   int i = 0;\n \n   /* Initialize elements of array n to 0 */         \n   while( i &amp;lt; 10 ) {\n\t\n      /* Set element at location i to i + 100 */\n      number&#91; i ] = i + 100;\n      i = i + 1;\n   }\n   \n   /* Output each array element's value */\n   i = 0;\n   while( i &amp;lt; 10 ) {\n\t\n      printf(\"number&#91;%d] = %d\\n\", i, number&#91;i] );\n      i = i + 1;\n   }\n   \n   return 0;\n}</code></pre>\n\n\n\n<p>When the above code is compiled and executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>number&#91;0] = 100\nnumber&#91;1] = 101\nnumber&#91;2] = 102\nnumber&#91;3] = 103\nnumber&#91;4] = 104\nnumber&#91;5] = 105\nnumber&#91;6] = 106\nnumber&#91;7] = 107\nnumber&#91;8] = 108\nnumber&#91;9] = 109\n</code></pre>\n\n\n\n<h2>Arrays in Java</h2>\n\n\n\n<p>Following is the equivalent program written in Java. Java supports arrays, but there is a little difference in the way they are created in Java using the&nbsp;<strong>new</strong>&nbsp;operator.</p>\n\n\n\n<p>You can try to execute the following program to see the output, which must be identical to the result generated by the above C example.<a href=\"http://tpcg.io/BDF4Hp\" target=\"_blank\" rel=\"noreferrer noopener\">Live Demo</a></p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class DemoJava {\n   public static void main(String &#91;]args) {\n      int&#91;] number = new int&#91;10];\n      int i = 0;\n      \n      while( i &amp;lt; 10 ) {\n\t\t\n         number&#91; i ] = i + 100;\n         i = i + 1;\n      }\n\n      i = 0;\n      while( i &amp;lt; 10 ) {\n         System.out.format( \"number&#91;%d] = %d\\n\", i, number&#91;i] );\n         i = i + 1;\n      }\n   }\n}</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>number&#91;0] = 100\nnumber&#91;1] = 101\nnumber&#91;2] = 102\nnumber&#91;3] = 103\nnumber&#91;4] = 104\nnumber&#91;5] = 105\nnumber&#91;6] = 106\nnumber&#91;7] = 107\nnumber&#91;8] = 108\nnumber&#91;9] = 109\n</code></pre>\n\n\n\n<h2>Arrays (Lists) in Python</h2>\n\n\n\n<p>Python does not have a concept of Array, instead Python provides another data structure called&nbsp;<strong>list</strong>, which provides similar functionality as arrays in any other language.</p>\n\n\n\n<p>Following is the equivalent program written in Python −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code># Following defines an empty list.\nnumber = &#91;]\ni = 0\n\nwhile i &amp;lt; 10:\n   # Appending elements in the list\n   number.append(i + 100)\n   i = i + 1\n\ni = 0\nwhile i &amp;lt; 10:\n   # Accessing elements from the list\n   print \"number&#91;\", i,  \"] = \", number&#91; i ]\n   i = i + 1</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>number&#91; 0 ] =  100\nnumber&#91; 1 ] =  101\nnumber&#91; 2 ] =  102\nnumber&#91; 3 ] =  103\nnumber&#91; 4 ] =  104\nnumber&#91; 5 ] =  105\nnumber&#91; 6 ] =  106\nnumber&#91; 7 ] =  107\nnumber&#91; 8 ] =  108\nnumber&#91; 9 ] =  109</code></pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Consider a situation where we need to store five integer numbers. If we use programming&#8217;s simple variable and data type concepts, then we need five variables of int data type and the program will be as follows −Live Demo It was simple, because we had to store just five integer numbers. Now let&#8217;s assume we have to [&hellip;]</p>\n",
            "protected": false
        },
        "author": 2,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            10
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/546"
                }
            ],
            "collection": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
                }
            ],
            "about": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=546"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/546/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 547,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/546/revisions/547"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=546"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=546"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=546"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https://api.w.org/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 548,
        "date": "2020-10-24T11:35:52",
        "date_gmt": "2020-10-24T11:35:52",
        "guid": {
            "rendered": "http://computerprogramming.foobrdigital.com/?p=548"
        },
        "modified": "2020-10-24T11:35:52",
        "modified_gmt": "2020-10-24T11:35:52",
        "slug": "computer-programming-strings",
        "status": "publish",
        "type": "post",
        "link": "https://computerprogramming.foobrdigital.com/computer-programming-strings/",
        "title": {
            "rendered": "Strings"
        },
        "content": {
            "rendered": "\n<p>During our discussion about&nbsp;<strong>characters</strong>, we learnt that character data type deals with a single character and you can assign any character from your keyboard to a character type variable.</p>\n\n\n\n<p>Now, let&#8217;s move a little bit ahead and consider a situation where we need to store more than one character in a variable. We have seen that C programming does not allow to store more than one character in a character type variable. So the following statements are invalid in C programming and produce syntax errors −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>char ch1 = 'ab';\nchar ch2 = '10';\n</code></pre>\n\n\n\n<p>We have also seen how to use the concept of <strong>arrays</strong> to store more than one value of similar data type in a variable. Here is the syntax to store and print five numbers in an array of int type −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nmain() {\n   int number&#91;5] = {10, 20, 30, 40, 50};\n   int i = 0;\n        \n   while( i &amp;lt; 5 ) {\n      printf(\"number&#91;%d] = %d\\n\", i, number&#91;i] );\n      i = i + 1;\n   }\n}</code></pre>\n\n\n\n<p>When the above code is compiled and executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>number&#91;0] = 10\nnumber&#91;1] = 20\nnumber&#91;2] = 30\nnumber&#91;3] = 40\nnumber&#91;4] = 50\n</code></pre>\n\n\n\n<p>Now, let&#8217;s define an array of five characters in the same way as we did for numbers and try to print them −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nmain() {\n   char ch&#91;5] = {'H', 'e', 'l', 'l', 'o'};\n   int i = 0;\n        \n   while( i &amp;lt; 5 ) {\n      printf(\"ch&#91;%d] = %c\\n\", i, ch&#91;i] );\n      i = i + 1;\n   }\n}</code></pre>\n\n\n\n<p>Here, we used %c to print character value. When the above code is compiled and executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>ch&#91;0] = H\nch&#91;1] = e\nch&#91;2] = l\nch&#91;3] = l\nch&#91;4] = o\n</code></pre>\n\n\n\n<p>If you are done with the above example, then I think you understood how strings work in C programming, because <strong>strings in C are represented as arrays of characters</strong>. C programming simplified the assignment and printing of strings. Let&#8217;s check the same example once again with a simplified syntax −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nmain() {\n   char ch&#91;5] = \"Hello\";\n   int i = 0;\n    \n   /* Print as a complete string */\n   printf(\"String = %s\\n\", ch);  \n\n   /* Print character by character */\n   while( i &amp;lt; 5 ) {\n      printf(\"ch&#91;%d] = %c\\n\", i, ch&#91;i] );\n      i = i + 1;\n   }\n}</code></pre>\n\n\n\n<p>Here, we used %s to print the full string value using array name&nbsp;<strong>ch</strong>, which is actually the beginning of the memory address holding&nbsp;<strong>ch</strong>&nbsp;variable as shown below −</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://www.tutorialspoint.com/computer_programming/images/string_representation.jpg\" alt=\"String Presentation in C/C++\"/></figure>\n\n\n\n<p>Although it&#8217;s not visible from the above examples, a C program internally assigns null character&nbsp;<strong>&#8216;\\0&#8217;</strong>&nbsp;as the last character of every string. It indicates the end of the string and it means if you want to store a 5 character string in an array, then you must define an array size of 6 as a good practice, though C does not complain about it.</p>\n\n\n\n<p>If the above code is compiled and executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>String = Hello\nch&#91;0] = H\nch&#91;1] = e\nch&#91;2] = l\nch&#91;3] = l\nch&#91;4] = o\n</code></pre>\n\n\n\n<h2>Basic String Concepts</h2>\n\n\n\n<p>Based on the above discussion, we can conclude the following important points about strings in C programming language −</p>\n\n\n\n<ul><li>Strings in C are represented as arrays of characters.</li><li>We can constitute a string in C programming by assigning character by character into an array of characters.</li><li>We can constitute a string in C programming by assigning a complete string enclosed in double quote.</li><li>We can print a string character by character using an array subscript or a complete string by using an array name without subscript.</li><li>The last character of every string is a null character, i.e.,&nbsp;<strong>‘\\0’</strong>.</li><li>Most of the programming languages provide built-in functions to manipulate strings, i.e., you can concatenate strings, you can search from a string, you can extract sub-strings from a string, etc. For more, you can check our detailed tutorial on C programming or any other programming language.</li></ul>\n\n\n\n<h2>Strings in Java</h2>\n\n\n\n<p>Though you can use character arrays to store strings, but Java is an advanced programming language and its designers tried to provide additional functionality. Java provides strings as a built-in data type like any other data type. It means you can define strings directly instead of defining them as array of characters.</p>\n\n\n\n<p>Following is the equivalent program written in Java. Java makes use of the&nbsp;<strong>new</strong>&nbsp;operator to create string variables as shown in the following program.</p>\n\n\n\n<p>You can try to execute the following program to see the output −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class DemoJava {\n   public static void main(String &#91;]args) {\n      String str = new String(\"Hello\");  \n      System.out.println( \"String = \" + str );\n   }\n}</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>String = Hello\n</code></pre>\n\n\n\n<h2>Strings in Python</h2>\n\n\n\n<p>Creating strings in Python is as simple as assigning a string into a Python variable using single or double quotes.</p>\n\n\n\n<p>Given below is a simple program that creates two strings and prints them using print() function −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>var1 = 'Hello World!'\nvar2 = \"Python Programming\"\n\nprint \"var1 = \", var1\nprint \"var2 = \", var2</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>var1 =  Hello World!\nvar2 =  Python Programming\n</code></pre>\n\n\n\n<p>Python does not support character type; these are treated as strings of length one, thus also considered a substring.</p>\n\n\n\n<p>To access substrings, use the square brackets for slicing along with the index or indices to obtain your substring. Take a look at the following code segment −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>var1 = 'Hello World!'\nvar2 = \"Python Programming\"\n\nprint \"var1&#91;0]: \", var1&#91;0]\nprint \"var2&#91;1:5]: \", var2&#91;1:5]</code></pre>\n\n\n\n<p>When the above code is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>var1&#91;0]:  H\nvar2&#91;1:5]:  ytho\n</code></pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>During our discussion about&nbsp;characters, we learnt that character data type deals with a single character and you can assign any character from your keyboard to a character type variable. Now, let&#8217;s move a little bit ahead and consider a situation where we need to store more than one character in a variable. We have seen [&hellip;]</p>\n",
            "protected": false
        },
        "author": 2,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            10
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/548"
                }
            ],
            "collection": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
                }
            ],
            "about": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=548"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/548/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 549,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/548/revisions/549"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=548"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=548"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=548"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https://api.w.org/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 551,
        "date": "2020-10-24T11:37:15",
        "date_gmt": "2020-10-24T11:37:15",
        "guid": {
            "rendered": "http://computerprogramming.foobrdigital.com/?p=551"
        },
        "modified": "2020-10-24T11:37:15",
        "modified_gmt": "2020-10-24T11:37:15",
        "slug": "computer-programming-functions",
        "status": "publish",
        "type": "post",
        "link": "https://computerprogramming.foobrdigital.com/computer-programming-functions/",
        "title": {
            "rendered": "Functions"
        },
        "content": {
            "rendered": "\n<p>A function is a block of organized, reusable code that is used to perform a single, related action. Functions provide better modularity for your application and a high degree of code reusing. You have already seen various functions like&nbsp;<strong>printf()</strong>&nbsp;and&nbsp;<strong>main()</strong>. These are called built-in functions provided by the language itself, but we can write our own functions as well and this tutorial will teach you how to write and use those functions in C programming language.</p>\n\n\n\n<p>Good thing about functions is that they are famous with several names. Different programming languages name them differently, for example, functions, methods, sub-routines, procedures, etc. If you come across any such terminology, then just imagine about the same concept, which we are going to discuss in this tutorial.</p>\n\n\n\n<p>Let&#8217;s start with a program where we will define two arrays of numbers and then from each array, we will find the biggest number. Given below are the steps to find out the maximum number from a given set of numbers −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>1. Get a list of numbers L<sub>1</sub>, L<sub>2</sub>, L<sub>3</sub>....L<sub>N</sub>\n2. Assume L<sub>1</sub> is the largest, Set max = L<sub>1</sub>\n3. Take next number L<sub>i</sub> from the list and do the following\n4.    If max is less than L<sub>i</sub>\n5.       Set max = L<sub>i</sub>\n6.    If L<sub>i</sub> is last number from the list then\n7.       Print value stored in max and come out\n8. Else prepeat same process starting from step 3\n</code></pre>\n\n\n\n<p>Let&#8217;s translate the above program in C programming language −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   int set1&#91;5] = {10, 20, 30, 40, 50};\n   int set2&#91;5] = {101, 201, 301, 401, 501};\n   int i, max;\n   \n   /* Process first set of numbers available in set1&#91;] */\n   max = set1&#91;0];\n   i = 1;    \n   while( i &amp;lt; 5 ) {\n      if( max &amp;lt;  set1&#91;i] ) {\n         max = set1&#91;i];\n      }\n      i = i + 1;\n   }\n   \n   printf(\"Max in first set = %d\\n\", max );\n    \n   /* Now process second set of numbers available in set2&#91;] */\n   max = set2&#91;0];\n   i = 1;    \n   while( i &amp;lt; 5 ) {\n      if( max &amp;lt;  set2&#91;i] ) {\n         max = set2&#91;i];\n      }\n      i = i + 1;\n   }\n   printf(\"Max in second set = %d\\n\", max );\n}</code></pre>\n\n\n\n<p>When the above code is compiled and executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Max in first set = 50\nMax in second set = 501\n</code></pre>\n\n\n\n<p>If you are clear about the above example, then it will become easy to understand why we need a function. In the above example, there are only two sets of numbers, set1 and set2, but consider a situation where we have 10 or more similar sets of numbers to find out the maximum numbers from each set. In such a situation, we will have to repeat, processing 10 or more times and ultimately, the program will become too large with repeated code. To handle such situation, we write our functions where we try to keep the source code which will be used again and again in our programming.</p>\n\n\n\n<p>Now, let&#8217;s see how to define a function in C programming language and then in the subsequent sections, we will explain how to use them.</p>\n\n\n\n<h2>Defining a Function</h2>\n\n\n\n<p>The general form of a function definition in C programming language is as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>return_type function_name( parameter list ) {\n   body of the function\n   \n   return &#91;expression];\n}</code></pre>\n\n\n\n<p>A function definition in C programming consists of a&nbsp;<em>function header</em>&nbsp;and a&nbsp;<em>function body</em>. Here are all the parts of a function −</p>\n\n\n\n<ul><li><strong>Return Type</strong>&nbsp;− A function may return a value. The&nbsp;<strong>return_type</strong>&nbsp;is the data type of the value the function returns. Some functions perform the desired operations without returning a value. In this case, the return_type is the keyword&nbsp;<strong>void</strong>.</li><li><strong>Function Name</strong>&nbsp;− This is the actual name of the function. The function name and the parameter list together constitute the function signature.</li><li><strong>Parameter List</strong>&nbsp;− A parameter is like a placeholder. When a function is invoked, you pass a value as a parameter. This value is referred to as the actual parameter or argument. The parameter list refers to the type, order, and number of the parameters of a function. Parameters are optional; that is, a function may contain no parameters.</li><li><strong>Function Body</strong>&nbsp;− The function body contains a collection of statements that defines what the function does.</li></ul>\n\n\n\n<h2>Calling a Function</h2>\n\n\n\n<p>While creating a C function, you give a definition of what the function has to do. To use a function, you will have to call that function to perform a defined task.</p>\n\n\n\n<p>Now, let&#8217;s write the above example with the help of a function −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint getMax( int set&#91;] ) {\n   int i, max;\n   \n   max = set&#91;0];\n   i = 1;    \n   while( i &amp;lt; 5 ) {\n      if( max &amp;lt;  set&#91;i] ) {\n         max = set&#91;i];\n      }\n      i = i + 1;\n   }\n   return max;\n}\nmain() {\n   int set1&#91;5] = {10, 20, 30, 40, 50};\n   int set2&#91;5] = {101, 201, 301, 401, 501};\n   int max;\n\n   /* Process first set of numbers available in set1&#91;] */\n   max = getMax(set1);\n   printf(\"Max in first set = %d\\n\", max );\n    \n   /* Now process second set of numbers available in set2&#91;] */\n   max = getMax(set2);\n   printf(\"Max in second set = %d\\n\", max );\n}</code></pre>\n\n\n\n<p>When the above code is compiled and executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Max in first set = 50\nMax in second set = 501\n</code></pre>\n\n\n\n<h2>Functions in Java</h2>\n\n\n\n<p>If you are clear about functions in C programming, then it is easy to understand them in Java as well. Java programming names them as&nbsp;<strong>methods</strong>, but the rest of the concepts remain more or less same.</p>\n\n\n\n<p>Following is the equivalent program written in Java. You can try to execute it to see the output −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class DemoJava {\n   public static void main(String &#91;]args) {\n      int&#91;] set1 = {10, 20, 30, 40, 50};\n      int&#91;] set2 = {101, 201, 301, 401, 501};\n      int max;\n\n      /* Process first set of numbers available in set1&#91;] */\n      max = getMax(set1);\n      System.out.format(\"Max in first set = %d\\n\", max );\n\n      /* Now process second set of numbers available in set2&#91;] */\n      max = getMax(set2);\n      System.out.format(\"Max in second set = %d\\n\", max );\n   }\n   public static int getMax( int set&#91;] ) {\n      int i, max;\n      max = set&#91;0];\n      i = 1;    \n      \n      while( i &amp;lt; 5 ) {\n         if( max &amp;lt;  set&#91;i] ) {\n            max = set&#91;i];\n         }\n         i = i + 1;\n      }\n      return max;\n   }\n}</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Max in first set = 50\nMax in second set = 501\n</code></pre>\n\n\n\n<h2>Functions in Python</h2>\n\n\n\n<p>Once again, if you know the concept of functions in C and Java programming, then Python is not much different. Given below is the basic syntax of defining a function in Python −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>def function_name( parameter list ):\n   body of the function\n   \n   return &#91;expression]\n</code></pre>\n\n\n\n<p>Using this syntax of function in Python, the above example can be written as follows −Live Demo</p>\n\n\n\n<pre class=\"wp-block-code\"><code>def getMax( set ):\n   max = set&#91;0]\n   i = 1   \n   \n   while( i &amp;lt; 5 ):\n      if( max &amp;lt;  set&#91;i] ):\n         max = set&#91;i]\n      \n      i = i + 1\n   return max\n\nset1 = &#91;10, 20, 30, 40, 50]\nset2 = &#91;101, 201, 301, 401, 501]\n\n# Process first set of numbers available in set1&#91;]\nmax = getMax(set1)\nprint \"Max in first set = \", max\n    \n# Now process second set of numbers available in set2&#91;]\nmax = getMax(set2)\nprint \"Max in second set = \", max</code></pre>\n\n\n\n<p>When the above code is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Max in first set =  50\nMax in second set =  501\n</code></pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>A function is a block of organized, reusable code that is used to perform a single, related action. Functions provide better modularity for your application and a high degree of code reusing. You have already seen various functions like&nbsp;printf()&nbsp;and&nbsp;main(). These are called built-in functions provided by the language itself, but we can write our own [&hellip;]</p>\n",
            "protected": false
        },
        "author": 2,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            10
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/551"
                }
            ],
            "collection": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
                }
            ],
            "about": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=551"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/551/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 552,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/551/revisions/552"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=551"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=551"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=551"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https://api.w.org/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 553,
        "date": "2020-10-24T11:38:35",
        "date_gmt": "2020-10-24T11:38:35",
        "guid": {
            "rendered": "http://computerprogramming.foobrdigital.com/?p=553"
        },
        "modified": "2020-10-24T11:38:35",
        "modified_gmt": "2020-10-24T11:38:35",
        "slug": "computer-programming-file-i-o",
        "status": "publish",
        "type": "post",
        "link": "https://computerprogramming.foobrdigital.com/computer-programming-file-i-o/",
        "title": {
            "rendered": "File I/O"
        },
        "content": {
            "rendered": "\n<h2>Computer Files</h2>\n\n\n\n<p>A computer file is used to store data in digital format like plain text, image data, or any other content. Computer files can be organized inside different directories. Files are used to keep digital data, whereas directories are used to keep files.</p>\n\n\n\n<p>Computer files can be considered as the digital counterpart of paper documents. While programming, you keep your source code in text files with different extensions, for example, C programming files end with the extension&nbsp;<strong>.c</strong>, Java programming files with&nbsp;<strong>.java</strong>, and Python files with&nbsp;<strong>.py</strong>.</p>\n\n\n\n<h2>File Input/Output</h2>\n\n\n\n<p>Usually, you create files using text editors such as notepad, MS Word, MS Excel or MS Powerpoint, etc. However, many times, we need to create files using computer programs as well. We can modify an existing file using a computer program.</p>\n\n\n\n<p>File input means data that is written into a file and file output means data that is read from a file. Actually, input and output terms are more related to screen input and output. When we display a result on the screen, it is called output. Similarly, if we provide some input to our program from the command prompt, then it is called input.</p>\n\n\n\n<p>For now, it is enough to remember that writing into a file is file input and reading something from a file is file output.</p>\n\n\n\n<h2>File Operation Modes</h2>\n\n\n\n<p>Before we start working with any file using a computer program, either we need to create a new file if it does not exist or open an already existing file. In either case, we can open a file in the following modes −</p>\n\n\n\n<ul><li><strong>Read-Only Mode</strong>&nbsp;− If you are going to just read an existing file and you do not want to write any further content in the file, then you will open the file in read-only mode. Almost all the programming languages provide syntax to open files in read-only mode.</li><li><strong>Write-Only Mode</strong>&nbsp;− If you are going to write into either an existing file or a newly created file but you do not want to read any written content from that file, then you will open the file in write-only mode. All the programming languages provide syntax to open files in write-only mode.</li><li><strong>Read &amp; Write Mode</strong>&nbsp;− If you are going to read as well as write into the same file, then you will open file in read &amp; write mode.</li><li><strong>Append Mode</strong>&nbsp;− When you open a file for writing, it allows you to start writing from the beginning of the file; however it will overwrite existing content, if any. Suppose we don’t want to overwrite any existing content, then we open the file in append mode. Append mode is ultimately a write mode, which allows content to be appended at the end of the file. Almost all the programming languages provide syntax to open files in append mode.</li></ul>\n\n\n\n<p>In the following sections, we will learn how to open a fresh new file, how to write into it, and later, how to read and append more content into the same file.</p>\n\n\n\n<h2>Opening Files</h2>\n\n\n\n<p>You can use the&nbsp;<strong>fopen()</strong>&nbsp;function to create a new file or to open an existing file. This call will initialize an object of the type&nbsp;<strong>FILE</strong>, which contains all the information necessary to control the stream. Here is the prototype, i.e., signature of this function call −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>FILE *fopen( const char * filename, const char * mode );\n</code></pre>\n\n\n\n<p>Here,&nbsp;<strong>filename</strong>&nbsp;is string literal, which you will use to name your file and access&nbsp;<strong>mode</strong>&nbsp;can have one of the following values −</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No</th><th>Mode &amp; Description</th></tr><tr><td>1</td><td><strong>r</strong>Opens an existing text file for reading purpose.</td></tr><tr><td>2</td><td><strong>w</strong>Opens a text file for writing. If it does not exist, then a new file is created. Here, your program will start writing content from the beginning of the file.</td></tr><tr><td>3</td><td><strong>a</strong>Opens a text file for writing in appending mode. If it does not exist, then a new file is created. Here, your program will start appending content in the existing file content.</td></tr><tr><td>4</td><td><strong>r+</strong>Opens a text file for reading and writing both.</td></tr><tr><td>5</td><td><strong>w+</strong>Opens a text file for both reading and writing. It first truncates the file to zero length, if it exists; otherwise creates the file if it does not exist.</td></tr><tr><td>6</td><td><strong>a+</strong>Opens a text file for both reading and writing. It creates a file, if it does not exist. The reading will start from the beginning, but writing can only be appended.</td></tr></tbody></table></figure>\n\n\n\n<h2>Closing a File</h2>\n\n\n\n<p>To close a file, use the&nbsp;<strong>fclose( )</strong>&nbsp;function. The prototype of this function is −</p>\n\n\n\n<pre class=\"wp-block-code\"><code> int fclose( FILE *fp );</code></pre>\n\n\n\n<p>The&nbsp;<strong>fclose( )</strong>&nbsp;function returns zero on success, or&nbsp;<strong>EOF</strong>, special character, if there is an error in closing the file. This function actually flushes any data still pending in the buffer to the file, closes the file, and releases any memory used for the file. The EOF is a constant defined in the header file&nbsp;<strong>stdio.h</strong>.</p>\n\n\n\n<p>There are various functions provided by C standard library to read and write a file character by character or in the form of a fixed length string. Let us see a few of them in the next section.</p>\n\n\n\n<h2>Writing a File</h2>\n\n\n\n<p>Given below is the simplest function to write individual characters to a stream −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>int fputc( int c, FILE *fp );</code></pre>\n\n\n\n<p>The function&nbsp;<strong>fputc()</strong>&nbsp;writes the character value of the argument c to the output stream referenced by&nbsp;<strong>fp</strong>. It returns the written character written on success, otherwise&nbsp;<strong>EOF</strong>&nbsp;if there is an error. You can use the following functions to write a null-terminated string to a stream −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>int fputs( const char *s, FILE *fp );</code></pre>\n\n\n\n<p>The function&nbsp;<strong>fputs()</strong>&nbsp;writes the string&nbsp;<strong>s</strong>&nbsp;into the file referenced by fp. It returns a non-negative value on success, otherwise&nbsp;<strong>EOF</strong>&nbsp;is returned in case of any error. You can also use the function&nbsp;<strong>int fprintf(FILE *fp,const char *format, &#8230;)</strong>&nbsp;to write a string into a file. Try the following example −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nint main() {\n   FILE *fp;\n\n   fp = fopen(\"/tmp/test.txt\", \"w+\");\n   fprintf(fp, \"This is testing for fprintf...\\n\");\n   fputs(\"This is testing for fputs...\\n\", fp);\n   fclose(fp);\n}</code></pre>\n\n\n\n<p>When the above code is compiled and executed, it creates a new file&nbsp;<strong>test.txt</strong>&nbsp;in&nbsp;<strong>/tmp</strong>&nbsp;directory and writes two lines using two different functions. Let us read this file in the next section.</p>\n\n\n\n<h2>Reading a File</h2>\n\n\n\n<p>Given below is the simplest function to read a text file character by character −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>int fgetc( FILE * fp );\n</code></pre>\n\n\n\n<p>The&nbsp;<strong>fgetc()</strong>&nbsp;function reads a character from the input file referenced by&nbsp;<strong>fp</strong>. The return value is the character read; or in case of any error, it returns&nbsp;<strong>EOF</strong>. The following function allows you to read a string from a stream −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>char *fgets( char *buf, int n, FILE *fp );\n</code></pre>\n\n\n\n<p>The function&nbsp;<strong>fgets()</strong>&nbsp;reads up to n &#8211; 1 characters from the input stream referenced by&nbsp;<strong>fp</strong>. It copies the read string into the buffer&nbsp;<strong>buf</strong>, appending a&nbsp;<strong>null</strong>&nbsp;character to terminate the string.</p>\n\n\n\n<p>If this function encounters a newline character &#8216;\\n&#8217; or EOF before they have read the maximum number of characters, then it returns only the characters read up to that point including the new line character. You can also use&nbsp;<strong>int fscanf(FILE *fp, const char *format, &#8230;)</strong>&nbsp;to read strings from a file, but it stops reading after encountering the first space character.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#include &amp;lt;stdio.h&amp;gt;\n\nmain() {\n\n   FILE *fp;\n   char buff&#91;255];\n\n   fp = fopen(\"/tmp/test.txt\", \"r\");\n   fscanf(fp, \"%s\", buff);\n   printf(\"1 : %s\\n\", buff );\n\n   fgets(buff, 255, (FILE*)fp);\n   printf(\"2: %s\\n\", buff );\n   \n   fgets(buff, 255, (FILE*)fp);\n   printf(\"3: %s\\n\", buff );\n   fclose(fp);\n}</code></pre>\n\n\n\n<p>When the above code is compiled and executed, it reads the file created in the previous section and produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>1 : This\n2 : is testing for fprintf...\n\n3 : This is testing for fputs...\n</code></pre>\n\n\n\n<p>Let&#8217;s analyze what happened here. First, the&nbsp;<strong>fscanf()</strong>&nbsp;method reads&nbsp;<strong>This</strong>&nbsp;because after that, it encountered a space. The second call is for&nbsp;<strong>fgets()</strong>, which reads the remaining line till it encountered end of line. Finally, the last call&nbsp;<strong>fgets()</strong>&nbsp;reads the second line completely.</p>\n\n\n\n<h2>File I/O in Java</h2>\n\n\n\n<p>Java provides even richer set of functions to handle File I/O. For more on this topic, we suggest you to check our Java Tutorials.</p>\n\n\n\n<p>Here, we will see a simple Java program, which is equivalent to the C program explained above. This program will open a text file, write a few text lines into it, and close the file. Finally, the same file is opened and then read from an already created file. You can try to execute the following program to see the output −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import java.io.*;\n\npublic class DemoJava {\n   public static void main(String &#91;]args) throws IOException {\n      File file = new File(\"/tmp/java.txt\");\n      \n      // Create a File\n      file.createNewFile();\n      \n      //  Creates a FileWriter Object using file object\n      FileWriter writer = new FileWriter(file); \n      \n      // Writes the content to the file\n      writer.write(\"This is testing for Java write...\\n\");\n      writer.write(\"This is second line...\\n\");\n      \n      // Flush the memory and close the file\n      writer.flush();\n      writer.close();\n      \n      // Creates a FileReader Object\n      FileReader reader = new FileReader(file); \n      char &#91;] a = new char&#91;100];\n      \n      // Read file content in the array\n      reader.read(a);\n      System.out.println( a );\n      \n      // Close the file\n      reader.close();\n   }\n}</code></pre>\n\n\n\n<p>When the above program is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>This is testing for Java write...\nThis is second line...\n</code></pre>\n\n\n\n<h2>File I/O in Python</h2>\n\n\n\n<p>The following program shows the same functionality to open a new file, write some content into it, and finally, read the same file −</p>\n\n\n\n<pre class=\"wp-block-code\"><code># Create a new file\nfo = open(\"/tmp/python.txt\", \"w\")\n\n# Writes the content to the file\nfo.write( \"This is testing for Python write...\\n\");\nfo.write( \"This is second line...\\n\");\n\n# Close the file\nfo.close()\n\n# Open existing file\nfo = open(\"/tmp/python.txt\", \"r\")\n\n# Read file content in a variable\nstr = fo.read(100);\nprint str\n\n# Close opened file\nfo.close()</code></pre>\n\n\n\n<p>When the above code is executed, it produces the following result −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>This is testing for Python write...\nThis is second line...\n</code></pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Computer Files A computer file is used to store data in digital format like plain text, image data, or any other content. Computer files can be organized inside different directories. Files are used to keep digital data, whereas directories are used to keep files. Computer files can be considered as the digital counterpart of paper [&hellip;]</p>\n",
            "protected": false
        },
        "author": 2,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            10
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/553"
                }
            ],
            "collection": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
                }
            ],
            "about": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=553"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/553/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 554,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/553/revisions/554"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=553"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=553"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=553"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https://api.w.org/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 555,
        "date": "2020-10-24T11:39:30",
        "date_gmt": "2020-10-24T11:39:30",
        "guid": {
            "rendered": "http://computerprogramming.foobrdigital.com/?p=555"
        },
        "modified": "2020-10-24T11:39:30",
        "modified_gmt": "2020-10-24T11:39:30",
        "slug": "computer-programming-summary",
        "status": "publish",
        "type": "post",
        "link": "https://computerprogramming.foobrdigital.com/computer-programming-summary/",
        "title": {
            "rendered": "Summary"
        },
        "content": {
            "rendered": "\n<p>We appreciate your patience for going through this tutorial. We have tried to keep it concise but as this subject contains several topics, we have shown a few examples in detail.</p>\n\n\n\n<p>If you have not understood any of the concepts, then we recommend to go through the tutorial once again and once you are comfortable with the concepts explained in this tutorial, you can proceed further.</p>\n\n\n\n<p>There are many other subjects related to computer programming which we did not cover intentionally to avoid any confusion, but we are sure those concepts will not be difficult for you to understand as long as you make yourself comfortable with the concepts explained in this tutorial.</p>\n\n\n\n<p>At tutorialspoint, we have put lots of effort to prepare comprehensive tutorials on C, Java, and Python programming languages and we strongly recommend you to start either of them, after having completed this tutorial.</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><td><a href=\"https://www.tutorialspoint.com/cprogramming/index.htm\"></a></td><td><a href=\"https://www.tutorialspoint.com/java/index.htm\"></a></td><td><a href=\"https://www.tutorialspoint.com/python/index.htm\"></a></td></tr></tbody></table></figure>\n\n\n\n<p>Kindly share with us your views about this tutorial, mentioning the tutorial name in the subject line at&nbsp;<strong>webmaster@</strong>. If you have any suggestion to improve this tutorial further, then we would definitely like to hear from you.</p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>We appreciate your patience for going through this tutorial. We have tried to keep it concise but as this subject contains several topics, we have shown a few examples in detail. If you have not understood any of the concepts, then we recommend to go through the tutorial once again and once you are comfortable [&hellip;]</p>\n",
            "protected": false
        },
        "author": 2,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            10
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/555"
                }
            ],
            "collection": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
                }
            ],
            "about": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=555"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/555/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 556,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/555/revisions/556"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=555"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=555"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=555"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https://api.w.org/{rel}",
                    "templated": true
                }
            ]
        }
    }
]