[
    {
        "id": 4893,
        "date": "2021-03-13T07:55:33",
        "date_gmt": "2021-03-13T07:55:33",
        "guid": {
            "rendered": "https:\/\/angular.foobrdigital.com\/?p=4893"
        },
        "modified": "2021-03-13T08:27:05",
        "modified_gmt": "2021-03-13T08:27:05",
        "slug": "overview-9",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/overview-9\/",
        "title": {
            "rendered": "Overview"
        },
        "content": {
            "rendered": "\n<p>The ngx-bootstrap is a very popular library to use bootstrap components in Angular Based projects. It contains almost all core components of Bootstrap. ngx-bootstrap components are by design modular,extensible and adaptable. Following are the key highlighting points of this bootstrap library.<\/p>\n\n\n\n<h2>Flexibility<\/h2>\n\n\n\n<ul><li>All components are modular by design. Custom templates, Styles can be applied easily.<\/li><li>All components are extensible and adaptable and works on desktop and mobile with same ease and performance.<\/li><\/ul>\n\n\n\n<h2>Support<\/h2>\n\n\n\n<ul><li>All components uses latest style guides and guidelines for code maintainability and readablity.<\/li><li>All components are fully unit tested and supports latest angular versions.<\/li><\/ul>\n\n\n\n<h2>Extensive Documentation<\/h2>\n\n\n\n<ul><li>All components are richly documented and well written.<\/li><li>All components are have multiple working demos to exihibits multiple types of functionalities.<\/li><\/ul>\n\n\n\n<h2>Open Source<\/h2>\n\n\n\n<ul><li>ngx-bootstrap is an open-source project. It is backed by MIT License.<\/li><\/ul>\n\n\n\n<p><\/p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>The ngx-bootstrap is a very popular library to use bootstrap components in Angular Based projects. It contains almost all core components of Bootstrap. ngx-bootstrap components are by design modular,extensible and adaptable. Following are the key highlighting points of this bootstrap library. Flexibility All components are modular by design. Custom templates, Styles can be applied easily. [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 4,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            281
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4893"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/4"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=4893"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4893\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 4894,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4893\/revisions\/4894"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=4893"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=4893"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=4893"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 4895,
        "date": "2021-03-13T07:59:42",
        "date_gmt": "2021-03-13T07:59:42",
        "guid": {
            "rendered": "https:\/\/angular.foobrdigital.com\/?p=4895"
        },
        "modified": "2021-03-13T08:31:53",
        "modified_gmt": "2021-03-13T08:31:53",
        "slug": "environment-setup-8",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/environment-setup-8\/",
        "title": {
            "rendered": "Environment Setup"
        },
        "content": {
            "rendered": "\n<p>In this chapter, you will learn in detail about setting up the working environment of ngx-bootstrap on your local computer. As ngx-bootstrap is primarily for angular projects, make sure you have&nbsp;<strong>Node.js<\/strong>&nbsp;and&nbsp;<strong>npm<\/strong>&nbsp;and&nbsp;<strong>angular<\/strong>&nbsp;installed on your system.<\/p>\n\n\n\n<h2>Create an angular project<\/h2>\n\n\n\n<p>First, create an angular project to test ngx-bootstrap components using the following commands.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>ng new ngxbootstrap\n<\/code><\/pre>\n\n\n\n<p>It will create an angular project named ngxbootstrap.<\/p>\n\n\n\n<h2>Add ngx-bootstrap as dependency<\/h2>\n\n\n\n<p>You can use the following command to install ngx-bootstrap in newly created project\u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>npm install ngx-bootstrap\n<\/code><\/pre>\n\n\n\n<p>You can observe the following output once ngx-bootstrap is successfully installed \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>+ ngx-bootstrap@5.6.1\nadded 1 package from 1 contributor and audited 1454 packages in 16.743s\n<\/code><\/pre>\n\n\n\n<p>Now, to test if bootstrap works fine with Node.js, create the test component using following command \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>ng g component test\nCREATE src\/app\/test\/test.component.html (19 bytes)\nCREATE src\/app\/test\/test.component.spec.ts (614 bytes)\nCREATE src\/app\/test\/test.component.ts (267 bytes)\nCREATE src\/app\/test\/test.component.css (0 bytes)\nUPDATE src\/app\/app.module.ts (388 bytes)\n<\/code><\/pre>\n\n\n\n<p>Clear content of app.component.html and update it following contents.<\/p>\n\n\n\n<p><em>app.component.html<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;app-test&gt;&lt;\/app-test&gt;\n<\/code><\/pre>\n\n\n\n<p>Update content of app.module.ts to include ngx-bootstrap accordion module. We&#8217;ll add other module in subsequent chapters. Update it following contents.<\/p>\n\n\n\n<p><em>app.module.ts<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { BrowserModule } from '@angular\/platform-browser';\nimport { NgModule } from '@angular\/core';\nimport { BrowserAnimationsModule } from '@angular\/platform-browser\/animations';\nimport { AppComponent } from '.\/app.component';\nimport { TestComponent } from '.\/test\/test.component';\nimport { AccordionModule } from 'ngx-bootstrap\/accordion'\n@NgModule({\n   declarations: &#91;\n      AppComponent,\n      TestComponent\n   ],\n   imports: &#91;\n      BrowserAnimationsModule,\n      BrowserModule,\n      AccordionModule.forRoot()\n   ],\n   providers: &#91;],\n   bootstrap: &#91;AppComponent]\n})\nexport class AppModule { }<\/code><\/pre>\n\n\n\n<p>Update content of index.html to include bootstrap.css. Update it following contents.<\/p>\n\n\n\n<p><em>index.html<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n   &lt;head&gt;\n      &lt;meta charset=\"utf-8\"&gt;\n      &lt;title&gt;Ngxbootstrap&lt;\/title&gt;\n      &lt;base href=\"\/\"&gt;\n      &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n      &lt;link rel=\"icon\" type=\"image\/x-icon\" href=\"favicon.ico\"&gt;\n      &lt;link href=\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/4.0.0\/css\/bootstrap.min.css\" rel=\"stylesheet\"&gt;\n   &lt;\/head&gt;\n   &lt;body&gt;\n      &lt;app-root&gt;&lt;\/app-root&gt;\n   &lt;\/body&gt;\n&lt;\/html&gt;<\/code><\/pre>\n\n\n\n<p><\/p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>In this chapter, you will learn in detail about setting up the working environment of ngx-bootstrap on your local computer. As ngx-bootstrap is primarily for angular projects, make sure you have&nbsp;Node.js&nbsp;and&nbsp;npm&nbsp;and&nbsp;angular&nbsp;installed on your system. Create an angular project First, create an angular project to test ngx-bootstrap components using the following commands. It will create an [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 4,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            281
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4895"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/4"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=4895"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4895\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 4896,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4895\/revisions\/4896"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=4895"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=4895"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=4895"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 4897,
        "date": "2021-03-13T08:02:57",
        "date_gmt": "2021-03-13T08:02:57",
        "guid": {
            "rendered": "https:\/\/angular.foobrdigital.com\/?p=4897"
        },
        "modified": "2021-03-13T08:31:30",
        "modified_gmt": "2021-03-13T08:31:30",
        "slug": "accordion",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/accordion\/",
        "title": {
            "rendered": "Accordion"
        },
        "content": {
            "rendered": "\n<p>Accordion is a control to display collapsible panels and it is used to display information in limited space.<\/p>\n\n\n\n<h2>AccordionComponent<\/h2>\n\n\n\n<p>Displays collapsible content panels for presenting information in a limited amount of space.<\/p>\n\n\n\n<h3>selector<\/h3>\n\n\n\n<ul><li>accordion<\/li><\/ul>\n\n\n\n<h3>Inputs<\/h3>\n\n\n\n<ul><li><b>close others<\/b>&nbsp;\u2212 boolean, if true expanding one item will close all others<\/li><li>Animated&nbsp;\u2212 boolean, turn on\/off animation, default: false<\/li><\/ul>\n\n\n\n<h2>AccordionPanelComponent<\/h2>\n\n\n\n<h3>AccordionHeading<\/h3>\n\n\n\n<p>Instead of using heading attribute on the accordion-group, you can use an accordion-heading attribute on any element inside of a group that will be used as group&#8217;s header template.<\/p>\n\n\n\n<h3>selector<\/h3>\n\n\n\n<ul><li>accordion-group, accordion-panel<\/li><\/ul>\n\n\n\n<h3>Inputs<\/h3>\n\n\n\n<ul><li><strong>heading<\/strong>&nbsp;\u2212 string, Clickable text in accordion&#8217;s group header<\/li><li><strong>isDisabled<\/strong>&nbsp;\u2212 boolean, enables\/disables accordion group<\/li><li><strong>isOpen<\/strong>&nbsp;\u2212 boolean, Is accordion group open or closed. This property supports two-way binding<\/li><li><strong>panelClass<\/strong>&nbsp;\u2212 string, Provides an ability to use Bootstrap&#8217;s contextual panel classes (panel-primary, panel-success, panel-info, etc&#8230;).<\/li><\/ul>\n\n\n\n<h3>Outputs<\/h3>\n\n\n\n<ul><li><strong>isOpenChange<\/strong>&nbsp;\u2212 Emits when the opened state changes<\/li><\/ul>\n\n\n\n<h3>AccordionConfig<\/h3>\n\n\n\n<p>Configuration service, provides default values for the AccordionComponent.<\/p>\n\n\n\n<h3>Properties<\/h3>\n\n\n\n<ul><li><strong>closeOthers<\/strong>&nbsp;\u2212 boolean, Whether the other panels should be closed when a panel is opened. Default: false<\/li><li><strong>isAnimated<\/strong>&nbsp;\u2212 boolean, turn on\/off animation<\/li><\/ul>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p>As we&#8217;re going to use an accordion, We&#8217;ve updated app.module.ts to use&nbsp;AccordionModule&nbsp;as in&nbsp;the ngx-bootstrap Environment Setup&nbsp;chapter.<\/p>\n\n\n\n<p>Update test.component.html to use the accordion.<\/p>\n\n\n\n<p><em>test.component.html<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;accordion&gt;\n   &lt;accordion-group heading=\"Open By Default\" &#91;isOpen]=\"open\"&gt;\n      &lt;p&gt;Open By Default&lt;\/p&gt;\n   &lt;\/accordion-group&gt;\n   &lt;accordion-group heading=\"Disabled\" &#91;isDisabled]=\"disabled\"&gt;\n      &lt;p&gt;Disabled&lt;\/p&gt;\n   &lt;\/accordion-group&gt;\n   &lt;accordion-group heading=\"with isOpenChange\" (isOpenChange)=\"log($event)\"&gt;\n      &lt;p&gt;Open Event&lt;\/p&gt;\n   &lt;\/accordion-group&gt;\n&lt;\/accordion&gt;<\/code><\/pre>\n\n\n\n<p>Update test.component.ts for corresponding variables and methods.<\/p>\n\n\n\n<p><em>test.component.ts<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { Component, OnInit } from '@angular\/core';\n@Component({\n   selector: 'app-test',\n   templateUrl: '.\/test.component.html',\n   styleUrls: &#91;'.\/test.component.css']\n})\nexport class TestComponent implements OnInit {\n   open: boolean = true;\n   disabled: boolean = true;\n   constructor() { }\n   ngOnInit(): void {\n   }\n   log(isOpened: boolean){\n      console.log(isOpened);\n   }\n}<\/code><\/pre>\n\n\n\n<h2>Build and Serve<\/h2>\n\n\n\n<p>Run the following command to start the Angular server.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>ng serve\n<\/code><\/pre>\n\n\n\n<p>Once the server is up and running. Open http:\/\/localhost:4200 and verify the following output.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https:\/\/www.tutorialspoint.com\/ngx_bootstrap\/images\/accordion.jpg\" alt=\"accordion\"\/><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Accordion is a control to display collapsible panels and it is used to display information in limited space. AccordionComponent Displays collapsible content panels for presenting information in a limited amount of space. selector accordion Inputs close others&nbsp;\u2212 boolean, if true expanding one item will close all others Animated&nbsp;\u2212 boolean, turn on\/off animation, default: false AccordionPanelComponent [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 4,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            281
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4897"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/4"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=4897"
                }
            ],
            "version-history": [
                {
                    "count": 2,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4897\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 4921,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4897\/revisions\/4921"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=4897"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=4897"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=4897"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 4899,
        "date": "2021-03-13T08:06:17",
        "date_gmt": "2021-03-13T08:06:17",
        "guid": {
            "rendered": "https:\/\/angular.foobrdigital.com\/?p=4899"
        },
        "modified": "2021-03-13T08:31:09",
        "modified_gmt": "2021-03-13T08:31:09",
        "slug": "alerts",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/alerts\/",
        "title": {
            "rendered": "Alerts"
        },
        "content": {
            "rendered": "\n<p>Alerts provides contextual messages for typical user actions like info, error with available and flexible alert messages.<\/p>\n\n\n\n<h2>AlertComponent<\/h2>\n\n\n\n<p>Displays collapsible content panels for presenting information in a limited amount of space.<\/p>\n\n\n\n<h3>selector<\/h3>\n\n\n\n<ul><li>alert,bs-alert<\/li><\/ul>\n\n\n\n<h3>Inputs<\/h3>\n\n\n\n<ul><li><strong>dismissible<\/strong>&nbsp;\u2212 boolean, If set, displays an inline &#8220;Close&#8221; button, default: false<\/li><li><strong>dismissOnTimeout<\/strong>&nbsp;\u2212 string | number, Number in milliseconds, after which alert will be closed<\/li><li><strong>isOpen<\/strong>&nbsp;\u2212 boolean, Is alert visible, default: true<\/li><li><strong>type<\/strong>&nbsp;\u2212 string, alert type. Provides one of four bootstrap supported contextual classes: success, info, warning and danger, default: warning<\/li><\/ul>\n\n\n\n<h3>Outputs<\/h3>\n\n\n\n<ul><li><strong>onClose<\/strong>&nbsp;\u2212 This event fires immediately after close instance method is called, $event is an instance of Alert component.<\/li><li><strong>onClosed<\/strong>&nbsp;\u2212 This event fires when alert closed, $event is an instance of Alert component<\/li><\/ul>\n\n\n\n<h2>AlertConfig<\/h2>\n\n\n\n<h3>Properties<\/h3>\n\n\n\n<ul><li><strong>dismissible<\/strong>&nbsp;\u2212 boolean, is alerts are dismissible by default, default: false<\/li><li><strong>dismissOnTimeout<\/strong>&nbsp;\u2212 number, default time before alert will dismiss, default: undefined<\/li><li><strong>type<\/strong>&nbsp;\u2212 string, default alert type, default: warning<\/li><\/ul>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p>As we&#8217;re going to use alerts, We&#8217;ve to update app.module.ts used in&nbsp;the ngx-bootstrap Accordion&nbsp;chapter to use&nbsp;<strong>AlertModule<\/strong>&nbsp;and&nbsp;<strong>AlertConfig<\/strong>.<\/p>\n\n\n\n<p>Update app.module.ts to use the AlertModule and AlertConfig.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { BrowserModule } from '@angular\/platform-browser';\nimport { NgModule } from '@angular\/core';\nimport { BrowserAnimationsModule } from '@angular\/platform-browser\/animations';\nimport { AppComponent } from '.\/app.component';\nimport { TestComponent } from '.\/test\/test.component';\nimport { AccordionModule } from 'ngx-bootstrap\/accordion';\nimport { AlertModule, AlertConfig } from 'ngx-bootstrap\/alert';\n@NgModule({\n   declarations: &#91;\n      AppComponent,\n      TestComponent\n   ],\n   imports: &#91;\n      BrowserAnimationsModule,\n      BrowserModule,\n      AccordionModule,\n      AlertModule\n   ],\n   providers: &#91;AlertConfig],\n   bootstrap: &#91;AppComponent]\n})\nexport class AppModule { }<\/code><\/pre>\n\n\n\n<p>Update test.component.html to use the alerts.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;alert type=\"success\" \n   &#91;dismissible]=\"dismissible\"\n   &#91;isOpen]=\"open\"\n   (onClosed)=\"log($event)\"\n   &#91;dismissOnTimeout]=\"timeout\"&gt;\n   &lt;h4 class=\"alert-heading\"&gt;Well done!&lt;\/h4&gt;\n   &lt;p&gt;Success Message&lt;\/p&gt;\n&lt;\/alert&gt;\n&lt;alert type=\"info\"&gt;\n   &lt;strong&gt;Heads up!&lt;\/strong&gt; Info\n&lt;\/alert&gt;\n&lt;alert type=\"warning\"&gt;\n   &lt;strong&gt;Warning!&lt;\/strong&gt; Warning\n&lt;\/alert&gt;\n&lt;alert type=\"danger\"&gt;\n   &lt;strong&gt;Oh snap!&lt;\/strong&gt; Error\n&lt;\/alert&gt;<\/code><\/pre>\n\n\n\n<p>Update test.component.ts for corresponding variables and methods.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { Component, OnInit } from '@angular\/core';\n@Component({\n   selector: 'app-test',\n   templateUrl: '.\/test.component.html',\n   styleUrls: &#91;'.\/test.component.css']\n})\nexport class TestComponent implements OnInit {\n   open: boolean = true;\n   dismissible: boolean = true;\n   timeout: number = 10000;\n   constructor() { }\n   \n   ngOnInit(): void {\n   }\n   log(alert){\n      console.log('alert message closed');\n   }\n}<\/code><\/pre>\n\n\n\n<h2>Build and Serve<\/h2>\n\n\n\n<p>Run the following command to start the angular server.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>ng serve\n<\/code><\/pre>\n\n\n\n<p>Once the server is up and running. Open http:\/\/localhost:4200 and verify the following output.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https:\/\/www.tutorialspoint.com\/ngx_bootstrap\/images\/alerts.jpg\" alt=\"alerts\"\/><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Alerts provides contextual messages for typical user actions like info, error with available and flexible alert messages. AlertComponent Displays collapsible content panels for presenting information in a limited amount of space. selector alert,bs-alert Inputs dismissible&nbsp;\u2212 boolean, If set, displays an inline &#8220;Close&#8221; button, default: false dismissOnTimeout&nbsp;\u2212 string | number, Number in milliseconds, after which alert [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 4,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            281
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4899"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/4"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=4899"
                }
            ],
            "version-history": [
                {
                    "count": 2,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4899\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 4920,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4899\/revisions\/4920"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=4899"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=4899"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=4899"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 4901,
        "date": "2021-03-13T08:09:18",
        "date_gmt": "2021-03-13T08:09:18",
        "guid": {
            "rendered": "https:\/\/angular.foobrdigital.com\/?p=4901"
        },
        "modified": "2021-03-13T08:28:24",
        "modified_gmt": "2021-03-13T08:28:24",
        "slug": "buttons-2",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/buttons-2\/",
        "title": {
            "rendered": "Buttons"
        },
        "content": {
            "rendered": "\n<p>ngx-bootstrap buttons have two specific directives which makes a group of buttons to behave as checkbox or radio buttons or hybrid where a radio button can be unchecked.<\/p>\n\n\n\n<h2>ButtonCheckboxDirective<\/h2>\n\n\n\n<p>Add checkbox functionality to any element.<\/p>\n\n\n\n<h3>selector<\/h3>\n\n\n\n<ul><li>[btnCheckbox]<\/li><\/ul>\n\n\n\n<h3>Inputs<\/h3>\n\n\n\n<ul><li><strong>btnCheckboxFalse<\/strong>&nbsp;\u2212 boolean, Falsy value, will be set to ngModel, default: false<\/li><li><strong>btnCheckboxTrue<\/strong>&nbsp;\u2212 boolean, Truthy value, will be set to ngModel, default: true<\/li><\/ul>\n\n\n\n<h2>ButtonRadioDirective<\/h2>\n\n\n\n<p>Create radio buttons or groups of buttons. A value of a selected button is bound to a variable specified via ngModel.<\/p>\n\n\n\n<h3>selector<\/h3>\n\n\n\n<ul><li>[btnRadio]<\/li><\/ul>\n\n\n\n<h3>Inputs<\/h3>\n\n\n\n<ul><li><strong>btnRadio<\/strong>&nbsp;\u2212 string, Radio button value, will be set to ngModel<\/li><li><strong>disabled<\/strong>&nbsp;\u2212 boolean, If true &#8211; radio button is disabled<\/li><li><strong>uncheckable<\/strong>&nbsp;\u2212 boolean, If true &#8211; radio button can be unchecked<\/li><li><strong>value<\/strong>&nbsp;\u2212 string, Current value of radio component or group<\/li><\/ul>\n\n\n\n<h2>ButtonRadioGroupDirective<\/h2>\n\n\n\n<p>A group of radio buttons. A value of a selected button is bound to a variable specified via ngModel.<\/p>\n\n\n\n<h3>selector<\/h3>\n\n\n\n<ul><li>[btnRadioGroup]<\/li><\/ul>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p>As we&#8217;re going to use buttons, We&#8217;ve to update app.module.ts used in&nbsp;the ngx-bootstrap Alerts&nbsp;chapter to use&nbsp;<strong>ButtonsModule<\/strong>. We&#8217;re also adding support for input controls using FormModule.<\/p>\n\n\n\n<p>Update app.module.ts to use the AlertModule and AlertConfig.<\/p>\n\n\n\n<p><em>app.module.ts<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { BrowserModule } from '@angular\/platform-browser';\nimport { NgModule } from '@angular\/core';\nimport { BrowserAnimationsModule } from '@angular\/platform-browser\/animations';\nimport { AppComponent } from '.\/app.component';\nimport { TestComponent } from '.\/test\/test.component';\nimport { AccordionModule } from 'ngx-bootstrap\/accordion';\nimport { AlertModule,AlertConfig } from 'ngx-bootstrap\/alert';\nimport { ButtonsModule } from 'ngx-bootstrap\/buttons';\nimport { FormsModule } from '@angular\/forms';\n@NgModule({\n   declarations: &#91;\n      AppComponent,\n      TestComponent\n   ],\n   imports: &#91;\n      BrowserAnimationsModule,\n      BrowserModule,\n      AccordionModule,\n      AlertModule,\n      ButtonsModule,\n      FormsModule\n   ],\n   providers: &#91;AlertConfig],\n   bootstrap: &#91;AppComponent]\n})\nexport class AppModule { }<\/code><\/pre>\n\n\n\n<p>Update test.component.html to use the buttons.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;button type=\"button\" class=\"btn btn-primary\" (click)=\"clicked()\"&gt;\n   Single Button\n&lt;\/button&gt;\n&lt;pre class=\"card card-block card-header\"&gt;\n   {{clickCounter}}\n&lt;\/pre&gt;\n&lt;p&gt;Button as Checkbox&lt;\/p&gt;\n&lt;div class=\"btn-group\"&gt;\n   &lt;label class=\"btn btn-primary\" &#91;(ngModel)]=\"checkModel.left\"\n      btnCheckbox tabindex=\"0\" role=\"button\"&gt;Left&lt;\/label&gt;\n   &lt;label class=\"btn btn-primary\" &#91;(ngModel)]=\"checkModel.right\"\n      btnCheckbox tabindex=\"0\" role=\"button\"&gt;Right&lt;\/label&gt;\n&lt;\/div&gt;\n&lt;pre class=\"card card-block card-header\"&gt;\n   {{checkModel | json}}\n&lt;\/pre&gt;\n&lt;p&gt;Button as RadionButton&lt;\/p&gt;\n&lt;div class=\"form-inline\"&gt;\n   &lt;div class=\"btn-group\" btnRadioGroup &#91;(ngModel)]=\"radioModel\"&gt;\n      &lt;label class=\"btn btn-success\" btnRadio=\"Left\"&gt;Left&lt;\/label&gt;\n      &lt;label class=\"btn btn-success\" btnRadio=\"Right\"&gt;Right&lt;\/label&gt;\n   &lt;\/div&gt;\n&lt;\/div&gt;\n&lt;pre class=\"card card-block card-header\"&gt;\n   {{radioModel}}\n&lt;\/pre&gt;<\/code><\/pre>\n\n\n\n<p>Update test.component.ts for corresponding variables and methods.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { Component, OnInit } from '@angular\/core';\n@Component({\n   selector: 'app-test',\n   templateUrl: '.\/test.component.html',\n   styleUrls: &#91;'.\/test.component.css']\n})\nexport class TestComponent implements OnInit {\n   checkModel = { left: false, right: false };\n   radioModel = 'Left';\n   clickCounter = 0;\n   constructor() { }\n\n   ngOnInit(): void {\n   }\n   clicked(): void {\n      this.clickCounter++;\n   }\n}<\/code><\/pre>\n\n\n\n<h2>Build and Serve<\/h2>\n\n\n\n<p>Run the following command to start the angular server.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>ng serve\n<\/code><\/pre>\n\n\n\n<p>Once the server is up and running. Open http:\/\/localhost:4200 and verify the following output.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https:\/\/www.tutorialspoint.com\/ngx_bootstrap\/images\/buttons.jpg\" alt=\"Buttons\"\/><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>ngx-bootstrap buttons have two specific directives which makes a group of buttons to behave as checkbox or radio buttons or hybrid where a radio button can be unchecked. ButtonCheckboxDirective Add checkbox functionality to any element. selector [btnCheckbox] Inputs btnCheckboxFalse&nbsp;\u2212 boolean, Falsy value, will be set to ngModel, default: false btnCheckboxTrue&nbsp;\u2212 boolean, Truthy value, will be [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 4,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            281
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4901"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/4"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=4901"
                }
            ],
            "version-history": [
                {
                    "count": 2,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4901\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 4915,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4901\/revisions\/4915"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=4901"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=4901"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=4901"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 4903,
        "date": "2021-03-13T08:12:44",
        "date_gmt": "2021-03-13T08:12:44",
        "guid": {
            "rendered": "https:\/\/angular.foobrdigital.com\/?p=4903"
        },
        "modified": "2021-03-13T08:36:35",
        "modified_gmt": "2021-03-13T08:36:35",
        "slug": "carousel",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/carousel\/",
        "title": {
            "rendered": "Carousel"
        },
        "content": {
            "rendered": "\n<p>ngx-bootstrap Carousel is used to create slide show of images or text<\/p>\n\n\n\n<h2>CarouselComponent<\/h2>\n\n\n\n<p>Base element to create carousel.<\/p>\n\n\n\n<h3>selector<\/h3>\n\n\n\n<ul><li>carousel<\/li><\/ul>\n\n\n\n<h3>Inputs<\/h3>\n\n\n\n<ul><li><strong>activeSlide<\/strong>&nbsp;\u2212 number, Index of currently displayed slide(started for 0)<\/li><li><strong>indicatorsByChunk<\/strong>&nbsp;\u2212 boolean, default: false<\/li><li><strong>interval<\/strong>&nbsp;\u2212 number, Delay of item cycling in milliseconds. If false, carousel won&#8217;t cycle automatically.<\/li><li><strong>isAnimated<\/strong>&nbsp;\u2212 boolean, Turn on\/off animation. Animation doesn&#8217;t work for multilist carousel, default: false<\/li><li><strong>itemsPerSlide<\/strong>&nbsp;\u2212 number, default: 1<\/li><li><strong>noPause<\/strong>&nbsp;\u2212 boolean<\/li><li><strong>noWrap<\/strong>&nbsp;\u2212 boolean<\/li><li><strong>pauseOnFocus<\/strong>&nbsp;\u2212 boolean<\/li><li><strong>showIndicators<\/strong>&nbsp;\u2212 boolean<\/li><li><strong>singleSlideOffset<\/strong>&nbsp;\u2212 boolean<\/li><li><strong>startFromIndex<\/strong>&nbsp;\u2212 number, default: 0<\/li><\/ul>\n\n\n\n<h3>Outputs<\/h3>\n\n\n\n<ul><li><strong>activeSlideChange<\/strong>&nbsp;\u2212 Will be emitted when active slide has been changed. Part of two-way-bindable [(activeSlide)] property<\/li><li><strong>slideRangeChange<\/strong>&nbsp;\u2212 Will be emitted when active slides has been changed in multilist mode<\/li><\/ul>\n\n\n\n<h2>SlideComponent<\/h2>\n\n\n\n<h3>selector<\/h3>\n\n\n\n<ul><li>slide<\/li><\/ul>\n\n\n\n<h3>Inputs<\/h3>\n\n\n\n<ul><li><strong>active<\/strong>&nbsp;\u2212 boolean, Is current slide active<\/li><\/ul>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p>As we&#8217;re going to use carousel, We&#8217;ve to update app.module.ts used in&nbsp;ngx-bootstrap Buttons&nbsp;chapter to use&nbsp;<strong>CarouselModule<\/strong>.<\/p>\n\n\n\n<p>Update app.module.ts to use the CarouselModule.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { BrowserModule } from '@angular\/platform-browser';\nimport { NgModule } from '@angular\/core';\nimport { BrowserAnimationsModule } from '@angular\/platform-browser\/animations';\nimport { AppComponent } from '.\/app.component';\nimport { TestComponent } from '.\/test\/test.component';\nimport { AccordionModule } from 'ngx-bootstrap\/accordion';\nimport { AlertModule,AlertConfig } from 'ngx-bootstrap\/alert';\nimport { ButtonsModule } from 'ngx-bootstrap\/buttons';\nimport { FormsModule } from '@angular\/forms';\nimport { CarouselModule } from 'ngx-bootstrap\/carousel';\n\n@NgModule({\n   declarations: &#91;\n      AppComponent,\n      TestComponent\n   ],\n   imports: &#91;\n      BrowserAnimationsModule,\n      BrowserModule,\n      AccordionModule,\n      AlertModule,\n      ButtonsModule,\n      FormsModule,\n      CarouselModule\n   ],\n   providers: &#91;AlertConfig],\n   bootstrap: &#91;AppComponent]\n})\nexport class AppModule { }<\/code><\/pre>\n\n\n\n<p>Update test.component.html to use the Carousel.<\/p>\n\n\n\n<p><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;div style=\"width: 500px; height: 500px;\"&gt;\n   &lt;carousel &#91;noWrap]=\"noWrapSlides\" &#91;showIndicators]=\"showIndicator\"&gt;\n      &lt;slide *ngFor=\"let slide of slides; let index=index\"&gt;\n         &lt;img &#91;src]=\"slide.image\" alt=\"image slide\" style=\"display: block; width: 100%;\"&gt;\n         &lt;div class=\"carousel-caption\"&gt;\n\t\t\t&lt;h4&gt;Slide {{index}}&lt;\/h4&gt;\n            &lt;p&gt;{{slide.text}}&lt;\/p&gt;\n         &lt;\/div&gt;\n      &lt;\/slide&gt;\n   &lt;\/carousel&gt;\n   &lt;br\/&gt;\n   &lt;div&gt;\n      &lt;div class=\"checkbox\"&gt;\n         &lt;label&gt;&lt;input type=\"checkbox\" &#91;(ngModel)]=\"noWrapSlides\"&gt;Disable Slide Looping&lt;\/label&gt;\n         &lt;label&gt;&lt;input type=\"checkbox\" &#91;(ngModel)]=\"showIndicator\"&gt;Enable Indicator&lt;\/label&gt;\n      &lt;\/div&gt;\n   &lt;\/div&gt;\n&lt;\/div&gt;<\/code><\/pre>\n\n\n\n<p>Update test.component.ts for corresponding variables and methods<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { Component, OnInit } from '@angular\/core';\nimport { CarouselConfig } from 'ngx-bootstrap\/carousel';\n\n@Component({\n   selector: 'app-test',\n   templateUrl: '.\/test.component.html',\n   providers: &#91;\n      { provide: CarouselConfig, useValue: { interval: 1500, noPause: false, showIndicators: true } }\n   ],\n   styleUrls: &#91;'.\/test.component.css']\n})\nexport class TestComponent implements OnInit {\n   slides = &#91;\n      {image: 'assets\/images\/nature\/1.jpg', text: 'First'},\n      {image: 'assets\/images\/nature\/2.jpg',text: 'Second'},\n      {image: 'assets\/images\/nature\/3.jpg',text: 'Third'}\n   ];\n   noWrapSlides = false;\n   showIndicator = true;\n   constructor() { }\n\n   ngOnInit(): void {\n   }\n}<\/code><\/pre>\n\n\n\n<h2>Build and Serve<\/h2>\n\n\n\n<p>Run the following command to start the angular server.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>ng serve\n<\/code><\/pre>\n\n\n\n<p>Once server is up and running. Open http:\/\/localhost:4200 and verify the following output.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https:\/\/www.tutorialspoint.com\/ngx_bootstrap\/images\/carousel.jpg\" alt=\"Carousel\"\/><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>ngx-bootstrap Carousel is used to create slide show of images or text CarouselComponent Base element to create carousel. selector carousel Inputs activeSlide&nbsp;\u2212 number, Index of currently displayed slide(started for 0) indicatorsByChunk&nbsp;\u2212 boolean, default: false interval&nbsp;\u2212 number, Delay of item cycling in milliseconds. If false, carousel won&#8217;t cycle automatically. isAnimated&nbsp;\u2212 boolean, Turn on\/off animation. Animation doesn&#8217;t [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 4,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            281
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4903"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/4"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=4903"
                }
            ],
            "version-history": [
                {
                    "count": 2,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4903\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 4924,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4903\/revisions\/4924"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=4903"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=4903"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=4903"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 4905,
        "date": "2021-03-13T08:15:04",
        "date_gmt": "2021-03-13T08:15:04",
        "guid": {
            "rendered": "https:\/\/angular.foobrdigital.com\/?p=4905"
        },
        "modified": "2021-03-13T08:30:14",
        "modified_gmt": "2021-03-13T08:30:14",
        "slug": "collapse",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/collapse\/",
        "title": {
            "rendered": "Collapse"
        },
        "content": {
            "rendered": "\n<p>ngx-bootstrap Collapse directive helps to show\/hide a container content.<\/p>\n\n\n\n<h2>CollapseDirective<\/h2>\n\n\n\n<h3>selector<\/h3>\n\n\n\n<ul><li>[collapse]<\/li><\/ul>\n\n\n\n<h3>Inputs<\/h3>\n\n\n\n<ul><li><strong>collapse<\/strong>&nbsp;\u2212 boolean, A flag indicating visibility of content (shown or hidden)<\/li><li><strong>display<\/strong>&nbsp;\u2212 string<\/li><li><strong>isAnimated<\/strong>&nbsp;\u2212 boolean, turn on\/off animation. default: false<\/li><\/ul>\n\n\n\n<h3>Outputs<\/h3>\n\n\n\n<ul><li><strong>collapsed<\/strong>&nbsp;\u2212 This event fires as soon as content collapses<\/li><li><strong>collapses<\/strong>&nbsp;\u2212 This event fires when collapsing is started<\/li><li><strong>expanded<\/strong>&nbsp;\u2212 This event fires as soon as content becomes visible<\/li><li><strong>expands<\/strong>&nbsp;\u2212 This event fires when expansion is started<\/li><\/ul>\n\n\n\n<h3>Methods<\/h3>\n\n\n\n<ul><li><strong>toggle()<\/strong>&nbsp;\u2212 allows to manually toggle content visibility<\/li><li><strong>hide<\/strong>&nbsp;\u2212 allows to manually hide content<\/li><li><strong>show<\/strong>&nbsp;\u2212 allows to manually show collapsed content<\/li><\/ul>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p>As we&#8217;re going to use collapse, We&#8217;ve to update app.module.ts used in&nbsp;the ngx-bootstrap Carousel&nbsp;chapter to use&nbsp;<strong>CollapseModule<\/strong>.<\/p>\n\n\n\n<p>Update app.module.ts to use the CollapseModule.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { BrowserModule } from '@angular\/platform-browser';\nimport { NgModule } from '@angular\/core';\nimport { BrowserAnimationsModule } from '@angular\/platform-browser\/animations';\nimport { AppComponent } from '.\/app.component';\nimport { TestComponent } from '.\/test\/test.component';\nimport { AccordionModule } from 'ngx-bootstrap\/accordion';\nimport { AlertModule,AlertConfig } from 'ngx-bootstrap\/alert';\nimport { ButtonsModule } from 'ngx-bootstrap\/buttons';\nimport { FormsModule } from '@angular\/forms';\nimport { CarouselModule } from 'ngx-bootstrap\/carousel';\nimport { CollapseModule } from 'ngx-bootstrap\/collapse';\n\n@NgModule({\n   declarations: &#91;\n      AppComponent,\n      TestComponent\n   ],\n   imports: &#91;\n      BrowserAnimationsModule,\n      BrowserModule,\n      AccordionModule,\n      AlertModule,\n      ButtonsModule,\n      FormsModule,\n      CarouselModule,\n      CollapseModule\n   ],\n   providers: &#91;AlertConfig],\n   bootstrap: &#91;AppComponent]\n})\nexport class AppModule { }<\/code><\/pre>\n\n\n\n<p>Update test.component.html to use the Collapse.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;div&gt;\n   &lt;div class=\"checkbox\"&gt;\n      &lt;label&gt;&lt;input type=\"checkbox\" &#91;(ngModel)]=\"isCollapsed\"&gt;Collapse&lt;\/label&gt;\n   &lt;\/div&gt;\n&lt;\/div&gt;\n&lt;div &#91;collapse]=\"isCollapsed\" &#91;isAnimated]=\"true\"&gt;\n   &lt;div class=\"well well-lg card card-block card-header\"&gt;Welcome to Tutorialspoint.&lt;\/div&gt;\n&lt;\/div&gt;<\/code><\/pre>\n\n\n\n<p>Update test.component.ts for corresponding variables and methods.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { Component, OnInit } from '@angular\/core';\n\n@Component({\n   selector: 'app-test',\n   templateUrl: '.\/test.component.html',\n   styleUrls: &#91;'.\/test.component.css']\n})\nexport class TestComponent implements OnInit {\n   isCollapsed: boolean = false;\n   constructor() { }\n\n   ngOnInit(): void {\n   }\n}<\/code><\/pre>\n\n\n\n<h2>Build and Serve<\/h2>\n\n\n\n<p>Run the following command to start the angular server.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>ng serve\n<\/code><\/pre>\n\n\n\n<p>Once server is up and running. Open http:\/\/localhost:4200 and verify the following output.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https:\/\/www.tutorialspoint.com\/ngx_bootstrap\/images\/collapse.jpg\" alt=\"Collapse Open\"\/><\/figure>\n\n\n\n<p>Check the collapse check box and then content will be collapsed.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https:\/\/www.tutorialspoint.com\/ngx_bootstrap\/images\/collapse1.jpg\" alt=\"Collapse Closed\"\/><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>ngx-bootstrap Collapse directive helps to show\/hide a container content. CollapseDirective selector [collapse] Inputs collapse&nbsp;\u2212 boolean, A flag indicating visibility of content (shown or hidden) display&nbsp;\u2212 string isAnimated&nbsp;\u2212 boolean, turn on\/off animation. default: false Outputs collapsed&nbsp;\u2212 This event fires as soon as content collapses collapses&nbsp;\u2212 This event fires when collapsing is started expanded&nbsp;\u2212 This event fires [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 4,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            281
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4905"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/4"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=4905"
                }
            ],
            "version-history": [
                {
                    "count": 2,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4905\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 4919,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4905\/revisions\/4919"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=4905"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=4905"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=4905"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 4907,
        "date": "2021-03-13T08:19:42",
        "date_gmt": "2021-03-13T08:19:42",
        "guid": {
            "rendered": "https:\/\/angular.foobrdigital.com\/?p=4907"
        },
        "modified": "2021-03-13T08:29:52",
        "modified_gmt": "2021-03-13T08:29:52",
        "slug": "datepicker",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/datepicker\/",
        "title": {
            "rendered": "DatePicker"
        },
        "content": {
            "rendered": "\n<p>ngx-bootstrap DatePicker component is highly configurable and customizable as per our need. It provides various options to select date or date range.<\/p>\n\n\n\n<h2>BsDatepickerDirective<\/h2>\n\n\n\n<h3>selector<\/h3>\n\n\n\n<ul><li>[bsDatepicker]<\/li><\/ul>\n\n\n\n<h3>Inputs<\/h3>\n\n\n\n<ul><li><strong>bsConfig<\/strong>&nbsp;\u2212 Partial&lt;BsDatepickerConfig&gt;, Config object for date picker<\/li><li><strong>bsValue<\/strong>&nbsp;\u2212 Date, Initial value of date picker<\/li><li>container&nbsp;\u2212 string, A selector specifying the element the date picker should be appended to. default: body<\/li><li><strong>dateCustomClasses<\/strong>&nbsp;\u2212 DatepickerDateCustomClasses[], Date custom classes<\/li><li><strong>datesDisabled<\/strong>&nbsp;\u2212 Date[], Disable specific dates<\/li><li><strong>datesEnabled<\/strong>&nbsp;\u2212 Date[], Enable specific dates<\/li><li><strong>dateTooltipTexts<\/strong>&nbsp;\u2212 DatepickerDateTooltipText[], Date tooltip text<\/li><li><strong>daysDisabled<\/strong>&nbsp;\u2212 number[], Disable Certain days in the week<\/li><li><strong>isDisabled<\/strong>&nbsp;\u2212 boolean, Indicates whether date picker&#8217;s content is enabled or not<\/li><li>isOpen&nbsp;\u2212 boolean, Returns whether or not the date picker is currently being shown<\/li><li>max date&nbsp;\u2212 boolean, Maximum date which is available for selection<\/li><li>minDate&nbsp;\u2212 boolean, Minimum date which is available for selection<\/li><li>main mode&nbsp;\u2212 BsDatepickerViewMode, Minimum view mode: day, month, or year<\/li><li>outside clock&nbsp;\u2212 boolean, Close date picker on outside click, default: true<\/li><li>outsiders&nbsp;\u2212 boolean, Close date picker on escape click, default: true<\/li><li>placement&nbsp;\u2212 &#8220;top&#8221; | &#8220;bottom&#8221; | &#8220;left&#8221; | &#8220;right&#8221;, Placement of a date picker. Accepts: &#8220;top&#8221;, &#8220;bottom&#8221;, &#8220;left&#8221;, &#8220;right&#8221;, default: bottom<\/li><li>triggers&nbsp;\u2212 string, Specifies events that should trigger. Supports a space-separated list of event names., default: click<\/li><\/ul>\n\n\n\n<h3>Outputs<\/h3>\n\n\n\n<ul><li><strong>bsValueChange<\/strong>&nbsp;\u2212 Emits when datepicker value has been changed<\/li><li><strong>onHidden<\/strong>&nbsp;\u2212 Emits an event when the datepicker is hidden<\/li><li><strong>onShown<\/strong>&nbsp;\u2212 Emits an event when the datepicker is shown<\/li><\/ul>\n\n\n\n<h3>Methods<\/h3>\n\n\n\n<ul><li><strong>show()<\/strong>&nbsp;\u2212 Opens an element&#8217;s datepicker. This is considered a &#8216;manual&#8217; triggering of the datepicker.<\/li><li><strong>hide()<\/strong>&nbsp;\u2212 Closes an element&#8217;s datepicker. This is considered a &#8216;manual&#8217; triggering of the datepicker.<\/li><li><strong>toggle()<\/strong>&nbsp;\u2212 Toggles an element&#8217;s datepicker. This is considered a &#8216;manual&#8217; triggering of the datepicker.<\/li><li><strong>setConfig()<\/strong>&nbsp;\u2212 Set config for datepicker<\/li><\/ul>\n\n\n\n<h2>BsDaterangepickerDirective<\/h2>\n\n\n\n<h3>selector<\/h3>\n\n\n\n<ul><li>[bsDaterangepicker]<\/li><\/ul>\n\n\n\n<h3>Inputs<\/h3>\n\n\n\n<ul><li><strong>bsConfig<\/strong>&nbsp;\u2212 Partial&lt;BsDaterangepickerConfig&gt;, Config object for daterangepicker<\/li><li><strong>bsValue<\/strong>&nbsp;\u2212 Date, Initial value of daterangepicker<\/li><li><strong>container<\/strong>&nbsp;\u2212 string, A selector specifying the element the daterangepicker should be appended to. default: body<\/li><li><strong>dateCustomClasses<\/strong>&nbsp;\u2212 DatepickerDateCustomClasses[], Date custom classes<\/li><li><strong>datesDisabled<\/strong>&nbsp;\u2212 Date[], Disable specific dates<\/li><li><strong>datesEnabled<\/strong>&nbsp;\u2212 Date[], Enable specific dates<\/li><li><strong>dateTooltipTexts<\/strong>&nbsp;\u2212 DatepickerDateTooltipText[], Date tooltip text<\/li><li><strong>daysDisabled<\/strong>&nbsp;\u2212 number[], Disable Certain days in the week<\/li><li><strong>isDisabled<\/strong>&nbsp;\u2212 boolean, Indicates whether daterangepicker&#8217;s content is enabled or not<\/li><li><strong>isOpen<\/strong>&nbsp;\u2212 boolean, Returns whether or not the daterangepicker is currently being shown<\/li><li><strong>maxDate<\/strong>&nbsp;\u2212 boolean, Maximum date which is available for selection<\/li><li><strong>minDate<\/strong>&nbsp;\u2212 boolean, Minimum date which is available for selection<\/li><li><strong>minMode<\/strong>&nbsp;\u2212 BsDatepickerViewMode, Minimum view mode : day, month, or year<\/li><li><strong>outsideClick<\/strong>&nbsp;\u2212 boolean, Close daterangepicker on outside click, default: true<\/li><li><strong>outsideEsc<\/strong>&nbsp;\u2212 boolean, Close daterangepicker on escape click, default: true<\/li><li><strong>placement<\/strong>&nbsp;\u2212 &#8220;top&#8221; | &#8220;bottom&#8221; | &#8220;left&#8221; | &#8220;right&#8221;, Placement of a daterangepicker. Accepts: &#8220;top&#8221;, &#8220;bottom&#8221;, &#8220;left&#8221;, &#8220;right&#8221;, default: bottom<\/li><li><strong>triggers<\/strong>&nbsp;\u2212 string, Specifies events that should trigger. Supports a space separated list of event names., default: click<\/li><\/ul>\n\n\n\n<h3>Outputs<\/h3>\n\n\n\n<ul><li><strong>bsValueChange<\/strong>&nbsp;\u2212 Emits when daterangepicker value has been changed<\/li><li><strong>onHidden<\/strong>&nbsp;\u2212 Emits an event when the daterangepicker is hidden<\/li><li><strong>onShown<\/strong>&nbsp;\u2212 Emits an event when the daterangepicker is shown<\/li><\/ul>\n\n\n\n<h3>Methods<\/h3>\n\n\n\n<ul><li><strong>show()<\/strong>&nbsp;\u2212 Opens an element&#8217;s datepicker. This is considered a &#8216;manual&#8217; triggering of the datepicker.<\/li><li><strong>hide()<\/strong>&nbsp;\u2212 Closes an element&#8217;s datepicker. This is considered a &#8216;manual&#8217; triggering of the datepicker.<\/li><li><strong>toggle()<\/strong>&nbsp;\u2212 Toggles an element&#8217;s datepicker. This is considered a &#8216;manual&#8217; triggering of the datepicker.<\/li><li><strong>setConfig()<\/strong>&nbsp;\u2212 Set config for datepicker<\/li><\/ul>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p>As we&#8217;re going to use DatePicker and DateRangePicker, We&#8217;ve to update app.module.ts used in&nbsp;the ngx-bootstrap Collapse&nbsp;chapter to use&nbsp;<strong>BsDatepickerModule<\/strong>&nbsp;and&nbsp;<strong>BsDatepickerConfig<\/strong>.<\/p>\n\n\n\n<p>Update app.module.ts to use the BsDatepickerModule and BsDatepickerConfig.<\/p>\n\n\n\n<p><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { BrowserModule } from '@angular\/platform-browser';\nimport { NgModule } from '@angular\/core';\nimport { BrowserAnimationsModule } from '@angular\/platform-browser\/animations';\nimport { AppComponent } from '.\/app.component';\nimport { TestComponent } from '.\/test\/test.component';\nimport { AccordionModule } from 'ngx-bootstrap\/accordion';\nimport { AlertModule,AlertConfig } from 'ngx-bootstrap\/alert';\nimport { ButtonsModule } from 'ngx-bootstrap\/buttons';\nimport { FormsModule } from '@angular\/forms';\nimport { CarouselModule } from 'ngx-bootstrap\/carousel';\nimport { CollapseModule } from 'ngx-bootstrap\/collapse';\nimport { BsDatepickerModule, BsDatepickerConfig } from 'ngx-bootstrap\/datepicker';\n\n@NgModule({\n   declarations: &#91;\n      AppComponent,\n      TestComponent\n   ],\n   imports: &#91;\n      BrowserAnimationsModule,\n      BrowserModule,\n      AccordionModule,\n      AlertModule,\n      ButtonsModule,\n      FormsModule,\n      CarouselModule,\n      CollapseModule,\n      BsDatepickerModule.forRoot()\n   ],\n   providers: &#91;AlertConfig, BsDatepickerConfig],\n   bootstrap: &#91;AppComponent]\n})\nexport class AppModule { }<\/code><\/pre>\n\n\n\n<p>Update index.html to use the bs-datepicker.css.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n   &lt;head&gt;\n      &lt;meta charset=\"utf-8\"&gt;\n      &lt;title&gt;Ngxbootstrap&lt;\/title&gt;\n      &lt;base href=\"\/\"&gt;\n      &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n      &lt;link rel=\"icon\" type=\"image\/x-icon\" href=\"favicon.ico\"&gt;\n      &lt;link href=\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/4.0.0\/css\/bootstrap.min.css\" rel=\"stylesheet\"&gt;\n      &lt;link href=\"https:\/\/unpkg.com\/ngx-bootstrap\/datepicker\/bs-datepicker.css\" rel=\"stylesheet\" &gt;\n   &lt;\/head&gt;\n   &lt;body&gt;\n      &lt;app-root&gt;&lt;\/app-root&gt;\n   &lt;\/body&gt;\n&lt;\/html&gt;<\/code><\/pre>\n\n\n\n<p>Update test.component.html to use the date picker.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;div class=\"row\"&gt;\n   &lt;div class=\"col-xs-12 col-12 col-md-4 form-group\"&gt;\n      &lt;input type=\"text\"\n         placeholder=\"Datepicker\"\n         class=\"form-control\"\n         bsDatepicker\n         &#91;bsValue]=\"bsValue\"\n         &#91;minDate]=\"minDate\"\n         &#91;maxDate]=\"maxDate\"\n         &#91;daysDisabled]=\"&#91;6,0]\"\n         &#91;datesDisabled]=\"disabledDates\"\n         &#91;bsConfig]=\"{ isAnimated: true, dateInputFormat: 'YYYY-MM-DD' }\"&gt;\n   &lt;\/div&gt;\n   &lt;div class=\"col-xs-12 col-12 col-md-4 form-group\"&gt;\n      &lt;input type=\"text\"\n         placeholder=\"Daterangepicker\"\n         class=\"form-control\"\n         bsDaterangepicker\n         &#91;(ngModel)]=\"bsRangeValue\"\n         &#91;datesEnabled]=\"enabledDates\"\n         &#91;bsConfig]=\"{ isAnimated: true }\"&gt;\n   &lt;\/div&gt;\n&lt;\/div&gt;<\/code><\/pre>\n\n\n\n<p>Update test.component.ts for corresponding variables and methods.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { Component, OnInit } from '@angular\/core';\n\n@Component({\n   selector: 'app-test',\n   templateUrl: '.\/test.component.html',\n   styleUrls: &#91;'.\/test.component.css']\n})\nexport class TestComponent implements OnInit {\n\n   bsValue = new Date();\n   bsRangeValue: Date&#91;];\n   maxDate = new Date();\n   minDate = new Date();\n\n   constructor() {\n      this.minDate.setDate(this.minDate.getDate() - 1);\n      this.maxDate.setDate(this.maxDate.getDate() + 7);\n      this.bsRangeValue = &#91;this.bsValue, this.maxDate];\n   }\n\n   ngOnInit(): void {\n   }\n}<\/code><\/pre>\n\n\n\n<h2>Build and Serve<\/h2>\n\n\n\n<p>Run the following command to start the angular server.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>ng serve\n<\/code><\/pre>\n\n\n\n<p>Once server is up and running. Open http:\/\/localhost:4200 and verify the following output.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https:\/\/www.tutorialspoint.com\/ngx_bootstrap\/images\/datepicker.jpg\" alt=\"DatePicker\"\/><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>ngx-bootstrap DatePicker component is highly configurable and customizable as per our need. It provides various options to select date or date range. BsDatepickerDirective selector [bsDatepicker] Inputs bsConfig&nbsp;\u2212 Partial&lt;BsDatepickerConfig&gt;, Config object for date picker bsValue&nbsp;\u2212 Date, Initial value of date picker container&nbsp;\u2212 string, A selector specifying the element the date picker should be appended to. default: [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 4,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            281
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4907"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/4"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=4907"
                }
            ],
            "version-history": [
                {
                    "count": 2,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4907\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 4918,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4907\/revisions\/4918"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=4907"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=4907"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=4907"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 4909,
        "date": "2021-03-13T08:22:06",
        "date_gmt": "2021-03-13T08:22:06",
        "guid": {
            "rendered": "https:\/\/angular.foobrdigital.com\/?p=4909"
        },
        "modified": "2021-03-13T08:29:25",
        "modified_gmt": "2021-03-13T08:29:25",
        "slug": "dropdowns",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/dropdowns\/",
        "title": {
            "rendered": "Dropdowns"
        },
        "content": {
            "rendered": "\n<p>ngx-bootstrap dropdown component is toggleable and provides contextual overlay to display list of links etc. With dropdown directives we can make dropdowns interactive.<\/p>\n\n\n\n<h2>BsDropdownDirective<\/h2>\n\n\n\n<h3>selector<\/h3>\n\n\n\n<ul><li>[bsDropdown],[dropdown]<\/li><\/ul>\n\n\n\n<h3>Inputs<\/h3>\n\n\n\n<ul><li><strong>autoClose<\/strong>&nbsp;\u2212 boolean, Indicates that dropdown will be closed on item or document click, and after pressing ESC<\/li><li><strong>container<\/strong>&nbsp;\u2212 string, A selector specifying the element the popover should be appended to.<\/li><li><strong>dropup<\/strong>&nbsp;\u2212 boolean, This attribute indicates that the dropdown should be opened upwards.<\/li><li><strong>insideClick<\/strong>&nbsp;\u2212 boolean, This attribute indicates that the dropdown shouldn&#8217;t close on inside click when autoClose is set to true.<\/li><li><strong>isAnimated<\/strong>&nbsp;\u2212 boolean, Indicates that dropdown will be animated<\/li><li><strong>isDisabled<\/strong>&nbsp;\u2212 boolean, Disables dropdown toggle and hides dropdown menu if opened<\/li><li><strong>isOpen<\/strong>&nbsp;\u2212 boolean, Returns whether or not the popover is currently being shown<\/li><li><strong>placement<\/strong>&nbsp;\u2212 string, Placement of a popover. Accepts: &#8220;top&#8221;, &#8220;bottom&#8221;, &#8220;left&#8221;, &#8220;right&#8221;<\/li><li><strong>triggers<\/strong>&nbsp;\u2212 string, Specifies events that should trigger. Supports a space separated list of event names.<\/li><\/ul>\n\n\n\n<h3>Outputs<\/h3>\n\n\n\n<ul><li><strong>isOpenChange<\/strong>&nbsp;\u2212 Emits an event when isOpen change<\/li><li><strong>onHidden<\/strong>&nbsp;\u2212 Emits an event when the popover is hidden<\/li><li><strong>onShown<\/strong>&nbsp;\u2212 Emits an event when the popover is shown<\/li><\/ul>\n\n\n\n<h3>Methods<\/h3>\n\n\n\n<ul><li><strong>show()<\/strong>&nbsp;\u2212 Opens an element&#8217;s popover. This is considered a &#8216;manual&#8217; triggering of the popover.<\/li><li><strong>hide()<\/strong>&nbsp;\u2212 Closes an element&#8217;s popover. This is considered a &#8216;manual&#8217; triggering of the popover.<\/li><li><strong>toggle()<\/strong>&nbsp;\u2212 Toggles an element&#8217;s popover. This is considered a &#8216;manual&#8217; triggering of the popover.<\/li><li><strong>setConfig()<\/strong>&nbsp;\u2212 Set config for popover<\/li><\/ul>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p>As we&#8217;re going to use dropdowns, We&#8217;ve to update app.module.ts used in&nbsp;the ngx-bootstrap DatePicker&nbsp;chapter to use&nbsp;<strong>BsDropdownModule<\/strong>&nbsp;and&nbsp;<strong>BsDropdownConfig<\/strong>.<\/p>\n\n\n\n<p>Update app.module.ts to use the BsDropdownModule and BsDropdownConfig.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { BrowserModule } from '@angular\/platform-browser';\nimport { NgModule } from '@angular\/core';\nimport { BrowserAnimationsModule } from '@angular\/platform-browser\/animations';\nimport { AppComponent } from '.\/app.component';\nimport { TestComponent } from '.\/test\/test.component';\nimport { AccordionModule } from 'ngx-bootstrap\/accordion';\nimport { AlertModule,AlertConfig } from 'ngx-bootstrap\/alert';\nimport { ButtonsModule } from 'ngx-bootstrap\/buttons';\nimport { FormsModule } from '@angular\/forms';\nimport { CarouselModule } from 'ngx-bootstrap\/carousel';\nimport { CollapseModule } from 'ngx-bootstrap\/collapse';\nimport { BsDatepickerModule, BsDatepickerConfig } from 'ngx-bootstrap\/datepicker';\nimport { BsDropdownModule,BsDropdownConfig } from 'ngx-bootstrap\/dropdown';\n\n@NgModule({\n   declarations: &#91;\n      AppComponent,\n      TestComponent\n   ],\n   imports: &#91;\n      BrowserAnimationsModule,\n      BrowserModule,\n      AccordionModule,\n      AlertModule,\n      ButtonsModule,\n      FormsModule,\n      CarouselModule,\n      CollapseModule,\n      BsDatepickerModule.forRoot(),\n      BsDropdownModule\n   ],\n   providers: &#91;AlertConfig, BsDatepickerConfig, BsDropdownConfig],\n   bootstrap: &#91;AppComponent]\n})\nexport class AppModule { }<\/code><\/pre>\n\n\n\n<p>Update test.component.html to use the dropdowns.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;div class=\"btn-group\" dropdown #dropdown=\"bs-dropdown\" &#91;autoClose]=\"false\"&gt;\n   &lt;button id=\"button-basic\" dropdownToggle type=\"button\" \n      class=\"btn btn-primary dropdown-toggle\"\n      aria-controls=\"dropdown-basic\"&gt;\n      Menu &lt;span class=\"caret\"&gt;&lt;\/span&gt;\n   &lt;\/button&gt;\n   &lt;ul id=\"dropdown-basic\" *dropdownMenu class=\"dropdown-menu\"\n      role=\"menu\" aria-labelledby=\"button-basic\"&gt;\n      &lt;li role=\"menuitem\"&gt;&lt;a class=\"dropdown-item\" href=\"#\"&gt;File&lt;\/a&gt;&lt;\/li&gt;\n      &lt;li role=\"menuitem\"&gt;&lt;a class=\"dropdown-item\" href=\"#\"&gt;Edit&lt;\/a&gt;&lt;\/li&gt;\n      &lt;li role=\"menuitem\"&gt;&lt;a class=\"dropdown-item\" href=\"#\"&gt;Search&lt;\/a&gt;&lt;\/li&gt;\n      &lt;li class=\"divider dropdown-divider\"&gt;&lt;\/li&gt;\n      &lt;li role=\"menuitem\"&gt;&lt;a class=\"dropdown-item\" href=\"#\"&gt;Recents&lt;\/a&gt;\n      &lt;\/li&gt;\n   &lt;\/ul&gt;\n&lt;\/div&gt;\n&lt;button type=\"button\" class=\"btn btn-primary\" \n   (click)=\"dropdown.isOpen = !dropdown.isOpen\"&gt;Show\/Hide\n&lt;\/button&gt;<\/code><\/pre>\n\n\n\n<p>Update test.component.ts for corresponding variables and methods.<\/p>\n\n\n\n<p><em>test.component.ts<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { Component, OnInit } from '@angular\/core';\n\n@Component({\n   selector: 'app-test',\n   templateUrl: '.\/test.component.html',\n   styleUrls: &#91;'.\/test.component.css']\n})\nexport class TestComponent implements OnInit {\n   constructor() {}\n\n   ngOnInit(): void {}\n}<\/code><\/pre>\n\n\n\n<h2>Build and Serve<\/h2>\n\n\n\n<p>Run the following command to start the angular server.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>ng serve\n<\/code><\/pre>\n\n\n\n<p>Once server is up and running. Open http:\/\/localhost:4200 and verify the following output.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https:\/\/www.tutorialspoint.com\/ngx_bootstrap\/images\/dropdown.jpg\" alt=\"Dropdown\"\/><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>ngx-bootstrap dropdown component is toggleable and provides contextual overlay to display list of links etc. With dropdown directives we can make dropdowns interactive. BsDropdownDirective selector [bsDropdown],[dropdown] Inputs autoClose&nbsp;\u2212 boolean, Indicates that dropdown will be closed on item or document click, and after pressing ESC container&nbsp;\u2212 string, A selector specifying the element the popover should be [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 4,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            281
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4909"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/4"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=4909"
                }
            ],
            "version-history": [
                {
                    "count": 2,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4909\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 4917,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4909\/revisions\/4917"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=4909"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=4909"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=4909"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 4912,
        "date": "2021-03-13T08:24:44",
        "date_gmt": "2021-03-13T08:24:44",
        "guid": {
            "rendered": "https:\/\/angular.foobrdigital.com\/?p=4912"
        },
        "modified": "2021-03-13T08:29:02",
        "modified_gmt": "2021-03-13T08:29:02",
        "slug": "modals",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/modals\/",
        "title": {
            "rendered": "Modals"
        },
        "content": {
            "rendered": "\n<p>ngx-bootstrap modal component is a flexible and highly configurable dialog prompt and provides multiple defaults and can be used with minimum code.<\/p>\n\n\n\n<h2>ModalDirective<\/h2>\n\n\n\n<h3>selector<\/h3>\n\n\n\n<ul><li>[bsModal]<\/li><\/ul>\n\n\n\n<h3>Inputs<\/h3>\n\n\n\n<ul><li><strong>config<\/strong>&nbsp;\u2212 ModalOptions, allows to set modal configuration via element property<\/li><\/ul>\n\n\n\n<h3>Outputs<\/h3>\n\n\n\n<ul><li><strong>onHidden<\/strong>&nbsp;\u2212 This event is fired when the modal has finished being hidden from the user (will wait for CSS transitions to complete).<\/li><li><strong>onHide<\/strong>&nbsp;\u2212 This event is fired immediately when the hide instance method has been called.<\/li><li><strong>onShow<\/strong>&nbsp;\u2212 This event fires immediately when the show instance method is called.<\/li><li><strong>onShown<\/strong>&nbsp;\u2212 This event is fired when the modal has been made visible to the user (will wait for CSS transitions to complete).<\/li><\/ul>\n\n\n\n<h3>Methods<\/h3>\n\n\n\n<ul><li><strong>show()<\/strong>&nbsp;\u2212 Allows to manually open modal.<\/li><li><strong>hide()<\/strong>&nbsp;\u2212 Allows to manually close modal.<\/li><li><strong>toggle()<\/strong>&nbsp;\u2212 Allows to manually toggle modal visibility.<\/li><li><strong>showElement()<\/strong>&nbsp;\u2212 Show dialog.<\/li><li><strong>focusOtherModal()<\/strong>&nbsp;\u2212 Events tricks.<\/li><\/ul>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p>As we&#8217;re going to use a modal, We&#8217;ve to update app.module.ts used in&nbsp;the ngx-bootstrap Dropdowns&nbsp;chapter to use&nbsp;<strong>ModalModule<\/strong>&nbsp;and&nbsp;<strong>BsModalService<\/strong>.<\/p>\n\n\n\n<p>Update app.module.ts to use the ModalModule and BsModalService.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { BrowserModule } from '@angular\/platform-browser';\nimport { NgModule } from '@angular\/core';\nimport { BrowserAnimationsModule } from '@angular\/platform-browser\/animations';\nimport { AppComponent } from '.\/app.component';\nimport { TestComponent } from '.\/test\/test.component';\nimport { AccordionModule } from 'ngx-bootstrap\/accordion';\nimport { AlertModule,AlertConfig } from 'ngx-bootstrap\/alert';\nimport { ButtonsModule } from 'ngx-bootstrap\/buttons';\nimport { FormsModule } from '@angular\/forms';\nimport { CarouselModule } from 'ngx-bootstrap\/carousel';\nimport { CollapseModule } from 'ngx-bootstrap\/collapse';\nimport { BsDatepickerModule, BsDatepickerConfig } from 'ngx-bootstrap\/datepicker';\nimport { BsDropdownModule,BsDropdownConfig } from 'ngx-bootstrap\/dropdown';\nimport { ModalModule, BsModalService } from 'ngx-bootstrap\/modal';\n\n@NgModule({\n   declarations: &#91;\n      AppComponent,\n      TestComponent\n   ],\n   imports: &#91;\n      BrowserAnimationsModule,\n      BrowserModule,\n      AccordionModule,\n      AlertModule,\n      ButtonsModule,\n      FormsModule,\n      CarouselModule,\n      CollapseModule,\n      BsDatepickerModule.forRoot(),\n      BsDropdownModule,\n      ModalModule\n   ],\n   providers: &#91;AlertConfig, BsDatepickerConfig, BsDropdownConfig,BsModalService],\n   bootstrap: &#91;AppComponent]\n})\nexport class AppModule { }<\/code><\/pre>\n\n\n\n<p>Update test.component.html to use the modal.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(template)\"&gt;Open modal&lt;\/button&gt;\n\n&lt;ng-template #template&gt;\n   &lt;div class=\"modal-header\"&gt;\n      &lt;h4 class=\"modal-title pull-left\"&gt;Modal&lt;\/h4&gt;\n      &lt;button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\"&gt;\n         &lt;span aria-hidden=\"true\"&gt;\u00d7&lt;\/span&gt;\n      &lt;\/button&gt;\n   &lt;\/div&gt;\n   &lt;div class=\"modal-body\"&gt;\n      This is a sample modal dialog box.\n   &lt;\/div&gt;\n   &lt;div class=\"modal-footer\"&gt;\n      &lt;button type=\"button\" class=\"btn btn-default\" (click)=\"modalRef.hide()\"&gt;Close&lt;\/button&gt;\n   &lt;\/div&gt;\n&lt;\/ng-template&gt;<\/code><\/pre>\n\n\n\n<p>Update test.component.ts for corresponding variables and methods.<\/p>\n\n\n\n<p><em>test.component.ts<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { Component, OnInit, TemplateRef } from '@angular\/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap\/modal';\n\n@Component({\n   selector: 'app-test',\n   templateUrl: '.\/test.component.html',\n   styleUrls: &#91;'.\/test.component.css']\n})\nexport class TestComponent implements OnInit {\n\n   modalRef: BsModalRef;\n   constructor(private modalService: BsModalService) {}\n\n   openModal(template: TemplateRef&lt;any&gt;) {\n      this.modalRef = this.modalService.show(template);\n   }\n\n   ngOnInit(): void {\n   }\n}<\/code><\/pre>\n\n\n\n<h2>Build and Serve<\/h2>\n\n\n\n<p>Run the following command to start the angular server.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>ng serve\n<\/code><\/pre>\n\n\n\n<p>Once server is up and running. Open http:\/\/localhost:4200. Click on Open modal button and verify the following output.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https:\/\/www.tutorialspoint.com\/ngx_bootstrap\/images\/modals.jpg\" alt=\"Modals\"\/><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>ngx-bootstrap modal component is a flexible and highly configurable dialog prompt and provides multiple defaults and can be used with minimum code. ModalDirective selector [bsModal] Inputs config&nbsp;\u2212 ModalOptions, allows to set modal configuration via element property Outputs onHidden&nbsp;\u2212 This event is fired when the modal has finished being hidden from the user (will wait for [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 4,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            281
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4912"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/4"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=4912"
                }
            ],
            "version-history": [
                {
                    "count": 2,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4912\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 4916,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4912\/revisions\/4916"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=4912"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=4912"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=4912"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 4922,
        "date": "2021-03-13T08:36:08",
        "date_gmt": "2021-03-13T08:36:08",
        "guid": {
            "rendered": "https:\/\/angular.foobrdigital.com\/?p=4922"
        },
        "modified": "2021-03-13T08:36:08",
        "modified_gmt": "2021-03-13T08:36:08",
        "slug": "pagination",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/pagination\/",
        "title": {
            "rendered": "Pagination"
        },
        "content": {
            "rendered": "\n<p>ngx -bootstrap pagination component provides pagination links or a pager component to your site or component.<\/p>\n\n\n\n<h2>PaginationComponent<\/h2>\n\n\n\n<h3>selector<\/h3>\n\n\n\n<ul><li>pagination<\/li><\/ul>\n\n\n\n<h3>Inputs<\/h3>\n\n\n\n<ul><li><strong>align<\/strong>&nbsp;\u2212 boolean, if true aligns each link to the sides of pager<\/li><li><strong>boundaryLinks<\/strong>&nbsp;\u2212 boolean, if false first and last buttons will be hidden<\/li><li><strong>customFirstTemplate<\/strong>&nbsp;\u2212 TemplateRef&lt;PaginationLinkContext&gt;, custom template for first link<\/li><li><strong>customLastTemplate<\/strong>&nbsp;\u2212 TemplateRef&lt;PaginationLinkContext&gt;, custom template for last link<\/li><li><strong>customNextTemplate<\/strong>&nbsp;\u2212 TemplateRef&lt;PaginationLinkContext&gt;, custom template for next link<\/li><li><strong>customPageTemplate<\/strong>&nbsp;\u2212 TemplateRef&lt;PaginationLinkContext&gt;, custom template for page link<\/li><li><strong>customPreviousTemplate<\/strong>&nbsp;\u2212 TemplateRef&lt;PaginationLinkContext&gt;, custom template for previous link<\/li><li><strong>directionLinks<\/strong>&nbsp;\u2212 boolean, if false previous and next buttons will be hidden<\/li><li><strong>disabled<\/strong>&nbsp;\u2212 boolean, if true pagination component will be disabled<\/li><li><strong>firstText<\/strong>&nbsp;\u2212 boolean, first button text<\/li><li><strong>itemsPerPage<\/strong>&nbsp;\u2212 number, maximum number of items per page. If value less than 1 will display all items on one page<\/li><li><strong>lastText<\/strong>&nbsp;\u2212 string, last button text<\/li><li><strong>maxSize<\/strong>&nbsp;\u2212 number, limit number for page links in pager<\/li><li><strong>nextText<\/strong>&nbsp;\u2212 string, next button text<\/li><li><strong>pageBtnClass<\/strong>&nbsp;\u2212 string, add class to &lt;li&gt;<\/li><li><strong>previousText<\/strong>&nbsp;\u2212 string, previous button text<\/li><li><strong>rotate<\/strong>&nbsp;\u2212 boolean, if true current page will in the middle of pages list<\/li><li><strong>totalItems<\/strong>&nbsp;\u2212 number, total number of items in all pages<\/li><\/ul>\n\n\n\n<h3>Outputs<\/h3>\n\n\n\n<ul><li><strong>numPages<\/strong>&nbsp;\u2212 fired when total pages count changes, $event:number equals to total pages count.<\/li><li><strong>pageChanged<\/strong>&nbsp;\u2212 fired when page was changed, $event:{page, itemsPerPage} equals to object with current page index and number of items per page.<\/li><\/ul>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p>As we&#8217;re going to use pagination, We&#8217;ve to update app.module.ts used in\u00a0the ngx-bootstrap Modals\u00a0chapter to use\u00a0<strong>PaginationModule<\/strong>\u00a0and\u00a0<strong>PaginationConfig<\/strong>.<\/p>\n\n\n\n<p>Update app.module.ts to use the PaginationModule and PaginationConfig.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { BrowserModule } from '@angular\/platform-browser';\nimport { NgModule } from '@angular\/core';\nimport { BrowserAnimationsModule } from '@angular\/platform-browser\/animations';\nimport { AppComponent } from '.\/app.component';\nimport { TestComponent } from '.\/test\/test.component';\nimport { AccordionModule } from 'ngx-bootstrap\/accordion';\nimport { AlertModule,AlertConfig } from 'ngx-bootstrap\/alert';\nimport { ButtonsModule } from 'ngx-bootstrap\/buttons';\nimport { FormsModule } from '@angular\/forms';\nimport { CarouselModule } from 'ngx-bootstrap\/carousel';\nimport { CollapseModule } from 'ngx-bootstrap\/collapse';\nimport { BsDatepickerModule, BsDatepickerConfig } from 'ngx-bootstrap\/datepicker';\nimport { BsDropdownModule,BsDropdownConfig } from 'ngx-bootstrap\/dropdown';\nimport { PaginationModule,PaginationConfig } from 'ngx-bootstrap\/pagination';\n\n@NgModule({\n   declarations: &#91;\n      AppComponent,\n      TestComponent\n   ],\n   imports: &#91;\n      BrowserAnimationsModule,\n      BrowserModule,\n      AccordionModule,\n      AlertModule,\n      ButtonsModule,\n      FormsModule,\n      CarouselModule,\n      CollapseModule,\n      BsDatepickerModule.forRoot(),\n      BsDropdownModule,\n      ModalModule,\n      PaginationModule\n   ],\n   providers: &#91;AlertConfig, \n      BsDatepickerConfig, \n      BsDropdownConfig,\n      BsModalService,\n      PaginationConfig],\n   bootstrap: &#91;AppComponent]\n})\nexport class AppModule { }<\/code><\/pre>\n\n\n\n<p>Update test.component.html to use the modal.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;div class=\"row\"&gt;\n   &lt;div class=\"col-xs-12 col-12\"&gt;\n      &lt;div class=\"content-wrapper\"&gt;\n         &lt;p class=\"content-item\" *ngFor=\"let content of returnedArray\"&gt;{{content}}&lt;\/p&gt;\n      &lt;\/div&gt;\n      &lt;pagination &#91;boundaryLinks]=\"showBoundaryLinks\" \n         &#91;directionLinks]=\"showDirectionLinks\" \n         &#91;totalItems]=\"contentArray.length\"\n         &#91;itemsPerPage]=\"5\"\n         (pageChanged)=\"pageChanged($event)\"&gt;&lt;\/pagination&gt;\n   &lt;\/div&gt;\n&lt;\/div&gt;\n&lt;div&gt;\n   &lt;div class=\"checkbox\"&gt;\n      &lt;label&gt;&lt;input type=\"checkbox\" &#91;(ngModel)]=\"showBoundaryLinks\"&gt;Show Boundary Links&lt;\/label&gt;\n      &lt;br\/&gt;\n      &lt;label&gt;&lt;input type=\"checkbox\" &#91;(ngModel)]=\"showDirectionLinks\"&gt;Show Direction Links&lt;\/label&gt;\n   &lt;\/div&gt;\n&lt;\/div&gt;<\/code><\/pre>\n\n\n\n<p>Update test.component.ts for corresponding variables and methods.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { Component, OnInit } from '@angular\/core';\nimport { BsModalService } from 'ngx-bootstrap\/modal';\nimport { PageChangedEvent } from 'ngx-bootstrap\/pagination';\n\n@Component({\n   selector: 'app-test',\n   templateUrl: '.\/test.component.html',\n   styleUrls: &#91;'.\/test.component.css']\n})\nexport class TestComponent implements OnInit {\n   contentArray: string&#91;] = new Array(50).fill('');\n   returnedArray: string&#91;];\n   showBoundaryLinks: boolean = true;\n   showDirectionLinks: boolean = true;\n   constructor() {}\n\n   pageChanged(event: PageChangedEvent): void {\n      const startItem = (event.page - 1) * event.itemsPerPage;\n      const endItem = event.page * event.itemsPerPage;\n      this.returnedArray = this.contentArray.slice(startItem, endItem);\n   }\n   ngOnInit(): void {\n      this.contentArray = this.contentArray.map((v: string, i: number) =&gt; {\n         return 'Line '+ (i + 1);\n      });\n      this.returnedArray = this.contentArray.slice(0, 5);\n   }\n}<\/code><\/pre>\n\n\n\n<h2>Build and Serve<\/h2>\n\n\n\n<p>Run the following command to start the angular server.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>ng serve\n<\/code><\/pre>\n\n\n\n<p>Once server is up and running. Open http:\/\/localhost:4200. Click on Open modal button and verify the following output.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https:\/\/www.tutorialspoint.com\/ngx_bootstrap\/images\/pagination.jpg\" alt=\"Pagination\"\/><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>ngx -bootstrap pagination component provides pagination links or a pager component to your site or component. PaginationComponent selector pagination Inputs align&nbsp;\u2212 boolean, if true aligns each link to the sides of pager boundaryLinks&nbsp;\u2212 boolean, if false first and last buttons will be hidden customFirstTemplate&nbsp;\u2212 TemplateRef&lt;PaginationLinkContext&gt;, custom template for first link customLastTemplate&nbsp;\u2212 TemplateRef&lt;PaginationLinkContext&gt;, custom template for [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 4,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            281
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4922"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/4"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=4922"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4922\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 4923,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4922\/revisions\/4923"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=4922"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=4922"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=4922"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 4925,
        "date": "2021-03-13T08:41:24",
        "date_gmt": "2021-03-13T08:41:24",
        "guid": {
            "rendered": "https:\/\/angular.foobrdigital.com\/?p=4925"
        },
        "modified": "2021-03-13T11:56:31",
        "modified_gmt": "2021-03-13T11:56:31",
        "slug": "popover-2",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/popover-2\/",
        "title": {
            "rendered": "Popover"
        },
        "content": {
            "rendered": "\n<p>ngx-bootstrap popover component provides a small overlay component to provide small information about a component.<\/p>\n\n\n\n<h2>PopoverDirective<\/h2>\n\n\n\n<h3>selector<\/h3>\n\n\n\n<ul><li>popover<\/li><\/ul>\n\n\n\n<h3>Inputs<\/h3>\n\n\n\n<ul><li><strong>adaptivePosition<\/strong>&nbsp;\u2212 boolean, sets disable adaptive position.<\/li><li><strong>container<\/strong>&nbsp;\u2212 string, A selector specifying the element the popover should be appended to.<\/li><li><strong>containerClass<\/strong>&nbsp;\u2212 string, Css class for popover container<\/li><li><strong>delay<\/strong>&nbsp;\u2212 number, Delay before showing the tooltip<\/li><li><strong>isOpen<\/strong>&nbsp;\u2212 boolean, Returns whether or not the popover is currently being shown<\/li><li><strong>outsideClick<\/strong>&nbsp;\u2212 boolean, Close popover on outside click, default: false<\/li><li><strong>placement<\/strong>&nbsp;\u2212 &#8220;top&#8221; | &#8220;bottom&#8221; | &#8220;left&#8221; | &#8220;right&#8221; | &#8220;auto&#8221; | &#8220;top left&#8221; | &#8220;top right&#8221; | &#8220;right top&#8221; | &#8220;right bottom&#8221; | &#8220;bottom right&#8221; | &#8220;bottom left&#8221; | &#8220;left bottom&#8221; | &#8220;left top&#8221;, Placement of a popover. Accepts: &#8220;top&#8221;, &#8220;bottom&#8221;, &#8220;left&#8221;, &#8220;right&#8221;.<\/li><li><strong>popover<\/strong>&nbsp;\u2212 string | TemplateRef&lt;any&gt;, Content to be displayed as popover.<\/li><li><strong>popoverContext<\/strong>&nbsp;\u2212 any, Context to be used if popover is a template.<\/li><li><strong>popoverTitle<\/strong>&nbsp;\u2212 string, Title of a popover.<\/li><li><strong>triggers<\/strong>&nbsp;\u2212 string, Specifies events that should trigger. Supports a space separated list of event names.<\/li><\/ul>\n\n\n\n<h3>Outputs<\/h3>\n\n\n\n<ul><li><strong>onHidden<\/strong>&nbsp;\u2212 Emits an event when the popover is hidden.<\/li><li><strong>onShown<\/strong>&nbsp;\u2212 Emits an event when the popover is shown.<\/li><\/ul>\n\n\n\n<h3>Methods<\/h3>\n\n\n\n<ul><li><strong>setAriaDescribedBy()<\/strong>&nbsp;\u2212 Set attribute aria-describedBy for element directive and set id for the popover.<\/li><li><strong>show()<\/strong>&nbsp;\u2212 Opens an element&#8217;s popover. This is considered a &#8220;manual&#8221; triggering of the popover.<\/li><li><strong>hide()<\/strong>&nbsp;\u2212 Closes an element&#8217;s popover. This is considered a &#8220;manual&#8221; triggering of the popover.<\/li><li><strong>toggle()<\/strong>&nbsp;\u2212 Toggles an element&#8217;s popover. This is considered a &#8220;manual&#8221; triggering of the popover.<\/li><\/ul>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p>As we&#8217;re going to use a popover, We&#8217;ve to update app.module.ts used in&nbsp;the ngx-bootstrap Pagination&nbsp;chapter to use&nbsp;<strong>PopoverModule<\/strong>&nbsp;and&nbsp;<strong>PopoverConfig<\/strong>.<\/p>\n\n\n\n<p>Update app.module.ts to use the PopoverModule and PopoverConfig.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { BrowserModule } from '@angular\/platform-browser';\nimport { NgModule } from '@angular\/core';\nimport { BrowserAnimationsModule } from '@angular\/platform-browser\/animations';\nimport { AppComponent } from '.\/app.component';\nimport { TestComponent } from '.\/test\/test.component';\nimport { AccordionModule } from 'ngx-bootstrap\/accordion';\nimport { AlertModule,AlertConfig } from 'ngx-bootstrap\/alert';\nimport { ButtonsModule } from 'ngx-bootstrap\/buttons';\nimport { FormsModule } from '@angular\/forms';\nimport { CarouselModule } from 'ngx-bootstrap\/carousel';\nimport { CollapseModule } from 'ngx-bootstrap\/collapse';\nimport { BsDatepickerModule, BsDatepickerConfig } from 'ngx-bootstrap\/datepicker';\nimport { BsDropdownModule,BsDropdownConfig } from 'ngx-bootstrap\/dropdown';\nimport { PaginationModule,PaginationConfig } from 'ngx-bootstrap\/pagination';\nimport { PopoverModule, PopoverConfig } from 'ngx-bootstrap\/popover';\n\n@NgModule({\n   declarations: &#91;\n      AppComponent,\n      TestComponent\n   ],\n   imports: &#91;\n      BrowserAnimationsModule,\n      BrowserModule,\n      AccordionModule,\n      AlertModule,\n      ButtonsModule,\n      FormsModule,\n      CarouselModule,\n      CollapseModule,\n      BsDatepickerModule.forRoot(),\n      BsDropdownModule,\n      ModalModule,\n      PaginationModule,\n      PopoverModule\n   ],\n   providers: &#91;AlertConfig, \n      BsDatepickerConfig, \n      BsDropdownConfig,\n      BsModalService,\n      PaginationConfig],\n   bootstrap: &#91;AppComponent]\n})\nexport class AppModule { }<\/code><\/pre>\n\n\n\n<p>Update test.component.html to use the modal<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;button type=\"button\" class=\"btn btn-default btn-primary\"\n   popover=\"Welcome to codemeals\" &#91;outsideClick]=\"true\">\n   Default Popover\n&lt;\/button>\n&lt;button type=\"button\" class=\"btn btn-default btn-primary\"\n   popover=\"Welcome to codemeals.\"\n   popoverTitle=\"codemeals.\" \n   &#91;outsideClick]=\"true\"\n   placement=\"right\">\n   Right Aligned popover\n&lt;\/button><\/code><\/pre>\n\n\n\n<p>Update test.component.ts for corresponding variables and methods.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { Component, OnInit } from '@angular\/core';\nimport { BsModalService } from 'ngx-bootstrap\/modal';\nimport { PageChangedEvent } from 'ngx-bootstrap\/pagination';\n\n@Component({\n   selector: 'app-test',\n   templateUrl: '.\/test.component.html',\n   styleUrls: &#91;'.\/test.component.css']\n})\nexport class TestComponent implements OnInit {\n   constructor() {}\n   ngOnInit(): void {\n   }\n}<\/code><\/pre>\n\n\n\n<h2>Build and Serve<\/h2>\n\n\n\n<p>Run the following command to start the angular server.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>ng serve\n<\/code><\/pre>\n\n\n\n<p>Once server is up and running. Open http:\/\/localhost:4200. Click on Open modal button and verify the following output.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https:\/\/www.tutorialspoint.com\/ngx_bootstrap\/images\/popover.jpg\" alt=\"Popover\"\/><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>ngx-bootstrap popover component provides a small overlay component to provide small information about a component. PopoverDirective selector popover Inputs adaptivePosition&nbsp;\u2212 boolean, sets disable adaptive position. container&nbsp;\u2212 string, A selector specifying the element the popover should be appended to. containerClass&nbsp;\u2212 string, Css class for popover container delay&nbsp;\u2212 number, Delay before showing the tooltip isOpen&nbsp;\u2212 boolean, Returns [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 4,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            281
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4925"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/4"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=4925"
                }
            ],
            "version-history": [
                {
                    "count": 4,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4925\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 4949,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4925\/revisions\/4949"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=4925"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=4925"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=4925"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 4927,
        "date": "2021-03-13T08:44:00",
        "date_gmt": "2021-03-13T08:44:00",
        "guid": {
            "rendered": "https:\/\/angular.foobrdigital.com\/?p=4927"
        },
        "modified": "2021-03-13T08:44:00",
        "modified_gmt": "2021-03-13T08:44:00",
        "slug": "progressbar",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/progressbar\/",
        "title": {
            "rendered": "ProgressBar"
        },
        "content": {
            "rendered": "\n<p>ngx-bootstrap progress bar component provides a progress component to show progress of a workflow with flexible bars.<\/p>\n\n\n\n<h2>ProgressbarComponent<\/h2>\n\n\n\n<h3>selector<\/h3>\n\n\n\n<ul><li>progressbar<\/li><\/ul>\n\n\n\n<h3>Inputs<\/h3>\n\n\n\n<ul><li><strong>animate<\/strong>&nbsp;\u2212 boolean, if true changing value of progress bar will be animated.<\/li><li><strong>max<\/strong>&nbsp;\u2212 number, maximum total value of progress element.<\/li><li><strong>striped<\/strong>&nbsp;\u2212 boolean, If true, striped classes are applied.<\/li><li><strong>type<\/strong>&nbsp;\u2212 ProgressbarType, provide one of the four supported contextual classes: success, info, warning, danger.<\/li><li><strong>value<\/strong>&nbsp;\u2212 number | any[], current value of progress bar. Could be a number or array of objects like {&#8220;value&#8221;:15,&#8221;type&#8221;:&#8221;info&#8221;,&#8221;label&#8221;:&#8221;15 %&#8221;}.<\/li><\/ul>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p>As we&#8217;re going to use a progress bar, We&#8217;ve to update app.module.ts used in\u00a0the ngx-bootstrap Popover\u00a0chapter to use\u00a0<strong>ProgressbarModule<\/strong>\u00a0and\u00a0<strong>ProgressbarConfig<\/strong>.<\/p>\n\n\n\n<p>Update app.module.ts to use the ProgressbarModule and ProgressbarConfig.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { BrowserModule } from '@angular\/platform-browser';\nimport { NgModule } from '@angular\/core';\nimport { BrowserAnimationsModule } from '@angular\/platform-browser\/animations';\nimport { AppComponent } from '.\/app.component';\nimport { TestComponent } from '.\/test\/test.component';\nimport { AccordionModule } from 'ngx-bootstrap\/accordion';\nimport { AlertModule,AlertConfig } from 'ngx-bootstrap\/alert';\nimport { ButtonsModule } from 'ngx-bootstrap\/buttons';\nimport { FormsModule } from '@angular\/forms';\nimport { CarouselModule } from 'ngx-bootstrap\/carousel';\nimport { CollapseModule } from 'ngx-bootstrap\/collapse';\nimport { BsDatepickerModule, BsDatepickerConfig } from 'ngx-bootstrap\/datepicker';\nimport { BsDropdownModule,BsDropdownConfig } from 'ngx-bootstrap\/dropdown';\nimport { PaginationModule,PaginationConfig } from 'ngx-bootstrap\/pagination';\nimport { PopoverModule, PopoverConfig } from 'ngx-bootstrap\/popover';\nimport { ProgressbarModule,ProgressbarConfig } from 'ngx-bootstrap\/progressbar';\n\n@NgModule({\n   declarations: &#91;\n      AppComponent,\n      TestComponent\n   ],\n   imports: &#91;\n      BrowserAnimationsModule,\n      BrowserModule,\n      AccordionModule,\n      AlertModule,\n      ButtonsModule,\n      FormsModule,\n      CarouselModule,\n      CollapseModule,\n      BsDatepickerModule.forRoot(),\n      BsDropdownModule,\n      ModalModule,\n      PaginationModule,\n      PopoverModule,\n      ProgressbarModule\n   ],\n   providers: &#91;AlertConfig, \n      BsDatepickerConfig, \n      BsDropdownConfig,\n      BsModalService,\n      PaginationConfig,\n      ProgressbarConfig],\n   bootstrap: &#91;AppComponent]\n})\nexport class AppModule { }<\/code><\/pre>\n\n\n\n<p>Update test.component.html to use the modal.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;div class=\"row\"&gt;\n   &lt;div class=\"col-sm-4\"&gt;\n      &lt;div class=\"mb-2\"&gt;\n         &lt;progressbar &#91;value]=\"value\"&gt;&lt;\/progressbar&gt;\n      &lt;\/div&gt;\n   &lt;\/div&gt;\n   &lt;div class=\"col-sm-4\"&gt;\n      &lt;div class=\"mb-2\"&gt;\n         &lt;progressbar &#91;value]=\"value\" type=\"warning\"\n            &#91;striped]=\"true\"&gt;{{value}}%&lt;\/progressbar&gt;\n      &lt;\/div&gt;\n   &lt;\/div&gt;\n   &lt;div class=\"col-sm-4\"&gt;\n      &lt;div class=\"mb-2\"&gt;\n         &lt;progressbar &#91;value]=\"value\" type=\"danger\" \n            &#91;striped]=\"true\" &#91;animate]=\"true\"\n            &gt;&lt;i&gt;{{value}} \/ {{max}}&lt;\/i&gt;&lt;\/progressbar&gt;\n      &lt;\/div&gt;\n   &lt;\/div&gt;\n&lt;\/div&gt; <\/code><\/pre>\n\n\n\n<p>Update test.component.ts for corresponding variables and methods.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { Component, OnInit } from '@angular\/core';\n\n@Component({\n   selector: 'app-test',\n   templateUrl: '.\/test.component.html',\n   styleUrls: &#91;'.\/test.component.css']\n})\nexport class TestComponent implements OnInit {\n\n   max: number = 100;\n   value: number = 25;\n   constructor() {}\n\n   ngOnInit(): void {\n   } \n}<\/code><\/pre>\n\n\n\n<h2>Build and Serve<\/h2>\n\n\n\n<p>Run the following command to start the angular server.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>ng serve<\/code><\/pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>ngx-bootstrap progress bar component provides a progress component to show progress of a workflow with flexible bars. ProgressbarComponent selector progressbar Inputs animate&nbsp;\u2212 boolean, if true changing value of progress bar will be animated. max&nbsp;\u2212 number, maximum total value of progress element. striped&nbsp;\u2212 boolean, If true, striped classes are applied. type&nbsp;\u2212 ProgressbarType, provide one of the [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 4,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            281
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4927"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/4"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=4927"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4927\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 4928,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4927\/revisions\/4928"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=4927"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=4927"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=4927"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 4929,
        "date": "2021-03-13T08:46:26",
        "date_gmt": "2021-03-13T08:46:26",
        "guid": {
            "rendered": "https:\/\/angular.foobrdigital.com\/?p=4929"
        },
        "modified": "2021-03-13T08:46:26",
        "modified_gmt": "2021-03-13T08:46:26",
        "slug": "rating",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/rating\/",
        "title": {
            "rendered": "Rating"
        },
        "content": {
            "rendered": "\n<p>ngx-bootstrap rating component provides a configurable rating component, a star bar by default.<\/p>\n\n\n\n<h2>RatingComponent<\/h2>\n\n\n\n<h3>selector<\/h3>\n\n\n\n<ul><li>rating<\/li><\/ul>\n\n\n\n<h3>Inputs<\/h3>\n\n\n\n<ul><li><strong>customTemplate<\/strong>&nbsp;\u2212 TemplateRef&lt;any&gt;, custom template for icons.<\/li><li><strong>max<\/strong>&nbsp;\u2212 number, no. of icons, default: 5.<\/li><li><strong>readonly<\/strong>&nbsp;\u2212 boolean, if true will not react on any user events.<\/li><li><strong>titles<\/strong>&nbsp;\u2212 string[], array of icons titles, default: ([1, 2, 3, 4, 5])<\/li><\/ul>\n\n\n\n<h3>Outputs<\/h3>\n\n\n\n<ul><li><strong>onHover<\/strong>&nbsp;\u2212 fired when icon selected, $event:number equals to selected rating.<\/li><li><strong>onLeave<\/strong>&nbsp;\u2212 fired when icon selected, $event:number equals to previous rating value.<\/li><\/ul>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p>As we&#8217;re going to use a rating, We&#8217;ve to update app.module.ts used in\u00a0the ngx-bootstrap ProgressBar\u00a0chapter to use\u00a0<strong>RatingModule<\/strong>,\u00a0<strong>RatingConfig<\/strong>.<\/p>\n\n\n\n<p>Update app.module.ts to use the RatingModule and RatingConfig.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { BrowserModule } from '@angular\/platform-browser';\nimport { NgModule } from '@angular\/core';\nimport { BrowserAnimationsModule } from '@angular\/platform-browser\/animations';\nimport { AppComponent } from '.\/app.component';\nimport { TestComponent } from '.\/test\/test.component';\nimport { AccordionModule } from 'ngx-bootstrap\/accordion';\nimport { AlertModule,AlertConfig } from 'ngx-bootstrap\/alert';\nimport { ButtonsModule } from 'ngx-bootstrap\/buttons';\nimport { FormsModule } from '@angular\/forms';\nimport { CarouselModule } from 'ngx-bootstrap\/carousel';\nimport { CollapseModule } from 'ngx-bootstrap\/collapse';\nimport { BsDatepickerModule, BsDatepickerConfig } from 'ngx-bootstrap\/datepicker';\nimport { BsDropdownModule,BsDropdownConfig } from 'ngx-bootstrap\/dropdown';\nimport { PaginationModule,PaginationConfig } from 'ngx-bootstrap\/pagination';\nimport { PopoverModule, PopoverConfig } from 'ngx-bootstrap\/popover';\nimport { ProgressbarModule,ProgressbarConfig } from 'ngx-bootstrap\/progressbar';\nimport { RatingModule, RatingConfig } from 'ngx-bootstrap\/rating';\n\n@NgModule({\n   declarations: &#91;\n      AppComponent,\n      TestComponent\n   ],\n   imports: &#91;\n      BrowserAnimationsModule,\n      BrowserModule,\n      AccordionModule,\n      AlertModule,\n      ButtonsModule,\n      FormsModule,\n      CarouselModule,\n      CollapseModule,\n      BsDatepickerModule.forRoot(),\n      BsDropdownModule,\n      ModalModule,\n      PaginationModule,\n      PopoverModule,\n      ProgressbarModule,\n      RatingModule\n   ],\n   providers: &#91;AlertConfig, \n      BsDatepickerConfig, \n      BsDropdownConfig,\n      BsModalService,\n      PaginationConfig,\n      ProgressbarConfig,\n      RatingConfig],\n   bootstrap: &#91;AppComponent]\n})\nexport class AppModule { }<\/code><\/pre>\n\n\n\n<p>Update test.component.html to use the rating.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;rating &#91;(ngModel)]=\"value\" \n   &#91;max]=\"max\" \n   &#91;readonly]=\"false\" \n   &#91;titles]=\"&#91;'one','two','three','four']\"&gt;&lt;\/rating&gt;<\/code><\/pre>\n\n\n\n<p>Update test.component.ts for corresponding variables and methods.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { Component, OnInit } from '@angular\/core';\n\n@Component({\n   selector: 'app-test',\n   templateUrl: '.\/test.component.html',\n   styleUrls: &#91;'.\/test.component.css']\n})\nexport class TestComponent implements OnInit {\n   max: number = 10;\n   value: number = 5;\n   constructor() {}\n   ngOnInit(): void {\n   } \n}<\/code><\/pre>\n\n\n\n<h2>Build and Serve<\/h2>\n\n\n\n<p>Run the following command to start the angular server.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>ng serve\n<\/code><\/pre>\n\n\n\n<p>Once server is up and running. Open http:\/\/localhost:4200. Click on Open modal button and verify the following output.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https:\/\/www.tutorialspoint.com\/ngx_bootstrap\/images\/rating.jpg\" alt=\"Rating\"\/><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>ngx-bootstrap rating component provides a configurable rating component, a star bar by default. RatingComponent selector rating Inputs customTemplate&nbsp;\u2212 TemplateRef&lt;any&gt;, custom template for icons. max&nbsp;\u2212 number, no. of icons, default: 5. readonly&nbsp;\u2212 boolean, if true will not react on any user events. titles&nbsp;\u2212 string[], array of icons titles, default: ([1, 2, 3, 4, 5]) Outputs onHover&nbsp;\u2212 [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 4,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            281
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4929"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/4"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=4929"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4929\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 4930,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4929\/revisions\/4930"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=4929"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=4929"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=4929"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 4931,
        "date": "2021-03-13T08:49:07",
        "date_gmt": "2021-03-13T08:49:07",
        "guid": {
            "rendered": "https:\/\/angular.foobrdigital.com\/?p=4931"
        },
        "modified": "2021-03-13T08:49:07",
        "modified_gmt": "2021-03-13T08:49:07",
        "slug": "sortable",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/sortable\/",
        "title": {
            "rendered": "Sortable"
        },
        "content": {
            "rendered": "\n<p>ngx-bootstrap sortable component provides a configurable sortable component, with drag drop support.<\/p>\n\n\n\n<h2>SortableComponent<\/h2>\n\n\n\n<h3>selector<\/h3>\n\n\n\n<ul><li>bs-sortable<\/li><\/ul>\n\n\n\n<h3>Inputs<\/h3>\n\n\n\n<ul><li><strong>fieldName<\/strong>&nbsp;\u2212 string, field name if input array consists of objects.<\/li><li><strong>itemActiveClass<\/strong>&nbsp;\u2212 string, class name for active item.<\/li><li><strong>itemActiveStyle<\/strong>&nbsp;\u2212 { [key: string]: string; }, style object for active item.<\/li><li><strong>itemClass<\/strong>&nbsp;\u2212 string, class name for item<\/li><li><strong>itemStyle<\/strong>&nbsp;\u2212 string, class name for item<\/li><li><strong>itemTemplate<\/strong>&nbsp;\u2212 TemplateRef&lt;any&gt;, used to specify a custom item template. Template variables: item and index;<\/li><li><strong>placeholderClass<\/strong>&nbsp;\u2212 string, class name for placeholder<\/li><li><strong>placeholderItem<\/strong>&nbsp;\u2212 string, placeholder item which will be shown if collection is empty<\/li><li><strong>placeholderStyle<\/strong>&nbsp;\u2212 string, style object for placeholder<\/li><li><strong>wrapperClass<\/strong>&nbsp;\u2212 string, class name for items wrapper<\/li><li><strong>wrapperStyle<\/strong>&nbsp;\u2212 { [key: string]: string; }, style object for items wrapper<\/li><\/ul>\n\n\n\n<h3>Outputs<\/h3>\n\n\n\n<ul><li><strong>onChange<\/strong>&nbsp;\u2212 fired on array change (reordering, insert, remove), same as ngModelChange. Returns new items collection as a payload.<\/li><\/ul>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p>As we&#8217;re going to use a sortable, We&#8217;ve to update app.module.ts used in\u00a0the ngx-bootstrap Rating\u00a0chapter to use\u00a0<strong>SortableModule<\/strong>\u00a0and\u00a0<strong>DraggableItemService<\/strong>.<\/p>\n\n\n\n<p>Update app.module.ts to use the SortableModule and DraggableItemService.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { BrowserModule } from '@angular\/platform-browser';\nimport { NgModule } from '@angular\/core';\nimport { BrowserAnimationsModule } from '@angular\/platform-browser\/animations';\nimport { AppComponent } from '.\/app.component';\nimport { TestComponent } from '.\/test\/test.component';\nimport { AccordionModule } from 'ngx-bootstrap\/accordion';\nimport { AlertModule,AlertConfig } from 'ngx-bootstrap\/alert';\nimport { ButtonsModule } from 'ngx-bootstrap\/buttons';\nimport { FormsModule } from '@angular\/forms';\nimport { CarouselModule } from 'ngx-bootstrap\/carousel';\nimport { CollapseModule } from 'ngx-bootstrap\/collapse';\nimport { BsDatepickerModule, BsDatepickerConfig } from 'ngx-bootstrap\/datepicker';\nimport { BsDropdownModule,BsDropdownConfig } from 'ngx-bootstrap\/dropdown';\nimport { PaginationModule,PaginationConfig } from 'ngx-bootstrap\/pagination';\nimport { PopoverModule, PopoverConfig } from 'ngx-bootstrap\/popover';\nimport { ProgressbarModule,ProgressbarConfig } from 'ngx-bootstrap\/progressbar';\nimport { RatingModule, RatingConfig } from 'ngx-bootstrap\/rating';\nimport { SortableModule, DraggableItemService } from 'ngx-bootstrap\/sortable';\n\n@NgModule({\n   declarations: &#91;\n      AppComponent,\n      TestComponent\n   ],\n   imports: &#91;\n      BrowserAnimationsModule,\n      BrowserModule,\n      AccordionModule,\n      AlertModule,\n      ButtonsModule,\n      FormsModule,\n      CarouselModule,\n      CollapseModule,\n      BsDatepickerModule.forRoot(),\n      BsDropdownModule,\n      ModalModule,\n      PaginationModule,\n      PopoverModule,\n      ProgressbarModule,\n      RatingModule,\n      SortableModule\n   ],\n   providers: &#91;AlertConfig, \n      BsDatepickerConfig, \n      BsDropdownConfig,\n      BsModalService,\n      PaginationConfig,\n      ProgressbarConfig,\n      RatingConfig,\n      DraggableItemService],\n   bootstrap: &#91;AppComponent]\n})\nexport class AppModule { }<\/code><\/pre>\n\n\n\n<p>Update styles.css to use styles for sortable component<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>.sortableItem {\n   padding: 6px 12px;\n   margin-bottom: 4px;\n   font-size: 14px;\n   line-height: 1.4em;\n   text-align: center;\n   cursor: grab;\n   border: 1px solid transparent;\n   border-radius: 4px;\n   border-color: #adadad;\n}\n\n.sortableItemActive {\n   background-color: #e6e6e6;\n   box-shadow: inset 0 3px 5px rgba(0,0,0,.125);\n}\n\n.sortableWrapper {\n   min-height: 150px;\n}<\/code><\/pre>\n\n\n\n<p>Update test.component.html to use the sortable component.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;bs-sortable\n   &#91;(ngModel)]=\"items\"\n   fieldName=\"name\"\n   itemClass=\"sortableItem\"\n   itemActiveClass=\"sortableItemActive\"\n   wrapperClass=\"sortableWrapper\"&gt;\n&lt;\/bs-sortable&gt;<\/code><\/pre>\n\n\n\n<p>Update test.component.ts for corresponding variables and methods.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { Component, OnInit } from '@angular\/core';\n\n@Component({\n   selector: 'app-test',\n   templateUrl: '.\/test.component.html',\n   styleUrls: &#91;'.\/test.component.css']\n})\nexport class TestComponent implements OnInit {\n   items = &#91;\n      {\n         id: 1,\n         name: 'Apple'\n      },\n      {\n         id: 2,\n         name: 'Orange'\n      },\n      {\n         id: 3,\n         name: 'Mango'\n      }\n   ];\n   constructor() {}\n   ngOnInit(): void {\n   } \n}<\/code><\/pre>\n\n\n\n<h2>Build and Serve<\/h2>\n\n\n\n<p>Run the following command to start the angular server.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>ng serve<\/code><\/pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>ngx-bootstrap sortable component provides a configurable sortable component, with drag drop support. SortableComponent selector bs-sortable Inputs fieldName&nbsp;\u2212 string, field name if input array consists of objects. itemActiveClass&nbsp;\u2212 string, class name for active item. itemActiveStyle&nbsp;\u2212 { [key: string]: string; }, style object for active item. itemClass&nbsp;\u2212 string, class name for item itemStyle&nbsp;\u2212 string, class name for [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 4,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            281
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4931"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/4"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=4931"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4931\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 4932,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4931\/revisions\/4932"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=4931"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=4931"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=4931"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 4933,
        "date": "2021-03-13T08:52:02",
        "date_gmt": "2021-03-13T08:52:02",
        "guid": {
            "rendered": "https:\/\/angular.foobrdigital.com\/?p=4933"
        },
        "modified": "2021-03-13T08:52:02",
        "modified_gmt": "2021-03-13T08:52:02",
        "slug": "tabs-3",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/tabs-3\/",
        "title": {
            "rendered": "Tabs"
        },
        "content": {
            "rendered": "\n<p>ngx-bootstrap tabs component provides a easy to use and highly configurable Tab component.<\/p>\n\n\n\n<h2>TabsetComponent<\/h2>\n\n\n\n<h3>selector<\/h3>\n\n\n\n<ul><li>tabset<\/li><\/ul>\n\n\n\n<h3>Inputs<\/h3>\n\n\n\n<ul><li><strong>justified<\/strong>&nbsp;\u2212 boolean, if true tabs fill the container and have a consistent width.<\/li><li><strong>type<\/strong>&nbsp;\u2212 string, navigation context class: &#8216;tabs&#8217; or &#8216;pills&#8217;.<\/li><li><strong>vertical<\/strong>&nbsp;\u2212 if true tabs will be placed vertically.<\/li><\/ul>\n\n\n\n<h2>TabDirective<\/h2>\n\n\n\n<h3>selector<\/h3>\n\n\n\n<ul><li>tab, [tab]<\/li><\/ul>\n\n\n\n<h3>Inputs<\/h3>\n\n\n\n<ul><li><strong>active<\/strong>&nbsp;\u2212 boolean, tab active state toggle.<\/li><li><strong>customClass<\/strong>&nbsp;\u2212 string, if set, will be added to the tab&#8217;s class attribute. Multiple classes are supported.<\/li><li><strong>disabled<\/strong>&nbsp;\u2212 boolean, if true tab can not be activated.<\/li><li><strong>heading<\/strong>&nbsp;\u2212 string, tab header text.<\/li><li><strong>id<\/strong>&nbsp;\u2212 string, tab id. The same id with suffix &#8216;-link&#8217; will be added to the corresponding<\/li><li>element.<\/li><li><strong>removable<\/strong>&nbsp;\u2212 boolean, if true tab can be removable, additional button will appear.<\/li><\/ul>\n\n\n\n<h3>Outputs<\/h3>\n\n\n\n<ul><li><strong>deselect<\/strong>&nbsp;\u2212 fired when tab became inactive, $event:Tab equals to deselected instance of Tab component.<\/li><li><strong>removed<\/strong>&nbsp;\u2212 fired before tab will be removed, $event:Tab equals to instance of removed tab.<\/li><li><strong>selectTab<\/strong>&nbsp;\u2212 fired when tab became active, $event:Tab equals to selected instance of Tab component.<\/li><\/ul>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p>As we&#8217;re going to use a Tab, We&#8217;ve to update app.module.ts used in\u00a0ngx-bootstrap Sortable\u00a0chapter to use\u00a0<strong>TabsModule<\/strong>\u00a0and\u00a0<strong>TabsetConfig<\/strong>.<\/p>\n\n\n\n<p>Update app.module.ts to use the TabsModule and TabsetConfig.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { BrowserModule } from '@angular\/platform-browser';\nimport { NgModule } from '@angular\/core';\nimport { BrowserAnimationsModule } from '@angular\/platform-browser\/animations';\nimport { AppComponent } from '.\/app.component';\nimport { TestComponent } from '.\/test\/test.component';\nimport { AccordionModule } from 'ngx-bootstrap\/accordion';\nimport { AlertModule,AlertConfig } from 'ngx-bootstrap\/alert';\nimport { ButtonsModule } from 'ngx-bootstrap\/buttons';\nimport { FormsModule } from '@angular\/forms';\nimport { CarouselModule } from 'ngx-bootstrap\/carousel';\nimport { CollapseModule } from 'ngx-bootstrap\/collapse';\nimport { BsDatepickerModule, BsDatepickerConfig } from 'ngx-bootstrap\/datepicker';\nimport { BsDropdownModule,BsDropdownConfig } from 'ngx-bootstrap\/dropdown';\nimport { PaginationModule,PaginationConfig } from 'ngx-bootstrap\/pagination';\nimport { PopoverModule, PopoverConfig } from 'ngx-bootstrap\/popover';\nimport { ProgressbarModule,ProgressbarConfig } from 'ngx-bootstrap\/progressbar';\nimport { RatingModule, RatingConfig } from 'ngx-bootstrap\/rating';\nimport { SortableModule, DraggableItemService } from 'ngx-bootstrap\/sortable';\nimport { TabsModule, TabsetConfig } from 'ngx-bootstrap\/tabs';\n\n@NgModule({\n   declarations: &#91;\n      AppComponent,\n      TestComponent\n   ],\n   imports: &#91;\n      BrowserAnimationsModule,\n      BrowserModule,\n      AccordionModule,\n      AlertModule,\n      ButtonsModule,\n      FormsModule,\n      CarouselModule,\n      CollapseModule,\n      BsDatepickerModule.forRoot(),\n      BsDropdownModule,\n      ModalModule,\n      PaginationModule,\n      PopoverModule,\n      ProgressbarModule,\n      RatingModule,\n      SortableModule,\n      TabsModule\n   ],\n   providers: &#91;AlertConfig, \n      BsDatepickerConfig, \n      BsDropdownConfig,\n      BsModalService,\n      PaginationConfig,\n      ProgressbarConfig,\n      RatingConfig,\n      DraggableItemService,\n      TabsetConfig],\n   bootstrap: &#91;AppComponent]\n})\nexport class AppModule { }<\/code><\/pre>\n\n\n\n<p>Update test.component.html to use the tabs component.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;tabset&gt;\n   &lt;tab heading=\"Home\"&gt;Home&lt;\/tab&gt;\n   &lt;tab *ngFor=\"let tabz of tabs\"\n      &#91;heading]=\"tabz.title\"\n      &#91;active]=\"tabz.active\"\n      (selectTab)=\"tabz.active = true\"        \n      &#91;disabled]=\"tabz.disabled\"&gt;\n      {{tabz?.content}}\n   &lt;\/tab&gt;\n&lt;\/tabset&gt;<\/code><\/pre>\n\n\n\n<p>Update test.component.ts for corresponding variables and methods.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { Component, OnInit } from '@angular\/core';\n\n@Component({\n   selector: 'app-test',\n   templateUrl: '.\/test.component.html',\n   styleUrls: &#91;'.\/test.component.css']\n})\nexport class TestComponent implements OnInit {\n   tabs = &#91;\n      { title: 'First', content: 'First Tab Content' },\n      { title: 'Second', content: 'Second Tab Content', active: true },\n      { title: 'Third', content: 'Third Tab Content', removable: true },\n      { title: 'Four', content: 'Fourth Tab Content', disabled: true }\n   ];\n   constructor() {}\n   ngOnInit(): void {\n   } \n}<\/code><\/pre>\n\n\n\n<h2>Build and Serve<\/h2>\n\n\n\n<p>Run the following command to start the angular server.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>ng serve\n<\/code><\/pre>\n\n\n\n<p>Once server is up and running. Open http:\/\/localhost:4200. Click on Open modal button and verify the following output.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https:\/\/www.tutorialspoint.com\/ngx_bootstrap\/images\/tabs.jpg\" alt=\"Tabs\"\/><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>ngx-bootstrap tabs component provides a easy to use and highly configurable Tab component. TabsetComponent selector tabset Inputs justified&nbsp;\u2212 boolean, if true tabs fill the container and have a consistent width. type&nbsp;\u2212 string, navigation context class: &#8216;tabs&#8217; or &#8216;pills&#8217;. vertical&nbsp;\u2212 if true tabs will be placed vertically. TabDirective selector tab, [tab] Inputs active&nbsp;\u2212 boolean, tab active [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 4,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            281
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4933"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/4"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=4933"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4933\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 4934,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4933\/revisions\/4934"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=4933"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=4933"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=4933"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 4935,
        "date": "2021-03-13T08:55:06",
        "date_gmt": "2021-03-13T08:55:06",
        "guid": {
            "rendered": "https:\/\/angular.foobrdigital.com\/?p=4935"
        },
        "modified": "2021-03-13T08:55:06",
        "modified_gmt": "2021-03-13T08:55:06",
        "slug": "timepicker",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/timepicker\/",
        "title": {
            "rendered": "TimePicker"
        },
        "content": {
            "rendered": "\n<p>ngx-bootstrap timepicker component provides a easy to use and highly configurable Time Picker component.<\/p>\n\n\n\n<h2>TimepickerComponent<\/h2>\n\n\n\n<h3>selector<\/h3>\n\n\n\n<ul><li>timepicker<\/li><\/ul>\n\n\n\n<h3>Inputs<\/h3>\n\n\n\n<ul><li><strong>arrowkeys<\/strong>&nbsp;\u2212 boolean, if true the values of hours and minutes can be changed using the up\/down arrow keys on the keyboard.<\/li><li><strong>disabled<\/strong>&nbsp;\u2212 boolean, if true hours and minutes fields will be disabled.<\/li><li><strong>hoursPlaceholder<\/strong>&nbsp;\u2212 string, placeholder for hours field in timepicker.<\/li><li><strong>hourStep<\/strong>&nbsp;\u2212 number, hours change step.<\/li><li><strong>max<\/strong>&nbsp;\u2212 Date, maximum time user can select.<\/li><li><strong>meridians<\/strong>&nbsp;\u2212 string[], meridian labels based on locale.<\/li><li><strong>min<\/strong>&nbsp;\u2212 Date, minimum time user can select.<\/li><li><strong>minutesPlaceholder<\/strong>&nbsp;\u2212 string, placeholder for minutes field in timepicker.<\/li><li><strong>minuteStep<\/strong>&nbsp;\u2212 number, hours change step.<\/li><li><strong>mousewheel<\/strong>&nbsp;\u2212 boolean, if true scroll inside hours and minutes inputs will change time.<\/li><li><strong>readonlyInput<\/strong>&nbsp;\u2212 boolean, if true hours and minutes fields will be readonly.<\/li><li><strong>secondsPlaceholder<\/strong>&nbsp;\u2212 string, placeholder for seconds field in timepicker.<\/li><li><strong>secondsStep<\/strong>&nbsp;\u2212 number, seconds change step.<\/li><li><strong>showMeridian<\/strong>&nbsp;\u2212 boolean, if true meridian button will be shown.<\/li><li><strong>showMinutes<\/strong>&nbsp;\u2212 boolean, show minutes in timepicker.<\/li><li><strong>showSeconds<\/strong>&nbsp;\u2212 boolean, show seconds in timepicker.<\/li><li><strong>showSpinners<\/strong>&nbsp;\u2212 boolean, if true spinner arrows above and below the inputs will be shown.<\/li><\/ul>\n\n\n\n<h3>Outputs<\/h3>\n\n\n\n<ul><li><strong>isValid<\/strong>&nbsp;\u2212 emits true if value is a valid date.<\/li><\/ul>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p>As we&#8217;re going to use a TimePicker, We&#8217;ve to update app.module.ts used in\u00a0the ngx-bootstrap Tabs\u00a0chapter to use\u00a0<strong>TimepickerModule<\/strong>.<\/p>\n\n\n\n<p>Update app.module.ts to use the TimepickerModule.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { BrowserModule } from '@angular\/platform-browser';\nimport { NgModule } from '@angular\/core';\nimport { BrowserAnimationsModule } from '@angular\/platform-browser\/animations';\nimport { AppComponent } from '.\/app.component';\nimport { TestComponent } from '.\/test\/test.component';\nimport { AccordionModule } from 'ngx-bootstrap\/accordion';\nimport { AlertModule,AlertConfig } from 'ngx-bootstrap\/alert';\nimport { ButtonsModule } from 'ngx-bootstrap\/buttons';\nimport { FormsModule } from '@angular\/forms';\nimport { CarouselModule } from 'ngx-bootstrap\/carousel';\nimport { CollapseModule } from 'ngx-bootstrap\/collapse';\nimport { BsDatepickerModule, BsDatepickerConfig } from 'ngx-bootstrap\/datepicker';\nimport { BsDropdownModule,BsDropdownConfig } from 'ngx-bootstrap\/dropdown';\nimport { PaginationModule,PaginationConfig } from 'ngx-bootstrap\/pagination';\nimport { PopoverModule, PopoverConfig } from 'ngx-bootstrap\/popover';\nimport { ProgressbarModule,ProgressbarConfig } from 'ngx-bootstrap\/progressbar';\nimport { RatingModule, RatingConfig } from 'ngx-bootstrap\/rating';\nimport { SortableModule, DraggableItemService } from 'ngx-bootstrap\/sortable';\nimport { TabsModule, TabsetConfig } from 'ngx-bootstrap\/tabs';\nimport { TimepickerModule } from 'ngx-bootstrap\/timepicker';\n\n@NgModule({\n   declarations: &#91;\n      AppComponent,\n      TestComponent\n   ],\n   imports: &#91;\n      BrowserAnimationsModule,\n      BrowserModule,\n      AccordionModule,\n      AlertModule,\n      ButtonsModule,\n      FormsModule,\n      CarouselModule,\n      CollapseModule,\n      BsDatepickerModule.forRoot(),\n      BsDropdownModule,\n      ModalModule,\n      PaginationModule,\n      PopoverModule,\n      ProgressbarModule,\n      RatingModule,\n      SortableModule,\n      TabsModule,\n      TimepickerModule.forRoot()\n   ],\n   providers: &#91;AlertConfig, \n      BsDatepickerConfig, \n      BsDropdownConfig,\n      BsModalService,\n      PaginationConfig,\n      ProgressbarConfig,\n      RatingConfig,\n      DraggableItemService,\n      TabsetConfig],\n   bootstrap: &#91;AppComponent]\n})\nexport class AppModule { }<\/code><\/pre>\n\n\n\n<p>Update test.component.html to use the time picker component.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;timepicker &#91;(ngModel)]=\"time\"&gt;&lt;\/timepicker&gt;\n&lt;pre class=\"alert alert-info\"&gt;Time is: {{time}}&lt;\/pre&gt;\n\n&lt;timepicker &#91;(ngModel)]=\"time\" &#91;showMeridian]=\"false\"&gt;&lt;\/timepicker&gt;\n&lt;pre class=\"alert alert-info\"&gt;Time is: {{time}}&lt;\/pre&gt;<\/code><\/pre>\n\n\n\n<p>Update test.component.ts for corresponding variables and methods.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { Component, OnInit } from '@angular\/core';\n\n@Component({\n   selector: 'app-test',\n   templateUrl: '.\/test.component.html',\n   styleUrls: &#91;'.\/test.component.css']\n})\nexport class TestComponent implements OnInit {\n   time: Date = new Date();\n   constructor() {}\n   ngOnInit(): void {\n   } \n}<\/code><\/pre>\n\n\n\n<h2>Build and Serve<\/h2>\n\n\n\n<p>Run the following command to start the angular server.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>ng serve\n<\/code><\/pre>\n\n\n\n<p>Once server is up and running. Open http:\/\/localhost:4200. Click on Open modal button and verify the following output.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https:\/\/www.tutorialspoint.com\/ngx_bootstrap\/images\/timepicker.jpg\" alt=\"TimePicker\"\/><\/figure>\n\n\n\n<p><\/p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>ngx-bootstrap timepicker component provides a easy to use and highly configurable Time Picker component. TimepickerComponent selector timepicker Inputs arrowkeys&nbsp;\u2212 boolean, if true the values of hours and minutes can be changed using the up\/down arrow keys on the keyboard. disabled&nbsp;\u2212 boolean, if true hours and minutes fields will be disabled. hoursPlaceholder&nbsp;\u2212 string, placeholder for hours [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 4,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            281
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4935"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/4"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=4935"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4935\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 4936,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4935\/revisions\/4936"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=4935"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=4935"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=4935"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 4937,
        "date": "2021-03-13T08:57:11",
        "date_gmt": "2021-03-13T08:57:11",
        "guid": {
            "rendered": "https:\/\/angular.foobrdigital.com\/?p=4937"
        },
        "modified": "2021-03-13T08:57:11",
        "modified_gmt": "2021-03-13T08:57:11",
        "slug": "tooltip-2",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/tooltip-2\/",
        "title": {
            "rendered": "Tooltip"
        },
        "content": {
            "rendered": "\n<p>ngx-bootstrap tooltip component provides a easy to use and highly configurable Tooltip component.<\/p>\n\n\n\n<h2>TooltipDirective<\/h2>\n\n\n\n<h3>selector<\/h3>\n\n\n\n<ul><li>[tooltip], [tooltipHtml]<\/li><\/ul>\n\n\n\n<h3>Inputs<\/h3>\n\n\n\n<ul><li><strong>adaptivePosition<\/strong>&nbsp;\u2212 boolean, sets disable adaptive position.<\/li><li><strong>container<\/strong>&nbsp;\u2212 string, A selector specifying the element the tooltip should be appended to.<\/li><li><strong>containerClass<\/strong>&nbsp;\u2212 string, Css class for tooltip container.<\/li><li><strong>delay<\/strong>&nbsp;\u2212 number, Delay before showing the tooltip.<\/li><li><strong>isDisabled<\/strong>&nbsp;\u2212 boolean, Allows to disable tooltip.<\/li><li><strong>isOpen<\/strong>&nbsp;\u2212 boolean, Returns whether or not the tooltip is currently being shown.<\/li><li><strong>placement<\/strong>&nbsp;\u2212 string, Placement of a tooltip. Accepts: &#8220;top&#8221;, &#8220;bottom&#8221;, &#8220;left&#8221;, &#8220;right&#8221;.<\/li><li><strong>tooltip<\/strong>&nbsp;\u2212 string | TemplateRef&lt;any&gt;, Content to be displayed as tooltip.<\/li><li><strong>tooltipAnimation<\/strong>&nbsp;\u2212 boolean, default: true.<\/li><li><strong>tooltipAppendToBody<\/strong>&nbsp;\u2212 boolean.<\/li><li><strong>tooltipClass<\/strong>&nbsp;\u2212 string.<\/li><li><strong>tooltipContext<\/strong>&nbsp;\u2212 any.<\/li><li><strong>tooltipEnable<\/strong>&nbsp;\u2212 boolean.<\/li><li><strong>tooltipFadeDuration<\/strong>&nbsp;\u2212 number, default: 150.<\/li><li><strong>tooltipHtml<\/strong>&nbsp;\u2212 string | TemplateRef&lt;any&gt;.<\/li><li><strong>tooltipIsOpen<\/strong>&nbsp;\u2212 boolean.<\/li><li><strong>tooltipPlacement<\/strong>&nbsp;\u2212 string<\/li><li><strong>tooltipPopupDelay<\/strong>&nbsp;\u2212 number<\/li><li><strong>tooltipTrigger<\/strong>&nbsp;\u2212 string | string[]<\/li><li><strong>triggers<\/strong>&nbsp;\u2212 string, Specifies events that should trigger. Supports a space separated list of event names.<\/li><\/ul>\n\n\n\n<h3>Outputs<\/h3>\n\n\n\n<ul><li><strong>onHidden<\/strong>&nbsp;\u2212 Emits an event when the tooltip is hidden.<\/li><li><strong>onShown<\/strong>&nbsp;\u2212 Emits an event when the tooltip is shown.<\/li><li><strong>tooltipChange<\/strong>&nbsp;\u2212 Fired when tooltip content changes.<\/li><li><strong>tooltipStateChanged<\/strong>&nbsp;\u2212 Fired when tooltip state changes.<\/li><\/ul>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p>As we&#8217;re going to use Tooltip, We&#8217;ve to update app.module.ts used in\u00a0the ngx-bootstrap TimePicker\u00a0chapter to use\u00a0<strong>TooltipModule<\/strong>.<\/p>\n\n\n\n<p>Update app.module.ts to use the TooltipModule.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { BrowserModule } from '@angular\/platform-browser';\nimport { NgModule } from '@angular\/core';\nimport { BrowserAnimationsModule } from '@angular\/platform-browser\/animations';\nimport { AppComponent } from '.\/app.component';\nimport { TestComponent } from '.\/test\/test.component';\nimport { AccordionModule } from 'ngx-bootstrap\/accordion';\nimport { AlertModule,AlertConfig } from 'ngx-bootstrap\/alert';\nimport { ButtonsModule } from 'ngx-bootstrap\/buttons';\nimport { FormsModule } from '@angular\/forms';\nimport { CarouselModule } from 'ngx-bootstrap\/carousel';\nimport { CollapseModule } from 'ngx-bootstrap\/collapse';\nimport { BsDatepickerModule, BsDatepickerConfig } from 'ngx-bootstrap\/datepicker';\nimport { BsDropdownModule,BsDropdownConfig } from 'ngx-bootstrap\/dropdown';\nimport { PaginationModule,PaginationConfig } from 'ngx-bootstrap\/pagination';\nimport { PopoverModule, PopoverConfig } from 'ngx-bootstrap\/popover';\nimport { ProgressbarModule,ProgressbarConfig } from 'ngx-bootstrap\/progressbar';\nimport { RatingModule, RatingConfig } from 'ngx-bootstrap\/rating';\nimport { SortableModule, DraggableItemService } from 'ngx-bootstrap\/sortable';\nimport { TabsModule, TabsetConfig } from 'ngx-bootstrap\/tabs';\nimport { TimepickerModule } from 'ngx-bootstrap\/timepicker';\nimport { TooltipModule  } from 'ngx-bootstrap\/tooltip';\n\n@NgModule({\n   declarations: &#91;\n      AppComponent,\n      TestComponent\n   ],\n   imports: &#91;\n      BrowserAnimationsModule,\n      BrowserModule,\n      AccordionModule,\n      AlertModule,\n      ButtonsModule,\n      FormsModule,\n      CarouselModule,\n      CollapseModule,\n      BsDatepickerModule.forRoot(),\n      BsDropdownModule,\n      ModalModule,\n      PaginationModule,\n      PopoverModule,\n      ProgressbarModule,\n      RatingModule,\n      SortableModule,\n      TabsModule,\n      TimepickerModule.forRoot(),\n      TooltipModule.forRoot()\n   ],\n   providers: &#91;AlertConfig, \n      BsDatepickerConfig, \n      BsDropdownConfig,\n      BsModalService,\n      PaginationConfig,\n      ProgressbarConfig,\n      RatingConfig,\n      DraggableItemService,\n      TabsetConfig],\n   bootstrap: &#91;AppComponent]\n})\nexport class AppModule { }<\/code><\/pre>\n\n\n\n<p>Update test.component.html to use the time picker component.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;timepicker &#91;(ngModel)]=\"time\"&gt;&lt;\/timepicker&gt;\n&lt;pre class=\"alert alert-info\"&gt;Time is: {{time}}&lt;\/pre&gt;\n\n&lt;timepicker &#91;(ngModel)]=\"time\" &#91;showMeridian]=\"false\"&gt;&lt;\/timepicker&gt;\n&lt;pre class=\"alert alert-info\"&gt;Time is: {{time}}&lt;\/pre&gt;<\/code><\/pre>\n\n\n\n<p>Update test.component.ts for corresponding variables and methods.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { Component, OnInit } from '@angular\/core';\n\n@Component({\n   selector: 'app-test',\n   templateUrl: '.\/test.component.html',\n   styleUrls: &#91;'.\/test.component.css']\n})\nexport class TestComponent implements OnInit {\n   time: Date = new Date();\n   constructor() {}\n   ngOnInit(): void {\n   } \n}<\/code><\/pre>\n\n\n\n<h2>Build and Serve<\/h2>\n\n\n\n<p>Run the following command to start the angular server.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>ng serve\n<\/code><\/pre>\n\n\n\n<p>Once server is up and running. Open http:\/\/localhost:4200. Click on Open modal button and verify the following output.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https:\/\/www.tutorialspoint.com\/ngx_bootstrap\/images\/tooltip.jpg\" alt=\"Tooltip\"\/><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>ngx-bootstrap tooltip component provides a easy to use and highly configurable Tooltip component. TooltipDirective selector [tooltip], [tooltipHtml] Inputs adaptivePosition&nbsp;\u2212 boolean, sets disable adaptive position. container&nbsp;\u2212 string, A selector specifying the element the tooltip should be appended to. containerClass&nbsp;\u2212 string, Css class for tooltip container. delay&nbsp;\u2212 number, Delay before showing the tooltip. isDisabled&nbsp;\u2212 boolean, Allows to [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 4,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            281
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4937"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/4"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=4937"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4937\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 4938,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4937\/revisions\/4938"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=4937"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=4937"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=4937"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 4939,
        "date": "2021-03-13T08:59:04",
        "date_gmt": "2021-03-13T08:59:04",
        "guid": {
            "rendered": "https:\/\/angular.foobrdigital.com\/?p=4939"
        },
        "modified": "2021-03-13T08:59:04",
        "modified_gmt": "2021-03-13T08:59:04",
        "slug": "typeahead",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/typeahead\/",
        "title": {
            "rendered": "Typeahead"
        },
        "content": {
            "rendered": "\n<p>ngx-bootstrap Typeahead directive provides a easy to use and highly configurable, easy to use Typeahead component.<\/p>\n\n\n\n<h2>TypeaheadDirective<\/h2>\n\n\n\n<h3>selector<\/h3>\n\n\n\n<ul><li>[typeahead]<\/li><\/ul>\n\n\n\n<h3>Inputs<\/h3>\n\n\n\n<ul><li><strong>adaptivePosition<\/strong>&nbsp;\u2212 boolean, sets use adaptive position.<\/li><li><strong>container<\/strong>&nbsp;\u2212 string, A selector specifying the element the typeahead should be appended to.<\/li><li><strong>dropup<\/strong>&nbsp;\u2212 boolean, This attribute indicates that the dropdown should be opened upwards, default:false.<\/li><li><strong>isAnimated<\/strong>&nbsp;\u2212 boolean, turn on\/off animation, default:false.<\/li><li><strong>optionsListTemplate<\/strong>&nbsp;\u2212 TemplateRef&lt;TypeaheadOptionListContext&gt;, used to specify a custom options list template. Template variables: matches, itemTemplate, query.<\/li><li><strong>typeahead<\/strong>&nbsp;\u2212 Typeahead, options source, can be Array of strings, objects or an Observable for external matching process.<\/li><li><strong>typeaheadAsync<\/strong>&nbsp;\u2212 boolean, should be used only in case of typeahead attribute is Observable of array. If true &#8211; loading of options will be async, otherwise &#8211; sync. true make sense if options array is large.<\/li><li><strong>typeaheadGroupField<\/strong>&nbsp;\u2212 string, when options source is an array of objects, the name of field that contains the group value, matches are grouped by this field when set.<\/li><li><strong>typeaheadHideResultsOnBlur<\/strong>&nbsp;\u2212 boolean, used to hide result on blur.<\/li><li><strong>typeaheadIsFirstItemActive<\/strong>&nbsp;\u2212 boolean, makes active first item in a list. Default:true.<\/li><li><strong>typeaheadItemTemplate<\/strong>&nbsp;\u2212 TemplateRef&lt;TypeaheadOptionItemContext&gt;, used to specify a custom item template. Template variables exposed are called item and index.<\/li><li><strong>typeaheadLatinize<\/strong>&nbsp;\u2212 boolean, match latin symbols. If true the word s\ufffdper would match super and vice versa.Default: true.<\/li><li><strong>typeaheadMinLength<\/strong>&nbsp;\u2212 number, minimal no of characters that needs to be entered before typeahead kicks-in. When set to 0, typeahead shows on focus with full list of options (limited as normal by typeaheadOptionsLimit)<\/li><li><strong>typeaheadMultipleSearch<\/strong>&nbsp;\u2212 boolean, Can be used to conduct a search of multiple items and have suggestion not for the whole value of the input but for the value that comes after a delimiter provided via typeaheadMultipleSearchDelimiters attribute. This option can only be used together with typeaheadSingleWords option if typeaheadWordDelimiters and typeaheadPhraseDelimiters are different from typeaheadMultipleSearchDelimiters to avoid conflict in determining when to delimit multiple searches and when a single word.<\/li><li><strong>typeaheadMultipleSearchDelimiters<\/strong>&nbsp;\u2212 string, should be used only in case typeaheadMultipleSearch attribute is true. Sets the multiple search delimiter to know when to start a new search. Defaults to comma. If space needs to be used, then explicitly set typeaheadWordDelimiters to something else than space because space is used by default OR set typeaheadSingleWords attribute to false if you don&#8217;t need to use it together with multiple search.<\/li><li><strong>typeaheadOptionField<\/strong>&nbsp;\u2212 string, when options source is an array of objects, the name of field that contains the options value, we use array item as option in case of this field is missing. Supports nested properties and methods.<\/li><li><strong>typeaheadOptionsInScrollableView<\/strong>&nbsp;\u2212 number, Default value: 5,specifies number of options to show in scroll view<\/li><li><strong>typeaheadOptionsLimit<\/strong>&nbsp;\u2212 number, maximum length of options items list. The default value is 20.<\/li><li><strong>typeaheadOrderBy<\/strong>&nbsp;\u2212 TypeaheadOrder, Used to specify a custom order of matches. When options source is an array of objects a field for sorting has to be set up. In case of options source is an array of string, a field for sorting is absent. The ordering direction could be changed to ascending or descending.<\/li><li><strong>typeaheadPhraseDelimiters<\/strong>&nbsp;\u2212 string, should be used only in case typeaheadSingleWords attribute is true. Sets the word delimiter to match exact phrase. Defaults to simple and double quotes.<\/li><li><strong>typeaheadScrollable<\/strong>&nbsp;\u2212 boolean, Default value: false, specifies if typeahead is scrollable<\/li><li><strong>typeaheadSelectFirstItem<\/strong>&nbsp;\u2212 boolean, Default value: true, fired when an options list was opened and the user clicked Tab If a value equal true, it will be chosen first or active item in the list If value equal false, it will be chosen an active item in the list or nothing<\/li><li><strong>typeaheadSingleWords<\/strong>&nbsp;\u2212 boolean, Default value: true, Can be use to search words by inserting a single white space between each characters for example &#8216;C a l i f o r n i a&#8217; will match &#8216;California&#8217;.<\/li><li><strong>typeaheadWaitMs<\/strong>&nbsp;\u2212 number, minimal wait time after last character typed before typeahead kicks-in<\/li><li><strong>typeaheadWordDelimiters<\/strong>&nbsp;\u2212 string, should be used only in case typeaheadSingleWords attribute is true. Sets the word delimiter to break words. Defaults to space.<\/li><\/ul>\n\n\n\n<h3>Outputs<\/h3>\n\n\n\n<ul><li><strong>typeaheadLoading<\/strong>&nbsp;\u2212 fired when &#8216;busy&#8217; state of this component was changed, fired on async mode only, returns boolean.<\/li><li><strong>typeaheadNoResults<\/strong>&nbsp;\u2212 fired on every key event and returns true in case of matches are not detected.<\/li><li><strong>typeaheadOnBlur<\/strong>&nbsp;\u2212 fired when blur event occurs. returns the active item.<\/li><li><strong>typeaheadOnSelect<\/strong>&nbsp;\u2212 fired when option was selected, return object with data of this option.<\/li><\/ul>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p>As we&#8217;re going to use a Typeahead, We&#8217;ve to update app.module.ts used in\u00a0the ngx-bootstrap Timepicker\u00a0chapter to use\u00a0<strong>TypeaheadModule<\/strong>.<\/p>\n\n\n\n<p>Update app.module.ts to use the TypeaheadModule.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { BrowserModule } from '@angular\/platform-browser';\nimport { NgModule } from '@angular\/core';\nimport { BrowserAnimationsModule } from '@angular\/platform-browser\/animations';\nimport { AppComponent } from '.\/app.component';\nimport { TestComponent } from '.\/test\/test.component';\nimport { AccordionModule } from 'ngx-bootstrap\/accordion';\nimport { AlertModule,AlertConfig } from 'ngx-bootstrap\/alert';\nimport { ButtonsModule } from 'ngx-bootstrap\/buttons';\nimport { FormsModule } from '@angular\/forms';\nimport { CarouselModule } from 'ngx-bootstrap\/carousel';\nimport { CollapseModule } from 'ngx-bootstrap\/collapse';\nimport { BsDatepickerModule, BsDatepickerConfig } from 'ngx-bootstrap\/datepicker';\nimport { BsDropdownModule,BsDropdownConfig } from 'ngx-bootstrap\/dropdown';\nimport { PaginationModule,PaginationConfig } from 'ngx-bootstrap\/pagination';\nimport { PopoverModule, PopoverConfig } from 'ngx-bootstrap\/popover';\nimport { ProgressbarModule,ProgressbarConfig } from 'ngx-bootstrap\/progressbar';\nimport { RatingModule, RatingConfig } from 'ngx-bootstrap\/rating';\nimport { SortableModule, DraggableItemService } from 'ngx-bootstrap\/sortable';\nimport { TabsModule, TabsetConfig } from 'ngx-bootstrap\/tabs';\nimport { TimepickerModule } from 'ngx-bootstrap\/timepicker';\nimport { TypeaheadModule } from 'ngx-bootstrap\/typeahead';\n\n@NgModule({\n   declarations: &#91;\n      AppComponent,\n      TestComponent\n   ],\n   imports: &#91;\n      BrowserAnimationsModule,\n      BrowserModule,\n      AccordionModule,\n      AlertModule,\n      ButtonsModule,\n      FormsModule,\n      CarouselModule,\n      CollapseModule,\n      BsDatepickerModule.forRoot(),\n      BsDropdownModule,\n      ModalModule,\n      PaginationModule,\n      PopoverModule,\n      ProgressbarModule,\n      RatingModule,\n      SortableModule,\n      TabsModule,\n      TimepickerModule.forRoot(),\n      TypeaheadModule.forRoot()\n   ],\n   providers: &#91;AlertConfig, \n      BsDatepickerConfig, \n      BsDropdownConfig,\n      BsModalService,\n      PaginationConfig,\n      ProgressbarConfig,\n      RatingConfig,\n      DraggableItemService,\n      TabsetConfig],\n   bootstrap: &#91;AppComponent]\n})\nexport class AppModule { }<\/code><\/pre>\n\n\n\n<p>Update test.component.html to use the time picker component.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;input &#91;(ngModel)]=\"selectedState\"\n   &#91;typeahead]=\"states\"\n   class=\"form-control\"&gt;\n&lt;pre class=\"card card-block card-header mb-3\"&gt;Model: {{selectedState | json}}&lt;\/pre&gt;<\/code><\/pre>\n\n\n\n<p>Update test.component.ts for corresponding variables and methods.<\/p>\n\n\n\n<p><em>test.component.ts<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>import { Component, OnInit } from '@angular\/core';\n\n@Component({\n   selector: 'app-test',\n   templateUrl: '.\/test.component.html',\n   styleUrls: &#91;'.\/test.component.css']\n})\nexport class TestComponent implements OnInit {\n   selectedState: string;\n   states: string&#91;] = &#91;'Alabama','Alaska','Arizona','Arkansas','California','Colorado',\n   'Connecticut','Delaware','Florida','Georgia','Hawaii','Idaho','Illinois',\n   'Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine',\n   'Maryland','Massachusetts','Michigan','Minnesota','Mississippi',\n   'Missouri','Montana','Nebraska','Nevada','New Hampshire','New Jersey',\n   'New Mexico','New York','North Dakota','North Carolina','Ohio',\n   'Oklahoma','Oregon','Pennsylvania','Rhode Island','South Carolina',\n   'South Dakota','Tennessee','Texas','Utah','Vermont',\n   'Virginia','Washington','West Virginia','Wisconsin','Wyoming'];\n   constructor() {}\n   ngOnInit(): void {\n   } \n}<\/code><\/pre>\n\n\n\n<h2>Build and Serve<\/h2>\n\n\n\n<p>Run the following command to start the angular server.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>ng serve\n<\/code><\/pre>\n\n\n\n<p>Once server is up and running. Open http:\/\/localhost:4200. Click on Open modal button and verify the following output.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https:\/\/www.tutorialspoint.com\/ngx_bootstrap\/images\/typeahead.jpg\" alt=\"Typeahead\"\/><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>ngx-bootstrap Typeahead directive provides a easy to use and highly configurable, easy to use Typeahead component. TypeaheadDirective selector [typeahead] Inputs adaptivePosition&nbsp;\u2212 boolean, sets use adaptive position. container&nbsp;\u2212 string, A selector specifying the element the typeahead should be appended to. dropup&nbsp;\u2212 boolean, This attribute indicates that the dropdown should be opened upwards, default:false. isAnimated&nbsp;\u2212 boolean, turn [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 4,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            281
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4939"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/4"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=4939"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4939\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 4940,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4939\/revisions\/4940"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=4939"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=4939"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=4939"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    }
]