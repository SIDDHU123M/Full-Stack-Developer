[
  {
  "id": 59,
  "date": "2020-09-17T11:15:38",
  "date_gmt": "2020-09-17T11:15:38",
  "guid": {
  "rendered": "http://ai.foobrdigital.com/?p=59"
  },
  "modified": "2020-09-17T11:15:38",
  "modified_gmt": "2020-09-17T11:15:38",
  "slug": "ai-with-python-tutorial",
  "status": "publish",
  "type": "post",
  "link": "https://ai.foobrdigital.com/ai-with-python-tutorial/",
  "title": {
  "rendered": "AI with Python Tutorial"
  },
  "content": {
  "rendered": "\n<p>Artificial intelligence is the intelligence demonstrated by machines, in contrast to the intelligence displayed by humans.</p>\n\n\n\n<p>This tutorial covers the basic concepts of various fields of artificial intelligence like Artificial Neural Networks, Natural Language Processing, Machine Learning, Deep Learning, Genetic algorithms etc., and its implementation in Python.</p>\n\n\n\n<h1>Audience</h1>\n\n\n\n<p>This tutorial will be useful for graduates, post graduates, and research students who either have an interest in this subject or have this subject as a part of their curriculum. The reader can be a beginner or an advanced learner.</p>\n\n\n\n<h1>Prerequisites</h1>\n\n\n\n<p>We assume that the reader has basic knowledge about Artificial Intelligence and Python programming. He/she should be aware about basic terminologies used in AI along with some useful python packages like nltk, OpenCV, pandas, OpenAI Gym, etc.</p>\n",
  "protected": false
  },
  "excerpt": {
  "rendered": "<p>Artificial intelligence is the intelligence demonstrated by machines, in contrast to the intelligence displayed by humans. This tutorial covers the basic concepts of various fields of artificial intelligence like Artificial Neural Networks, Natural Language Processing, Machine Learning, Deep Learning, Genetic algorithms etc., and its implementation in Python. Audience This tutorial will be useful for graduates, [&hellip;]</p>\n",
  "protected": false
  },
  "author": 2,
  "featured_media": 0,
  "comment_status": "open",
  "ping_status": "open",
  "sticky": false,
  "template": "",
  "format": "standard",
  "meta": [],
  "categories": [
  4
  ],
  "tags": [],
  "_links": {
  "self": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts/59"
  }
  ],
  "collection": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts"
  }
  ],
  "about": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/types/post"
  }
  ],
  "author": [
  {
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/users/2"
  }
  ],
  "replies": [
  {
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/comments?post=59"
  }
  ],
  "version-history": [
  {
  "count": 1,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts/59/revisions"
  }
  ],
  "predecessor-version": [
  {
  "id": 60,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts/59/revisions/60"
  }
  ],
  "wp:attachment": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/media?parent=59"
  }
  ],
  "wp:term": [
  {
  "taxonomy": "category",
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/categories?post=59"
  },
  {
  "taxonomy": "post_tag",
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/tags?post=59"
  }
  ],
  "curies": [
  {
  "name": "wp",
  "href": "https://api.w.org/{rel}",
  "templated": true
  }
  ]
  }
  },
  {
  "id": 61,
  "date": "2020-09-17T11:16:29",
  "date_gmt": "2020-09-17T11:16:29",
  "guid": {
  "rendered": "http://ai.foobrdigital.com/?p=61"
  },
  "modified": "2020-09-17T18:05:18",
  "modified_gmt": "2020-09-17T18:05:18",
  "slug": "ai-with-python-primer-concept",
  "status": "publish",
  "type": "post",
  "link": "https://ai.foobrdigital.com/ai-with-python-primer-concept/",
  "title": {
  "rendered": "Primer Concept"
  },
  "content": {
  "rendered": "\n<p>Since the invention of computers or machines, their capability to perform various tasks has experienced an exponential growth. Humans have developed the power of computer systems in terms of their diverse working domains, their increasing speed, and reducing size with respect to time.</p>\n\n\n\n<p>A branch of Computer Science named Artificial Intelligence pursues creating the computers or machines as intelligent as human beings.</p>\n\n\n\n<h2>Basic Concept of Artificial Intelligence (AI)</h2>\n\n\n\n<p>According to the father of Artificial Intelligence, John McCarthy, it is “The science and engineering of making intelligent machines, especially intelligent computer programs”.</p>\n\n\n\n<p>Artificial Intelligence is a way of making a computer, a computer-controlled robot, or a software think intelligently, in the similar manner the intelligent humans think. AI is accomplished by studying how human brain thinks and how humans learn, decide, and work while trying to solve a problem, and then using the outcomes of this study as a basis of developing intelligent software and systems.</p>\n\n\n\n<p>While exploiting the power of the computer systems, the curiosity of human, lead him to wonder, “Can a machine think and behave like humans do?”</p>\n\n\n\n<p>Thus, the development of AI started with the intention of creating similar intelligence in machines that we find and regard high in humans.</p>\n\n\n\n<h2>The Necessity of Learning AI</h2>\n\n\n\n<p>As we know that AI pursues creating the machines as intelligent as human beings. There are numerous reasons for us to study AI. The reasons are as follows −</p>\n\n\n\n<h3>AI can learn through data</h3>\n\n\n\n<p>In our daily life, we deal with huge amount of data and human brain cannot keep track of so much data. That is why we need to automate the things. For doing automation, we need to study AI because it can learn from data and can do the repetitive tasks with accuracy and without tiredness.</p>\n\n\n\n<h3>AI can teach itself</h3>\n\n\n\n<p>It is very necessary that a system should teach itself because the data itself keeps changing and the knowledge which is derived from such data must be updated constantly. We can use AI to fulfill this purpose because an AI enabled system can teach itself.</p>\n\n\n\n<h3>AI can respond in real time</h3>\n\n\n\n<p>Artificial intelligence with the help of neural networks can analyze the data more deeply. Due to this capability, AI can think and respond to the situations which are based on the conditions in real time.</p>\n\n\n\n<h3>AI achieves accuracy</h3>\n\n\n\n<p>With the help of deep neural networks, AI can achieve tremendous accuracy. AI helps in the field of medicine to diagnose diseases such as cancer from the MRIs of patients.</p>\n\n\n\n<h3>AI can organize data to get most out of it</h3>\n\n\n\n<p>The data is an intellectual property for the systems which are using self-learning algorithms. We need AI to index and organize the data in a way that it always gives the best results.</p>\n\n\n\n<h3>Understanding Intelligence</h3>\n\n\n\n<p>With AI, smart systems can be built. We need to understand the concept of intelligence so that our brain can construct another intelligence system like itself.</p>\n\n\n\n<h2>What is Intelligence?</h2>\n\n\n\n<p>The ability of a system to calculate, reason, perceive relationships and analogies, learn from experience, store and retrieve information from memory, solve problems, comprehend complex ideas, use natural language fluently, classify, generalize, and adapt new situations.</p>\n\n\n\n<h3>Types of Intelligence</h3>\n\n\n\n<p>As described by Howard Gardner, an American developmental psychologist, Intelligence comes in multifold −</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No</th><th>Intelligence &amp; Description</th><th>Example</th></tr><tr><td>1</td><td><strong>Linguistic intelligence</strong>The ability to speak, recognize, and use mechanisms of phonology (speech sounds), syntax (grammar), and semantics (meaning).</td><td>Narrators, Orators</td></tr><tr><td>2</td><td><strong>Musical intelligence</strong>The ability to create, communicate with, and understand meanings made of sound, understanding of pitch, rhythm.</td><td>Musicians, Singers, Composers</td></tr><tr><td>3</td><td><strong>Logical-mathematical intelligence</strong>The ability to use and understand relationships in the absence of action or objects. It is also the ability to understand complex and abstract ideas.</td><td>Mathematicians, Scientists</td></tr><tr><td>4</td><td><strong>Spatial intelligence</strong>The ability to perceive visual or spatial information, change it, and re-create visual images without reference to the objects, construct 3D images, and to move and rotate them.</td><td>Map readers, Astronauts, Physicists</td></tr><tr><td>5</td><td><strong>Bodily-Kinesthetic intelligence</strong>The ability to use complete or part of the body to solve problems or fashion products, control over fine and coarse motor skills, and manipulate the objects.</td><td>Players, Dancers</td></tr><tr><td>6</td><td><strong>Intra-personal intelligence</strong>The ability to distinguish among one’s own feelings, intentions, and motivations.</td><td>Gautam Buddhha</td></tr><tr><td>7</td><td><strong>Interpersonal intelligence</strong>The ability to recognize and make distinctions among other people’s feelings, beliefs, and intentions.</td><td>Mass Communicators, Interviewers</td></tr></tbody></table></figure>\n\n\n\n<p>You can say a machine or a system is artificially intelligent when it is equipped with at least one or all intelligences in it.</p>\n\n\n\n<h2>What is Intelligence Composed Of?</h2>\n\n\n\n<p>The intelligence is intangible. It is composed of −</p>\n\n\n\n<ul><li>Reasoning</li><li>Learning</li><li>Problem Solving</li><li>Perception</li><li>Linguistic Intelligence</li></ul>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://www.tutorialspoint.com/artificial_intelligence_with_python/images/intelligenc.jpg\" alt=\"Intelligence\"/></figure>\n\n\n\n<p>Let us go through all the components briefly −</p>\n\n\n\n<h3>Reasoning</h3>\n\n\n\n<p>It is the set of processes that enable us to provide basis for judgement, making decisions, and prediction. There are broadly two types −</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Inductive Reasoning</th><th>Deductive Reasoning</th></tr><tr><td>It conducts specific observations to makes broad general statements.</td><td>It starts with a general statement and examines the possibilities to reach a specific, logical conclusion.</td></tr><tr><td>Even if all of the premises are true in a statement, inductive reasoning allows for the conclusion to be false.</td><td>If something is true of a class of things in general, it is also true for all members of that class.</td></tr><tr><td><strong>Example</strong>&nbsp;− &#8220;Nita is a teacher. Nita is studious. Therefore, All teachers are studious.&#8221;</td><td><strong>Example</strong>&nbsp;− &#8220;All women of age above 60 years are grandmothers. Shalini is 65 years. Therefore, Shalini is a grandmother.&#8221;</td></tr></tbody></table></figure>\n\n\n\n<h2>Learning − l</h2>\n\n\n\n<p>The ability of learning is possessed by humans, particular species of animals, and AI-enabled systems. Learning is categorized as follows −</p>\n\n\n\n<h3>Auditory Learning</h3>\n\n\n\n<p>It is learning by listening and hearing. For example, students listening to recorded audio lectures.</p>\n\n\n\n<h3>Episodic Learning</h3>\n\n\n\n<p>To learn by remembering sequences of events that one has witnessed or experienced. This is linear and orderly.</p>\n\n\n\n<h3>Motor Learning</h3>\n\n\n\n<p>It is learning by precise movement of muscles. For example, picking objects, writing, etc.</p>\n\n\n\n<h3>Observational Learning</h3>\n\n\n\n<p>To learn by watching and imitating others. For example, child tries to learn by mimicking her parent.</p>\n\n\n\n<h3>Perceptual Learning</h3>\n\n\n\n<p>It is learning to recognize stimuli that one has seen before. For example, identifying and classifying objects and situations.</p>\n\n\n\n<h3>Relational Learning</h3>\n\n\n\n<p>It involves learning to differentiate among various stimuli on the basis of relational properties, rather than absolute properties. For Example, Adding ‘little less’ salt at the time of cooking potatoes that came up salty last time, when cooked with adding say a tablespoon of salt.</p>\n\n\n\n<ul><li><strong>Spatial Learning</strong>&nbsp;− It is learning through visual stimuli such as images, colors, maps, etc. For example, A person can create roadmap in mind before actually following the road.</li><li><strong>Stimulus-Response Learning</strong>&nbsp;− It is learning to perform a particular behavior when a certain stimulus is present. For example, a dog raises its ear on hearing doorbell.</li></ul>\n\n\n\n<h3>Problem Solving</h3>\n\n\n\n<p>It is the process in which one perceives and tries to arrive at a desired solution from a present situation by taking some path, which is blocked by known or unknown hurdles.</p>\n\n\n\n<p>Problem solving also includes&nbsp;<strong>decision making</strong>, which is the process of selecting the best suitable alternative out of multiple alternatives to reach the desired goal.</p>\n\n\n\n<h3>Perception</h3>\n\n\n\n<p>It is the process of acquiring, interpreting, selecting, and organizing sensory information.</p>\n\n\n\n<p>Perception presumes&nbsp;<strong>sensing</strong>. In humans, perception is aided by sensory organs. In the domain of AI, perception mechanism puts the data acquired by the sensors together in a meaningful manner.</p>\n\n\n\n<h3>Linguistic Intelligence</h3>\n\n\n\n<p>It is one’s ability to use, comprehend, speak, and write the verbal and written language. It is important in interpersonal communication.</p>\n\n\n\n<h2>What’s Involved in AI</h2>\n\n\n\n<p>Artificial intelligence is a vast area of study. This field of study helps in finding solutions to real world problems.</p>\n\n\n\n<p>Let us now see the different fields of study within AI −</p>\n\n\n\n<h3>Machine Learning</h3>\n\n\n\n<p>It is one of the most popular fields of AI. The basic concept of this filed is to make the machine learning from data as the human beings can learn from his/her experience. It contains learning models on the basis of which the predictions can be made on unknown data.</p>\n\n\n\n<h3>Logic</h3>\n\n\n\n<p>It is another important field of study in which mathematical logic is used to execute the computer programs. It contains rules and facts to perform pattern matching, semantic analysis, etc.</p>\n\n\n\n<h3>Searching</h3>\n\n\n\n<p>This field of study is basically used in games like chess, tic-tac-toe. Search algorithms give the optimal solution after searching the whole search space.</p>\n\n\n\n<h3>Artificial neural networks</h3>\n\n\n\n<p>This is a network of efficient computing systems the central theme of which is borrowed from the analogy of biological neural networks. ANN can be used in robotics, speech recognition, speech processing, etc.</p>\n\n\n\n<h3>Genetic Algorithm</h3>\n\n\n\n<p>Genetic algorithms help in solving problems with the assistance of more than one program. The result would be based on selecting the fittest.</p>\n\n\n\n<h3>Knowledge Representation</h3>\n\n\n\n<p>It is the field of study with the help of which we can represent the facts in a way the machine that is understandable to the machine. The more efficiently knowledge is represented; the more system would be intelligent.</p>\n\n\n\n<h2>Application of AI</h2>\n\n\n\n<p>In this section, we will see the different fields supported by AI −</p>\n\n\n\n<h3>Gaming</h3>\n\n\n\n<p>AI plays crucial role in strategic games such as chess, poker, tic-tac-toe, etc., where machine can think of large number of possible positions based on heuristic knowledge.</p>\n\n\n\n<h3>Natural Language Processing</h3>\n\n\n\n<p>It is possible to interact with the computer that understands natural language spoken by humans.</p>\n\n\n\n<h3>Expert Systems</h3>\n\n\n\n<p>There are some applications which integrate machine, software, and special information to impart reasoning and advising. They provide explanation and advice to the users.</p>\n\n\n\n<h3>Vision Systems</h3>\n\n\n\n<p>These systems understand, interpret, and comprehend visual input on the computer. For example,</p>\n\n\n\n<ul><li>A spying aeroplane takes photographs, which are used to figure out spatial information or map of the areas.</li><li>Doctors use clinical expert system to diagnose the patient.</li><li>Police use computer software that can recognize the face of criminal with the stored portrait made by forensic artist.</li></ul>\n\n\n\n<h3>Speech Recognition</h3>\n\n\n\n<p>Some intelligent systems are capable of hearing and comprehending the language in terms of sentences and their meanings while a human talks to it. It can handle different accents, slang words, noise in the background, change in human’s noise due to cold, etc.</p>\n\n\n\n<h3>Handwriting Recognition</h3>\n\n\n\n<p>The handwriting recognition software reads the text written on paper by a pen or on screen by a stylus. It can recognize the shapes of the letters and convert it into editable text.</p>\n\n\n\n<h3>Intelligent Robots</h3>\n\n\n\n<p>Robots are able to perform the tasks given by a human. They have sensors to detect physical data from the real world such as light, heat, temperature, movement, sound, bump, and pressure. They have efficient processors, multiple sensors and huge memory, to exhibit intelligence. In addition, they are capable of learning from their mistakes and they can adapt to the new environment.</p>\n\n\n\n<h2>Cognitive Modeling: Simulating Human Thinking Procedure</h2>\n\n\n\n<p>Cognitive modeling is basically the field of study within computer science that deals with the study and simulating the thinking process of human beings. The main task of AI is to make machine think like human. The most important feature of human thinking process is problem solving. That is why more or less cognitive modeling tries to understand how humans can solve the problems. After that this model can be used for various AI applications such as machine learning, robotics, natural language processing, etc. Following is the diagram of different thinking levels of human brain −</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://www.tutorialspoint.com/artificial_intelligence_with_python/images/cognitive_modeling.jpg\" alt=\"Cognitive Modeling\"/></figure>\n\n\n\n<h2>Agent &amp; Environment</h2>\n\n\n\n<p>In this section, we will focus on the agent and environment and how these help in Artificial Intelligence.</p>\n\n\n\n<h3>Agent</h3>\n\n\n\n<p>An agent is anything that can perceive its environment through sensors and acts upon that environment through effectors.</p>\n\n\n\n<ul><li>A&nbsp;<strong>human agent</strong>&nbsp;has sensory organs such as eyes, ears, nose, tongue and skin parallel to the sensors, and other organs such as hands, legs, mouth, for effectors.</li><li>A&nbsp;<strong>robotic agent</strong>&nbsp;replaces cameras and infrared range finders for the sensors, and various motors and actuators for effectors.</li><li>A&nbsp;<strong>software agent</strong>&nbsp;has encoded bit strings as its programs and actions.</li></ul>\n\n\n\n<h3>Environment</h3>\n\n\n\n<p>Some programs operate in an entirely&nbsp;<strong>artificial environment</strong>&nbsp;confined to keyboard input, database, computer file systems and character output on a screen.</p>\n\n\n\n<p>In contrast, some software agents (software robots or softbots) exist in rich, unlimited softbots domains. The simulator has a&nbsp;<strong>very detailed, complex environment</strong>. The software agent needs to choose from a long array of actions in real time. A softbot is designed to scan the online preferences of the customer and shows interesting items to the customer works in the&nbsp;<strong>real</strong>&nbsp;as well as an&nbsp;<strong>artificial</strong>&nbsp;environment.</p>\n",
  "protected": false
  },
  "excerpt": {
  "rendered": "<p>Since the invention of computers or machines, their capability to perform various tasks has experienced an exponential growth. Humans have developed the power of computer systems in terms of their diverse working domains, their increasing speed, and reducing size with respect to time. A branch of Computer Science named Artificial Intelligence pursues creating the computers [&hellip;]</p>\n",
  "protected": false
  },
  "author": 2,
  "featured_media": 0,
  "comment_status": "open",
  "ping_status": "open",
  "sticky": false,
  "template": "",
  "format": "standard",
  "meta": [],
  "categories": [
  4
  ],
  "tags": [],
  "_links": {
  "self": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts/61"
  }
  ],
  "collection": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts"
  }
  ],
  "about": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/types/post"
  }
  ],
  "author": [
  {
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/users/2"
  }
  ],
  "replies": [
  {
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/comments?post=61"
  }
  ],
  "version-history": [
  {
  "count": 2,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts/61/revisions"
  }
  ],
  "predecessor-version": [
  {
  "id": 86,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts/61/revisions/86"
  }
  ],
  "wp:attachment": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/media?parent=61"
  }
  ],
  "wp:term": [
  {
  "taxonomy": "category",
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/categories?post=61"
  },
  {
  "taxonomy": "post_tag",
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/tags?post=61"
  }
  ],
  "curies": [
  {
  "name": "wp",
  "href": "https://api.w.org/{rel}",
  "templated": true
  }
  ]
  }
  },
  {
  "id": 63,
  "date": "2020-09-17T11:18:17",
  "date_gmt": "2020-09-17T11:18:17",
  "guid": {
  "rendered": "http://ai.foobrdigital.com/?p=63"
  },
  "modified": "2020-09-17T18:05:13",
  "modified_gmt": "2020-09-17T18:05:13",
  "slug": "ai-with-python-getting-started",
  "status": "publish",
  "type": "post",
  "link": "https://ai.foobrdigital.com/ai-with-python-getting-started/",
  "title": {
  "rendered": "Getting Started"
  },
  "content": {
  "rendered": "\n<p>In this chapter, we will learn how to get started with Python. We will also understand how Python helps for Artificial Intelligence.</p>\n\n\n\n<h2>Why Python for AI</h2>\n\n\n\n<p>Artificial intelligence is considered to be the trending technology of the future. Already there are a number of applications made on it. Due to this, many companies and researchers are taking interest in it. But the main question that arises here is that in which programming language can these AI applications be developed? There are various programming languages like Lisp, Prolog, C++, Java and Python, which can be used for developing applications of AI. Among them, Python programming language gains a huge popularity and the reasons are as follows −</p>\n\n\n\n<h3>Simple syntax &amp; less coding</h3>\n\n\n\n<p>Python involves very less coding and simple syntax among other programming languages which can be used for developing AI applications. Due to this feature, the testing can be easier and we can focus more on programming.</p>\n\n\n\n<h3>Inbuilt libraries for AI projects</h3>\n\n\n\n<p>A major advantage for using Python for AI is that it comes with inbuilt libraries. Python has libraries for almost all kinds of AI projects. For example,&nbsp;<strong>NumPy, SciPy, matplotlib, nltk, SimpleAI</strong>&nbsp;are some the important inbuilt libraries of Python.</p>\n\n\n\n<ul><li><strong>Open source</strong>&nbsp;− Python is an open source programming language. This makes it widely popular in the community.</li><li><strong>Can be used for broad range of programming</strong>&nbsp;− Python can be used for a broad range of programming tasks like small shell script to enterprise web applications. This is another reason Python is suitable for AI projects.</li></ul>\n\n\n\n<h2>Features of Python</h2>\n\n\n\n<p>Python is a high-level, interpreted, interactive and object-oriented scripting language. Python is designed to be highly readable. It uses English keywords frequently where as other languages use punctuation, and it has fewer syntactical constructions than other languages. Python&#8217;s features include the following −</p>\n\n\n\n<ul><li><strong>Easy-to-learn</strong>&nbsp;− Python has few keywords, simple structure, and a clearly defined syntax. This allows the student to pick up the language quickly.</li><li><strong>Easy-to-read</strong>&nbsp;− Python code is more clearly defined and visible to the eyes.</li><li><strong>Easy-to-maintain</strong>&nbsp;− Python&#8217;s source code is fairly easy-to-maintain.</li><li><strong>A broad standard library</strong>&nbsp;− Python&#8217;s bulk of the library is very portable and cross-platform compatible on UNIX, Windows, and Macintosh.</li><li><strong>Interactive Mode</strong>&nbsp;− Python has support for an interactive mode which allows interactive testing and debugging of snippets of code.</li><li><strong>Portable</strong>&nbsp;− Python can run on a wide variety of hardware platforms and has the same interface on all platforms.</li><li><strong>Extendable</strong>&nbsp;− We can add low-level modules to the Python interpreter. These modules enable programmers to add to or customize their tools to be more efficient.</li><li><strong>Databases</strong>&nbsp;− Python provides interfaces to all major commercial databases.</li><li><strong>GUI Programming</strong>&nbsp;− Python supports GUI applications that can be created and ported to many system calls, libraries and windows systems, such as Windows MFC, Macintosh, and the X Window system of Unix.</li><li><strong>Scalable</strong>&nbsp;− Python provides a better structure and support for large programs than shell scripting.</li></ul>\n\n\n\n<h3>Important features of Python</h3>\n\n\n\n<p>Let us now consider the following important features of Python −</p>\n\n\n\n<ul><li>It supports functional and structured programming methods as well as OOP.</li><li>It can be used as a scripting language or can be compiled to byte-code for building large applications.</li><li>It provides very high-level dynamic data types and supports dynamic type checking.</li><li>It supports automatic garbage collection.</li><li>It can be easily integrated with C, C++, COM, ActiveX, CORBA, and Java.</li></ul>\n\n\n\n<h2>Installing Python</h2>\n\n\n\n<p>Python distribution is available for a large number of platforms. You need to download only the binary code applicable for your platform and install Python.</p>\n\n\n\n<p>If the binary code for your platform is not available, you need a C compiler to compile the source code manually. Compiling the source code offers more flexibility in terms of choice of features that you require in your installation.</p>\n\n\n\n<p>Here is a quick overview of installing Python on various platforms −</p>\n\n\n\n<h3>Unix and Linux Installation</h3>\n\n\n\n<p>Follow these steps to install Python on Unix/Linux machine.</p>\n\n\n\n<ul><li>Open a Web browser and go to&nbsp;<a target=\"_blank\" rel=\"noreferrer noopener\" href=\"https://www.python.org/downloads\">https://www.python.org/downloads</a></li><li>Follow the link to download zipped source code available for Unix/Linux.</li><li>Download and extract files.</li><li>Editing the&nbsp;<em>Modules/Setup</em>&nbsp;file if you want to customize some options.</li><li>run ./configure script</li><li>make</li><li>make install</li></ul>\n\n\n\n<p>This installs Python at the standard location /usr/local/bin and its libraries at&nbsp;<em>/usr/local/lib/pythonXX</em>&nbsp;where XX is the version of Python.</p>\n\n\n\n<h3>Windows Installation</h3>\n\n\n\n<p>Follow these steps to install Python on Windows machine.</p>\n\n\n\n<ul><li>Open a Web browser and go to&nbsp;<a target=\"_blank\" rel=\"noreferrer noopener\" href=\"https://www.python.org/downloads\">https://www.python.org/downloads</a></li><li>Follow the link for the Windows installer&nbsp;<em>python-XYZ</em>.msi file where XYZ is the version you need to install.</li><li>To use this installer&nbsp;<em>python-XYZ</em>.msi, the Windows system must support Microsoft Installer 2.0. Save the installer file to your local machine and then run it to find out if your machine supports MSI.</li><li>Run the downloaded file. This brings up the Python install wizard, which is really easy to use. Just accept the default settings and wait until the install is finished.</li></ul>\n\n\n\n<h3>Macintosh Installation</h3>\n\n\n\n<p>If you are on Mac OS X, it is recommended that you use Homebrew to install Python 3. It is a great package installer for Mac OS X and it is really easy to use. If you don&#8217;t have Homebrew, you can install it using the following command −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>$ ruby -e \"$(curl -fsSL\r\nhttps://raw.githubusercontent.com/Homebrew/install/master/install)\"\r\n</code></pre>\n\n\n\n<p>We can update the package manager with the command below −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>$ brew update\n</code></pre>\n\n\n\n<p>Now run the following command to install Python3 on your system −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>$ brew install python3\n</code></pre>\n\n\n\n<h2>Setting up PATH</h2>\n\n\n\n<p>Programs and other executable files can be in many directories, so operating systems provide a search path that lists the directories that the OS searches for executables.</p>\n\n\n\n<p>The path is stored in an environment variable, which is a named string maintained by the operating system. This variable contains information available to the command shell and other programs.</p>\n\n\n\n<p>The path variable is named as PATH in Unix or Path in Windows (Unix is case-sensitive; Windows is not).</p>\n\n\n\n<p>In Mac OS, the installer handles the path details. To invoke the Python interpreter from any particular directory, you must add the Python directory to your path.</p>\n\n\n\n<h3>Setting Path at Unix/Linux</h3>\n\n\n\n<p>To add the Python directory to the path for a particular session in Unix −</p>\n\n\n\n<ul><li>In the csh shellType&nbsp;<strong>setenv PATH &#8220;$PATH:/usr/local/bin/python&#8221;</strong>&nbsp;and press&nbsp;<strong>Enter</strong>.</li><li>In the bash shell (Linux)Type&nbsp;<strong>export ATH = &#8220;$PATH:/usr/local/bin/python&#8221;</strong>&nbsp;and press&nbsp;<strong>Enter</strong>.</li><li>In the sh or ksh shellType&nbsp;<strong>PATH = &#8220;$PATH:/usr/local/bin/python&#8221;</strong>&nbsp;and press&nbsp;<strong>Enter</strong>.</li></ul>\n\n\n\n<p><strong>Note</strong>&nbsp;− /usr/local/bin/python is the path of the Python directory.</p>\n\n\n\n<h3>Setting Path at Windows</h3>\n\n\n\n<p>To add the Python directory to the path for a particular session in Windows −</p>\n\n\n\n<ul><li><strong>At the command prompt</strong>&nbsp;− type&nbsp;<strong>path %path%;C:\\Python</strong>&nbsp;and press&nbsp;<strong>Enter</strong>.</li></ul>\n\n\n\n<p><strong>Note</strong>&nbsp;− C:\\Python is the path of the Python directory.</p>\n\n\n\n<h2>Running Python</h2>\n\n\n\n<p>Let us now see the different ways to run Python. The ways are described below −</p>\n\n\n\n<h3>Interactive Interpreter</h3>\n\n\n\n<p>We can start Python from Unix, DOS, or any other system that provides you a command-line interpreter or shell window.</p>\n\n\n\n<ul><li>Enter&nbsp;<strong>python</strong>&nbsp;at the command line.</li><li>Start coding right away in the interactive interpreter.</li></ul>\n\n\n\n<pre class=\"wp-block-code\"><code>$python # Unix/Linux\n</code></pre>\n\n\n\n<p>or</p>\n\n\n\n<pre class=\"wp-block-code\"><code>python% # Unix/Linux\n</code></pre>\n\n\n\n<p>or</p>\n\n\n\n<pre class=\"wp-block-code\"><code>C:> python # Windows/DOS\r\n</code></pre>\n\n\n\n<p>Here is the list of all the available command line options −</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>S.No.</th><th>Option &amp; Description</th></tr><tr><td>1</td><td><strong>-d</strong>It provides debug output.</td></tr><tr><td>2</td><td><strong>-o</strong>It generates optimized bytecode (resulting in .pyo files).</td></tr><tr><td>3</td><td><strong>-S</strong>Do not run import site to look for Python paths on startup.</td></tr><tr><td>4</td><td><strong>-v</strong>Verbose output (detailed trace on import statements).</td></tr><tr><td>5</td><td><strong>-x</strong>Disables class-based built-in exceptions (just use strings); obsolete starting with version 1.6.</td></tr><tr><td>6</td><td><strong>-c cmd</strong>Runs Python script sent in as cmd string.</td></tr><tr><td>7</td><td><strong>File</strong>Run Python script from given file.</td></tr></tbody></table></figure>\n\n\n\n<h2>Script from the Command-line</h2>\n\n\n\n<p>A Python script can be executed at the command line by invoking the interpreter on your application, as in the following −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>$python script.py # Unix/Linux\n</code></pre>\n\n\n\n<p>or,</p>\n\n\n\n<pre class=\"wp-block-code\"><code>python% script.py # Unix/Linux\n</code></pre>\n\n\n\n<p>or,</p>\n\n\n\n<pre class=\"wp-block-code\"><code>C:> python script.py # Windows/DOS\n</code></pre>\n\n\n\n<p><strong>Note</strong>&nbsp;− Be sure the file permission mode allows execution.</p>\n\n\n\n<h2>Integrated Development Environment</h2>\n\n\n\n<p>You can run Python from a Graphical User Interface (GUI) environment as well, if you have a GUI application on your system that supports Python.</p>\n\n\n\n<ul><li><strong>Unix</strong>&nbsp;− IDLE is the very first Unix IDE for Python.</li><li><strong>Windows</strong>&nbsp;− PythonWin is the first Windows interface for Python and is an IDE with a GUI.</li><li><strong>Macintosh</strong>&nbsp;− The Macintosh version of Python along with the IDLE IDE is available from the main website, downloadable as either MacBinary or BinHex&#8217;d files.</li></ul>\n\n\n\n<p>If you are not able to set up the environment properly, then you can take help from your system admin. Make sure the Python environment is properly set up and working perfectly fine.</p>\n\n\n\n<p>We can also use another Python platform called Anaconda. It includes hundreds of popular data science packages and the conda package and virtual environment manager for Windows, Linux and MacOS. You can download it as per your operating system from the link&nbsp;<a rel=\"noreferrer noopener\" target=\"_blank\" href=\"https://www.anaconda.com/download/\">https://www.anaconda.com/download/</a>.</p>\n\n\n\n<p>For this tutorial we are using Python 3.6.3 version on MS Windows.</p>\n",
  "protected": false
  },
  "excerpt": {
  "rendered": "<p>In this chapter, we will learn how to get started with Python. We will also understand how Python helps for Artificial Intelligence. Why Python for AI Artificial intelligence is considered to be the trending technology of the future. Already there are a number of applications made on it. Due to this, many companies and researchers [&hellip;]</p>\n",
  "protected": false
  },
  "author": 2,
  "featured_media": 0,
  "comment_status": "open",
  "ping_status": "open",
  "sticky": false,
  "template": "",
  "format": "standard",
  "meta": [],
  "categories": [
  4
  ],
  "tags": [],
  "_links": {
  "self": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts/63"
  }
  ],
  "collection": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts"
  }
  ],
  "about": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/types/post"
  }
  ],
  "author": [
  {
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/users/2"
  }
  ],
  "replies": [
  {
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/comments?post=63"
  }
  ],
  "version-history": [
  {
  "count": 2,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts/63/revisions"
  }
  ],
  "predecessor-version": [
  {
  "id": 85,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts/63/revisions/85"
  }
  ],
  "wp:attachment": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/media?parent=63"
  }
  ],
  "wp:term": [
  {
  "taxonomy": "category",
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/categories?post=63"
  },
  {
  "taxonomy": "post_tag",
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/tags?post=63"
  }
  ],
  "curies": [
  {
  "name": "wp",
  "href": "https://api.w.org/{rel}",
  "templated": true
  }
  ]
  }
  },
  {
  "id": 65,
  "date": "2020-09-17T11:19:11",
  "date_gmt": "2020-09-17T11:19:11",
  "guid": {
  "rendered": "http://ai.foobrdigital.com/?p=65"
  },
  "modified": "2020-09-17T18:05:06",
  "modified_gmt": "2020-09-17T18:05:06",
  "slug": "ai-with-python-machine-learning",
  "status": "publish",
  "type": "post",
  "link": "https://ai.foobrdigital.com/ai-with-python-machine-learning/",
  "title": {
  "rendered": "Machine Learning"
  },
  "content": {
  "rendered": "\n<p>Learning means the acquisition of knowledge or skills through study or experience. Based on this, we can define machine learning (ML) as follows −</p>\n\n\n\n<p>It may be defined as the field of computer science, more specifically an application of artificial intelligence, which provides computer systems the ability to learn with data and improve from experience without being explicitly programmed.</p>\n\n\n\n<p>Basically, the main focus of machine learning is to allow the computers learn automatically without human intervention. Now the question arises that how such learning can be started and done? It can be started with the observations of data. The data can be some examples, instruction or some direct experiences too. Then on the basis of this input, machine makes better decision by looking for some patterns in data.</p>\n\n\n\n<h2>Types of Machine Learning (ML)</h2>\n\n\n\n<p>Machine Learning Algorithms helps computer system learn without being explicitly programmed. These algorithms are categorized into supervised or unsupervised. Let us now see a few algorithms −</p>\n\n\n\n<h3>Supervised machine learning algorithms</h3>\n\n\n\n<p>This is the most commonly used machine learning algorithm. It is called supervised because the process of algorithm learning from the training dataset can be thought of as a teacher supervising the learning process. In this kind of ML algorithm, the possible outcomes are already known and training data is also labeled with correct answers. It can be understood as follows −</p>\n\n\n\n<p>Suppose we have input variables&nbsp;<strong>x</strong>&nbsp;and an output variable&nbsp;<strong>y</strong>&nbsp;and we applied an algorithm to learn the mapping function from the input to output such as −</p>\n\n\n\n<pre class=\"wp-block-preformatted\">Y = f(x)\n</pre>\n\n\n\n<p>Now, the main goal is to approximate the mapping function so well that when we have new input data (x), we can predict the output variable (Y) for that data.</p>\n\n\n\n<p>Mainly supervised leaning problems can be divided into the following two kinds of problems −</p>\n\n\n\n<ul><li><strong>Classification</strong>&nbsp;− A problem is called classification problem when we have the categorized output such as “black”, “teaching”, “non-teaching”, etc.</li><li><strong>Regression</strong>&nbsp;− A problem is called regression problem when we have the real value output such as “distance”, “kilogram”, etc.</li></ul>\n\n\n\n<p>Decision tree, random forest, knn, logistic regression are the examples of supervised machine learning algorithms.</p>\n\n\n\n<h3>Unsupervised machine learning algorithms</h3>\n\n\n\n<p>As the name suggests, these kinds of machine learning algorithms do not have any supervisor to provide any sort of guidance. That is why unsupervised machine learning algorithms are closely aligned with what some call true artificial intelligence. It can be understood as follows −</p>\n\n\n\n<p>Suppose we have input variable x, then there will be no corresponding output variables as there is in supervised learning algorithms.</p>\n\n\n\n<p>In simple words, we can say that in unsupervised learning there will be no correct answer and no teacher for the guidance. Algorithms help to discover interesting patterns in data.</p>\n\n\n\n<p>Unsupervised learning problems can be divided into the following two kinds of problem −</p>\n\n\n\n<ul><li><strong>Clustering</strong>&nbsp;− In clustering problems, we need to discover the inherent groupings in the data. For example, grouping customers by their purchasing behavior.</li><li><strong>Association</strong>&nbsp;− A problem is called association problem because such kinds of problem require discovering the rules that describe large portions of our data. For example, finding the customers who buy both&nbsp;<strong>x</strong>&nbsp;and&nbsp;<strong>y</strong>.</li></ul>\n\n\n\n<p>K-means for clustering, Apriori algorithm for association are the examples of unsupervised machine learning algorithms.</p>\n\n\n\n<h3>Reinforcement machine learning algorithms</h3>\n\n\n\n<p>These kinds of machine learning algorithms are used very less. These algorithms train the systems to make specific decisions. Basically, the machine is exposed to an environment where it trains itself continually using the trial and error method. These algorithms learn from past experience and tries to capture the best possible knowledge to make accurate decisions. Markov Decision Process is an example of reinforcement machine learning algorithms.</p>\n\n\n\n<h2>Most Common Machine Learning Algorithms</h2>\n\n\n\n<p>In this section, we will learn about the most common machine learning algorithms. The algorithms are described below −</p>\n\n\n\n<h3>Linear Regression</h3>\n\n\n\n<p>It is one of the most well-known algorithms in statistics and machine learning.</p>\n\n\n\n<p>Basic concept − Mainly linear regression is a linear model that assumes a linear relationship between the input variables say x and the single output variable say y. In other words, we can say that y can be calculated from a linear combination of the input variables x. The relationship between variables can be established by fitting a best line.</p>\n\n\n\n<h3>Types of Linear Regression</h3>\n\n\n\n<p>Linear regression is of the following two types −</p>\n\n\n\n<ul><li><strong>Simple linear regression</strong>&nbsp;− A linear regression algorithm is called simple linear regression if it is having only one independent variable.</li><li><strong>Multiple linear regression</strong>&nbsp;− A linear regression algorithm is called multiple linear regression if it is having more than one independent variable.</li></ul>\n\n\n\n<p>Linear regression is mainly used to estimate the real values based on continuous variable(s). For example, the total sale of a shop in a day, based on real values, can be estimated by linear regression.</p>\n\n\n\n<h3>Logistic Regression</h3>\n\n\n\n<p>It is a classification algorithm and also known as&nbsp;<strong>logit</strong>&nbsp;regression.</p>\n\n\n\n<p>Mainly logistic regression is a classification algorithm that is used to estimate the discrete values like 0 or 1, true or false, yes or no based on a given set of independent variable. Basically, it predicts the probability hence its output lies in between 0 and 1.</p>\n\n\n\n<h3>Decision Tree</h3>\n\n\n\n<p>Decision tree is a supervised learning algorithm that is mostly used for classification problems.</p>\n\n\n\n<p>Basically it is a classifier expressed as recursive partition based on the independent variables. Decision tree has nodes which form the rooted tree. Rooted tree is a directed tree with a node called “root”. Root does not have any incoming edges and all the other nodes have one incoming edge. These nodes are called leaves or decision nodes. For example, consider the following decision tree to see whether a person is fit or not.</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://www.tutorialspoint.com/artificial_intelligence_with_python/images/decision_tree.jpg\" alt=\"Decision Tree\"/></figure>\n\n\n\n<h3>Support Vector Machine (SVM)</h3>\n\n\n\n<p>It is used for both classification and regression problems. But mainly it is used for classification problems. The main concept of SVM is to plot each data item as a point in n-dimensional space with the value of each feature being the value of a particular coordinate. Here n would be the features we would have. Following is a simple graphical representation to understand the concept of SVM −</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://www.tutorialspoint.com/artificial_intelligence_with_python/images/support_vector_machine.jpg\" alt=\"Support Vector Machine\"/></figure>\n\n\n\n<p>In the above diagram, we have two features hence we first need to plot these two variables in two dimensional space where each point has two co-ordinates, called support vectors. The line splits the data into two different classified groups. This line would be the classifier.</p>\n\n\n\n<h3>Naïve Bayes</h3>\n\n\n\n<p>It is also a classification technique. The logic behind this classification technique is to use Bayes theorem for building classifiers. The assumption is that the predictors are independent. In simple words, it assumes that the presence of a particular feature in a class is unrelated to the presence of any other feature. Below is the equation for Bayes theorem −</p>\n\n\n\n<p>$$P\\left ( \\frac{A}{B} \\right ) = \\frac{P\\left ( \\frac{B}{A} \\right )P\\left ( A \\right )}{P\\left ( B \\right )}$$</p>\n\n\n\n<p>The Naïve Bayes model is easy to build and particularly useful for large data sets.</p>\n\n\n\n<h3>K-Nearest Neighbors (KNN)</h3>\n\n\n\n<p>It is used for both classification and regression of the problems. It is widely used to solve classification problems. The main concept of this algorithm is that it used to store all the available cases and classifies new cases by majority votes of its k neighbors. The case being then assigned to the class which is the most common amongst its K-nearest neighbors, measured by a distance function. The distance function can be Euclidean, Minkowski and Hamming distance. Consider the following to use KNN −</p>\n\n\n\n<ul><li>Computationally KNN are expensive than other algorithms used for classification problems.</li><li>The normalization of variables needed otherwise higher range variables can bias it.</li><li>In KNN, we need to work on pre-processing stage like noise removal.</li></ul>\n\n\n\n<h3>K-Means Clustering</h3>\n\n\n\n<p>As the name suggests, it is used to solve the clustering problems. It is basically a type of unsupervised learning. The main logic of K-Means clustering algorithm is to classify the data set through a number of clusters. Follow these steps to form clusters by K-means −</p>\n\n\n\n<ul><li>K-means picks k number of points for each cluster known as centroids.</li><li>Now each data point forms a cluster with the closest centroids, i.e., k clusters.</li><li>Now, it will find the centroids of each cluster based on the existing cluster members.</li><li>We need to repeat these steps until convergence occurs.</li></ul>\n\n\n\n<h3>Random Forest</h3>\n\n\n\n<p>It is a supervised classification algorithm. The advantage of random forest algorithm is that it can be used for both classification and regression kind of problems. Basically it is the collection of decision trees (i.e., forest) or you can say ensemble of the decision trees. The basic concept of random forest is that each tree gives a classification and the forest chooses the best classifications from them. Followings are the advantages of Random Forest algorithm −</p>\n\n\n\n<ul><li>Random forest classifier can be used for both classification and regression tasks.</li><li>They can handle the missing values.</li><li>It won’t over fit the model even if we have more number of trees in the forest.</li></ul>\n",
  "protected": false
  },
  "excerpt": {
  "rendered": "<p>Learning means the acquisition of knowledge or skills through study or experience. Based on this, we can define machine learning (ML) as follows − It may be defined as the field of computer science, more specifically an application of artificial intelligence, which provides computer systems the ability to learn with data and improve from experience [&hellip;]</p>\n",
  "protected": false
  },
  "author": 2,
  "featured_media": 0,
  "comment_status": "open",
  "ping_status": "open",
  "sticky": false,
  "template": "",
  "format": "standard",
  "meta": [],
  "categories": [
  4
  ],
  "tags": [],
  "_links": {
  "self": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts/65"
  }
  ],
  "collection": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts"
  }
  ],
  "about": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/types/post"
  }
  ],
  "author": [
  {
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/users/2"
  }
  ],
  "replies": [
  {
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/comments?post=65"
  }
  ],
  "version-history": [
  {
  "count": 2,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts/65/revisions"
  }
  ],
  "predecessor-version": [
  {
  "id": 84,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts/65/revisions/84"
  }
  ],
  "wp:attachment": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/media?parent=65"
  }
  ],
  "wp:term": [
  {
  "taxonomy": "category",
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/categories?post=65"
  },
  {
  "taxonomy": "post_tag",
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/tags?post=65"
  }
  ],
  "curies": [
  {
  "name": "wp",
  "href": "https://api.w.org/{rel}",
  "templated": true
  }
  ]
  }
  },
  {
  "id": 67,
  "date": "2020-09-17T11:22:07",
  "date_gmt": "2020-09-17T11:22:07",
  "guid": {
  "rendered": "http://ai.foobrdigital.com/?p=67"
  },
  "modified": "2020-09-17T18:04:51",
  "modified_gmt": "2020-09-17T18:04:51",
  "slug": "ai-with-python-data-preparation",
  "status": "publish",
  "type": "post",
  "link": "https://ai.foobrdigital.com/ai-with-python-data-preparation/",
  "title": {
  "rendered": "Data Preparation"
  },
  "content": {
  "rendered": "\n<p>We have already studied supervised as well as unsupervised machine learning algorithms. These algorithms require formatted data to start the training process. We must prepare or format data in a certain way so that it can be supplied as an input to ML algorithms.</p>\n\n\n\n<p>This chapter focuses on data preparation for machine learning algorithms.</p>\n\n\n\n<h2>Preprocessing the Data</h2>\n\n\n\n<p>In our daily life, we deal with lots of data but this data is in raw form. To provide the data as the input of machine learning algorithms, we need to convert it into a meaningful data. That is where data preprocessing comes into picture. In other simple words, we can say that before providing the data to the machine learning algorithms we need to preprocess the data.</p>\n\n\n\n<h3>Data preprocessing steps</h3>\n\n\n\n<p>Follow these steps to preprocess the data in Python −</p>\n\n\n\n<p><strong>Step 1 − Importing the useful packages&nbsp;</strong>− If we are using Python then this would be the first step for converting the data into a certain format, i.e., preprocessing. It can be done as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import numpy as np\r\nimport sklearn.preprocessing\r\n</code></pre>\n\n\n\n<p>Here we have used the following two packages −</p>\n\n\n\n<ul><li><strong>NumPy</strong>&nbsp;− Basically NumPy is a general purpose array-processing package designed to efficiently manipulate large multi-dimensional arrays of arbitrary records without sacrificing too much speed for small multi-dimensional arrays.</li><li><strong>Sklearn.preprocessing</strong>&nbsp;− This package provides many common utility functions and transformer classes to change raw feature vectors into a representation that is more suitable for machine learning algorithms.</li></ul>\n\n\n\n<p><strong>Step 2 − Defining sample data&nbsp;</strong>− After importing the packages, we need to define some sample data so that we can apply preprocessing techniques on that data. We will now define the following sample data −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Input_data = np.array(&#91;2.1, -1.9, 5.5],\r\n                      &#91;-1.5, 2.4, 3.5],\r\n                      &#91;0.5, -7.9, 5.6],\r\n                      &#91;5.9, 2.3, -5.8])</code></pre>\n\n\n\n<p><strong>Step3 − Applying preprocessing technique</strong>&nbsp;− In this step, we need to apply any of the preprocessing techniques.</p>\n\n\n\n<p>The following section describes the data preprocessing techniques.</p>\n\n\n\n<h2>Techniques for Data Preprocessing</h2>\n\n\n\n<p>The techniques for data preprocessing are described below −</p>\n\n\n\n<h3>Binarization</h3>\n\n\n\n<p>This is the preprocessing technique which is used when we need to convert our numerical values into Boolean values. We can use an inbuilt method to binarize the input data say by using 0.5 as the threshold value in the following way −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>data_binarized = preprocessing.Binarizer(threshold = 0.5).transform(input_data)\r\nprint(\"\\nBinarized data:\\n\", data_binarized)</code></pre>\n\n\n\n<p>Now, after running the above code we will get the following output, all the values above 0.5(threshold value) would be converted to 1 and all the values below 0.5 would be converted to 0.</p>\n\n\n\n<p><strong>Binarized data</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&#91;&#91; 1. 0. 1.]\r\n&#91; 0. 1. 1.]\r\n&#91; 0. 0. 1.]\r\n&#91; 1. 1. 0.]]\n</code></pre>\n\n\n\n<h3>Mean Removal</h3>\n\n\n\n<p>It is another very common preprocessing technique that is used in machine learning. Basically it is used to eliminate the mean from feature vector so that every feature is centered on zero. We can also remove the bias from the features in the feature vector. For applying mean removal preprocessing technique on the sample data, we can write the Python code shown below. The code will display the Mean and Standard deviation of the input data −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>print(\"Mean = \", input_data.mean(axis = 0))\r\nprint(\"Std deviation = \", input_data.std(axis = 0))\r\n</code></pre>\n\n\n\n<p>We will get the following output after running the above lines of code −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>     Mean = &#91; 1.75       -1.275       2.2]\r\nStd deviation = &#91; 2.71431391  4.20022321  4.69414529]\r\n    </code></pre>\n\n\n\n<p>Now, the code below will remove the Mean and Standard deviation of the input data −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>data_scaled = preprocessing.scale(input_data)\r\nprint(\"Mean =\", data_scaled.mean(axis=0))\r\nprint(\"Std deviation =\", data_scaled.std(axis = 0))</code></pre>\n\n\n\n<p>We will get the following output after running the above lines of code −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>        Mean = &#91; 1.11022302e-16 0.00000000e+00 0.00000000e+00]\r\nStd deviation = &#91; 1.             1.             1.]\r\n </code></pre>\n\n\n\n<h3>Scaling</h3>\n\n\n\n<p>It is another data preprocessing technique that is used to scale the feature vectors. Scaling of feature vectors is needed because the values of every feature can vary between many random values. In other words we can say that scaling is important because we do not want any feature to be synthetically large or small. With the help of the following Python code, we can do the scaling of our input data, i.e., feature vector −</p>\n\n\n\n<p><strong># Min max scaling</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>data_scaler_minmax = preprocessing.MinMaxScaler(feature_range=(0,1))\r\ndata_scaled_minmax = data_scaler_minmax.fit_transform(input_data)\r\nprint (\"\\nMin max scaled data:\\n\", data_scaled_minmax)</code></pre>\n\n\n\n<p>We will get the following output after running the above lines of code −</p>\n\n\n\n<p><strong>Min max scaled data</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&#91; &#91; 0.48648649  0.58252427   0.99122807]\r\n&#91;   0.          1.           0.81578947]\r\n&#91;   0.27027027  0.           1.        ]\r\n&#91;   1.          0. 99029126  0.        ]]</code></pre>\n\n\n\n<h3>Normalization</h3>\n\n\n\n<p>It is another data preprocessing technique that is used to modify the feature vectors. Such kind of modification is necessary to measure the feature vectors on a common scale. Followings are two types of normalization which can be used in machine learning −</p>\n\n\n\n<p><strong>L1 Normalization</strong></p>\n\n\n\n<p>It is also referred to as&nbsp;<strong>Least Absolute Deviations</strong>. This kind of normalization modifies the values so that the sum of the absolute values is always up to 1 in each row. It can be implemented on the input data with the help of the following Python code −</p>\n\n\n\n<pre class=\"wp-block-code\"><code># Normalize data\r\ndata_normalized_l1 = preprocessing.normalize(input_data, norm = 'l1')\r\nprint(\"\\nL1 normalized data:\\n\", data_normalized_l1)\r\n</code></pre>\n\n\n\n<p>The above line of code generates the following output &amp;miuns;</p>\n\n\n\n<pre class=\"wp-block-code\"><code>L1 normalized data:\r\n&#91;&#91; 0.22105263  -0.2          0.57894737]\r\n&#91; -0.2027027    0.32432432   0.47297297]\r\n&#91;  0.03571429  -0.56428571   0.4       ]\r\n&#91;  0.42142857   0.16428571  -0.41428571]]\n</code></pre>\n\n\n\n<p><strong>L2 Normalization</strong></p>\n\n\n\n<p>It is also referred to as&nbsp;<strong>least squares</strong>. This kind of normalization modifies the values so that the sum of the squares is always up to 1 in each row. It can be implemented on the input data with the help of the following Python code −</p>\n\n\n\n<pre class=\"wp-block-code\"><code># Normalize data\r\ndata_normalized_l2 = preprocessing.normalize(input_data, norm = 'l2')\r\nprint(\"\\nL2 normalized data:\\n\", data_normalized_l2)\r\n</code></pre>\n\n\n\n<p>The above line of code will generate the following output −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>L2 normalized data:\r\n&#91;&#91; 0.33946114  -0.30713151   0.88906489]\r\n&#91; -0.33325106   0.53320169   0.7775858 ]\r\n&#91;  0.05156558  -0.81473612   0.57753446]\r\n&#91;  0.68706914   0.26784051  -0.6754239 ]]\n</code></pre>\n\n\n\n<h2>Labeling the Data</h2>\n\n\n\n<p>We already know that data in a certain format is necessary for machine learning algorithms. Another important requirement is that the data must be labelled properly before sending it as the input of machine learning algorithms. For example, if we talk about classification, there are lot of labels on the data. Those labels are in the form of words, numbers, etc. Functions related to machine learning in&nbsp;<strong>sklearn</strong>&nbsp;expect that the data must have number labels. Hence, if the data is in other form then it must be converted to numbers. This process of transforming the word labels into numerical form is called label encoding.</p>\n\n\n\n<h3>Label encoding steps</h3>\n\n\n\n<p>Follow these steps for encoding the data labels in Python −</p>\n\n\n\n<p><strong>Step1 − Importing the useful packages</strong></p>\n\n\n\n<p>If we are using Python then this would be first step for converting the data into certain format, i.e., preprocessing. It can be done as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import numpy as np\r\nfrom sklearn import preprocessing</code></pre>\n\n\n\n<p><strong>Step 2 − Defining sample labels</strong></p>\n\n\n\n<p>After importing the packages, we need to define some sample labels so that we can create and train the label encoder. We will now define the following sample labels −</p>\n\n\n\n<pre class=\"wp-block-code\"><code># Sample input labels\r\ninput_labels = &#91;'red','black','red','green','black','yellow','white']</code></pre>\n\n\n\n<p><strong>Step 3 − Creating &amp; training of label encoder object</strong></p>\n\n\n\n<p>In this step, we need to create the label encoder and train it. The following Python code will help in doing this −</p>\n\n\n\n<pre class=\"wp-block-code\"><code># Creating the label encoder\r\nencoder = preprocessing.LabelEncoder()\r\nencoder.fit(input_labels)\n</code></pre>\n\n\n\n<p>Following would be the output after running the above Python code −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>LabelEncoder()\n</code></pre>\n\n\n\n<p><strong>Step4 − Checking the performance by encoding random ordered list</strong></p>\n\n\n\n<p>This step can be used to check the performance by encoding the random ordered list. Following Python code can be written to do the same −</p>\n\n\n\n<pre class=\"wp-block-code\"><code># encoding a set of labels\r\ntest_labels = &#91;'green','red','black']\r\nencoded_values = encoder.transform(test_labels)\r\nprint(\"\\nLabels =\", test_labels)\r\n</code></pre>\n\n\n\n<p>The labels would get printed as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Labels = &#91;'green', 'red', 'black']</code></pre>\n\n\n\n<p>Now, we can get the list of encoded values i.e. word labels converted to numbers as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>print(\"Encoded values =\", list(encoded_values))</code></pre>\n\n\n\n<p>The encoded values would get printed as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Encoded values = &#91;1, 2, 0]</code></pre>\n\n\n\n<p><strong>Step 5 − Checking the performance by decoding a random set of numbers −</strong></p>\n\n\n\n<p>This step can be used to check the performance by decoding the random set of numbers. Following Python code can be written to do the same −</p>\n\n\n\n<pre class=\"wp-block-code\"><code># decoding a set of values\r\nencoded_values = &#91;3,0,4,1]\r\ndecoded_list = encoder.inverse_transform(encoded_values)\r\nprint(\"\\nEncoded values =\", encoded_values)\n</code></pre>\n\n\n\n<p>Now, Encoded values would get printed as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Encoded values = &#91;3, 0, 4, 1]\r\nprint(\"\\nDecoded labels =\", list(decoded_list))</code></pre>\n\n\n\n<p>Now, decoded values would get printed as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Decoded labels = &#91;'white', 'black', 'yellow', 'green']</code></pre>\n\n\n\n<h3>Labeled v/s Unlabeled Data</h3>\n\n\n\n<p>Unlabeled data mainly consists of the samples of natural or human-created object that can easily be obtained from the world. They include, audio, video, photos, news articles, etc.</p>\n\n\n\n<p>On the other hand, labeled data takes a set of unlabeled data and augments each piece of that unlabeled data with some tag or label or class that is meaningful. For example, if we have a photo then the label can be put based on the content of the photo, i.e., it is photo of a boy or girl or animal or anything else. Labeling the data needs human expertise or judgment about a given piece of unlabeled data.</p>\n\n\n\n<p>There are many scenarios where unlabeled data is plentiful and easily obtained but labeled data often requires a human/expert to annotate. Semi-supervised learning attempts to combine labeled and unlabeled data to build better models.</p>\n",
  "protected": false
  },
  "excerpt": {
  "rendered": "<p>We have already studied supervised as well as unsupervised machine learning algorithms. These algorithms require formatted data to start the training process. We must prepare or format data in a certain way so that it can be supplied as an input to ML algorithms. This chapter focuses on data preparation for machine learning algorithms. Preprocessing [&hellip;]</p>\n",
  "protected": false
  },
  "author": 2,
  "featured_media": 0,
  "comment_status": "open",
  "ping_status": "open",
  "sticky": false,
  "template": "",
  "format": "standard",
  "meta": [],
  "categories": [
  4
  ],
  "tags": [],
  "_links": {
  "self": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts/67"
  }
  ],
  "collection": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts"
  }
  ],
  "about": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/types/post"
  }
  ],
  "author": [
  {
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/users/2"
  }
  ],
  "replies": [
  {
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/comments?post=67"
  }
  ],
  "version-history": [
  {
  "count": 2,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts/67/revisions"
  }
  ],
  "predecessor-version": [
  {
  "id": 82,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts/67/revisions/82"
  }
  ],
  "wp:attachment": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/media?parent=67"
  }
  ],
  "wp:term": [
  {
  "taxonomy": "category",
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/categories?post=67"
  },
  {
  "taxonomy": "post_tag",
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/tags?post=67"
  }
  ],
  "curies": [
  {
  "name": "wp",
  "href": "https://api.w.org/{rel}",
  "templated": true
  }
  ]
  }
  },
  {
  "id": 69,
  "date": "2020-09-17T11:32:53",
  "date_gmt": "2020-09-17T11:32:53",
  "guid": {
  "rendered": "http://ai.foobrdigital.com/?p=69"
  },
  "modified": "2020-09-17T18:04:57",
  "modified_gmt": "2020-09-17T18:04:57",
  "slug": "ai-with-python-supervised-learning-classification",
  "status": "publish",
  "type": "post",
  "link": "https://ai.foobrdigital.com/ai-with-python-supervised-learning-classification/",
  "title": {
  "rendered": "Supervised Learning: Classification"
  },
  "content": {
  "rendered": "\n<p>In this chapter, we will focus on implementing supervised learning − classification.</p>\n\n\n\n<p>The classification technique or model attempts to get some conclusion from observed values. In classification problem, we have the categorized output such as “Black” or “white” or “Teaching” and “Non-Teaching”. While building the classification model, we need to have training dataset that contains data points and the corresponding labels. For example, if we want to check whether the image is of a car or not. For checking this, we will build a training dataset having the two classes related to “car” and “no car”. Then we need to train the model by using the training samples. The classification models are mainly used in face recognition, spam identification, etc.</p>\n\n\n\n<h2>Steps for Building a Classifier in Python</h2>\n\n\n\n<p>For building a classifier in Python, we are going to use Python 3 and Scikit-learn which is a tool for machine learning. Follow these steps to build a classifier in Python −</p>\n\n\n\n<h3>Step 1 − Import Scikit-learn</h3>\n\n\n\n<p>This would be very first step for building a classifier in Python. In this step, we will install a Python package called Scikit-learn which is one of the best machine learning modules in Python. The following command will help us import the package −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Import Sklearn\n</code></pre>\n\n\n\n<h3>Step 2 − Import Scikit-learn’s dataset</h3>\n\n\n\n<p>In this step, we can begin working with the dataset for our machine learning model. Here, we are going to use&nbsp;<strong>the&nbsp;</strong><a rel=\"noreferrer noopener\" target=\"_blank\" href=\"http://scikit-learn.org/stable/datasets/index.html#breast-cancer-wisconsin-diagnostic-database\">Breast Cancer Wisconsin Diagnostic Database.</a>&nbsp;The dataset includes various information about breast cancer tumors, as well as classification labels of&nbsp;<strong>malignant</strong>&nbsp;or&nbsp;<strong>benign</strong>. The dataset has 569 instances, or data, on 569 tumors and includes information on 30 attributes, or features, such as the radius of the tumor, texture, smoothness, and area. With the help of the following command, we can import the Scikit-learn’s breast cancer dataset −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>from sklearn.datasets import load_breast_cancer\r\n</code></pre>\n\n\n\n<p>Now, the following command will load the dataset.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>data = load_breast_cancer()\r\n</code></pre>\n\n\n\n<p>Following is a list of important dictionary keys −</p>\n\n\n\n<ul><li>Classification label names(target_names)</li><li>The actual labels(target)</li><li>The attribute/feature names(feature_names)</li><li>The attribute (data)</li></ul>\n\n\n\n<p>Now, with the help of the following command, we can create new variables for each important set of information and assign the data. In other words, we can organize the data with the following commands −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>label_names = data&#91;'target_names']\r\nlabels = data&#91;'target']\r\nfeature_names = data&#91;'feature_names']\r\nfeatures = data&#91;'data']\n</code></pre>\n\n\n\n<p>Now, to make it clearer we can print the class labels, the first data instance’s label, our feature names and the feature’s value with the help of the following commands −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>print(label_names)\n</code></pre>\n\n\n\n<p>The above command will print the class names which are malignant and benign respectively. It is shown as the output below −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&#91;'malignant' 'benign']\n</code></pre>\n\n\n\n<p>Now, the command below will show that they are mapped to binary values 0 and 1. Here 0 represents malignant cancer and 1 represents benign cancer. You will receive the following output −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>print(labels&#91;0])\r\n0\r\n</code></pre>\n\n\n\n<p>The two commands given below will produce the feature names and feature values.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>print(feature_names&#91;0])\r\nmean radius\r\nprint(features&#91;0])\r\n&#91; 1.79900000e+01 1.03800000e+01 1.22800000e+02 1.00100000e+03\r\n  1.18400000e-01 2.77600000e-01 3.00100000e-01 1.47100000e-01\r\n  2.41900000e-01 7.87100000e-02 1.09500000e+00 9.05300000e-01\r\n  8.58900000e+00 1.53400000e+02 6.39900000e-03 4.90400000e-02\r\n  5.37300000e-02 1.58700000e-02 3.00300000e-02 6.19300000e-03\r\n  2.53800000e+01 1.73300000e+01 1.84600000e+02 2.01900000e+03\r\n  1.62200000e-01 6.65600000e-01 7.11900000e-01 2.65400000e-01\r\n  4.60100000e-01 1.18900000e-01]\r\n</code></pre>\n\n\n\n<p>From the above output, we can see that the first data instance is a malignant tumor the radius of which is 1.7990000e+01.</p>\n\n\n\n<h3>Step 3 − Organizing data into sets</h3>\n\n\n\n<p>In this step, we will divide our data into two parts namely a training set and a test set. Splitting the data into these sets is very important because we have to test our model on the unseen data. To split the data into sets, sklearn has a function called the&nbsp;<strong>train_test_split()</strong>&nbsp;function. With the help of the following commands, we can split the data in these sets −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>from sklearn.model_selection import train_test_split\n</code></pre>\n\n\n\n<p>The above command will import the&nbsp;<strong>train_test_split</strong>&nbsp;function from sklearn and the command below will split the data into training and test data. In the example given below, we are using 40 % of the data for testing and the remaining data would be used for training the model.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>train, test, train_labels, test_labels = train_test_split(features,labels,test_size = 0.40, random_state = 42)</code></pre>\n\n\n\n<h3>Step 4 − Building the model</h3>\n\n\n\n<p>In this step, we will be building our model. We are going to use Naïve Bayes algorithm for building the model. Following commands can be used to build the model −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>from sklearn.naive_bayes import GaussianNB\n</code></pre>\n\n\n\n<p>The above command will import the GaussianNB module. Now, the following command will help you initialize the model.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>gnb = GaussianNB()\r\n</code></pre>\n\n\n\n<p>We will train the model by fitting it to the data by using gnb.fit().</p>\n\n\n\n<pre class=\"wp-block-code\"><code>model = gnb.fit(train, train_labels)</code></pre>\n\n\n\n<h3>Step 5 − Evaluating the model and its accuracy</h3>\n\n\n\n<p>In this step, we are going to evaluate the model by making predictions on our test data. Then we will find out its accuracy also. For making predictions, we will use the predict() function. The following command will help you do this −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>preds = gnb.predict(test)\r\nprint(preds)\r\n\r\n&#91;1 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1\r\n 0 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 \r\n 0 1 1 0 0 1 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 \r\n 0 1 1 1 1 1 1 1 1 0 0 1 0 0 1 0 0 1 1 1 0 1 1 0 1 1 0 0 0 \r\n 1 1 1 0 0 1 1 0 1 0 0 1 1 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 \r\n 1 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 \r\n 1 1 0 1 1 1 1 1 1 0 0 0 1 1 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 \r\n 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 0 0 1 1 0 1]\n</code></pre>\n\n\n\n<p>The above series of 0s and 1s are the predicted values for the tumor classes – malignant and benign.</p>\n\n\n\n<p>Now, by comparing the two arrays namely&nbsp;<strong>test_labels</strong>&nbsp;and&nbsp;<strong>preds</strong>, we can find out the accuracy of our model. We are going to use the&nbsp;<strong>accuracy_score()</strong>&nbsp;function to determine the accuracy. Consider the following command for this −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>from sklearn.metrics import accuracy_score\r\nprint(accuracy_score(test_labels,preds))\r\n0.951754385965\r\n</code></pre>\n\n\n\n<p>The result shows that the NaïveBayes classifier is 95.17% accurate.</p>\n\n\n\n<p>In this way, with the help of the above steps we can build our classifier in Python.</p>\n\n\n\n<h2>Building Classifier in Python</h2>\n\n\n\n<p>In this section, we will learn how to build a classifier in Python.</p>\n\n\n\n<h3>Naïve Bayes Classifier</h3>\n\n\n\n<p>Naïve Bayes is a classification technique used to build classifier using the Bayes theorem. The assumption is that the predictors are independent. In simple words, it assumes that the presence of a particular feature in a class is unrelated to the presence of any other feature. For building Naïve Bayes classifier we need to use the python library called scikit learn. There are three types of Naïve Bayes models named&nbsp;<strong>Gaussian, Multinomial and Bernoulli</strong>&nbsp;under scikit learn package.</p>\n\n\n\n<p>To build a Naïve Bayes machine learning classifier model, we need the following &amp;minus</p>\n\n\n\n<h3>Dataset</h3>\n\n\n\n<p>We are going to use the dataset named&nbsp;<a rel=\"noreferrer noopener\" target=\"_blank\" href=\"http://scikit-learn.org/stable/datasets/index.html#breast-cancer-wisconsin-diagnostic-database\">Breast Cancer Wisconsin Diagnostic Database.</a>&nbsp;The dataset includes various information about breast cancer tumors, as well as classification labels of&nbsp;<strong>malignant</strong>&nbsp;or&nbsp;<strong>benign</strong>. The dataset has 569 instances, or data, on 569 tumors and includes information on 30 attributes, or features, such as the radius of the tumor, texture, smoothness, and area. We can import this dataset from sklearn package.</p>\n\n\n\n<h3>Naïve Bayes Model</h3>\n\n\n\n<p>For building Naïve Bayes classifier, we need a Naïve Bayes model. As told earlier, there are three types of Naïve Bayes models named&nbsp;<strong>Gaussian, Multinomial</strong>&nbsp;and&nbsp;<strong>Bernoulli</strong>&nbsp;under scikit learn package. Here, in the following example we are going to use the Gaussian Naïve Bayes model.</p>\n\n\n\n<p>By using the above, we are going to build a Naïve Bayes machine learning model to use the tumor information to predict whether or not a tumor is malignant or benign.</p>\n\n\n\n<p>To begin with, we need to install the sklearn module. It can be done with the help of the following command −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Import Sklearn\n</code></pre>\n\n\n\n<p>Now, we need to import the dataset named Breast Cancer Wisconsin Diagnostic Database.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>from sklearn.datasets import load_breast_cancer</code></pre>\n\n\n\n<p>Now, the following command will load the dataset.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>data = load_breast_cancer()\r\n﻿</code></pre>\n\n\n\n<p>The data can be organized as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>label_names = data&#91;'target_names']\r\nlabels = data&#91;'target']\r\nfeature_names = data&#91;'feature_names']\r\nfeatures = data&#91;'data']</code></pre>\n\n\n\n<p>Now, to make it clearer we can print the class labels, the first data instance’s label, our feature names and the feature’s value with the help of following commands −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>print(label_names)\n</code></pre>\n\n\n\n<p>The above command will print the class names which are malignant and benign respectively. It is shown as the output below −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&#91;'malignant' 'benign']\n</code></pre>\n\n\n\n<p>Now, the command given below will show that they are mapped to binary values 0 and 1. Here 0 represents malignant cancer and 1 represents benign cancer. It is shown as the output below −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>print(labels&#91;0])\r\n0\n</code></pre>\n\n\n\n<p>The following two commands will produce the feature names and feature values.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>print(feature_names&#91;0])\r\nmean radius\r\nprint(features&#91;0])\r\n\r\n&#91; 1.79900000e+01 1.03800000e+01 1.22800000e+02 1.00100000e+03\r\n  1.18400000e-01 2.77600000e-01 3.00100000e-01 1.47100000e-01\r\n  2.41900000e-01 7.87100000e-02 1.09500000e+00 9.05300000e-01\r\n  8.58900000e+00 1.53400000e+02 6.39900000e-03 4.90400000e-02\r\n  5.37300000e-02 1.58700000e-02 3.00300000e-02 6.19300000e-03\r\n  2.53800000e+01 1.73300000e+01 1.84600000e+02 2.01900000e+03\r\n  1.62200000e-01 6.65600000e-01 7.11900000e-01 2.65400000e-01\r\n  4.60100000e-01 1.18900000e-01]\n</code></pre>\n\n\n\n<p>From the above output, we can see that the first data instance is a malignant tumor the main radius of which is 1.7990000e+01.</p>\n\n\n\n<p>For testing our model on unseen data, we need to split our data into training and testing data. It can be done with the help of the following code −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>from sklearn.model_selection import train_test_split\n</code></pre>\n\n\n\n<p>The above command will import the&nbsp;<strong>train_test_split</strong>&nbsp;function from sklearn and the command below will split the data into training and test data. In the below example, we are using 40 % of the data for testing and the remining data would be used for training the model.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>train, test, train_labels, test_labels = \r\ntrain_test_split(features,labels,test_size = 0.40, random_state = 42)</code></pre>\n\n\n\n<p>Now, we are building the model with the following commands −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>from sklearn.naive_bayes import GaussianNB\n</code></pre>\n\n\n\n<p>The above command will import the&nbsp;<strong>GaussianNB</strong>&nbsp;module. Now, with the command given below, we need to initialize the model.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>gnb = GaussianNB()</code></pre>\n\n\n\n<p>We will train the model by fitting it to the data by using&nbsp;<strong>gnb.fit()</strong>.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>model = gnb.fit(train, train_labels)</code></pre>\n\n\n\n<p>Now, evaluate the model by making prediction on the test data and it can be done as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>preds = gnb.predict(test)\r\nprint(preds)\r\n\r\n&#91;1 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1\r\n 0 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 \r\n 0 1 1 0 0 1 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 \r\n 0 1 1 1 1 1 1 1 1 0 0 1 0 0 1 0 0 1 1 1 0 1 1 0 1 1 0 0 0 \r\n 1 1 1 0 0 1 1 0 1 0 0 1 1 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 \r\n 1 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 \r\n 1 1 0 1 1 1 1 1 1 0 0 0 1 1 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 \r\n 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 0 0 1 1 0 1]</code></pre>\n\n\n\n<p>The above series of 0s and 1s are the predicted values for the tumor classes i.e. malignant and benign.</p>\n\n\n\n<p>Now, by comparing the two arrays namely&nbsp;<strong>test_labels</strong>&nbsp;and&nbsp;<strong>preds</strong>, we can find out the accuracy of our model. We are going to use the&nbsp;<strong>accuracy_score()</strong>&nbsp;function to determine the accuracy. Consider the following command −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>from sklearn.metrics import accuracy_score\r\nprint(accuracy_score(test_labels,preds))\r\n0.951754385965\r\n</code></pre>\n\n\n\n<p>The result shows that NaïveBayes classifier is 95.17% accurate.</p>\n\n\n\n<p>That was machine learning classifier based on the Naïve Bayse Gaussian model.</p>\n\n\n\n<h3>Support Vector Machines (SVM)</h3>\n\n\n\n<p>Basically, Support vector machine (SVM) is a supervised machine learning algorithm that can be used for both regression and classification. The main concept of SVM is to plot each data item as a point in n-dimensional space with the value of each feature being the value of a particular coordinate. Here n would be the features we would have. Following is a simple graphical representation to understand the concept of SVM −</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://www.tutorialspoint.com/artificial_intelligence_with_python/images/support_vector_machine_i2.jpg\" alt=\"Support Vector Machines 2\"/></figure>\n\n\n\n<p>In the above diagram, we have two features. Hence, we first need to plot these two variables in two dimensional space where each point has two co-ordinates, called support vectors. The line splits the data into two different classified groups. This line would be the classifier.</p>\n\n\n\n<p>Here, we are going to build an SVM classifier by using scikit-learn and iris dataset. Scikitlearn library has the&nbsp;<strong>sklearn.svm</strong>&nbsp;module and provides sklearn.svm.svc for classification. The SVM classifier to predict the class of the iris plant based on 4 features are shown below.</p>\n\n\n\n<h3>Dataset</h3>\n\n\n\n<p>We will use the iris dataset which contains 3 classes of 50 instances each, where each class refers to a type of iris plant. Each instance has the four features namely sepal length, sepal width, petal length and petal width. The SVM classifier to predict the class of the iris plant based on 4 features is shown below.</p>\n\n\n\n<h3>Kernel</h3>\n\n\n\n<p>It is a technique used by SVM. Basically these are the functions which take low-dimensional input space and transform it to a higher dimensional space. It converts non-separable problem to separable problem. The kernel function can be any one among linear, polynomial, rbf and sigmoid. In this example, we will use the linear kernel.</p>\n\n\n\n<p>Let us now import the following packages −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\r\nimport numpy as np\r\nfrom sklearn import svm, datasets\r\nimport matplotlib.pyplot as plt</code></pre>\n\n\n\n<p>Now, load the input data −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>iris = datasets.load_iris()</code></pre>\n\n\n\n<p>We are taking first two features −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>X = iris.data&#91;:, :2]\r\ny = iris.target</code></pre>\n\n\n\n<p>We will plot the support vector machine boundaries with original data. We are creating a mesh to plot.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>x_min, x_max = X&#91;:, 0].min() - 1, X&#91;:, 0].max() + 1\r\ny_min, y_max = X&#91;:, 1].min() - 1, X&#91;:, 1].max() + 1\r\nh = (x_max / x_min)/100\r\nxx, yy = np.meshgrid(np.arange(x_min, x_max, h),\r\nnp.arange(y_min, y_max, h))\r\nX_plot = np.c_&#91;xx.ravel(), yy.ravel()]</code></pre>\n\n\n\n<p>We need to give the value of regularization parameter.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>C = 1.0</code></pre>\n\n\n\n<p>We need to create the SVM classifier object.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Svc_classifier = svm_classifier.SVC(kernel='linear', \r\nC=C, decision_function_shape = 'ovr').fit(X, y)\r\nZ = svc_classifier.predict(X_plot)\r\nZ = Z.reshape(xx.shape)\r\nplt.figure(figsize = (15, 5))\r\nplt.subplot(121)\r\nplt.contourf(xx, yy, Z, cmap = plt.cm.tab10, alpha = 0.3)\r\nplt.scatter(X&#91;:, 0], X&#91;:, 1], c = y, cmap = plt.cm.Set1)\r\nplt.xlabel('Sepal length')\r\nplt.ylabel('Sepal width')\r\nplt.xlim(xx.min(), xx.max())\r\nplt.title('SVC with linear kernel')</code></pre>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://www.tutorialspoint.com/artificial_intelligence_with_python/images/svc_with_liner_kernel.jpg\" alt=\"svc with liner kernel\"/></figure>\n\n\n\n<h2>Logistic Regression</h2>\n\n\n\n<p>Basically, logistic regression model is one of the members of supervised classification algorithm family. Logistic regression measures the relationship between dependent variables and independent variables by estimating the probabilities using a logistic function.</p>\n\n\n\n<p>Here, if we talk about dependent and independent variables then dependent variable is the target class variable we are going to predict and on the other side the independent variables are the features we are going to use to predict the target class.</p>\n\n\n\n<p>In logistic regression, estimating the probabilities means to predict the likelihood occurrence of the event. For example, the shop owner would like to predict the customer who entered into the shop will buy the play station (for example) or not. There would be many features of customer − gender, age, etc. which would be observed by the shop keeper to predict the likelihood occurrence, i.e., buying a play station or not. The logistic function is the sigmoid curve that is used to build the function with various parameters.</p>\n\n\n\n<h3>Prerequisites</h3>\n\n\n\n<p>Before building the classifier using logistic regression, we need to install the Tkinter package on our system. It can be installed from&nbsp;<a rel=\"noreferrer noopener\" target=\"_blank\" href=\"https://docs.python.org/2/library/tkinter.html\">https://docs.python.org/2/library/tkinter.html</a>.</p>\n\n\n\n<p>Now, with the help of the code given below, we can create a classifier using logistic regression −</p>\n\n\n\n<p>First, we will import some packages −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import numpy as np\r\nfrom sklearn import linear_model\r\nimport matplotlib.pyplot as plt</code></pre>\n\n\n\n<p>Now, we need to define the sample data which can be done as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>X = np.array(&#91;&#91;2, 4.8], &#91;2.9, 4.7], &#91;2.5, 5], &#91;3.2, 5.5], &#91;6, 5], &#91;7.6, 4],\r\n              &#91;3.2, 0.9], &#91;2.9, 1.9],&#91;2.4, 3.5], &#91;0.5, 3.4], &#91;1, 4], &#91;0.9, 5.9]])\r\ny = np.array(&#91;0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3])</code></pre>\n\n\n\n<p>Next, we need to create the logistic regression classifier, which can be done as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Classifier_LR = linear_model.LogisticRegression(solver = 'liblinear', C = 75)</code></pre>\n\n\n\n<p>Last but not the least, we need to train this classifier −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Classifier_LR.fit(X, y)</code></pre>\n\n\n\n<p>Now, how we can visualize the output? It can be done by creating a function named Logistic_visualize() −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Def Logistic_visualize(Classifier_LR, X, y):\r\n   min_x, max_x = X&#91;:, 0].min() - 1.0, X&#91;:, 0].max() + 1.0\r\n   min_y, max_y = X&#91;:, 1].min() - 1.0, X&#91;:, 1].max() + 1.0\r\n</code></pre>\n\n\n\n<p>In the above line, we defined the minimum and maximum values X and Y to be used in mesh grid. In addition, we will define the step size for plotting the mesh grid.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>mesh_step_size = 0.02</code></pre>\n\n\n\n<p>Let us define the mesh grid of X and Y values as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>x_vals, y_vals = np.meshgrid(np.arange(min_x, max_x, mesh_step_size),\r\n                 np.arange(min_y, max_y, mesh_step_size))</code></pre>\n\n\n\n<p>With the help of following code, we can run the classifier on the mesh grid −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>output = classifier.predict(np.c_&#91;x_vals.ravel(), y_vals.ravel()])\r\noutput = output.reshape(x_vals.shape)\r\nplt.figure()\r\nplt.pcolormesh(x_vals, y_vals, output, cmap = plt.cm.gray)\r\n \r\nplt.scatter(X&#91;:, 0], X&#91;:, 1], c = y, s = 75, edgecolors = 'black', \r\nlinewidth=1, cmap = plt.cm.Paired)</code></pre>\n\n\n\n<p>The following line of code will specify the boundaries of the plot</p>\n\n\n\n<pre class=\"wp-block-code\"><code>plt.xlim(x_vals.min(), x_vals.max())\r\nplt.ylim(y_vals.min(), y_vals.max())\r\nplt.xticks((np.arange(int(X&#91;:, 0].min() - 1), int(X&#91;:, 0].max() + 1), 1.0)))\r\nplt.yticks((np.arange(int(X&#91;:, 1].min() - 1), int(X&#91;:, 1].max() + 1), 1.0)))\r\nplt.show()</code></pre>\n\n\n\n<p>Now, after running the code we will get the following output, logistic regression classifier −</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://www.tutorialspoint.com/artificial_intelligence_with_python/images/logistic_regression.jpg\" alt=\"Logistic Regression\"/></figure>\n\n\n\n<h2>Decision Tree Classifier</h2>\n\n\n\n<p>A decision tree is basically a binary tree flowchart where each node splits a group of observations according to some feature variable.</p>\n\n\n\n<p>Here, we are building a Decision Tree classifier for predicting male or female. We will take a very small data set having 19 samples. These samples would consist of two features – ‘height’ and ‘length of hair’.</p>\n\n\n\n<h3>Prerequisite</h3>\n\n\n\n<p>For building the following classifier, we need to install&nbsp;<strong>pydotplus</strong>&nbsp;and&nbsp;<strong>graphviz</strong>. Basically, graphviz is a tool for drawing graphics using dot files and&nbsp;<strong>pydotplus</strong>&nbsp;is a module to Graphviz’s Dot language. It can be installed with the package manager or pip.</p>\n\n\n\n<p>Now, we can build the decision tree classifier with the help of the following Python code −</p>\n\n\n\n<p>To begin with, let us import some important libraries as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import pydotplus\r\nfrom sklearn import tree\r\nfrom sklearn.datasets import load_iris\r\nfrom sklearn.metrics import classification_report\r\nfrom sklearn import cross_validation\r\nimport collections</code></pre>\n\n\n\n<p>Now, we need to provide the dataset as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>X = &#91;&#91;165,19],&#91;175,32],&#91;136,35],&#91;174,65],&#91;141,28],&#91;176,15],&#91;131,32],\r\n&#91;166,6],&#91;128,32],&#91;179,10],&#91;136,34],&#91;186,2],&#91;126,25],&#91;176,28],&#91;112,38],\r\n&#91;169,9],&#91;171,36],&#91;116,25],&#91;196,25]]\r\n\r\nY = &#91;'Man','Woman','Woman','Man','Woman','Man','Woman','Man','Woman',\r\n'Man','Woman','Man','Woman','Woman','Woman','Man','Woman','Woman','Man']\r\ndata_feature_names = &#91;'height','length of hair']\r\n\r\nX_train, X_test, Y_train, Y_test = cross_validation.train_test_split\r\n(X, Y, test_size=0.40, random_state=5)</code></pre>\n\n\n\n<p>After providing the dataset, we need to fit the model which can be done as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>clf = tree.DecisionTreeClassifier()\r\nclf = clf.fit(X,Y)</code></pre>\n\n\n\n<p>Prediction can be made with the help of the following Python code −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>prediction = clf.predict(&#91;&#91;133,37]])\r\nprint(prediction)\n</code></pre>\n\n\n\n<p>We can visualize the decision tree with the help of the following Python code −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>dot_data = tree.export_graphviz(clf,feature_names = data_feature_names,\r\n            out_file = None,filled = True,rounded = True)\r\ngraph = pydotplus.graph_from_dot_data(dot_data)\r\ncolors = ('orange', 'yellow')\r\nedges = collections.defaultdict(list)\r\n\r\nfor edge in graph.get_edge_list():\r\nedges&#91;edge.get_source()].append(int(edge.get_destination()))\r\n\r\nfor edge in edges: edges&#91;edge].sort()\r\n\r\nfor i in range(2):dest = graph.get_node(str(edges&#91;edge]&#91;i]))&#91;0]\r\ndest.set_fillcolor(colors&#91;i])\r\ngraph.write_png('Decisiontree16.png')\n</code></pre>\n\n\n\n<p>It will give the prediction for the above code as&nbsp;<strong>[‘Woman’]</strong>&nbsp;and create the following decision tree −</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://www.tutorialspoint.com/artificial_intelligence_with_python/images/deision_tree.jpg\" alt=\"deision_tree\"/></figure>\n\n\n\n<p>We can change the values of features in prediction to test it.</p>\n\n\n\n<h2>Random Forest Classifier</h2>\n\n\n\n<p>As we know that ensemble methods are the methods which combine machine learning models into a more powerful machine learning model. Random Forest, a collection of decision trees, is one of them. It is better than single decision tree because while retaining the predictive powers it can reduce over-fitting by averaging the results. Here, we are going to implement the random forest model on scikit learn cancer dataset.</p>\n\n\n\n<p>Import the necessary packages −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>from sklearn.ensemble import RandomForestClassifier\r\nfrom sklearn.model_selection import train_test_split\r\nfrom sklearn.datasets import load_breast_cancer\r\ncancer = load_breast_cancer()\r\nimport matplotlib.pyplot as plt\r\nimport numpy as np</code></pre>\n\n\n\n<p>Now, we need to provide the dataset which can be done as follows &amp;minus</p>\n\n\n\n<pre class=\"wp-block-code\"><code>cancer = load_breast_cancer()\r\nX_train, X_test, y_train,\r\ny_test = train_test_split(cancer.data, cancer.target, random_state = 0)</code></pre>\n\n\n\n<p>After providing the dataset, we need to fit the model which can be done as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>forest = RandomForestClassifier(n_estimators = 50, random_state = 0)\r\nforest.fit(X_train,y_train)</code></pre>\n\n\n\n<p>Now, get the accuracy on training as well as testing subset: if we will increase the number of estimators then, the accuracy of testing subset would also be increased.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>print('Accuracy on the training subset:(:.3f)',format(forest.score(X_train,y_train)))\r\nprint('Accuracy on the training subset:(:.3f)',format(forest.score(X_test,y_test)))</code></pre>\n\n\n\n<h3>Output</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>Accuracy on the training subset:(:.3f) 1.0\r\nAccuracy on the training subset:(:.3f) 0.965034965034965\r\n</code></pre>\n\n\n\n<p>Now, like the decision tree, random forest has the&nbsp;<strong>feature_importance</strong>&nbsp;module which will provide a better view of feature weight than decision tree. It can be plot and visualize as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>n_features = cancer.data.shape&#91;1]\r\nplt.barh(range(n_features),forest.feature_importances_, align='center')\r\nplt.yticks(np.arange(n_features),cancer.feature_names)\r\nplt.xlabel('Feature Importance')\r\nplt.ylabel('Feature')\r\nplt.show()</code></pre>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://www.tutorialspoint.com/artificial_intelligence_with_python/images/feature_importance.jpg\" alt=\"Feature Importance\"/></figure>\n\n\n\n<h2>Performance of a classifier</h2>\n\n\n\n<p>After implementing a machine learning algorithm, we need to find out how effective the model is. The criteria for measuring the effectiveness may be based upon datasets and metric. For evaluating different machine learning algorithms, we can use different performance metrics. For example, suppose if a classifier is used to distinguish between images of different objects, we can use the classification performance metrics such as average accuracy, AUC, etc. In one or other sense, the metric we choose to evaluate our machine learning model is very important because the choice of metrics influences how the performance of a machine learning algorithm is measured and compared. Following are some of the metrics −</p>\n\n\n\n<h3>Confusion Matrix</h3>\n\n\n\n<p>Basically it is used for classification problem where the output can be of two or more types of classes. It is the easiest way to measure the performance of a classifier. A confusion matrix is basically a table with two dimensions namely “Actual” and “Predicted”. Both the dimensions have “True Positives (TP)”, “True Negatives (TN)”, “False Positives (FP)”, “False Negatives (FN)”.</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://www.tutorialspoint.com/artificial_intelligence_with_python/images/confusion_matrix.jpg\" alt=\"confusion matrix\"/></figure>\n\n\n\n<p>In the confusion matrix above, 1 is for positive class and 0 is for negative class.</p>\n\n\n\n<p>Following are the terms associated with Confusion matrix −</p>\n\n\n\n<ul><li><strong>True Positives −</strong>&nbsp;TPs are the cases when the actual class of data point was 1 and the predicted is also 1.</li><li><strong>True Negatives −</strong>&nbsp;TNs are the cases when the actual class of the data point was 0 and the predicted is also 0.</li><li><strong>False Positives −</strong>&nbsp;FPs are the cases when the actual class of data point was 0 and the predicted is also 1.</li><li><strong>False Negatives −</strong>&nbsp;FNs are the cases when the actual class of the data point was 1 and the predicted is also 0.</li></ul>\n\n\n\n<h3>Accuracy</h3>\n\n\n\n<p>The confusion matrix itself is not a performance measure as such but almost all the performance matrices are based on the confusion matrix. One of them is accuracy. In classification problems, it may be defined as the number of correct predictions made by the model over all kinds of predictions made. The formula for calculating the accuracy is as follows −</p>\n\n\n\n<p>$$Accuracy = \\frac{TP+TN}{TP+FP+FN+TN}$$</p>\n\n\n\n<h3>Precision</h3>\n\n\n\n<p>It is mostly used in document retrievals. It may be defined as how many of the returned documents are correct. Following is the formula for calculating the precision −</p>\n\n\n\n<p>$$Precision = \\frac{TP}{TP+FP}$$</p>\n\n\n\n<h3>Recall or Sensitivity</h3>\n\n\n\n<p>It may be defined as how many of the positives do the model return. Following is the formula for calculating the recall/sensitivity of the model −</p>\n\n\n\n<p>$$Recall = \\frac{TP}{TP+FN}$$</p>\n\n\n\n<h3>Specificity</h3>\n\n\n\n<p>It may be defined as how many of the negatives do the model return. It is exactly opposite to recall. Following is the formula for calculating the specificity of the model −</p>\n\n\n\n<p>$$Specificity = \\frac{TN}{TN+FP}$$</p>\n\n\n\n<h2>Class Imbalance Problem</h2>\n\n\n\n<p>Class imbalance is the scenario where the number of observations belonging to one class is significantly lower than those belonging to the other classes. For example, this problem is prominent in the scenario where we need to identify the rare diseases, fraudulent transactions in bank etc.</p>\n\n\n\n<h3>Example of imbalanced classes</h3>\n\n\n\n<p>Let us consider an example of fraud detection data set to understand the concept of imbalanced class −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Total observations = 5000\r\nFraudulent Observations = 50\r\nNon-Fraudulent Observations = 4950\r\nEvent Rate = 1%</code></pre>\n\n\n\n<h3>Solution</h3>\n\n\n\n<p><strong>Balancing the classes’</strong>&nbsp;acts as a solution to imbalanced classes. The main objective of balancing the classes is to either increase the frequency of the minority class or decrease the frequency of the majority class. Following are the approaches to solve the issue of imbalances classes −</p>\n\n\n\n<h3>Re-Sampling</h3>\n\n\n\n<p>Re-sampling is a series of methods used to reconstruct the sample data sets − both training sets and testing sets. Re-sampling is done to improve the accuracy of model. Following are some re-sampling techniques −</p>\n\n\n\n<ul><li><strong>Random Under-Sampling</strong>&nbsp;− This technique aims to balance class distribution by randomly eliminating majority class examples. This is done until the majority and minority class instances are balanced out.</li></ul>\n\n\n\n<pre class=\"wp-block-code\"><code>Total observations = 5000\r\nFraudulent Observations = 50\r\nNon-Fraudulent Observations = 4950\r\nEvent Rate = 1%</code></pre>\n\n\n\n<p>In this case, we are taking 10% samples without replacement from non-fraud instances and then combine them with the fraud instances −</p>\n\n\n\n<p>Non-fraudulent observations after random under sampling = 10% of 4950 = 495</p>\n\n\n\n<p>Total observations after combining them with fraudulent observations = 50+495 = 545</p>\n\n\n\n<p>Hence now, the event rate for new dataset after under sampling = 9%</p>\n\n\n\n<p>The main advantage of this technique is that it can reduce run time and improve storage. But on the other side, it can discard useful information while reducing the number of training data samples.</p>\n\n\n\n<ul><li><strong>Random Over-Sampling</strong>&nbsp;− This technique aims to balance class distribution by increasing the number of instances in the minority class by replicating them.</li></ul>\n\n\n\n<pre class=\"wp-block-code\"><code>Total observations = 5000\r\nFraudulent Observations = 50\r\nNon-Fraudulent Observations = 4950\r\nEvent Rate = 1%</code></pre>\n\n\n\n<p>In case we are replicating 50 fraudulent observations 30 times then fraudulent observations after replicating the minority class observations would be 1500. And then total observations in the new data after oversampling would be 4950+1500 = 6450. Hence the event rate for the new data set would be 1500/6450 = 23%.</p>\n\n\n\n<p>The main advantage of this method is that there would be no loss of useful information. But on the other hand, it has the increased chances of over-fitting because it replicates the minority class events.</p>\n\n\n\n<h2>Ensemble Techniques</h2>\n\n\n\n<p>This methodology basically is used to modify existing classification algorithms to make them appropriate for imbalanced data sets. In this approach we construct several two stage classifier from the original data and then aggregate their predictions. Random forest classifier is an example of ensemble based classifier.</p>\n",
  "protected": false
  },
  "excerpt": {
  "rendered": "<p>In this chapter, we will focus on implementing supervised learning − classification. The classification technique or model attempts to get some conclusion from observed values. In classification problem, we have the categorized output such as “Black” or “white” or “Teaching” and “Non-Teaching”. While building the classification model, we need to have training dataset that contains [&hellip;]</p>\n",
  "protected": false
  },
  "author": 2,
  "featured_media": 0,
  "comment_status": "open",
  "ping_status": "open",
  "sticky": false,
  "template": "",
  "format": "standard",
  "meta": [],
  "categories": [
  4
  ],
  "tags": [],
  "_links": {
  "self": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts/69"
  }
  ],
  "collection": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts"
  }
  ],
  "about": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/types/post"
  }
  ],
  "author": [
  {
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/users/2"
  }
  ],
  "replies": [
  {
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/comments?post=69"
  }
  ],
  "version-history": [
  {
  "count": 2,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts/69/revisions"
  }
  ],
  "predecessor-version": [
  {
  "id": 83,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts/69/revisions/83"
  }
  ],
  "wp:attachment": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/media?parent=69"
  }
  ],
  "wp:term": [
  {
  "taxonomy": "category",
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/categories?post=69"
  },
  {
  "taxonomy": "post_tag",
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/tags?post=69"
  }
  ],
  "curies": [
  {
  "name": "wp",
  "href": "https://api.w.org/{rel}",
  "templated": true
  }
  ]
  }
  },
  {
  "id": 71,
  "date": "2020-09-17T11:35:46",
  "date_gmt": "2020-09-17T11:35:46",
  "guid": {
  "rendered": "http://ai.foobrdigital.com/?p=71"
  },
  "modified": "2020-09-17T18:04:46",
  "modified_gmt": "2020-09-17T18:04:46",
  "slug": "ai-with-python-supervised-learning-regression",
  "status": "publish",
  "type": "post",
  "link": "https://ai.foobrdigital.com/ai-with-python-supervised-learning-regression/",
  "title": {
  "rendered": "Supervised Learning: Regression"
  },
  "content": {
  "rendered": "\n<p>Regression is one of the most important statistical and machine learning tools. We would not be wrong to say that the journey of machine learning starts from regression. It may be defined as the parametric technique that allows us to make decisions based upon data or in other words allows us to make predictions based upon data by learning the relationship between input and output variables. Here, the output variables dependent on the input variables, are continuous-valued real numbers. In regression, the relationship between input and output variables matters and it helps us in understanding how the value of the output variable changes with the change of input variable. Regression is frequently used for prediction of prices, economics, variations, and so on.</p>\n\n\n\n<h2>Building Regressors in Python</h2>\n\n\n\n<p>In this section, we will learn how to build single as well as multivariable regressor.</p>\n\n\n\n<h3>Linear Regressor/Single Variable Regressor</h3>\n\n\n\n<p>Let us important a few required packages −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import numpy as np\r\nfrom sklearn import linear_model\r\nimport sklearn.metrics as sm\r\nimport matplotlib.pyplot as plt</code></pre>\n\n\n\n<p>Now, we need to provide the input data and we have saved our data in the file named linear.txt.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>input = 'D:/ProgramData/linear.txt'</code></pre>\n\n\n\n<p>We need to load this data by using the&nbsp;<strong>np.loadtxt</strong>&nbsp;function.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>input_data = np.loadtxt(input, delimiter=',')\r\nX, y = input_data&#91;:, :-1], input_data&#91;:, -1]</code></pre>\n\n\n\n<p>The next step would be to train the model. Let us give training and testing samples.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>training_samples = int(0.6 * len(X))\r\ntesting_samples = len(X) - num_training\r\n\r\nX_train, y_train = X&#91;:training_samples], y&#91;:training_samples]\r\n\r\nX_test, y_test = X&#91;training_samples:], y&#91;training_samples:]</code></pre>\n\n\n\n<p>Now, we need to create a linear regressor object.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>reg_linear = linear_model.LinearRegression()</code></pre>\n\n\n\n<p>Train the object with the training samples.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>reg_linear.fit(X_train, y_train)</code></pre>\n\n\n\n<p>We need to do the prediction with the testing data.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>y_test_pred = reg_linear.predict(X_test)</code></pre>\n\n\n\n<p>Now plot and visualize the data.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>plt.scatter(X_test, y_test, color = 'red')\r\nplt.plot(X_test, y_test_pred, color = 'black', linewidth = 2)\r\nplt.xticks(())\r\nplt.yticks(())\r\nplt.show()</code></pre>\n\n\n\n<h3>Output</h3>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://www.tutorialspoint.com/artificial_intelligence_with_python/images/linear_regressor.jpg\" alt=\"Linear Regressor\"/></figure>\n\n\n\n<p>Now, we can compute the performance of our linear regression as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>print(\"Performance of Linear regressor:\")\r\nprint(\"Mean absolute error =\", round(sm.mean_absolute_error(y_test, y_test_pred), 2))\r\nprint(\"Mean squared error =\", round(sm.mean_squared_error(y_test, y_test_pred), 2))\r\nprint(\"Median absolute error =\", round(sm.median_absolute_error(y_test, y_test_pred), 2))\r\nprint(\"Explain variance score =\", round(sm.explained_variance_score(y_test, y_test_pred),\r\n2))\r\nprint(\"R2 score =\", round(sm.r2_score(y_test, y_test_pred), 2))</code></pre>\n\n\n\n<h3>Output</h3>\n\n\n\n<p>Performance of Linear Regressor −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Mean absolute error = 1.78\r\nMean squared error = 3.89\r\nMedian absolute error = 2.01\r\nExplain variance score = -0.09\r\nR2 score = -0.09\r\n</code></pre>\n\n\n\n<p>In the above code, we have used this small data. If you want some big dataset then you can use sklearn.dataset to import bigger dataset.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>2,4.82.9,4.72.5,53.2,5.56,57.6,43.2,0.92.9,1.92.4,\r\n3.50.5,3.41,40.9,5.91.2,2.583.2,5.65.1,1.54.5,\r\n1.22.3,6.32.1,2.8</code></pre>\n\n\n\n<h3>Multivariable Regressor</h3>\n\n\n\n<p>First, let us import a few required packages −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import numpy as np\r\nfrom sklearn import linear_model\r\nimport sklearn.metrics as sm\r\nimport matplotlib.pyplot as plt\r\nfrom sklearn.preprocessing import PolynomialFeatures</code></pre>\n\n\n\n<p>Now, we need to provide the input data and we have saved our data in the file named linear.txt.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>input = 'D:/ProgramData/Mul_linear.txt'</code></pre>\n\n\n\n<p>We will load this data by using the&nbsp;<strong>np.loadtxt</strong>&nbsp;function.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>input_data = np.loadtxt(input, delimiter=',')\r\nX, y = input_data&#91;:, :-1], input_data&#91;:, -1]</code></pre>\n\n\n\n<p>The next step would be to train the model; we will give training and testing samples.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>training_samples = int(0.6 * len(X))\r\ntesting_samples = len(X) - num_training\r\n\r\nX_train, y_train = X&#91;:training_samples], y&#91;:training_samples]\r\n\r\nX_test, y_test = X&#91;training_samples:], y&#91;training_samples:]</code></pre>\n\n\n\n<p>Now, we need to create a linear regressor object.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>reg_linear_mul = linear_model.LinearRegression()</code></pre>\n\n\n\n<p>Train the object with the training samples.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>reg_linear_mul.fit(X_train, y_train)</code></pre>\n\n\n\n<p>Now, at last we need to do the prediction with the testing data.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>y_test_pred = reg_linear_mul.predict(X_test)\r\n\r\nprint(\"Performance of Linear regressor:\")\r\nprint(\"Mean absolute error =\", round(sm.mean_absolute_error(y_test, y_test_pred), 2))\r\nprint(\"Mean squared error =\", round(sm.mean_squared_error(y_test, y_test_pred), 2))\r\nprint(\"Median absolute error =\", round(sm.median_absolute_error(y_test, y_test_pred), 2))\r\nprint(\"Explain variance score =\", round(sm.explained_variance_score(y_test, y_test_pred), 2))\r\nprint(\"R2 score =\", round(sm.r2_score(y_test, y_test_pred), 2))\n</code></pre>\n\n\n\n<h3>Output</h3>\n\n\n\n<p>Performance of Linear Regressor −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Mean absolute error = 0.6\r\nMean squared error = 0.65\r\nMedian absolute error = 0.41\r\nExplain variance score = 0.34\r\nR2 score = 0.33\n</code></pre>\n\n\n\n<p>Now, we will create a polynomial of degree 10 and train the regressor. We will provide the sample data point.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>polynomial = PolynomialFeatures(degree = 10)\r\nX_train_transformed = polynomial.fit_transform(X_train)\r\ndatapoint = &#91;&#91;2.23, 1.35, 1.12]]\r\npoly_datapoint = polynomial.fit_transform(datapoint)\r\n\r\npoly_linear_model = linear_model.LinearRegression()\r\npoly_linear_model.fit(X_train_transformed, y_train)\r\nprint(\"\\nLinear regression:\\n\", reg_linear_mul.predict(datapoint))\r\nprint(\"\\nPolynomial regression:\\n\", poly_linear_model.predict(poly_datapoint))</code></pre>\n\n\n\n<h3>Output</h3>\n\n\n\n<p>Linear regression −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&#91;2.40170462]\n</code></pre>\n\n\n\n<p>Polynomial regression −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&#91;1.8697225]\n</code></pre>\n\n\n\n<p>In the above code, we have used this small data. If you want a big dataset then, you can use sklearn.dataset to import a bigger dataset.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>2,4.8,1.2,3.22.9,4.7,1.5,3.62.5,5,2.8,23.2,5.5,3.5,2.16,5,\r\n2,3.27.6,4,1.2,3.23.2,0.9,2.3,1.42.9,1.9,2.3,1.22.4,3.5,\r\n2.8,3.60.5,3.4,1.8,2.91,4,3,2.50.9,5.9,5.6,0.81.2,2.58,\r\n3.45,1.233.2,5.6,2,3.25.1,1.5,1.2,1.34.5,1.2,4.1,2.32.3,\r\n6.3,2.5,3.22.1,2.8,1.2,3.6</code></pre>\n",
  "protected": false
  },
  "excerpt": {
  "rendered": "<p>Regression is one of the most important statistical and machine learning tools. We would not be wrong to say that the journey of machine learning starts from regression. It may be defined as the parametric technique that allows us to make decisions based upon data or in other words allows us to make predictions based [&hellip;]</p>\n",
  "protected": false
  },
  "author": 2,
  "featured_media": 0,
  "comment_status": "open",
  "ping_status": "open",
  "sticky": false,
  "template": "",
  "format": "standard",
  "meta": [],
  "categories": [
  4
  ],
  "tags": [],
  "_links": {
  "self": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts/71"
  }
  ],
  "collection": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts"
  }
  ],
  "about": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/types/post"
  }
  ],
  "author": [
  {
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/users/2"
  }
  ],
  "replies": [
  {
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/comments?post=71"
  }
  ],
  "version-history": [
  {
  "count": 2,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts/71/revisions"
  }
  ],
  "predecessor-version": [
  {
  "id": 81,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts/71/revisions/81"
  }
  ],
  "wp:attachment": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/media?parent=71"
  }
  ],
  "wp:term": [
  {
  "taxonomy": "category",
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/categories?post=71"
  },
  {
  "taxonomy": "post_tag",
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/tags?post=71"
  }
  ],
  "curies": [
  {
  "name": "wp",
  "href": "https://api.w.org/{rel}",
  "templated": true
  }
  ]
  }
  },
  {
  "id": 73,
  "date": "2020-09-17T11:38:59",
  "date_gmt": "2020-09-17T11:38:59",
  "guid": {
  "rendered": "http://ai.foobrdigital.com/?p=73"
  },
  "modified": "2020-09-17T18:04:39",
  "modified_gmt": "2020-09-17T18:04:39",
  "slug": "ai-with-python-logic-programming",
  "status": "publish",
  "type": "post",
  "link": "https://ai.foobrdigital.com/ai-with-python-logic-programming/",
  "title": {
  "rendered": "Logic Programming"
  },
  "content": {
  "rendered": "\n<p>In this chapter, we will focus logic programming and how it helps in Artificial Intelligence.</p>\n\n\n\n<p>We already know that logic is the study of principles of correct reasoning or in simple words it is the study of what comes after what. For example, if two statements are true then we can infer any third statement from it.</p>\n\n\n\n<h3>Concept</h3>\n\n\n\n<p>Logic Programming is the combination of two words, logic and programming. Logic Programming is a programming paradigm in which the problems are expressed as facts and rules by program statements but within a system of formal logic. Just like other programming paradigms like object oriented, functional, declarative, and procedural, etc., it is also a particular way to approach programming.</p>\n\n\n\n<h2>How to Solve Problems with Logic Programming</h2>\n\n\n\n<p>Logic Programming uses facts and rules for solving the problem. That is why they are called the building blocks of Logic Programming. A goal needs to be specified for every program in logic programming. To understand how a problem can be solved in logic programming, we need to know about the building blocks − Facts and Rules −</p>\n\n\n\n<h3>Facts</h3>\n\n\n\n<p>Actually, every logic program needs facts to work with so that it can achieve the given goal. Facts basically are true statements about the program and data. For example, Delhi is the capital of India.</p>\n\n\n\n<h3>Rules</h3>\n\n\n\n<p>Actually, rules are the constraints which allow us to make conclusions about the problem domain. Rules basically written as logical clauses to express various facts. For example, if we are building any game then all the rules must be defined.</p>\n\n\n\n<p>Rules are very important to solve any problem in Logic Programming. Rules are basically logical conclusion which can express the facts. Following is the syntax of rule −</p>\n\n\n\n<p>A∶− B1,B2,&#8230;,B<sub>n</sub>.</p>\n\n\n\n<p>Here, A is the head and B1, B2, &#8230; Bn is the body.</p>\n\n\n\n<p>For example − ancestor(X,Y) :- father(X,Y).</p>\n\n\n\n<p>ancestor(X,Z) :- father(X,Y), ancestor(Y,Z).</p>\n\n\n\n<p>This can be read as, for every X and Y, if X is the father of Y and Y is an ancestor of Z, X is the ancestor of Z. For every X and Y, X is the ancestor of Z, if X is the father of Y and Y is an ancestor of Z.</p>\n\n\n\n<h2>Installing Useful Packages</h2>\n\n\n\n<p>For starting logic programming in Python, we need to install the following two packages −</p>\n\n\n\n<h3>Kanren</h3>\n\n\n\n<p>It provides us a way to simplify the way we made code for business logic. It lets us express the logic in terms of rules and facts. The following command will help you install kanren −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>pip install kanren\n</code></pre>\n\n\n\n<h3>SymPy</h3>\n\n\n\n<p>SymPy is a Python library for symbolic mathematics. It aims to become a full-featured computer algebra system (CAS) while keeping the code as simple as possible in order to be comprehensible and easily extensible. The following command will help you install SymPy −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>pip install sympy\r\n</code></pre>\n\n\n\n<h2>Examples of Logic Programming</h2>\n\n\n\n<p>Followings are some examples which can be solved by logic programming −</p>\n\n\n\n<h3>Matching mathematical expressions</h3>\n\n\n\n<p>Actually we can find the unknown values by using logic programming in a very effective way. The following Python code will help you match a mathematical expression −</p>\n\n\n\n<p>Consider importing the following packages first −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>from kanren import run, var, fact\r\nfrom kanren.assoccomm import eq_assoccomm as eq\r\nfrom kanren.assoccomm import commutative, associative</code></pre>\n\n\n\n<p>We need to define the mathematical operations which we are going to use −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>add = 'add'\r\nmul = 'mul'</code></pre>\n\n\n\n<p>Both addition and multiplication are communicative processes. Hence, we need to specify it and this can be done as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>fact(commutative, mul)\r\nfact(commutative, add)\r\nfact(associative, mul)\r\nfact(associative, add)</code></pre>\n\n\n\n<p>It is compulsory to define variables; this can be done as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>a, b = var('a'), var('b')</code></pre>\n\n\n\n<p>We need to match the expression with the original pattern. We have the following original pattern, which is basically (5+a)*b −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Original_pattern = (mul, (add, 5, a), b)</code></pre>\n\n\n\n<p>We have the following two expressions to match with the original pattern −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>exp1 = (mul, 2, (add, 3, 1))\r\nexp2 = (add,5,(mul,8,1))</code></pre>\n\n\n\n<p>Output can be printed with the following command −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>print(run(0, (a,b), eq(original_pattern, exp1)))\r\nprint(run(0, (a,b), eq(original_pattern, exp2)))\r\n</code></pre>\n\n\n\n<p>After running this code, we will get the following output −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>((3,2))\r\n()\r\n</code></pre>\n\n\n\n<p>The first output represents the values for&nbsp;<strong>a</strong>&nbsp;and&nbsp;<strong>b</strong>. The first expression matched the original pattern and returned the values for&nbsp;<strong>a</strong>&nbsp;and&nbsp;<strong>b</strong>&nbsp;but the second expression did not match the original pattern hence nothing has been returned.</p>\n\n\n\n<h2>Checking for Prime Numbers</h2>\n\n\n\n<p>With the help of logic programming, we can find the prime numbers from a list of numbers and can also generate prime numbers. The Python code given below will find the prime number from a list of numbers and will also generate the first 10 prime numbers.</p>\n\n\n\n<p>Let us first consider importing the following packages −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>from kanren import isvar, run, membero\r\nfrom kanren.core import success, fail, goaleval, condeseq, eq, var\r\nfrom sympy.ntheory.generate import prime, isprime\r\nimport itertools as it</code></pre>\n\n\n\n<p>Now, we will define a function called prime_check which will check the prime numbers based on the given numbers as data.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>def prime_check(x):\r\nif isvar(x):\r\n   return condeseq(&#91;(eq,x,p)] for p in map(prime, it.count(1)))\r\nelse:\r\n   return success if isprime(x) else fail</code></pre>\n\n\n\n<p>Now, we need to declare a variable which will be used −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>x = var()\r\nprint((set(run(0,x,(membero,x,(12,14,15,19,20,21,22,23,29,30,41,44,52,62,65,85)),\r\n(prime_check,x)))))\r\nprint((run(10,x,prime_check(x))))</code></pre>\n\n\n\n<p>The output of the above code will be as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>{19, 23, 29, 41}\r\n(2, 3, 5, 7, 11, 13, 17, 19, 23, 29)\r\n</code></pre>\n\n\n\n<h2>Solving Puzzles</h2>\n\n\n\n<p>Logic programming can be used to solve many problems like 8-puzzles, Zebra puzzle, Sudoku, N-queen, etc. Here we are taking an example of a variant of Zebra puzzle which is as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>There are five houses.\r\nThe English man lives in the red house.\r\nThe Swede has a dog.\r\nThe Dane drinks tea.\r\nThe green house is immediately to the left of the white house.\r\nThey drink coffee in the green house.\r\nThe man who smokes Pall Mall has birds.\r\nIn the yellow house they smoke Dunhill.\r\nIn the middle house they drink milk.\r\nThe Norwegian lives in the first house.\r\nThe man who smokes Blend lives in the house next to the house with cats.\r\nIn a house next to the house where they have a horse, they smoke Dunhill.\r\nThe man who smokes Blue Master drinks beer.\r\nThe German smokes Prince.\r\nThe Norwegian lives next to the blue house.\r\nThey drink water in a house next to the house where they smoke Blend.</code></pre>\n\n\n\n<p>We are solving it for the question&nbsp;<strong>who owns zebra</strong>&nbsp;with the help of Python.</p>\n\n\n\n<p>Let us import the necessary packages −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>from kanren import *\r\nfrom kanren.core import lall\r\nimport time</code></pre>\n\n\n\n<p>Now, we need to define two functions −&nbsp;<strong>left()</strong>&nbsp;and&nbsp;<strong>next()</strong>&nbsp;to check whose house is left or next to who’s house −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>def left(q, p, list):\r\n   return membero((q,p), zip(list, list&#91;1:]))\r\ndef next(q, p, list):\r\n   return conde(&#91;left(q, p, list)], &#91;left(p, q, list)])</code></pre>\n\n\n\n<p>Now, we will declare a variable house as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>houses = var()</code></pre>\n\n\n\n<p>We need to define the rules with the help of lall package as follows.</p>\n\n\n\n<p>There are 5 houses −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>rules_zebraproblem = lall(\r\n   (eq, (var(), var(), var(), var(), var()), houses),\r\n\r\n   (membero,('Englishman', var(), var(), var(), 'red'), houses),\r\n   (membero,('Swede', var(), var(), 'dog', var()), houses),\r\n   (membero,('Dane', var(), 'tea', var(), var()), houses),\r\n   (left,(var(), var(), var(), var(), 'green'),\r\n   (var(), var(), var(), var(), 'white'), houses),\r\n   (membero,(var(), var(), 'coffee', var(), 'green'), houses),\r\n   (membero,(var(), 'Pall Mall', var(), 'birds', var()), houses),\r\n   (membero,(var(), 'Dunhill', var(), var(), 'yellow'), houses),\r\n   (eq,(var(), var(), (var(), var(), 'milk', var(), var()), var(), var()), houses),\r\n   (eq,(('Norwegian', var(), var(), var(), var()), var(), var(), var(), var()), houses),\r\n   (next,(var(), 'Blend', var(), var(), var()),\r\n   (var(), var(), var(), 'cats', var()), houses),\r\n   (next,(var(), 'Dunhill', var(), var(), var()),\r\n   (var(), var(), var(), 'horse', var()), houses),\r\n   (membero,(var(), 'Blue Master', 'beer', var(), var()), houses),\r\n   (membero,('German', 'Prince', var(), var(), var()), houses),\r\n   (next,('Norwegian', var(), var(), var(), var()),\r\n   (var(), var(), var(), var(), 'blue'), houses),\r\n   (next,(var(), 'Blend', var(), var(), var()),\r\n   (var(), var(), 'water', var(), var()), houses),\r\n   (membero,(var(), var(), var(), 'zebra', var()), houses)\r\n)</code></pre>\n\n\n\n<p>Now, run the solver with the preceding constraints −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>solutions = run(0, houses, rules_zebraproblem)</code></pre>\n\n\n\n<p>With the help of the following code, we can extract the output from the solver −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>\noutput_zebra = &#91;house for house in solutions&#91;0] if 'zebra' in house]&#91;0]&#91;0]\n</code></pre>\n\n\n\n<p>The following code will help print the solution −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>print ('\\n'+ output_zebra + 'owns zebra.')\n</code></pre>\n\n\n\n<p>The output of the above code would be as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>German owns zebra.</code></pre>\n",
  "protected": false
  },
  "excerpt": {
  "rendered": "<p>In this chapter, we will focus logic programming and how it helps in Artificial Intelligence. We already know that logic is the study of principles of correct reasoning or in simple words it is the study of what comes after what. For example, if two statements are true then we can infer any third statement [&hellip;]</p>\n",
  "protected": false
  },
  "author": 2,
  "featured_media": 0,
  "comment_status": "open",
  "ping_status": "open",
  "sticky": false,
  "template": "",
  "format": "standard",
  "meta": [],
  "categories": [
  4
  ],
  "tags": [],
  "_links": {
  "self": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts/73"
  }
  ],
  "collection": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts"
  }
  ],
  "about": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/types/post"
  }
  ],
  "author": [
  {
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/users/2"
  }
  ],
  "replies": [
  {
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/comments?post=73"
  }
  ],
  "version-history": [
  {
  "count": 2,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts/73/revisions"
  }
  ],
  "predecessor-version": [
  {
  "id": 80,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/posts/73/revisions/80"
  }
  ],
  "wp:attachment": [
  {
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/media?parent=73"
  }
  ],
  "wp:term": [
  {
  "taxonomy": "category",
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/categories?post=73"
  },
  {
  "taxonomy": "post_tag",
  "embeddable": true,
  "href": "https://ai.foobrdigital.com/wp-json/wp/v2/tags?post=73"
  }
  ],
  "curies": [
  {
  "name": "wp",
  "href": "https://api.w.org/{rel}",
  "templated": true
  }
  ]
  }
  }
  ]