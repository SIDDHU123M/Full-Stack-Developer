[{"id":3593,"date":"2020-11-03T10:18:59","date_gmt":"2020-11-03T10:18:59","guid":{"rendered":"http://python3.foobrdigital.com/?p=3593"},"modified":"2020-11-03T10:18:59","modified_gmt":"2020-11-03T10:18:59","slug":"in-place-swapping-of-two-numbers","status":"publish","type":"post","link":"https://python3.foobrdigital.com/in-place-swapping-of-two-numbers/","title":{"rendered":"In-place swapping of two numbers."},"content":{"rendered":"\n<p>Python provides an intuitive way to do assignments and swapping in one line. Please refer to the below example.</p>\n\n\n\n<pre class=\"wp-block-preformatted\">x, y = 10, 20\nprint(x, y)\n \nx, y = y, x\nprint(x, y)\n \n#1 (10, 20)\n#2 (20, 10)</pre>\n\n\n\n<p>The assignment on the right seeds a new tuple. While the left one instantly unpacks that (unreferenced) tuple to the names &lt;a&gt; and &lt;b&gt;.</p>\n\n\n\n<p>Once the assignment is through, the new tuple gets unreferenced and flagged for garbage collection. The swapping of variables also occurs at eventually.</p>\n","protected":false},"excerpt":{"rendered":"<p>Python provides an intuitive way to do assignments and swapping in one line. Please refer to the below example. x, y = 10, 20 print(x, y) x, y = y, x print(x, y) #1 (10, 20) #2 (20, 10) The assignment on the right seeds a new tuple. While the left one instantly unpacks that [&hellip;]</p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[95],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3593"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=3593"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3593/revisions"}],"predecessor-version":[{"id":3601,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3593/revisions/3601"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=3593"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=3593"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=3593"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":3595,"date":"2020-11-03T10:19:18","date_gmt":"2020-11-03T10:19:18","guid":{"rendered":"http://python3.foobrdigital.com/?p=3595"},"modified":"2020-11-03T10:19:26","modified_gmt":"2020-11-03T10:19:26","slug":"chaining-of-comparison-operators","status":"publish","type":"post","link":"https://python3.foobrdigital.com/chaining-of-comparison-operators/","title":{"rendered":"Chaining of comparison operators."},"content":{"rendered":"\n<p>Aggregation of comparison operators is another trick that can come handy at times.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>n = 10\nresult = 1 &amp;lt; n &amp;lt; 20\nprint(result)\n\n# True\n\nresult = 1 &amp;gt; n &amp;lt;= 9\nprint(result)\n\n# False</code></pre>\n","protected":false},"excerpt":{"rendered":"<p>Aggregation of comparison operators is another trick that can come handy at times.</p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[95],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3595"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=3595"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3595/revisions"}],"predecessor-version":[{"id":3603,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3595/revisions/3603"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=3595"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=3595"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=3595"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":3587,"date":"2020-11-03T10:20:05","date_gmt":"2020-11-03T10:20:05","guid":{"rendered":"http://python3.foobrdigital.com/?p=3587"},"modified":"2020-11-03T10:20:05","modified_gmt":"2020-11-03T10:20:05","slug":"use-of-ternary-operator-for-conditional-assignment","status":"publish","type":"post","link":"https://python3.foobrdigital.com/use-of-ternary-operator-for-conditional-assignment/","title":{"rendered":"Use of Ternary operator for conditional assignment."},"content":{"rendered":"\n<p>Ternary operators are a shortcut for an if-else statement and also known as conditional operators.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&#91;on_true] if &#91;expression] else &#91;on_false]</code></pre>\n\n\n\n<p>Here are a few examples which you can use to make your code compact and concise.</p>\n\n\n\n<p>The below statement is doing the same what it is meant to i.e. “<strong>assign 10 to x if y is 9, otherwise assign 20 to x</strong>“. We can though extend the chaining of operators if required.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>x = 10 if (y == 9) else 20</code></pre>\n\n\n\n<p>Likewise, we can do the same for class objects.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>x = (classA if y == 1 else classB)(param1, param2)</code></pre>\n\n\n\n<p>In the above example, classA and classB are two classes and one of the class constructors would get called.</p>\n\n\n\n<p>Below is one more example with a no. of conditions joining to&nbsp;evaluate the smallest number.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>def small(a, b, c):\n\treturn a if a &amp;lt;= b and a &amp;lt;= c else (b if b &amp;lt;= a and b &amp;lt;= c else c)\n\t\nprint(small(1, 0, 1))\nprint(small(1, 2, 2))\nprint(small(2, 2, 3))\nprint(small(5, 4, 3))\n\n#Output\n#0 #1 #2 #3</code></pre>\n\n\n\n<p>We can even use a ternary operator with the list comprehension.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&#91;m**2 if m &amp;gt; 10 else m**4 for m in range(50)]\n\n#=&amp;gt; &#91;0, 1, 16, 81, 256, 625, 1296, 2401, 4096, 6561, 10000, 121, 144, 169, 196, 225, 256, 289, 324, 361, 400, 441, 484, 529, 576, 625, 676, 729, 784, 841, 900, 961, 1024, 1089, 1156, 1225, 1296, 1369, 1444, 1521, 1600, 1681, 1764, 1849, 1936, 2025, 2116, 2209, 2304, 2401]</code></pre>\n","protected":false},"excerpt":{"rendered":"<p>Ternary operators are a shortcut for an if-else statement and also known as conditional operators. Here are a few examples which you can use to make your code compact and concise. The below statement is doing the same what it is meant to i.e. “assign 10 to x if y is 9, otherwise assign 20 [&hellip;]</p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[95],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3587"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=3587"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3587/revisions"}],"predecessor-version":[{"id":3604,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3587/revisions/3604"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=3587"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=3587"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=3587"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":3589,"date":"2020-11-03T10:20:38","date_gmt":"2020-11-03T10:20:38","guid":{"rendered":"http://python3.foobrdigital.com/?p=3589"},"modified":"2020-11-03T10:20:38","modified_gmt":"2020-11-03T10:20:38","slug":"work-with-multi-line-strings","status":"publish","type":"post","link":"https://python3.foobrdigital.com/work-with-multi-line-strings/","title":{"rendered":"Work with multi-line strings."},"content":{"rendered":"\n<p>The basic approach is to use backslashes which derive itself from C language.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>multiStr = \"select * from multi_row \\\nwhere row_id &amp;lt; 5\"\nprint(multiStr)\n\n# select * from multi_row where row_id &amp;lt; 5</code></pre>\n\n\n\n<p>One more trick is to use the triple-quotes.</p>\n\n\n\n<div class=\"wp-block-group\"><div class=\"wp-block-group__inner-container\">\n<pre class=\"wp-block-code\"><code>multiStr = \"\"\"select * from multi_row \nwhere row_id &amp;lt; 5\"\"\"\nprint(multiStr)\n\n#select * from multi_row \n#where row_id &amp;lt; 5</code></pre>\n</div></div>\n\n\n\n<p>The common issue with the above methods is the lack of proper indentation. If we try to indent, it’ll insert whitespaces in the string.</p>\n\n\n\n<p>So the final solution is to split the string into multi lines and enclose the entire string in parenthesis.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>multiStr= (\"select * from multi_row \"\n\"where row_id &amp;lt; 5 \"\n\"order by age\") \nprint(multiStr)\n\n#select * from multi_row where row_id &amp;lt; 5 order by age</code></pre>\n","protected":false},"excerpt":{"rendered":"<p>The basic approach is to use backslashes which derive itself from C language. One more trick is to use the triple-quotes. The common issue with the above methods is the lack of proper indentation. If we try to indent, it’ll insert whitespaces in the string. So the final solution is to split the string into [&hellip;]</p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[95],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3589"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=3589"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3589/revisions"}],"predecessor-version":[{"id":3605,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3589/revisions/3605"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=3589"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=3589"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=3589"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":3598,"date":"2020-11-03T10:20:57","date_gmt":"2020-11-03T10:20:57","guid":{"rendered":"http://python3.foobrdigital.com/?p=3598"},"modified":"2020-11-03T10:20:57","modified_gmt":"2020-11-03T10:20:57","slug":"storing-elements-of-a-list-into-new-variables","status":"publish","type":"post","link":"https://python3.foobrdigital.com/storing-elements-of-a-list-into-new-variables/","title":{"rendered":"Storing elements of a list into new variables."},"content":{"rendered":"\n<p>We can use a list to initialize a no. of variables. While unpacking the list, the count of variables shouldn’t exceed the no. of elements in the list.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>testList = &#91;1,2,3]\nx, y, z = testList\n\nprint(x, y, z)\n\n#-&amp;gt; 1 2 3</code></pre>\n","protected":false},"excerpt":{"rendered":"<p>We can use a list to initialize a no. of variables. While unpacking the list, the count of variables shouldn’t exceed the no. of elements in the list.</p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[95],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3598"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=3598"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3598/revisions"}],"predecessor-version":[{"id":3606,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3598/revisions/3606"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=3598"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=3598"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=3598"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":3591,"date":"2020-11-03T10:21:14","date_gmt":"2020-11-03T10:21:14","guid":{"rendered":"http://python3.foobrdigital.com/?p=3591"},"modified":"2020-11-03T10:21:14","modified_gmt":"2020-11-03T10:21:14","slug":"use-the-interactive-_-operator","status":"publish","type":"post","link":"https://python3.foobrdigital.com/use-the-interactive-_-operator/","title":{"rendered":"Use the Interactive “_” operator."},"content":{"rendered":"\n<p>It’s a useful feature which not many of us know.</p>\n\n\n\n<p>In the Python console, whenever we test an expression or call a function, the result dispatches to a temporary name, _ (an underscore).</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&amp;gt;&amp;gt;&amp;gt; 2 + 1\n3\n&amp;gt;&amp;gt;&amp;gt; _\n3\n&amp;gt;&amp;gt;&amp;gt; print _\n3</code></pre>\n\n\n\n<p>The “_” references to the output of the last executed expression.</p>\n","protected":false},"excerpt":{"rendered":"<p>It’s a useful feature which not many of us know. In the Python console, whenever we test an expression or call a function, the result dispatches to a temporary name, _ (an underscore). The “_” references to the output of the last executed expression.</p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[95],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3591"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=3591"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3591/revisions"}],"predecessor-version":[{"id":3607,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3591/revisions/3607"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=3591"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=3591"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=3591"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":3599,"date":"2020-11-03T10:21:33","date_gmt":"2020-11-03T10:21:33","guid":{"rendered":"http://python3.foobrdigital.com/?p=3599"},"modified":"2020-11-03T10:21:33","modified_gmt":"2020-11-03T10:21:33","slug":"dictionary-set-comprehensions","status":"publish","type":"post","link":"https://python3.foobrdigital.com/dictionary-set-comprehensions/","title":{"rendered":"Dictionary/Set comprehensions."},"content":{"rendered":"\n<p>Like we use list comprehensions, we can also use dictionary/set comprehensions. They are simple to use and just as effective. Here is an example.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>testDict = {i: i * i for i in xrange(10)} \ntestSet = {i * 2 for i in xrange(10)}\n\nprint(testSet)\nprint(testDict)\n\n#set(&#91;0, 2, 4, 6, 8, 10, 12, 14, 16, 18])\n#{0: 0, 1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64, 9: 81}</code></pre>\n\n\n\n<p><strong>Note-</strong>&nbsp;There is only a difference of &lt;:&gt; in the two statements. Also, to run the above code in Python3, replace &lt;xrange&gt; with&nbsp;&lt;range&gt;.</p>\n","protected":false},"excerpt":{"rendered":"<p>Like we use list comprehensions, we can also use dictionary/set comprehensions. They are simple to use and just as effective. Here is an example. Note-&nbsp;There is only a difference of &lt;:&gt; in the two statements. Also, to run the above code in Python3, replace &lt;xrange&gt; with&nbsp;&lt;range&gt;.</p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[95],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3599"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=3599"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3599/revisions"}],"predecessor-version":[{"id":3608,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3599/revisions/3608"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=3599"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=3599"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=3599"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":3588,"date":"2020-11-03T10:22:03","date_gmt":"2020-11-03T10:22:03","guid":{"rendered":"http://python3.foobrdigital.com/?p=3588"},"modified":"2020-11-03T10:22:03","modified_gmt":"2020-11-03T10:22:03","slug":"debugging-scripts","status":"publish","type":"post","link":"https://python3.foobrdigital.com/debugging-scripts/","title":{"rendered":"Debugging scripts."},"content":{"rendered":"\n<p>We can set breakpoints in our Python script with the help of the &lt;pdb&gt; module. Please follow the below example.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import pdb\npdb.set_trace()</code></pre>\n\n\n\n<p>We can specify &lt;pdb.set_trace()&gt; anywhere in the script and set a breakpoint there. It’s extremely convenient.</p>\n","protected":false},"excerpt":{"rendered":"<p>We can set breakpoints in our Python script with the help of the &lt;pdb&gt; module. Please follow the below example. We can specify &lt;pdb.set_trace()&gt; anywhere in the script and set a breakpoint there. It’s extremely convenient.</p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[95],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3588"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=3588"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3588/revisions"}],"predecessor-version":[{"id":3609,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3588/revisions/3609"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=3588"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=3588"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=3588"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":3590,"date":"2020-11-03T10:24:19","date_gmt":"2020-11-03T10:24:19","guid":{"rendered":"http://python3.foobrdigital.com/?p=3590"},"modified":"2020-11-03T10:24:19","modified_gmt":"2020-11-03T10:24:19","slug":"setup-file-sharing","status":"publish","type":"post","link":"https://python3.foobrdigital.com/setup-file-sharing/","title":{"rendered":"Setup file sharing."},"content":{"rendered":"\n<p>Python allows running an HTTP server which you can use to share files from the server root directory. Below are the commands to start the server.</p>\n\n\n\n<h4># Python 2</h4>\n\n\n\n<pre class=\"wp-block-preformatted\">python -m SimpleHTTPServer</pre>\n\n\n\n<h4># Python 3</h4>\n\n\n\n<pre class=\"wp-block-preformatted\">python3 -m http.server</pre>\n\n\n\n<p>Above commands would start a server on the default port i.e. 8000. You can also use a custom port by passing it as the last argument to the above commands.</p>\n","protected":false},"excerpt":{"rendered":"<p>Python allows running an HTTP server which you can use to share files from the server root directory. Below are the commands to start the server. # Python 2 python -m SimpleHTTPServer # Python 3 python3 -m http.server Above commands would start a server on the default port i.e. 8000. You can also use a [&hellip;]</p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[95],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3590"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=3590"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3590/revisions"}],"predecessor-version":[{"id":3610,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3590/revisions/3610"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=3590"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=3590"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=3590"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":3596,"date":"2020-11-03T10:24:44","date_gmt":"2020-11-03T10:24:44","guid":{"rendered":"http://python3.foobrdigital.com/?p=3596"},"modified":"2020-11-03T10:24:44","modified_gmt":"2020-11-03T10:24:44","slug":"inspect-an-object-in-python","status":"publish","type":"post","link":"https://python3.foobrdigital.com/inspect-an-object-in-python/","title":{"rendered":"Inspect an object in Python."},"content":{"rendered":"\n<p>We can inspect objects in Python by calling the dir() method. Here is a simple example.</p>\n\n\n\n<div class=\"wp-block-group\"><div class=\"wp-block-group__inner-container\">\n<pre class=\"wp-block-code\"><code>test = &#91;1, 3, 5, 7]\nprint( dir(test) )</code></pre>\n</div></div>\n\n\n\n<pre class=\"wp-block-code\"><code>&#91;'__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__delslice__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getslice__', '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__', '__setslice__', '__sizeof__', '__str__', '__subclasshook__', 'append', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort']</code></pre>\n","protected":false},"excerpt":{"rendered":"<p>We can inspect objects in Python by calling the dir() method. Here is a simple example.</p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[95],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3596"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=3596"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3596/revisions"}],"predecessor-version":[{"id":3611,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3596/revisions/3611"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=3596"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=3596"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=3596"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":3594,"date":"2020-11-03T10:25:06","date_gmt":"2020-11-03T10:25:06","guid":{"rendered":"http://python3.foobrdigital.com/?p=3594"},"modified":"2020-11-03T10:25:06","modified_gmt":"2020-11-03T10:25:06","slug":"simplify-if-statement","status":"publish","type":"post","link":"https://python3.foobrdigital.com/simplify-if-statement/","title":{"rendered":"Simplify if statement."},"content":{"rendered":"\n<p>To verify multiple values, we can do in the following manner.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>if m in &#91;1,3,5,7]:</code></pre>\n\n\n\n<p>instead of:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>if m==1 or m==3 or m==5 or m==7:</code></pre>\n\n\n\n<p>Alternatively, we can use ‘{1,3,5,7}’ instead of ‘[1,3,5,7]’ for ‘in’ operator because ‘set’ can access each element by O(1).</p>\n","protected":false},"excerpt":{"rendered":"<p>To verify multiple values, we can do in the following manner. instead of: Alternatively, we can use ‘{1,3,5,7}’ instead of ‘[1,3,5,7]’ for ‘in’ operator because ‘set’ can access each element by O(1).</p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[95],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3594"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=3594"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3594/revisions"}],"predecessor-version":[{"id":3612,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3594/revisions/3612"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=3594"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=3594"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=3594"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":3592,"date":"2020-11-03T10:25:42","date_gmt":"2020-11-03T10:25:42","guid":{"rendered":"http://python3.foobrdigital.com/?p=3592"},"modified":"2020-11-03T10:25:42","modified_gmt":"2020-11-03T10:25:42","slug":"combining-multiple-strings","status":"publish","type":"post","link":"https://python3.foobrdigital.com/combining-multiple-strings/","title":{"rendered":"Combining multiple strings."},"content":{"rendered":"\n<p>If you want to concatenate all the tokens available in a list, then see the below example.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&amp;gt;&amp;gt;&amp;gt; test = &#91;'I', 'Like', 'Python', 'automation']</code></pre>\n\n\n\n<p>Now, let’s create a single string from the elements in the list given above.</p>\n\n\n\n<div class=\"wp-block-group\"><div class=\"wp-block-group__inner-container\">\n<pre class=\"wp-block-code\"><code>&amp;gt;&amp;gt;&amp;gt; print ''.join(test)</code></pre>\n\n\n\n<p></p>\n</div></div>\n","protected":false},"excerpt":{"rendered":"<p>If you want to concatenate all the tokens available in a list, then see the below example. Now, let’s create a single string from the elements in the list given above.</p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[95],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3592"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=3592"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3592/revisions"}],"predecessor-version":[{"id":3613,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3592/revisions/3613"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=3592"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=3592"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=3592"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":3597,"date":"2020-11-03T10:26:05","date_gmt":"2020-11-03T10:26:05","guid":{"rendered":"http://python3.foobrdigital.com/?p=3597"},"modified":"2020-11-03T10:36:10","modified_gmt":"2020-11-03T10:36:10","slug":"four-ways-to-reverse-string-list","status":"publish","type":"post","link":"https://python3.foobrdigital.com/four-ways-to-reverse-string-list/","title":{"rendered":"Four ways to reverse string/list."},"content":{"rendered":"\n<h4># Reverse the list itself.</h4>\n\n\n\n<pre class=\"wp-block-code\"><code>testList = &#91;1, 3, 5]\ntestList.reverse()\nprint(testList)\n\n#-&amp;gt; &#91;5, 3, 1]</code></pre>\n","protected":false},"excerpt":{"rendered":"<p># Reverse the list itself.</p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[95],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3597"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=3597"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3597/revisions"}],"predecessor-version":[{"id":3614,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3597/revisions/3614"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=3597"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=3597"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=3597"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":3586,"date":"2020-11-03T10:27:35","date_gmt":"2020-11-03T10:27:35","guid":{"rendered":"http://python3.foobrdigital.com/?p=3586"},"modified":"2020-11-03T10:27:35","modified_gmt":"2020-11-03T10:27:35","slug":"reverse-while-iterating-in-a-loop","status":"publish","type":"post","link":"https://python3.foobrdigital.com/reverse-while-iterating-in-a-loop/","title":{"rendered":"# Reverse while iterating in a loop."},"content":{"rendered":"\n<pre class=\"wp-block-code\"><code>for element in reversed(&#91;1,3,5]): print(element)\n\n#1-&amp;gt; 5\n#2-&amp;gt; 3\n#3-&amp;gt; 1\n</code></pre>\n\n\n\n<h4># Reverse a string in line.</h4>\n\n\n\n<pre class=\"wp-block-code\"><code>\"Test Python\"&#91;::-1]</code></pre>\n\n\n\n<p>This gives the output as ”nohtyP tseT”</p>\n\n\n\n<h4># Reverse a list using slicing.</h4>\n\n\n\n<pre class=\"wp-block-code\"><code>&#91;1, 3, 5]&#91;::-1]</code></pre>\n\n\n\n<p>The above command will give the output as [5, 3, 1].</p>\n\n\n\n<p></p>\n","protected":false},"excerpt":{"rendered":"<p># Reverse a string in line. This gives the output as ”nohtyP tseT” # Reverse a list using slicing. The above command will give the output as [5, 3, 1].</p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[95],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3586"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=3586"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3586/revisions"}],"predecessor-version":[{"id":3615,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3586/revisions/3615"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=3586"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=3586"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=3586"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":3585,"date":"2020-11-03T10:27:56","date_gmt":"2020-11-03T10:27:56","guid":{"rendered":"http://python3.foobrdigital.com/?p=3585"},"modified":"2020-11-03T10:27:56","modified_gmt":"2020-11-03T10:27:56","slug":"play-with-enumeration","status":"publish","type":"post","link":"https://python3.foobrdigital.com/play-with-enumeration/","title":{"rendered":"Play with enumeration."},"content":{"rendered":"\n<p>With enumerators, it’s easy to find an index while you’re inside a loop.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>testlist = &#91;10, 20, 30]\nfor i, value in enumerate(testlist):\n\tprint(i, ': ', value)\n\n#1-&amp;gt; 0 : 10\n#2-&amp;gt; 1 : 20\n#3-&amp;gt; 2 : 30</code></pre>\n","protected":false},"excerpt":{"rendered":"<p>With enumerators, it’s easy to find an index while you’re inside a loop.</p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[95],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3585"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=3585"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3585/revisions"}],"predecessor-version":[{"id":3616,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3585/revisions/3616"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=3585"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=3585"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=3585"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":3584,"date":"2020-11-03T10:28:12","date_gmt":"2020-11-03T10:28:12","guid":{"rendered":"http://python3.foobrdigital.com/?p=3584"},"modified":"2020-11-03T10:28:12","modified_gmt":"2020-11-03T10:28:12","slug":"use-of-enums-in-python","status":"publish","type":"post","link":"https://python3.foobrdigital.com/use-of-enums-in-python/","title":{"rendered":"Use of enums in Python."},"content":{"rendered":"\n<p>We can use the following approach to create enum definitions.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>class Shapes:\n\tCircle, Square, Triangle, Quadrangle = range(4)\n\nprint(Shapes.Circle)\nprint(Shapes.Square)\nprint(Shapes.Triangle)\nprint(Shapes.Quadrangle)\n\n#1-&amp;gt; 0\n#2-&amp;gt; 1\n#3-&amp;gt; 2\n#4-&amp;gt; 3</code></pre>\n","protected":false},"excerpt":{"rendered":"<p>We can use the following approach to create enum definitions.</p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[95],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3584"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=3584"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3584/revisions"}],"predecessor-version":[{"id":3617,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3584/revisions/3617"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=3584"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=3584"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=3584"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":3583,"date":"2020-11-03T10:28:31","date_gmt":"2020-11-03T10:28:31","guid":{"rendered":"http://python3.foobrdigital.com/?p=3583"},"modified":"2020-11-03T10:28:31","modified_gmt":"2020-11-03T10:28:31","slug":"return-multiple-values-from-functions","status":"publish","type":"post","link":"https://python3.foobrdigital.com/return-multiple-values-from-functions/","title":{"rendered":"Return multiple values from functions."},"content":{"rendered":"\n<p>Not many programming languages support this feature. However, functions in Python do return multiple values.</p>\n\n\n\n<p>Please refer the below example to see it working.</p>\n\n\n\n<pre class=\"wp-block-code\"><code># function returning multiple values.\ndef x():\n\treturn 1, 2, 3, 4\n\n# Calling the above function.\na, b, c, d = x()\n\nprint(a, b, c, d)\n\n#-&amp;gt; 1 2 3 4</code></pre>\n","protected":false},"excerpt":{"rendered":"<p>Not many programming languages support this feature. However, functions in Python do return multiple values. Please refer the below example to see it working.</p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[95],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3583"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=3583"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3583/revisions"}],"predecessor-version":[{"id":3618,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3583/revisions/3618"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=3583"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=3583"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=3583"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":3600,"date":"2020-11-03T10:28:52","date_gmt":"2020-11-03T10:28:52","guid":{"rendered":"http://python3.foobrdigital.com/?p=3600"},"modified":"2020-11-03T10:36:25","modified_gmt":"2020-11-03T10:36:25","slug":"unpack-function-arguments-using-the-splat-operator","status":"publish","type":"post","link":"https://python3.foobrdigital.com/unpack-function-arguments-using-the-splat-operator/","title":{"rendered":"Unpack function arguments using the splat operator."},"content":{"rendered":"\n<p>The splat operator offers an&nbsp;artistic way to unpack arguments lists. Please refer the below example for clarity.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>def test(x, y, z):\n\tprint(x, y, z)\n\ntestDict = {'x': 1, 'y': 2, 'z': 3} \ntestList = &#91;10, 20, 30]\n\ntest(*testDict)\ntest(**testDict)\ntest(*testList)\n\n#1-&amp;gt; x y z\n#2-&amp;gt; 1 2 3\n#3-&amp;gt; 10 20 30</code></pre>\n","protected":false},"excerpt":{"rendered":"<p>The splat operator offers an&nbsp;artistic way to unpack arguments lists. Please refer the below example for clarity.</p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[95],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3600"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=3600"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3600/revisions"}],"predecessor-version":[{"id":3619,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3600/revisions/3619"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=3600"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=3600"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=3600"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":3625,"date":"2020-11-03T10:33:44","date_gmt":"2020-11-03T10:33:44","guid":{"rendered":"http://python3.foobrdigital.com/?p=3625"},"modified":"2020-11-03T10:33:44","modified_gmt":"2020-11-03T10:33:44","slug":"use-a-dictionary-to-store-a-switch","status":"publish","type":"post","link":"https://python3.foobrdigital.com/use-a-dictionary-to-store-a-switch/","title":{"rendered":"Use a dictionary to store a switch."},"content":{"rendered":"\n<p>We can make a dictionary store expressions.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>stdcalc = {\n\t'sum': lambda x, y: x + y,\n\t'subtract': lambda x, y: x - y\n}\n\nprint(stdcalc&#91;'sum'](9,3))\nprint(stdcalc&#91;'subtract'](9,3))\n\n#1-&amp;gt; 12\n#2-&amp;gt; 6</code></pre>\n","protected":false},"excerpt":{"rendered":"<p>We can make a dictionary store expressions.</p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[95],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3625"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=3625"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3625/revisions"}],"predecessor-version":[{"id":3626,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3625/revisions/3626"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=3625"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=3625"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=3625"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":3624,"date":"2020-11-03T10:34:07","date_gmt":"2020-11-03T10:34:07","guid":{"rendered":"http://python3.foobrdigital.com/?p=3624"},"modified":"2020-11-03T10:34:07","modified_gmt":"2020-11-03T10:34:07","slug":"calculate-the-factorial-of-any-number-in-one-line","status":"publish","type":"post","link":"https://python3.foobrdigital.com/calculate-the-factorial-of-any-number-in-one-line/","title":{"rendered":"Calculate the factorial of any number in one line."},"content":{"rendered":"\n<h4>Python 2.x.</h4>\n\n\n\n<pre class=\"wp-block-code\"><code>result = (lambda k: reduce(int.__mul__, range(1,k+1),1))(3)\nprint(result)\n#-&amp;gt; 6</code></pre>\n\n\n\n<h4>Python 3.x.</h4>\n\n\n\n<pre class=\"wp-block-code\"><code>import functools\nresult = (lambda k: functools.reduce(int.__mul__, range(1,k+1),1))(3)\nprint(result)\n\n#-&amp;gt; 6</code></pre>\n","protected":false},"excerpt":{"rendered":"<p>Python 2.x. Python 3.x.</p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[95],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3624"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=3624"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3624/revisions"}],"predecessor-version":[{"id":3627,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3624/revisions/3627"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=3624"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=3624"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=3624"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":3623,"date":"2020-11-03T10:34:25","date_gmt":"2020-11-03T10:34:25","guid":{"rendered":"http://python3.foobrdigital.com/?p=3623"},"modified":"2020-11-03T10:34:25","modified_gmt":"2020-11-03T10:34:25","slug":"find-the-most-frequent-value-in-a-list","status":"publish","type":"post","link":"https://python3.foobrdigital.com/find-the-most-frequent-value-in-a-list/","title":{"rendered":"Find the most frequent value in a list."},"content":{"rendered":"\n<pre id=\"block-16a397e8-c8ff-4bd3-a5bf-8834465f7232\" class=\"wp-block-code\"><code>test = &#91;1,2,3,4,2,2,3,1,4,4,4]&lt;br>print(max(set(test), key=test.count))&lt;br>&lt;br>#-&amp;gt; 4</code></pre>\n","protected":false},"excerpt":{"rendered":"","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[95],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3623"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=3623"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3623/revisions"}],"predecessor-version":[{"id":3628,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3623/revisions/3628"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=3623"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=3623"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=3623"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":3622,"date":"2020-11-03T10:34:47","date_gmt":"2020-11-03T10:34:47","guid":{"rendered":"http://python3.foobrdigital.com/?p=3622"},"modified":"2020-11-03T10:34:47","modified_gmt":"2020-11-03T10:34:47","slug":"reset-recursion-limit","status":"publish","type":"post","link":"https://python3.foobrdigital.com/reset-recursion-limit/","title":{"rendered":"Reset recursion limit."},"content":{"rendered":"\n<p>Python restricts recursion limit to 1000. We can though reset its value.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import sys\n\nx=1001\nprint(sys.getrecursionlimit())\n\nsys.setrecursionlimit(x)\nprint(sys.getrecursionlimit())\n\n#1-&amp;gt; 1000\n#2-&amp;gt; 1001</code></pre>\n\n\n\n<p>Please apply the above trick only if you need it.</p>\n","protected":false},"excerpt":{"rendered":"<p>Python restricts recursion limit to 1000. We can though reset its value. Please apply the above trick only if you need it.</p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[95],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3622"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=3622"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3622/revisions"}],"predecessor-version":[{"id":3629,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3622/revisions/3629"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=3622"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=3622"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=3622"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":3621,"date":"2020-11-03T10:35:12","date_gmt":"2020-11-03T10:35:12","guid":{"rendered":"http://python3.foobrdigital.com/?p=3621"},"modified":"2020-11-03T10:35:12","modified_gmt":"2020-11-03T10:35:12","slug":"check-the-memory-usage-of-an-object","status":"publish","type":"post","link":"https://python3.foobrdigital.com/check-the-memory-usage-of-an-object/","title":{"rendered":"Check the memory usage of an object."},"content":{"rendered":"\n<p>In Python 2.7, a 32-bit integer consumes 24-bytes whereas it utilizes 28-bytes in Python 3.5. To verify the memory usage, we can call the &lt;getsizeof&gt; method.</p>\n\n\n\n<h4>In Python 2.7.</h4>\n\n\n\n<pre class=\"wp-block-code\"><code>import sys\nx=1\nprint(sys.getsizeof(x))\n\n#-&amp;gt; 24</code></pre>\n\n\n\n<h4>In Python 3.5.</h4>\n\n\n\n<pre class=\"wp-block-code\"><code>import sys\nx=1\nprint(sys.getsizeof(x))\n\n#-&amp;gt; 28</code></pre>\n","protected":false},"excerpt":{"rendered":"<p>In Python 2.7, a 32-bit integer consumes 24-bytes whereas it utilizes 28-bytes in Python 3.5. To verify the memory usage, we can call the &lt;getsizeof&gt; method. In Python 2.7. In Python 3.5.</p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[95],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3621"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=3621"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3621/revisions"}],"predecessor-version":[{"id":3630,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3621/revisions/3630"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=3621"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=3621"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=3621"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":3620,"date":"2020-11-03T10:35:34","date_gmt":"2020-11-03T10:35:34","guid":{"rendered":"http://python3.foobrdigital.com/?p=3620"},"modified":"2020-11-03T10:35:34","modified_gmt":"2020-11-03T10:35:34","slug":"use-__slots__-to-reduce-memory-overheads","status":"publish","type":"post","link":"https://python3.foobrdigital.com/use-__slots__-to-reduce-memory-overheads/","title":{"rendered":"Use __slots__ to reduce memory overheads."},"content":{"rendered":"\n<p>Have you ever observed your Python application consuming a lot of resources especially memory?&nbsp;Here is one trick which uses &lt;__slots__&gt; class variable to reduce memory overhead to some extent.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import sys\nclass FileSystem(object):\n\n\tdef __init__(self, files, folders, devices):\n\t\tself.files = files\n\t\tself.folders = folders\n\t\tself.devices = devices\n\nprint(sys.getsizeof( FileSystem ))\n\nclass FileSystem1(object):\n\n\t__slots__ = &#91;'files', 'folders', 'devices']\n\t\n\tdef __init__(self, files, folders, devices):\n\t\tself.files = files\n\t\tself.folders = folders\n\t\tself.devices = devices\n\nprint(sys.getsizeof( FileSystem1 ))\n\n#In Python 3.5\n#1-&amp;gt; 1016\n#2-&amp;gt; 888</code></pre>\n\n\n\n<p>Clearly, you can see from the results that there are savings in memory usage. But you should use __slots__ when the memory overhead of a class is unnecessarily large. Do it only after profiling the application. Otherwise, you’ll make the code difficult to change and with no real benefit.</p>\n\n\n\n<p>Lambda to imitate print function.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import sys\nlprint=lambda *args:sys.stdout.write(\" \".join(map(str,args)))\nlprint(\"python\", \"tips\",1000,1001)\n\n#-&amp;gt; python tips 1000 1001</code></pre>\n","protected":false},"excerpt":{"rendered":"<p>Have you ever observed your Python application consuming a lot of resources especially memory?&nbsp;Here is one trick which uses &lt;__slots__&gt; class variable to reduce memory overhead to some extent. Clearly, you can see from the results that there are savings in memory usage. But you should use __slots__ when the memory overhead of a class [&hellip;]</p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[95],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3620"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=3620"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3620/revisions"}],"predecessor-version":[{"id":3631,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/3620/revisions/3631"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=3620"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=3620"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=3620"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}}]