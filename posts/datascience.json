[{"id":1038,"date":"2020-05-21T06:34:22","date_gmt":"2020-05-21T06:34:22","guid":{"rendered":"http://python3.foobrdigital.com/?p=1038"},"modified":"2020-12-15T11:37:28","modified_gmt":"2020-12-15T11:37:28","slug":"data-science-introduction","status":"publish","type":"post","link":"https://python3.foobrdigital.com/data-science-introduction/","title":{"rendered":"Data Science Introduction"},"content":{"rendered":"\n<p>Data science is the process of deriving knowledge and insights from a huge and diverse set of data through organizing, processing and analysing the data. It involves many different disciplines like mathematical and statistical modelling, extracting data from it source and applying data visualization techniques. Often it also involves handling big data technologies to gather both structured and unstructured data. Below we will see some example scenarios where Data science is used.</p>\n\n\n\n<h3>Recommendation systems</h3>\n\n\n\n<p>As online shopping becomes more prevalent, the e-commerce platforms are able to capture users shopping preferences as well as the performance of various products in the market. This leads to creation of recommendation systems which create models predicting the shoppers needs and show the products the shopper is most likely to buy.</p>\n\n\n\n<h3>Financial Risk management</h3>\n\n\n\n<p>The financial risk involving loans and credits are better analysed by using the customers past spend habits, past defaults, other financial commitments and many socio-economic indicators. These data is gathered from various sources in different formats. Organising them together and getting insight into customers profile needs the help of Data science. The outcome is minimizing loss for the financial organization by avoiding bad debt.</p>\n\n\n\n<h3>Improvement in Health Care services</h3>\n\n\n\n<p>The health care industry deals with a variety of data which can be classified into technical data, financial data, patient information, drug information and legal rules. All this data need to be analysed in a coordinated manner to produce insights that will save cost both for the health care provider and care receiver while remaining legally compliant.</p>\n\n\n\n<h3>Computer Vision</h3>\n\n\n\n<p>The advancement in recognizing an image by a computer involves processing large sets of image data from multiple objects of same category. For example, Face recognition. These data sets are modelled, and algorithms are created to apply the model to newer images to get a satisfactory result. Processing of these huge data sets and creation of models need various tools used in Data science.</p>\n\n\n\n<h3>Efficient Management of Energy</h3>\n\n\n\n<p>As the demand for energy consumption soars, the energy producing companies need to manage the various phases of the energy production and distribution more efficiently. This involves optimizing the production methods, the storage and distribution mechanisms as well as studying the customers consumption patterns. Linking the data from all these sources and deriving insight seems a daunting task. This is made easier by using the tools of data science.</p>\n\n\n\n<h2>Python in Data Science</h2>\n\n\n\n<p>The programming requirements of data science demands a very versatile yet flexible language which is simple to write the code but can handle highly complex mathematical processing. Python is most suited for such requirements as it has already established itself both as a language for general computing as well as scientific computing. More over it is being continuously upgraded in form of new addition to its plethora of libraries aimed at different programming requirements. Below we will discuss such features of python which makes it the preferred language for data science.</p>\n\n\n\n<ul><li>A simple and easy to learn language which achieves result in fewer lines of code than other similar languages like R. Its simplicity also makes it robust to handle complex scenarios with minimal code and much less confusion on the general flow of the program.</li><li>It is cross platform, so the same code works in multiple environments without needing any change. That makes it perfect to be used in a multi-environment setup easily.</li><li>It executes faster than other similar languages used for data analysis like R and MATLAB.</li><li>Its excellent memory management capability, especially garbage collection makes it versatile in gracefully managing very large volume of data transformation, slicing, dicing and visualization.</li><li>Most importantly Python has got a very large collection of libraries which serve as special purpose analysis tools. For example – the NumPy package deals with scientific computing and its array needs much less memory than the conventional python list for managing numeric data. And the number of such packages is continuously growing.</li><li>Python has packages which can directly use the code from other languages like Java or C. This helps in optimizing the code performance by using existing code of other languages, whenever it gives a better result.</li></ul>\n\n\n\n<p>In the subsequent chapters we will see how we can leverage these features of python to accomplish all the tasks needed in the different areas of Data Science.</p>\n","protected":false},"excerpt":{"rendered":"<p>Data science is the process of deriving knowledge and insights from a huge and diverse set of data through organizing, processing and analysing the data. It involves many different disciplines like mathematical and statistical modelling, extracting data from it source and applying data visualization techniques. Often it also involves handling big data technologies to gather [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2068,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1038"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1038"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1038/revisions"}],"predecessor-version":[{"id":1039,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1038/revisions/1039"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2068"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1038"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1038"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1038"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1040,"date":"2020-05-21T06:36:49","date_gmt":"2020-05-21T06:36:49","guid":{"rendered":"http://python3.foobrdigital.com/?p=1040"},"modified":"2020-12-15T11:37:28","modified_gmt":"2020-12-15T11:37:28","slug":"data-science-environment-setup","status":"publish","type":"post","link":"https://python3.foobrdigital.com/data-science-environment-setup/","title":{"rendered":"Data Science Environment Setup"},"content":{"rendered":"\n<p>To successfully create and run the example code in this tutorial we will need an environment set up which will have both general-purpose python as well as the special packages required for Data science. We will first look as installing the general-purpose python which can be python 2 or python 3. But we will prefer python 2 for this tutorial mainly because of its maturity and wider support of external packages.</p>\n\n\n\n<h2>Getting Python</h2>\n\n\n\n<p>The most up-to-date and current source code, binaries, documentation, news, etc., is available on the official website of Python&nbsp;<a href=\"https://www.python.org/\" target=\"_blank\" rel=\"noreferrer noopener\">https://www.python.org/</a></p>\n\n\n\n<p>You can download Python documentation from&nbsp;<a href=\"https://www.python.org/doc/\" target=\"_blank\" rel=\"noreferrer noopener\">https://www.python.org/doc/</a>. The documentation is available in HTML, PDF, and PostScript formats.</p>\n\n\n\n<h2>Installing Python</h2>\n\n\n\n<p>Python distribution is available for a wide variety of platforms. You need to download only the binary code applicable for your platform and install Python.</p>\n\n\n\n<p>If the binary code for your platform is not available, you need a C compiler to compile the source code manually. Compiling the source code offers more flexibility in terms of choice of features that you require in your installation.</p>\n\n\n\n<p>Here is a quick overview of installing Python on various platforms −</p>\n\n\n\n<h3>Unix and Linux Installation</h3>\n\n\n\n<p>Here are the simple steps to install Python on Unix/Linux machine.</p>\n\n\n\n<ul><li>Open a Web browser and go to&nbsp;<a href=\"https://www.python.org/downloads/\" target=\"_blank\" rel=\"noreferrer noopener\">https://www.python.org/downloads/</a>.</li><li>Follow the link to download zipped source code available for Unix/Linux.</li><li>Download and extract files.</li><li>Editing the&nbsp;<em>Modules/Setup</em>&nbsp;file if you want to customize some options.</li><li>run ./configure script</li><li>make</li><li>make install</li></ul>\n\n\n\n<p>This installs Python at standard location&nbsp;<em>/usr/local/bin</em>&nbsp;and its libraries at&nbsp;<em>/usr/local/lib/pythonXX</em>&nbsp;where XX is the version of Python.</p>\n\n\n\n<h3>Windows Installation</h3>\n\n\n\n<p>Here are the steps to install Python on Windows machine.</p>\n\n\n\n<ul><li>Open a Web browser and go to&nbsp;<a href=\"https://www.python.org/downloads/\" target=\"_blank\" rel=\"noreferrer noopener\">https://www.python.org/downloads/</a>.</li><li>Follow the link for the Windows installer&nbsp;<em>python-XYZ.msi</em>&nbsp;file where XYZ is the version you need to install.</li><li>To use this installer&nbsp;<em>python-XYZ.msi</em>, the Windows system must support Microsoft Installer 2.0. Save the installer file to your local machine and then run it to find out if your machine supports MSI.</li><li>Run the downloaded file. This brings up the Python install wizard, which is really easy to use. Just accept the default settings, wait until the install is finished, and you are done.</li></ul>\n\n\n\n<h3>Macintosh Installation</h3>\n\n\n\n<p>Recent Macs come with Python installed, but it may be several years out of date. See&nbsp;<a href=\"https://www.python.org/download/mac/\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.python.org/download/mac/</a>&nbsp;for instructions on getting the current version along with extra tools to support development on the Mac. For older Mac OS&#8217;s before Mac OS X 10.3 (released in 2003), MacPython is available.</p>\n\n\n\n<p>Jack Jansen maintains it and you can have full access to the entire documentation at his website −&nbsp;<a href=\"http://www.cwi.nl/~jack/macpython.html\" target=\"_blank\" rel=\"noreferrer noopener\">http://www.cwi.nl/~jack/macpython.html</a>. You can find complete installation details for Mac OS installation.</p>\n\n\n\n<h2>Setting up PATH</h2>\n\n\n\n<p>Programs and other executable files can be in many directories, so operating systems provide a search path that lists the directories that the OS searches for executables.</p>\n\n\n\n<p>The path is stored in an environment variable, which is a named string maintained by the operating system. This variable contains information available to the command shell and other programs.</p>\n\n\n\n<p>The&nbsp;<strong>path</strong>&nbsp;variable is named as PATH in Unix or Path in Windows (Unix is case sensitive; Windows is not).</p>\n\n\n\n<p>In Mac OS, the installer handles the path details. To invoke the Python interpreter from any particular directory, you must add the Python directory to your path.</p>\n\n\n\n<h2>Setting path at Unix/Linux</h2>\n\n\n\n<p>To add the Python directory to the path for a particular session in Unix −</p>\n\n\n\n<ul><li><strong>In the csh shell</strong>&nbsp;− type setenv PATH &#8220;$PATH:/usr/local/bin/python&#8221; and press Enter.</li><li><strong>In the bash shell (Linux)</strong>&nbsp;− type export ATH=&#8221;$PATH:/usr/local/bin/python&#8221; and press Enter.</li><li><strong>In the sh or ksh shell</strong>&nbsp;− type PATH=&#8221;$PATH:/usr/local/bin/python&#8221; and press Enter.</li><li><strong>Note</strong>&nbsp;− /usr/local/bin/python is the path of the Python directory</li></ul>\n\n\n\n<h2>Setting path at Windows</h2>\n\n\n\n<p>To add the Python directory to the path for a particular session in Windows −</p>\n\n\n\n<p><strong>At the command prompt</strong>&nbsp;− type path %path%;C:\\Python and press Enter.</p>\n\n\n\n<p><strong>Note</strong>&nbsp;− C:\\Python is the path of the Python directory</p>\n\n\n\n<h2>Python Environment Variables</h2>\n\n\n\n<p>Here are important environment variables, which can be recognized by Python −</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.</th><th>Variable &amp; Description</th></tr><tr><td>1</td><td><strong>PYTHONPATH</strong>It has a role similar to PATH. This variable tells the Python interpreter where to locate the module files imported into a program. It should include the Python source library directory and the directories containing Python source code. PYTHONPATH is sometimes preset by the Python installer.</td></tr><tr><td>2</td><td><strong>PYTHONSTARTUP</strong>It contains the path of an initialization file containing Python source code. It is executed every time you start the interpreter. It is named as .pythonrc.py in Unix and it contains commands that load utilities or modify PYTHONPATH.</td></tr><tr><td>3</td><td><strong>PYTHONCASEOK</strong>It is used in Windows to instruct Python to find the first case-insensitive match in an import statement. Set this variable to any value to activate it.</td></tr><tr><td>4</td><td><strong>PYTHONHOME</strong>It is an alternative module search path. It is usually embedded in the PYTHONSTARTUP or PYTHONPATH directories to make switching module libraries easy.</td></tr></tbody></table></figure>\n\n\n\n<h2>Running Python</h2>\n\n\n\n<p>There are three different ways to start Python −</p>\n\n\n\n<h3>Interactive Interpreter</h3>\n\n\n\n<p>You can start Python from Unix, DOS, or any other system that provides you a command-line interpreter or shell window.</p>\n\n\n\n<p>Enter&nbsp;<strong>python</strong>&nbsp;the command line.</p>\n\n\n\n<p>Start coding right away in the interactive interpreter.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>$python # Unix/Linux\nor\npython% # Unix/Linux\nor\nC:> python # Windows/DOS</code></pre>\n\n\n\n<p>Here is the list of all the available command line options −</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.</th><th>Option &amp; Description</th></tr><tr><td>1</td><td><strong>-d</strong>It provides debug output.</td></tr><tr><td>2</td><td><strong>-O</strong>It generates optimized bytecode (resulting in .pyo files).</td></tr><tr><td>3</td><td><strong>-S</strong>Do not run import site to look for Python paths on startup.</td></tr><tr><td>4</td><td><strong>-v</strong>verbose output (detailed trace on import statements).</td></tr><tr><td>5</td><td><strong>-X</strong>disable class-based built-in exceptions (just use strings); obsolete starting with version 1.6.</td></tr><tr><td>6</td><td><strong>-c cmd</strong>run Python script sent in as cmd string</td></tr><tr><td>7</td><td><strong>file</strong>run Python script from given file</td></tr></tbody></table></figure>\n\n\n\n<h3>Script from the Command-line</h3>\n\n\n\n<p>A Python script can be executed at command line by invoking the interpreter on your application, as in the following −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>$python script.py # Unix/Linux\n\nor\n\npython% script.py # Unix/Linux\n\nor \n\nC: >python script.py # Windows/DOS</code></pre>\n\n\n\n<p><strong>Note</strong>&nbsp;− Be sure the file permission mode allows execution.</p>\n\n\n\n<h3>Integrated Development Environment</h3>\n\n\n\n<p>You can run Python from a Graphical User Interface (GUI) environment as well, if you have a GUI application on your system that supports Python.</p>\n\n\n\n<ul><li><strong>Unix</strong>&nbsp;− IDLE is the very first Unix IDE for Python.</li><li><strong>Windows</strong>&nbsp;− PythonWin is the first Windows interface for Python and is an IDE with a GUI.</li><li><strong>Macintosh</strong>&nbsp;− The Macintosh version of Python along with the IDLE IDE is available from the main website, downloadable as either MacBinary or BinHex&#8217;d files.</li></ul>\n\n\n\n<h2>Installing SciPy Pack</h2>\n\n\n\n<p>The best way to enable the required packs is to use an installable binary package specific to your operating system. These binaries contain full SciPy stack (inclusive of NumPy, SciPy, matplotlib, IPython, SymPy and nose packages along with core Python).</p>\n\n\n\n<h2>Windows</h2>\n\n\n\n<p>Anaconda (from&nbsp;www.continuum.io) is a free Python distribution for SciPy stack. It is also available for Linux and Mac.</p>\n\n\n\n<p>Canopy (www.enthought.com/products/canopy/) is available as free as well as commercial distribution with full SciPy stack for Windows, Linux and Mac.</p>\n\n\n\n<p>Python (x,y): It is a free Python distribution with SciPy stack and Spyder IDE for Windows OS. (Downloadable from&nbsp;www.python-xy.github.io/)</p>\n\n\n\n<h2>Linux</h2>\n\n\n\n<p>Package managers of respective Linux distributions are used to install one or more packages in SciPy stack.</p>\n\n\n\n<h2>For Ubuntu</h2>\n\n\n\n<pre class=\"wp-block-code\"><code>sudo apt-get install python-numpy \npython-scipy python-matplotlibipythonipythonnotebook python-pandas \npython-sympy python-nose\n﻿</code></pre>\n\n\n\n<h2>For Fedora</h2>\n\n\n\n<pre class=\"wp-block-code\"><code>sudo yum install numpyscipy python-matplotlibipython \npython-pandas sympy python-nose atlas-devel</code></pre>\n\n\n\n<h2>Building from Source</h2>\n\n\n\n<p>Core Python (2.6.x, 2.7.x and 3.2.x onwards) must be installed with distutils and zlib module should be enabled.</p>\n\n\n\n<p>GNU gcc (4.2 and above) C compiler must be available.</p>\n\n\n\n<p>To install NumPy, run the following command.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Python setup.py install</code></pre>\n\n\n\n<p>Let us test whether NumPy module is properly installed, try to import it from Python prompt.</p>\n\n\n\n<p>If it is not installed, the following error message will be displayed.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Traceback (most recent call last): \n   File \"&lt;pyshell#0>\", line 1, in &lt;module> \n      import numpy \nImportError: No module named 'numpy'</code></pre>\n\n\n\n<p>Similarly we can check for the installation of all the required Data Science packages shown in the next chapters.</p>\n","protected":false},"excerpt":{"rendered":"<p>To successfully create and run the example code in this tutorial we will need an environment set up which will have both general-purpose python as well as the special packages required for Data science. We will first look as installing the general-purpose python which can be python 2 or python 3. But we will prefer [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2069,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1040"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1040"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1040/revisions"}],"predecessor-version":[{"id":2088,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1040/revisions/2088"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2069"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1040"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1040"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1040"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1045,"date":"2020-05-21T06:37:28","date_gmt":"2020-05-21T06:37:28","guid":{"rendered":"http://python3.foobrdigital.com/?p=1045"},"modified":"2020-12-15T11:37:28","modified_gmt":"2020-12-15T11:37:28","slug":"pandas","status":"publish","type":"post","link":"https://python3.foobrdigital.com/pandas/","title":{"rendered":"Pandas"},"content":{"rendered":"\n<p>Pandas is an open-source Python Library used for high-performance data manipulation and data analysis using its powerful data structures. Python with pandas is in use in a variety of academic and commercial domains, including Finance, Economics, Statistics, Advertising, Web Analytics, and more. Using Pandas, we can accomplish five typical steps in the processing and analysis of data, regardless of the origin of data — load, organize, manipulate, model, and analyse the data.</p>\n\n\n\n<p>Below are the some of the important features of Pandas which is used specifically for Data processing and Data analysis work.</p>\n\n\n\n<h2>Key Features of Pandas</h2>\n\n\n\n<ul><li>Fast and efficient DataFrame object with default and customized indexing.</li><li>Tools for loading data into in-memory data objects from different file formats.</li><li>Data alignment and integrated handling of missing data.</li><li>Reshaping and pivoting of date sets.</li><li>Label-based slicing, indexing and subsetting of large data sets.</li><li>Columns from a data structure can be deleted or inserted.</li><li>Group by data for aggregation and transformations.</li><li>High performance merging and joining of data.</li><li>Time Series functionality.</li></ul>\n\n\n\n<p>Pandas deals with the following three data structures −</p>\n\n\n\n<ul><li>Series</li><li>DataFrame</li></ul>\n\n\n\n<p>These data structures are built on top of Numpy array, making them fast and efficient.</p>\n\n\n\n<h2>Dimension &amp; Description</h2>\n\n\n\n<p>The best way to think of these data structures is that the higher dimensional data structure is a container of its lower dimensional data structure. For example, DataFrame is a container of Series, Panel is a container of DataFrame.</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Data Structure</th><th>Dimensions</th><th>Description</th></tr><tr><td>Series</td><td>1</td><td>1D labeled homogeneous array, size-immutable.</td></tr><tr><td>Data Frames</td><td>2</td><td>General 2D labeled, size-mutable tabular structure with potentially heterogeneously typed columns.</td></tr></tbody></table></figure>\n\n\n\n<p>DataFrame is widely used and it is the most important data structures.</p>\n\n\n\n<h2>Series</h2>\n\n\n\n<p>Series is a one-dimensional array like structure with homogeneous data. For example, the following series is a collection of integers 10, 23, 56, …</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><td>10</td><td>23</td><td>56</td><td>17</td><td>52</td><td>61</td><td>73</td><td>90</td><td>26</td><td>72</td></tr></tbody></table></figure>\n\n\n\n<h3>Key Points of Series</h3>\n\n\n\n<ul><li>Homogeneous data</li><li>Size Immutable</li><li>Values of Data Mutable</li></ul>\n\n\n\n<h2>DataFrame</h2>\n\n\n\n<p>DataFrame is a two-dimensional array with heterogeneous data. For example,</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Name</th><th>Age</th><th>Gender</th><th>Rating</th></tr><tr><td>Steve</td><td>32</td><td>Male</td><td>3.45</td></tr><tr><td>Lia</td><td>28</td><td>Female</td><td>4.6</td></tr><tr><td>Vin</td><td>45</td><td>Male</td><td>3.9</td></tr><tr><td>Katie</td><td>38</td><td>Female</td><td>2.78</td></tr></tbody></table></figure>\n\n\n\n<p>The table represents the data of a sales team of an organization with their overall performance rating. The data is represented in rows and columns. Each column represents an attribute and each row represents a person.</p>\n\n\n\n<h2>Data Type of Columns</h2>\n\n\n\n<p>The data types of the four columns are as follows −</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Column</th><th>Type</th></tr><tr><td>Name</td><td>String</td></tr><tr><td>Age</td><td>Integer</td></tr><tr><td>Gender</td><td>String</td></tr><tr><td>Rating</td><td>Float</td></tr></tbody></table></figure>\n\n\n\n<h3>Key Points of Data Frame</h3>\n\n\n\n<ul><li>Heterogeneous data</li><li>Size Mutable</li><li>Data Mutable</li></ul>\n\n\n\n<p>We will see lots of examples on using pandas library of python in Data science work in the next chapters.</p>\n","protected":false},"excerpt":{"rendered":"<p>Pandas is an open-source Python Library used for high-performance data manipulation and data analysis using its powerful data structures. Python with pandas is in use in a variety of academic and commercial domains, including Finance, Economics, Statistics, Advertising, Web Analytics, and more. Using Pandas, we can accomplish five typical steps in the processing and analysis [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2070,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1045"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1045"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1045/revisions"}],"predecessor-version":[{"id":1046,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1045/revisions/1046"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2070"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1045"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1045"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1045"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1047,"date":"2020-05-21T06:38:04","date_gmt":"2020-05-21T06:38:04","guid":{"rendered":"http://python3.foobrdigital.com/?p=1047"},"modified":"2020-12-15T11:37:28","modified_gmt":"2020-12-15T11:37:28","slug":"numpy","status":"publish","type":"post","link":"https://python3.foobrdigital.com/numpy/","title":{"rendered":"Numpy"},"content":{"rendered":"\n<p>NumPy is a Python package which stands for &#8216;Numerical Python&#8217;. It is a library consisting of multidimensional array objects and a collection of routines for processing of array.</p>\n\n\n\n<h2>Operations using NumPy</h2>\n\n\n\n<p>Using NumPy, a developer can perform the following operations −</p>\n\n\n\n<ul><li>Mathematical and logical operations on arrays.</li><li>Fourier transforms and routines for shape manipulation.</li><li>Operations related to linear algebra. NumPy has in-built functions for linear algebra and random number generation.</li></ul>\n\n\n\n<h2>NumPy – A Replacement for MatLab</h2>\n\n\n\n<p>NumPy is often used along with packages like&nbsp;<strong>SciPy</strong>&nbsp;(Scientific Python) and&nbsp;<strong>Mat−plotlib</strong>&nbsp;(plotting library). This combination is widely used as a replacement for MatLab, a popular platform for technical computing. However, Python alternative to MatLab is now seen as a more modern and complete programming language.</p>\n\n\n\n<p>It is open source, which is an added advantage of NumPy.</p>\n\n\n\n<h2>ndarray Object</h2>\n\n\n\n<p>The most important object defined in NumPy is an N-dimensional array type called&nbsp;<strong>ndarray</strong>. It describes the collection of items of the same type. Items in the collection can be accessed using a zero-based index. Every item in an ndarray takes the same size of block in the memory. Each element in ndarray is an object of data-type object (called&nbsp;<strong>dtype</strong>). Any item extracted from ndarray object (by slicing) is represented by a Python object of one of array scalar types.</p>\n\n\n\n<p>We will see lots of examples on using NumPy library of python in Data science work in the next chapters.</p>\n","protected":false},"excerpt":{"rendered":"<p>NumPy is a Python package which stands for &#8216;Numerical Python&#8217;. It is a library consisting of multidimensional array objects and a collection of routines for processing of array. Operations using NumPy Using NumPy, a developer can perform the following operations − Mathematical and logical operations on arrays. Fourier transforms and routines for shape manipulation. Operations [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2071,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1047"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1047"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1047/revisions"}],"predecessor-version":[{"id":1049,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1047/revisions/1049"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2071"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1047"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1047"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1047"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1050,"date":"2020-05-21T06:39:01","date_gmt":"2020-05-21T06:39:01","guid":{"rendered":"http://python3.foobrdigital.com/?p=1050"},"modified":"2020-12-15T11:37:27","modified_gmt":"2020-12-15T11:37:27","slug":"scipy","status":"publish","type":"post","link":"https://python3.foobrdigital.com/scipy/","title":{"rendered":"SciPy"},"content":{"rendered":"\n<p>The SciPy library of Python is built to work with NumPy arrays and provides many user-friendly and efficient numerical practices such as routines for numerical integration and optimization. Together, they run on all popular operating systems, are quick to install and are free of charge. NumPy and SciPy are easy to use, but powerful enough to depend on by some of the world&#8217;s leading scientists and engineers.</p>\n\n\n\n<h2>SciPy Sub-packages</h2>\n\n\n\n<p>SciPy is organized into sub-packages covering different scientific computing domains. These are summarized in the following table −</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><td>scipy.constants</td><td>Physical and mathematical constants</td></tr><tr><td>scipy.fftpack</td><td>Fourier transform</td></tr><tr><td>scipy.integrate</td><td>Integration routines</td></tr><tr><td>scipy.interpolate</td><td>Interpolation</td></tr><tr><td>scipy.io</td><td>Data input and output</td></tr><tr><td>scipy.linalg</td><td>Linear algebra routines</td></tr><tr><td>scipy.optimize</td><td>Optimization</td></tr><tr><td>scipy.signal</td><td>Signal processing</td></tr><tr><td>scipy.sparse</td><td>Sparse matrices</td></tr><tr><td>scipy.spatial</td><td>Spatial data structures and algorithms</td></tr><tr><td>scipy.special</td><td>Any special mathematical functions</td></tr><tr><td>scipy.stats</td><td>Statistics</td></tr></tbody></table></figure>\n\n\n\n<h2>Data Structure</h2>\n\n\n\n<p>The basic data structure used by SciPy is a multidimensional array provided by the NumPy module. NumPy provides some functions for Linear Algebra, Fourier Transforms and Random Number Generation, but not with the generality of the equivalent functions in SciPy.</p>\n\n\n\n<p>We will see lots of examples on using SciPy library of python in Data science work in the next chapters.</p>\n","protected":false},"excerpt":{"rendered":"<p>The SciPy library of Python is built to work with NumPy arrays and provides many user-friendly and efficient numerical practices such as routines for numerical integration and optimization. Together, they run on all popular operating systems, are quick to install and are free of charge. NumPy and SciPy are easy to use, but powerful enough [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2072,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1050"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1050"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1050/revisions"}],"predecessor-version":[{"id":1052,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1050/revisions/1052"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2072"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1050"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1050"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1050"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1053,"date":"2020-05-21T06:40:11","date_gmt":"2020-05-21T06:40:11","guid":{"rendered":"http://python3.foobrdigital.com/?p=1053"},"modified":"2020-12-15T11:37:27","modified_gmt":"2020-12-15T11:37:27","slug":"matplotlib","status":"publish","type":"post","link":"https://python3.foobrdigital.com/matplotlib/","title":{"rendered":"Matplotlib"},"content":{"rendered":"\n<p>Matplotlib is a python library used to create 2D graphs and plots by using python scripts. It has a module named pyplot which makes things easy for plotting by providing feature to control line styles, font properties, formatting axes etc. It supports a very wide variety of graphs and plots namely &#8211; histogram, bar charts, power spectra, error charts etc. It is used along with NumPy to provide an environment that is an effective open source alternative for MatLab. It can also be used with graphics toolkits like PyQt and wxPython.</p>\n\n\n\n<p>Conventionally, the package is imported into the Python script by adding the following statement −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>from matplotlib import pyplot as plt</code></pre>\n\n\n\n<h2>Matplotlib Example</h2>\n\n\n\n<p>The following script produces the&nbsp;<strong>sine wave plot</strong>&nbsp;using matplotlib.</p>\n\n\n\n<h3>Example</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>import numpy as np \nimport matplotlib.pyplot as plt  \n\n# Compute the x and y coordinates for points on a sine curve \nx = np.arange(0, 3 * np.pi, 0.1) \ny = np.sin(x) \nplt.title(\"sine wave form\") \n\n# Plot the points using matplotlib \nplt.plot(x, y) \nplt.show() </code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"600\" height=\"477\" src=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/sine_wave.jpg\" alt=\"\" class=\"wp-image-1294\" srcset=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/sine_wave.jpg 600w, https://python3.foobrdigital.com/wp-content/uploads/2020/05/sine_wave-300x239.jpg 300w\" sizes=\"(max-width: 600px) 100vw, 600px\" /></figure>\n\n\n\n<p>We will see lots of examples on using Matplotlib library of python in Data science work in the next chapters.</p>\n","protected":false},"excerpt":{"rendered":"<p>Matplotlib is a python library used to create 2D graphs and plots by using python scripts. It has a module named pyplot which makes things easy for plotting by providing feature to control line styles, font properties, formatting axes etc. It supports a very wide variety of graphs and plots namely &#8211; histogram, bar charts, [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2073,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1053"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1053"}],"version-history":[{"count":3,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1053/revisions"}],"predecessor-version":[{"id":2090,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1053/revisions/2090"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2073"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1053"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1053"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1053"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1056,"date":"2020-05-21T06:45:16","date_gmt":"2020-05-21T06:45:16","guid":{"rendered":"http://python3.foobrdigital.com/?p=1056"},"modified":"2020-12-15T11:37:27","modified_gmt":"2020-12-15T11:37:27","slug":"data-operations","status":"publish","type":"post","link":"https://python3.foobrdigital.com/data-operations/","title":{"rendered":"Data Operations"},"content":{"rendered":"\n<p>Python handles data of various formats mainly through the two libraries, Pandas and Numpy. We have already seen the important features of these two libraries in the previous chapters. In this chapter we will see some basic examples from each of the libraries on how to operate on data.</p>\n\n\n\n<h2>Data Operations in Numpy</h2>\n\n\n\n<p>The most important object defined in NumPy is an N-dimensional array type called ndarray. It describes the collection of items of the same type. Items in the collection can be accessed using a zero-based index. An instance of ndarray class can be constructed by different array creation routines described later in the tutorial. The basic ndarray is created using an array function in NumPy as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>numpy.array </code></pre>\n\n\n\n<p>Following are some examples on Numpy Data handling.</p>\n\n\n\n<h3>Example 1</h3>\n\n\n\n<pre class=\"wp-block-code\"><code># more than one dimensions \nimport numpy as np \na = np.array(&#91;&#91;1, 2], &#91;3, 4]]) \nprint a</code></pre>\n\n\n\n<p>The output is as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&#91;&#91;1, 2] \n &#91;3, 4]]</code></pre>\n\n\n\n<h3>Example 2</h3>\n\n\n\n<pre class=\"wp-block-code\"><code># minimum dimensions \nimport numpy as np \na = np.array(&#91;1, 2, 3,4,5], ndmin = 2) \nprint a</code></pre>\n\n\n\n<p>The output is as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&#91;&#91;1, 2, 3, 4, 5]]</code></pre>\n\n\n\n<h2>Example 3</h2>\n\n\n\n<pre class=\"wp-block-code\"><code># dtype parameter \nimport numpy as np \na = np.array(&#91;1, 2, 3], dtype = complex) \nprint a</code></pre>\n\n\n\n<p>The output is as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&#91; 1.+0.j,  2.+0.j,  3.+0.j]</code></pre>\n\n\n\n<h2>Data Operations in Pandas</h2>\n\n\n\n<p>Pandas handles data through&nbsp;<strong>Series</strong>,<strong>Data Frame</strong>, and&nbsp;<strong>Panel</strong>. We will see some examples from each of these.</p>\n\n\n\n<h2>Pandas Series</h2>\n\n\n\n<p>Series is a one-dimensional labeled array capable of holding data of any type (integer, string, float, python objects, etc.). The axis labels are collectively called index. A pandas Series can be created using the following constructor −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>pandas.Series( data, index, dtype, copy)</code></pre>\n\n\n\n<h3>Example</h3>\n\n\n\n<p>Here we create a series from a Numpy Array.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#import the pandas library and aliasing as pd\nimport pandas as pd\nimport numpy as np\ndata = np.array(&#91;'a','b','c','d'])\ns = pd.Series(data)\nprint s</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>0   a\n1   b\n2   c\n3   d\ndtype: object</code></pre>\n\n\n\n<h2>Pandas DataFrame</h2>\n\n\n\n<p>A Data frame is a two-dimensional data structure, i.e., data is aligned in a tabular fashion in rows and columns. A pandas DataFrame can be created using the following constructor −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>pandas.DataFrame( data, index, columns, dtype, copy)\n﻿</code></pre>\n\n\n\n<p>Let us now create an indexed DataFrame using arrays.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\ndata = {'Name':&#91;'Tom', 'Jack', 'Steve', 'Ricky'],'Age':&#91;28,34,29,42]}\ndf = pd.DataFrame(data, index=&#91;'rank1','rank2','rank3','rank4'])\nprint df</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>         Age    Name\nrank1    28      Tom\nrank2    34     Jack\nrank3    29    Steve\nrank4    42    Ricky</code></pre>\n\n\n\n<h2>Pandas Panel</h2>\n\n\n\n<p>A&nbsp;<strong>panel</strong>&nbsp;is a 3D container of data. The term&nbsp;<strong>Panel data</strong>&nbsp;is derived from econometrics and is partially responsible for the name pandas −&nbsp;<strong>pan(el)-da(ta)</strong>-s.</p>\n\n\n\n<p>A Panel can be created using the following constructor −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>pandas.Panel(data, items, major_axis, minor_axis, dtype, copy)</code></pre>\n\n\n\n<p>In the below example we create a panel from dict of DataFrame Objects</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#creating an empty panel\nimport pandas as pd\nimport numpy as np\n\ndata = {'Item1' : pd.DataFrame(np.random.randn(4, 3)), \n        'Item2' : pd.DataFrame(np.random.randn(4, 2))}\np = pd.Panel(data)\nprint p</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;class 'pandas.core.panel.Panel'>\nDimensions: 2 (items) x 4 (major_axis) x 5 (minor_axis)\nItems axis: 0 to 1\nMajor_axis axis: 0 to 3\nMinor_axis axis: 0 to 4</code></pre>\n","protected":false},"excerpt":{"rendered":"<p>Python handles data of various formats mainly through the two libraries, Pandas and Numpy. We have already seen the important features of these two libraries in the previous chapters. In this chapter we will see some basic examples from each of the libraries on how to operate on data. Data Operations in Numpy The most [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2074,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1056"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1056"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1056/revisions"}],"predecessor-version":[{"id":2089,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1056/revisions/2089"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2074"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1056"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1056"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1056"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1064,"date":"2020-05-21T06:48:37","date_gmt":"2020-05-21T06:48:37","guid":{"rendered":"http://python3.foobrdigital.com/?p=1064"},"modified":"2020-12-15T11:37:27","modified_gmt":"2020-12-15T11:37:27","slug":"data-cleansing","status":"publish","type":"post","link":"https://python3.foobrdigital.com/data-cleansing/","title":{"rendered":"Data Cleansing"},"content":{"rendered":"\n<p>Missing data is always a problem in real life scenarios. Areas like machine learning and data mining face severe issues in the accuracy of their model predictions because of poor quality of data caused by missing values. In these areas, missing value treatment is a major point of focus to make their models more accurate and valid.</p>\n\n\n\n<h2>When and Why Is Data Missed?</h2>\n\n\n\n<p>Let us consider an online survey for a product. Many a times, people do not share all the information related to them. Few people share their experience, but not how long they are using the product; few people share how long they are using the product, their experience but not their contact information. Thus, in some or the other way a part of data is always missing, and this is very common in real time.</p>\n\n\n\n<p>Let us now see how we can handle missing values (say NA or NaN) using Pandas.</p>\n\n\n\n<pre class=\"wp-block-code\"><code># import the pandas library\nimport pandas as pd\nimport numpy as np\n\ndf = pd.DataFrame(np.random.randn(5, 3), index=&#91;'a', 'c', 'e', 'f',\n'h'],columns=&#91;'one', 'two', 'three'])\n\ndf = df.reindex(&#91;'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'])\n\nprint df</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>         one        two      three\na   0.077988   0.476149   0.965836\nb        NaN        NaN        NaN\nc  -0.390208  -0.551605  -2.301950\nd        NaN        NaN        NaN\ne  -2.000303  -0.788201   1.510072\nf  -0.930230  -0.670473   1.146615\ng        NaN        NaN        NaN\nh   0.085100   0.532791   0.887415</code></pre>\n\n\n\n<p>Using reindexing, we have created a DataFrame with missing values. In the output,&nbsp;<strong>NaN</strong>&nbsp;means&nbsp;<strong>Not a Number.</strong></p>\n\n\n\n<h3>Check for Missing Values</h3>\n\n\n\n<p>To make detecting missing values easier (and across different array dtypes), Pandas provides the&nbsp;<strong>isnull()</strong>&nbsp;and&nbsp;<strong>notnull()</strong>&nbsp;functions, which are also methods on Series and DataFrame objects −</p>\n\n\n\n<h3>Example</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\nimport numpy as np\n \ndf = pd.DataFrame(np.random.randn(5, 3), index=&#91;'a', 'c', 'e', 'f',\n'h'],columns=&#91;'one', 'two', 'three'])\n\ndf = df.reindex(&#91;'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'])\n\nprint df&#91;'one'].isnull()</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>a  False\nb  True\nc  False\nd  True\ne  False\nf  False\ng  True\nh  False\nName: one, dtype: bool</code></pre>\n\n\n\n<h2>Cleaning / Filling Missing Data</h2>\n\n\n\n<p>Pandas provides various methods for cleaning the missing values. The fillna function can “fill in” NA values with non-null data in a couple of ways, which we have illustrated in the following sections.</p>\n\n\n\n<h2>Replace NaN with a Scalar Value</h2>\n\n\n\n<p>The following program shows how you can replace &#8220;NaN&#8221; with &#8220;0&#8221;.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\nimport numpy as np\ndf = pd.DataFrame(np.random.randn(3, 3), index=&#91;'a', 'c', 'e'],columns=&#91;'one',\n'two', 'three'])\ndf = df.reindex(&#91;'a', 'b', 'c'])\nprint df\nprint (\"NaN replaced with '0':\")\nprint df.fillna(0)</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>         one        two     three\na  -0.576991  -0.741695  0.553172\nb        NaN        NaN       NaN\nc   0.744328  -1.735166  1.749580\n\nNaN replaced with '0':\n         one        two     three\na  -0.576991  -0.741695  0.553172\nb   0.000000   0.000000  0.000000\nc   0.744328  -1.735166  1.749580</code></pre>\n\n\n\n<p>Here, we are filling with value zero; instead we can also fill with any other value.</p>\n\n\n\n<h2>Fill NA Forward and Backward</h2>\n\n\n\n<p>Using the concepts of filling discussed in the ReIndexing Chapter we will fill the missing values.</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Method</th><th>Action</th></tr><tr><td>pad/fill</td><td>Fill methods Forward</td></tr><tr><td>bfill/backfill</td><td>Fill methods Backward</td></tr></tbody></table></figure>\n\n\n\n<h3>Example</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\nimport numpy as np\n\ndf = pd.DataFrame(np.random.randn(5, 3), index=&#91;'a', 'c', 'e', 'f',\n'h'],columns=&#91;'one', 'two', 'three'])\ndf = df.reindex(&#91;'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'])\n\nprint df.fillna(method='pad')</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>         one        two      three\na   0.077988   0.476149   0.965836\nb   0.077988   0.476149   0.965836\nc  -0.390208  -0.551605  -2.301950\nd  -0.390208  -0.551605  -2.301950\ne  -2.000303  -0.788201   1.510072\nf  -0.930230  -0.670473   1.146615\ng  -0.930230  -0.670473   1.146615</code></pre>\n\n\n\n<h2>Drop Missing Values</h2>\n\n\n\n<p>If you want to simply exclude the missing values, then use the&nbsp;<strong>dropna</strong>&nbsp;function along with the&nbsp;<strong>axis</strong>&nbsp;argument. By default, axis=0, i.e., along row, which means that if any value within a row is NA then the whole row is excluded.</p>\n\n\n\n<h3>Example</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\nimport numpy as np\n\ndf = pd.DataFrame(np.random.randn(5, 3), index=&#91;'a', 'c', 'e', 'f',\n'h'],columns=&#91;'one', 'two', 'three'])\n\ndf = df.reindex(&#91;'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'])\nprint df.dropna()</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>         one        two      three\na   0.077988   0.476149   0.965836\nc  -0.390208  -0.551605  -2.301950\ne  -2.000303  -0.788201   1.510072\nf  -0.930230  -0.670473   1.146615\nh   0.085100   0.532791   0.887415\n﻿</code></pre>\n\n\n\n<h2>Replace Missing (or) Generic Values</h2>\n\n\n\n<p>Many times, we have to replace a generic value with some specific value. We can achieve this by applying the replace method.</p>\n\n\n\n<p>Replacing NA with a scalar value is equivalent behavior of the&nbsp;<strong>fillna()</strong>&nbsp;function.</p>\n\n\n\n<h3>Example</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\nimport numpy as np\ndf = pd.DataFrame({'one':&#91;10,20,30,40,50,2000],\n'two':&#91;1000,0,30,40,50,60]})\nprint df.replace({1000:10,2000:60})</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>   one  two\n0   10   10\n1   20    0\n2   30   30\n3   40   40\n4   50   50\n5   60   60</code></pre>\n","protected":false},"excerpt":{"rendered":"<p>Missing data is always a problem in real life scenarios. Areas like machine learning and data mining face severe issues in the accuracy of their model predictions because of poor quality of data caused by missing values. In these areas, missing value treatment is a major point of focus to make their models more accurate [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2075,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1064"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1064"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1064/revisions"}],"predecessor-version":[{"id":2091,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1064/revisions/2091"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2075"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1064"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1064"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1064"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1088,"date":"2020-05-21T06:51:59","date_gmt":"2020-05-21T06:51:59","guid":{"rendered":"http://python3.foobrdigital.com/?p=1088"},"modified":"2020-12-15T11:37:26","modified_gmt":"2020-12-15T11:37:26","slug":"processing-csv-data","status":"publish","type":"post","link":"https://python3.foobrdigital.com/processing-csv-data/","title":{"rendered":"Processing CSV Data"},"content":{"rendered":"\n<p>Reading data from CSV(comma separated values) is a fundamental necessity in Data Science. Often, we get data from various sources which can get exported to CSV format so that they can be used by other systems. The Panadas library provides features using which we can read the CSV file in full as well as in parts for only a selected group of columns and rows.</p>\n\n\n\n<h2>Input as CSV File</h2>\n\n\n\n<p>The csv file is a text file in which the values in the columns are separated by a comma. Let&#8217;s consider the following data present in the file named&nbsp;<strong>input.csv</strong>.</p>\n\n\n\n<p>You can create this file using windows notepad by copying and pasting this data. Save the file as&nbsp;<strong>input.csv</strong>&nbsp;using the save As All files(*.*) option in notepad.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>id,name,salary,start_date,dept\n1,Rick,623.3,2012-01-01,IT\n2,Dan,515.2,2013-09-23,Operations\n3,Tusar,611,2014-11-15,IT\n4,Ryan,729,2014-05-11,HR\n5,Gary,843.25,2015-03-27,Finance\n6,Rasmi,578,2013-05-21,IT\n7,Pranab,632.8,2013-07-30,Operations\n8,Guru,722.5,2014-06-17,Finance</code></pre>\n\n\n\n<h2>Reading a CSV File</h2>\n\n\n\n<p>The&nbsp;<strong>read_csv</strong>&nbsp;function of the pandas library is used read the content of a CSV file into the python environment as a pandas DataFrame. The function can read the files from the OS by using proper path to the file.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\ndata = pd.read_csv('path/input.csv')\nprint (data)</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result. Please note how an additional column starting with zero as a index has been created by the function.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>   id    name  salary  start_date        dept\n0   1    Rick  623.30  2012-01-01          IT\n1   2     Dan  515.20  2013-09-23  Operations\n2   3   Tusar  611.00  2014-11-15          IT\n3   4    Ryan  729.00  2014-05-11          HR\n4   5    Gary  843.25  2015-03-27     Finance\n5   6   Rasmi  578.00  2013-05-21          IT\n6   7  Pranab  632.80  2013-07-30  Operations\n7   8    Guru  722.50  2014-06-17     Finance</code></pre>\n\n\n\n<h2>Reading Specific Rows</h2>\n\n\n\n<p>The&nbsp;<strong>read_csv</strong>&nbsp;function of the pandas library can also be used to read some specific rows for a given column. We slice the result from the read_csv function using the code shown below for first 5 rows for the column named salary.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\ndata = pd.read_csv('path/input.csv')\n\n# Slice the result for first 5 rows\nprint (data&#91;0:5]&#91;'salary'])</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>0    623.30\n1    515.20\n2    611.00\n3    729.00\n4    843.25\nName: salary, dtype: float64</code></pre>\n\n\n\n<h2>Reading Specific Columns</h2>\n\n\n\n<p>The&nbsp;<strong>read_csv</strong>&nbsp;function of the pandas library can also be used to read some specific columns. We use the multi-axes indexing method called&nbsp;<strong>.loc()</strong>&nbsp;for this purpose. We choose to display the salary and name column for all the rows.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\ndata = pd.read_csv('path/input.csv')\n\n# Use the multi-axes indexing funtion\nprint (data.loc&#91;:,&#91;'salary','name']])</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>   salary    name\n0  623.30    Rick\n1  515.20     Dan\n2  611.00   Tusar\n3  729.00    Ryan\n4  843.25    Gary\n5  578.00   Rasmi\n6  632.80  Pranab\n7  722.50    Guru</code></pre>\n\n\n\n<h2>Reading Specific Columns and Rows</h2>\n\n\n\n<p>The&nbsp;<strong>read_csv</strong>&nbsp;function of the pandas library can also be used to read some specific columns and specific rows. We use the multi-axes indexing method called&nbsp;<strong>.loc()</strong>&nbsp;for this purpose. We choose to display the salary and name column for some of the rows.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\ndata = pd.read_csv('path/input.csv')\n\n# Use the multi-axes indexing funtion\nprint (data.loc&#91;&#91;1,3,5],&#91;'salary','name']])</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>   salary   name\n1   515.2    Dan\n3   729.0   Ryan\n5   578.0  Rasmi</code></pre>\n\n\n\n<h2>Reading Specific Columns for a Range of Rows</h2>\n\n\n\n<p>The&nbsp;<strong>read_csv</strong>&nbsp;function of the pandas library can also be used to read some specific columns and a range of rows. We use the multi-axes indexing method called&nbsp;<strong>.loc()</strong>&nbsp;for this purpose. We choose to display the salary and name column for some of the rows.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\ndata = pd.read_csv('path/input.csv')\n\n# Use the multi-axes indexing funtion\nprint (data.loc&#91;2:6,&#91;'salary','name']])</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>   salary    name\n2  611.00   Tusar\n3  729.00    Ryan\n4  843.25    Gary\n5  578.00   Rasmi\n6  632.80  Pranab</code></pre>\n","protected":false},"excerpt":{"rendered":"<p>Reading data from CSV(comma separated values) is a fundamental necessity in Data Science. Often, we get data from various sources which can get exported to CSV format so that they can be used by other systems. The Panadas library provides features using which we can read the CSV file in full as well as in [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2076,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1088"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1088"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1088/revisions"}],"predecessor-version":[{"id":2092,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1088/revisions/2092"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2076"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1088"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1088"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1088"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1096,"date":"2020-05-21T06:57:51","date_gmt":"2020-05-21T06:57:51","guid":{"rendered":"http://python3.foobrdigital.com/?p=1096"},"modified":"2020-12-15T11:37:26","modified_gmt":"2020-12-15T11:37:26","slug":"processing-json-data","status":"publish","type":"post","link":"https://python3.foobrdigital.com/processing-json-data/","title":{"rendered":"Processing JSON Data"},"content":{"rendered":"\n<p>JSON file stores data as text in human-readable format. JSON stands for JavaScript Object Notation. Pandas can read JSON files using the&nbsp;<strong>read_json</strong>&nbsp;function.</p>\n\n\n\n<h2>Input Data</h2>\n\n\n\n<p>Create a JSON file by copying the below data into a text editor like notepad. Save the file with&nbsp;<strong>.json</strong>&nbsp;extension and choosing the file type as&nbsp;<strong>all files(*.*)</strong>.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>{ \n   \"ID\":&#91;\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\" ],\n   \"Name\":&#91;\"Rick\",\"Dan\",\"Michelle\",\"Ryan\",\"Gary\",\"Nina\",\"Simon\",\"Guru\" ]\n   \"Salary\":&#91;\"623.3\",\"515.2\",\"611\",\"729\",\"843.25\",\"578\",\"632.8\",\"722.5\" ],\n   \n   \"StartDate\":&#91; \"1/1/2012\",\"9/23/2013\",\"11/15/2014\",\"5/11/2014\",\"3/27/2015\",\"5/21/2013\",\n      \"7/30/2013\",\"6/17/2014\"],\n   \"Dept\":&#91; \"IT\",\"Operations\",\"IT\",\"HR\",\"Finance\",\"IT\",\"Operations\",\"Finance\"]\n}</code></pre>\n\n\n\n<h2>Read the JSON File</h2>\n\n\n\n<p>The&nbsp;<strong>read_json</strong>&nbsp;function of the pandas library can be used to read the JSON file into a pandas DataFrame.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\n\ndata = pd.read_json('path/input.json')\nprint (data)</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>         Dept  ID    Name  Salary   StartDate\n0          IT   1    Rick  623.30    1/1/2012\n1  Operations   2     Dan  515.20   9/23/2013\n2          IT   3   Tusar  611.00  11/15/2014\n3          HR   4    Ryan  729.00   5/11/2014\n4     Finance   5    Gary  843.25   3/27/2015\n5          IT   6   Rasmi  578.00   5/21/2013\n6  Operations   7  Pranab  632.80   7/30/2013\n7     Finance   8    Guru  722.50   6/17/2014</code></pre>\n\n\n\n<h2>Reading Specific Columns and Rows</h2>\n\n\n\n<p>Similar to what we have already seen in the previous chapter to read the CSV file, the&nbsp;<strong>read_json</strong>&nbsp;function of the pandas library can also be used to read some specific columns and specific rows after the JSON file is read to a DataFrame. We use the multi-axes indexing method called&nbsp;<strong>.loc()</strong>&nbsp;for this purpose. We choose to display the Salary and Name column for some of the rows.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\ndata = pd.read_json('path/input.xlsx')\n\n# Use the multi-axes indexing funtion\nprint (data.loc&#91;&#91;1,3,5],&#91;'salary','name']])</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>   salary   name\n1   515.2    Dan\n3   729.0   Ryan\n5   578.0  Rasmi</code></pre>\n\n\n\n<h2>Reading JSON file as Records</h2>\n\n\n\n<p>We can also apply the&nbsp;<strong>to_json</strong>&nbsp;function along with parameters to read the JSON file content into individual records.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\ndata = pd.read_json('path/input.xlsx')\n\nprint(data.to_json(orient='records', lines=True))</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>{\"Dept\":\"IT\",\"ID\":1,\"Name\":\"Rick\",\"Salary\":623.3,\"StartDate\":\"1\\/1\\/2012\"}\n{\"Dept\":\"Operations\",\"ID\":2,\"Name\":\"Dan\",\"Salary\":515.2,\"StartDate\":\"9\\/23\\/2013\"}\n{\"Dept\":\"IT\",\"ID\":3,\"Name\":\"Tusar\",\"Salary\":611.0,\"StartDate\":\"11\\/15\\/2014\"}\n{\"Dept\":\"HR\",\"ID\":4,\"Name\":\"Ryan\",\"Salary\":729.0,\"StartDate\":\"5\\/11\\/2014\"}\n{\"Dept\":\"Finance\",\"ID\":5,\"Name\":\"Gary\",\"Salary\":843.25,\"StartDate\":\"3\\/27\\/2015\"}\n{\"Dept\":\"IT\",\"ID\":6,\"Name\":\"Rasmi\",\"Salary\":578.0,\"StartDate\":\"5\\/21\\/2013\"}\n{\"Dept\":\"Operations\",\"ID\":7,\"Name\":\"Pranab\",\"Salary\":632.8,\"StartDate\":\"7\\/30\\/2013\"}\n{\"Dept\":\"Finance\",\"ID\":8,\"Name\":\"Guru\",\"Salary\":722.5,\"StartDate\":\"6\\/17\\/2014\"}</code></pre>\n","protected":false},"excerpt":{"rendered":"<p>JSON file stores data as text in human-readable format. JSON stands for JavaScript Object Notation. Pandas can read JSON files using the&nbsp;read_json&nbsp;function. Input Data Create a JSON file by copying the below data into a text editor like notepad. Save the file with&nbsp;.json&nbsp;extension and choosing the file type as&nbsp;all files(*.*). Read the JSON File The&nbsp;read_json&nbsp;function [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2077,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1096"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1096"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1096/revisions"}],"predecessor-version":[{"id":2093,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1096/revisions/2093"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2077"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1096"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1096"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1096"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1108,"date":"2020-05-21T07:00:10","date_gmt":"2020-05-21T07:00:10","guid":{"rendered":"http://python3.foobrdigital.com/?p=1108"},"modified":"2020-12-15T11:37:26","modified_gmt":"2020-12-15T11:37:26","slug":"processing-xls-data","status":"publish","type":"post","link":"https://python3.foobrdigital.com/processing-xls-data/","title":{"rendered":"Processing XLS Data"},"content":{"rendered":"\n<p>Microsoft Excel is a very widely used spread sheet program. Its user friendliness and appealing features makes it a very frequently used tool in Data Science. The Panadas library provides features using which we can read the Excel file in full as well as in parts for only a selected group of Data. We can also read an Excel file with multiple sheets in it. We use the&nbsp;<strong>read_excel</strong>&nbsp;function to read the data from it.</p>\n\n\n\n<h2>Input as Excel File</h2>\n\n\n\n<p>We Create an excel file with multiple sheets in the windows OS. The Data in the different sheets is as shown below.</p>\n\n\n\n<p>You can create this file using the Excel Program in windows OS. Save the file as&nbsp;<strong>input.xlsx</strong>.</p>\n\n\n\n<pre class=\"wp-block-code\"><code># Data in Sheet1\n\nid,name,salary,start_date,dept\n1,Rick,623.3,2012-01-01,IT\n2,Dan,515.2,2013-09-23,Operations\n3,Tusar,611,2014-11-15,IT\n4,Ryan,729,2014-05-11,HR\n5,Gary,843.25,2015-03-27,Finance\n6,Rasmi,578,2013-05-21,IT\n7,Pranab,632.8,2013-07-30,Operations\n8,Guru,722.5,2014-06-17,Finance\n\n# Data in Sheet2\n\nid\tname\tzipcode\n1\tRick\t301224\n2\tDan\t341255\n3\tTusar\t297704\n4\tRyan\t216650\n5\tGary\t438700\n6\tRasmi\t665100\n7\tPranab\t341211\n8\tGuru\t347480</code></pre>\n\n\n\n<h2>Reading an Excel File</h2>\n\n\n\n<p>The&nbsp;<strong>read_excel</strong>&nbsp;function of the pandas library is used read the content of an Excel file into the python environment as a pandas DataFrame. The function can read the files from the OS by using proper path to the file. By default, the function will read Sheet1.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\ndata = pd.read_excel('path/input.xlsx')\nprint (data)</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result. Please note how an additional column starting with zero as a index has been created by the function.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>   id    name  salary  start_date        dept\n0   1    Rick  623.30  2012-01-01          IT\n1   2     Dan  515.20  2013-09-23  Operations\n2   3   Tusar  611.00  2014-11-15          IT\n3   4    Ryan  729.00  2014-05-11          HR\n4   5    Gary  843.25  2015-03-27     Finance\n5   6   Rasmi  578.00  2013-05-21          IT\n6   7  Pranab  632.80  2013-07-30  Operations\n7   8    Guru  722.50  2014-06-17     Finance</code></pre>\n\n\n\n<h2>Reading Specific Columns and Rows</h2>\n\n\n\n<p>Similar to what we have already seen in the previous chapter to read the CSV file, the&nbsp;<strong>read_excel</strong>&nbsp;function of the pandas library can also be used to read some specific columns and specific rows. We use the multi-axes indexing method called&nbsp;<strong>.loc()</strong>&nbsp;for this purpose. We choose to display the salary and name column for some of the rows.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\ndata = pd.read_excel('path/input.xlsx')\n\n# Use the multi-axes indexing funtion\nprint (data.loc&#91;&#91;1,3,5],&#91;'salary','name']])</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>   salary   name\n1   515.2    Dan\n3   729.0   Ryan\n5   578.0  Rasmi</code></pre>\n\n\n\n<h2>Reading Multiple Excel Sheets</h2>\n\n\n\n<p>Multiple sheets with different Data formats can also be read by using read_excel function with help of a wrapper class named&nbsp;<strong>ExcelFile</strong>. It will read the multiple sheets into memory only once. In the below example we read sheet1 and sheet2 into two data frames and print them out individually.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\nwith pd.ExcelFile('C:/Users/Rasmi/Documents/pydatasci/input.xlsx') as xls:\n    df1 = pd.read_excel(xls, 'Sheet1')\n    df2 = pd.read_excel(xls, 'Sheet2')\n\nprint(\"****Result Sheet 1****\")\nprint (df1&#91;0:5]&#91;'salary'])\nprint(\"\")\nprint(\"***Result Sheet 2****\")\nprint (df2&#91;0:5]&#91;'zipcode'])</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>****Result Sheet 1****\n0    623.30\n1    515.20\n2    611.00\n3    729.00\n4    843.25\nName: salary, dtype: float64\n\n***Result Sheet 2****\n0    301224\n1    341255\n2    297704\n3    216650\n4    438700\nName: zipcode, dtype: int64</code></pre>\n","protected":false},"excerpt":{"rendered":"<p>Microsoft Excel is a very widely used spread sheet program. Its user friendliness and appealing features makes it a very frequently used tool in Data Science. The Panadas library provides features using which we can read the Excel file in full as well as in parts for only a selected group of Data. We can [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2078,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1108"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1108"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1108/revisions"}],"predecessor-version":[{"id":2094,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1108/revisions/2094"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2078"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1108"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1108"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1108"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1116,"date":"2020-05-21T07:03:56","date_gmt":"2020-05-21T07:03:56","guid":{"rendered":"http://python3.foobrdigital.com/?p=1116"},"modified":"2020-12-15T11:37:25","modified_gmt":"2020-12-15T11:37:25","slug":"relational-databases","status":"publish","type":"post","link":"https://python3.foobrdigital.com/relational-databases/","title":{"rendered":"Relational Databases"},"content":{"rendered":"\n<p>We can connect to relational databases for analysing data using the&nbsp;<strong>pandas</strong>&nbsp;library as well as another additional library for implementing database connectivity. This package is named as&nbsp;<strong>sqlalchemy</strong>&nbsp;which provides full SQL language functionality to be used in python.</p>\n\n\n\n<h2>Installing SQLAlchemy</h2>\n\n\n\n<p>The installation is very straight forward using Anaconda which we have discussed in the chapter&nbsp;Data Science Environment. Assuming you have installed Anaconda as described in this chapter, run the following command in the Anaconda Prompt Window to install the SQLAlchemy package.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>conda install sqlalchemy</code></pre>\n\n\n\n<h2>Reading Relational Tables</h2>\n\n\n\n<p>We will use Sqlite3 as our relational database as it is very light weight and easy to use. Though the SQLAlchemy library can connect to a variety of relational sources including MySql, Oracle and Postgresql and Mssql. We first create a database engine and then connect to the database engine using the&nbsp;<strong>to_sql</strong>&nbsp;function of the SQLAlchemy library.</p>\n\n\n\n<p>In the below example we create the relational table by using the&nbsp;<strong>to_sql</strong>&nbsp;function from a dataframe already created by reading a csv file. Then we use the&nbsp;<strong>read_sql_query</strong>&nbsp;function from pandas to execute and capture the results from various SQL queries.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>from sqlalchemy import create_engine\nimport pandas as pd\n\ndata = pd.read_csv('/path/input.csv')\n\n# Create the db engine\nengine = create_engine('sqlite:///:memory:')\n\n# Store the dataframe as a table\ndata.to_sql('data_table', engine)\n\n# Query 1 on the relational table\nres1 = pd.read_sql_query('SELECT * FROM data_table', engine)\nprint('Result 1')\nprint(res1)\nprint('')\n\n# Query 2 on the relational table\nres2 = pd.read_sql_query('SELECT dept,sum(salary) FROM data_table group by dept', engine)\nprint('Result 2')\nprint(res2)</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Result 1\n   index  id    name  salary  start_date        dept\n0      0   1    Rick  623.30  2012-01-01          IT\n1      1   2     Dan  515.20  2013-09-23  Operations\n2      2   3   Tusar  611.00  2014-11-15          IT\n3      3   4    Ryan  729.00  2014-05-11          HR\n4      4   5    Gary  843.25  2015-03-27     Finance\n5      5   6   Rasmi  578.00  2013-05-21          IT\n6      6   7  Pranab  632.80  2013-07-30  Operations\n7      7   8    Guru  722.50  2014-06-17     Finance\n\nResult 2\n         dept  sum(salary)\n0     Finance      1565.75\n1          HR       729.00\n2          IT      1812.30\n3  Operations      1148.00</code></pre>\n\n\n\n<h2>Inserting Data to Relational Tables</h2>\n\n\n\n<p>We can also insert data into relational tables using sql.execute function available in pandas. In the below code we previous csv file as input data set, store it in a relational table and then insert another record using sql.execute.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>from sqlalchemy import create_engine\nfrom pandas.io import sql\n\nimport pandas as pd\n\ndata = pd.read_csv('C:/Users/Rasmi/Documents/pydatasci/input.csv')\nengine = create_engine('sqlite:///:memory:')\n\n# Store the Data in a relational table\ndata.to_sql('data_table', engine)\n\n# Insert another row\nsql.execute('INSERT INTO data_table VALUES(?,?,?,?,?,?)', engine, params=&#91;('id',9,'Ruby',711.20,'2015-03-27','IT')])\n\n# Read from the relational table\nres = pd.read_sql_query('SELECT ID,Dept,Name,Salary,start_date FROM data_table', engine)\nprint(res)</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>   id        dept    name  salary  start_date\n0   1          IT    Rick  623.30  2012-01-01\n1   2  Operations     Dan  515.20  2013-09-23\n2   3          IT   Tusar  611.00  2014-11-15\n3   4          HR    Ryan  729.00  2014-05-11\n4   5     Finance    Gary  843.25  2015-03-27\n5   6          IT   Rasmi  578.00  2013-05-21\n6   7  Operations  Pranab  632.80  2013-07-30\n7   8     Finance    Guru  722.50  2014-06-17\n8   9          IT    Ruby  711.20  2015-03-27</code></pre>\n\n\n\n<h2>Deleting Data from Relational Tables</h2>\n\n\n\n<p>We can also delete data into relational tables using sql.execute function available in pandas. The below code deletes a row based on the input condition given.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>from sqlalchemy import create_engine\nfrom pandas.io import sql\n\nimport pandas as pd\n\ndata = pd.read_csv('C:/Users/Rasmi/Documents/pydatasci/input.csv')\nengine = create_engine('sqlite:///:memory:')\ndata.to_sql('data_table', engine)\n\nsql.execute('Delete from data_table where name = (?) ', engine,  params=&#91;('Gary')])\n\nres = pd.read_sql_query('SELECT ID,Dept,Name,Salary,start_date FROM data_table', engine)\nprint(res)</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>   id        dept    name  salary  start_date\n0   1          IT    Rick   623.3  2012-01-01\n1   2  Operations     Dan   515.2  2013-09-23\n2   3          IT   Tusar   611.0  2014-11-15\n3   4          HR    Ryan   729.0  2014-05-11\n4   6          IT   Rasmi   578.0  2013-05-21\n5   7  Operations  Pranab   632.8  2013-07-30\n6   8     Finance    Guru   722.5  2014-06-17</code></pre>\n","protected":false},"excerpt":{"rendered":"<p>We can connect to relational databases for analysing data using the&nbsp;pandas&nbsp;library as well as another additional library for implementing database connectivity. This package is named as&nbsp;sqlalchemy&nbsp;which provides full SQL language functionality to be used in python. Installing SQLAlchemy The installation is very straight forward using Anaconda which we have discussed in the chapter&nbsp;Data Science Environment. [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2079,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1116"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1116"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1116/revisions"}],"predecessor-version":[{"id":2095,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1116/revisions/2095"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2079"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1116"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1116"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1116"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1123,"date":"2020-05-21T07:06:30","date_gmt":"2020-05-21T07:06:30","guid":{"rendered":"http://python3.foobrdigital.com/?p=1123"},"modified":"2020-12-15T11:37:24","modified_gmt":"2020-12-15T11:37:24","slug":"nosql-databases","status":"publish","type":"post","link":"https://python3.foobrdigital.com/nosql-databases/","title":{"rendered":"NoSQL Databases"},"content":{"rendered":"\n<p>As more and more data become available as unstructured or semi-structured, the need of managing them through NoSql database increases. Python can also interact with NoSQL databases in a similar way as is interacts with Relational databases. In this chapter we will use python to interact with MongoDB as a NoSQL database. In case you are new to MongoDB, you can learn it in our tutorial&nbsp;here.</p>\n\n\n\n<p>In order to connect to MongoDB, python uses a library known as&nbsp;<strong>pymongo</strong>. You can add this library to your python environment, using the below command from the Anaconda environment.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>conda install pymongo</code></pre>\n\n\n\n<p>This library enables python to connect to MOngoDB using a db client. Once connected we select the db name to be used for various operations.</p>\n\n\n\n<h2>Inserting Data</h2>\n\n\n\n<p>To insert data into MongoDB we use the insert() method which is available in the database environment. First we connect to the db using python code shown below and then we provide the document details in form of a series of key-value pairs.</p>\n\n\n\n<pre class=\"wp-block-code\"><code># Import the python libraries\nfrom pymongo import MongoClient\nfrom pprint import pprint\n\n# Choose the appropriate client\nclient = MongoClient()\n\n# Connect to the test db \ndb=client.test\n\n# Use the employee collection\nemployee = db.employee\nemployee_details = {\n    'Name': 'Raj Kumar',\n    'Address': 'Sears Streer, NZ',\n    'Age': '42'\n}\n\n# Use the insert method\nresult = employee.insert_one(employee_details)\n\n# Query for the inserted document.\nQueryresult = employee.find_one({'Age': '42'})\npprint(Queryresult)</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>{u'Address': u'Sears Streer, NZ',\n u'Age': u'42',\n u'Name': u'Raj Kumar',\n u'_id': ObjectId('5adc5a9f84e7cd3940399f93')}</code></pre>\n\n\n\n<h2>Updating Data</h2>\n\n\n\n<p>Updating an existing MongoDB data is similar to inserting. We use the update() method which is native to mongoDB. In the below code we are replacing the existing record with new key-value pairs. Please note how we are using the condition criteria to decide which record to update.</p>\n\n\n\n<pre class=\"wp-block-code\"><code># Import the python libraries\nfrom pymongo import MongoClient\nfrom pprint import pprint\n\n# Choose the appropriate client\nclient = MongoClient()\n\n# Connect to db\ndb=client.test\nemployee = db.employee\n\n# Use the condition to choose the record\n# and use the update method\ndb.employee.update_one(\n        {\"Age\":'42'},\n        {\n        \"$set\": {\n            \"Name\":\"Srinidhi\",\n            \"Age\":'35',\n            \"Address\":\"New Omsk, WC\"\n        }\n        }\n    )\n\nQueryresult = employee.find_one({'Age':'35'})\n\npprint(Queryresult)</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>{u'Address': u'New Omsk, WC',\n u'Age': u'35',\n u'Name': u'Srinidhi',\n u'_id': ObjectId('5adc5a9f84e7cd3940399f93')}</code></pre>\n\n\n\n<h2>Deleting Data</h2>\n\n\n\n<p>Deleting a record is also straight forward where we use the delete method. Here also we mention the condition which is used to choose the record to be deleted.</p>\n\n\n\n<pre class=\"wp-block-code\"><code># Import the python libraries\nfrom pymongo import MongoClient\nfrom pprint import pprint\n\n# Choose the appropriate client\nclient = MongoClient()\n\n# Connect to db\ndb=client.test\nemployee = db.employee\n\n# Use the condition to choose the record\n# and use the delete method\ndb.employee.delete_one({\"Age\":'35'})\n\nQueryresult = employee.find_one({'Age':'35'})\n\npprint(Queryresult)</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>None</code></pre>\n\n\n\n<p>So we see the particular record does not exist in the db any more.</p>\n","protected":false},"excerpt":{"rendered":"<p>As more and more data become available as unstructured or semi-structured, the need of managing them through NoSql database increases. Python can also interact with NoSQL databases in a similar way as is interacts with Relational databases. In this chapter we will use python to interact with MongoDB as a NoSQL database. In case you [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2080,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1123"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1123"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1123/revisions"}],"predecessor-version":[{"id":2096,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1123/revisions/2096"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2080"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1123"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1123"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1123"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1130,"date":"2020-05-21T07:08:53","date_gmt":"2020-05-21T07:08:53","guid":{"rendered":"http://python3.foobrdigital.com/?p=1130"},"modified":"2020-12-15T11:37:23","modified_gmt":"2020-12-15T11:37:23","slug":"date-and-time-2","status":"publish","type":"post","link":"https://python3.foobrdigital.com/date-and-time-2/","title":{"rendered":"Date and Time"},"content":{"rendered":"\n<p>Often in data science we need analysis which is based on temporal values. Python can handle the various formats of date and time gracefully. The&nbsp;<strong>datetime</strong>&nbsp;library provides necessary methods and functions to handle the following scenarios.</p>\n\n\n\n<ul><li>Date Time Representation</li><li>Date Time Arithmetic</li><li>Date Time Comparison</li></ul>\n\n\n\n<p>We will study them one by one.</p>\n\n\n\n<h2>Date Time Representation</h2>\n\n\n\n<p>A date and its various parts are represented by using different datetime functions. Also, there are format specifiers which play a role in displaying the alphabetical parts of a date like name of the month or week day. The following code shows today&#8217;s date and various parts of the date.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import datetime\n\nprint 'The Date Today is  :', datetime.datetime.today()\n\ndate_today = datetime.date.today()\nprint date_today\nprint 'This Year   :', date_today.year\nprint 'This Month    :', date_today.month\nprint 'Month Name:',date_today.strftime('%B')\nprint 'This Week Day    :', date_today.day\nprint 'Week Day Name:',date_today.strftime('%A')</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>The Date Today is  : 2018-04-22 15:38:35.835000\n2018-04-22\nThis Year   : 2018\nThis Month    : 4\nMonth Name: April\nThis Week Day    : 22\nWeek Day Name: Sunday</code></pre>\n\n\n\n<h2>Date Time Arithmetic</h2>\n\n\n\n<p>For calculations involving dates we store the various dates into variables and apply the relevant mathematical operator to these variables.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import datetime \n \n#Capture the First Date\nday1 = datetime.date(2018, 2, 12)\nprint 'day1:', day1.ctime()\n\n# Capture the Second Date\nday2 = datetime.date(2017, 8, 18)\nprint 'day2:', day2.ctime()\n\n# Find the difference between the dates\nprint 'Number of Days:', day1-day2\n\n\ndate_today  = datetime.date.today() \n\n# Create a delta of Four Days \nno_of_days = datetime.timedelta(days=4) \n\n# Use Delta for Past Date\nbefore_four_days = date_today - no_of_days \nprint 'Before Four Days:', before_four_days \n \n# Use Delta for future Date\nafter_four_days = date_today + no_of_days \nprint 'After Four Days:', after_four_days</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>day1: Mon Feb 12 00:00:00 2018\nday2: Fri Aug 18 00:00:00 2017\nNumber of Days: 178 days, 0:00:00\nBefore Four Days: 2018-04-18\nAfter Four Days: 2018-04-26</code></pre>\n\n\n\n<h2>Date Time Comparison</h2>\n\n\n\n<p>Date and time are compared using logical operators. But we must be careful in comparing the right parts of the dates with each other. In the below examples we take the future and past dates and compare them using the python if clause along with logical operators.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import datetime\n\ndate_today  = datetime.date.today() \n\nprint 'Today is: ', date_today\n# Create a delta of Four Days \nno_of_days = datetime.timedelta(days=4) \n\n# Use Delta for Past Date\nbefore_four_days = date_today - no_of_days \nprint 'Before Four Days:', before_four_days \n\nafter_four_days =  date_today + no_of_days\n\ndate1 = datetime.date(2018,4,4)\n\nprint 'date1:',date1\n\nif date1 == before_four_days :\n    print 'Same Dates'\nif date_today > date1:\n    print 'Past Date'\nif date1 &lt; after_four_days:\n    print 'Future Date'</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Today is:  2018-04-22\nBefore Four Days: 2018-04-18\ndate1: 2018-04-04\nPast Date\nFuture Date</code></pre>\n","protected":false},"excerpt":{"rendered":"<p>Often in data science we need analysis which is based on temporal values. Python can handle the various formats of date and time gracefully. The&nbsp;datetime&nbsp;library provides necessary methods and functions to handle the following scenarios. Date Time Representation Date Time Arithmetic Date Time Comparison We will study them one by one. Date Time Representation A [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2081,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1130"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1130"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1130/revisions"}],"predecessor-version":[{"id":1140,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1130/revisions/1140"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2081"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1130"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1130"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1130"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1141,"date":"2020-05-21T07:10:54","date_gmt":"2020-05-21T07:10:54","guid":{"rendered":"http://python3.foobrdigital.com/?p=1141"},"modified":"2020-12-15T11:37:21","modified_gmt":"2020-12-15T11:37:21","slug":"data-wrangling","status":"publish","type":"post","link":"https://python3.foobrdigital.com/data-wrangling/","title":{"rendered":"Data Wrangling"},"content":{"rendered":"\n<p>Data wrangling involves processing the data in various formats like &#8211; merging, grouping, concatenating etc. for the purpose of analysing or getting them ready to be used with another set of data. Python has built-in features to apply these wrangling methods to various data sets to achieve the analytical goal. In this chapter we will look at few examples describing these methods.</p>\n\n\n\n<h2>Merging Data</h2>\n\n\n\n<p>The Pandas library in python provides a single function,&nbsp;<strong>merge</strong>, as the entry point for all standard database join operations between DataFrame objects −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>pd.merge(left, right, how='inner', on=None, left_on=None, right_on=None,\nleft_index=False, right_index=False, sort=True)</code></pre>\n\n\n\n<p>Let us now create two different DataFrames and perform the merging operations on it.</p>\n\n\n\n<pre class=\"wp-block-code\"><code># import the pandas library\nimport pandas as pd\nleft = pd.DataFrame({\n         'id':&#91;1,2,3,4,5],\n         'Name': &#91;'Alex', 'Amy', 'Allen', 'Alice', 'Ayoung'],\n         'subject_id':&#91;'sub1','sub2','sub4','sub6','sub5']})\nright = pd.DataFrame(\n         {'id':&#91;1,2,3,4,5],\n         'Name': &#91;'Billy', 'Brian', 'Bran', 'Bryce', 'Betty'],\n         'subject_id':&#91;'sub2','sub4','sub3','sub6','sub5']})\nprint left\nprint right</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>    Name  id   subject_id\n0   Alex   1         sub1\n1    Amy   2         sub2\n2  Allen   3         sub4\n3  Alice   4         sub6\n4  Ayoung  5         sub5\n\n    Name  id   subject_id\n0  Billy   1         sub2\n1  Brian   2         sub4\n2  Bran    3         sub3\n3  Bryce   4         sub6\n4  Betty   5         sub5</code></pre>\n\n\n\n<h2>Grouping Data</h2>\n\n\n\n<p>Grouping data sets is a frequent need in data analysis where we need the result in terms of various groups present in the data set. Panadas has in-built methods which can roll the data into various groups.</p>\n\n\n\n<p>In the below example we group the data by year and then get the result for a specific year.</p>\n\n\n\n<pre class=\"wp-block-code\"><code># import the pandas library\nimport pandas as pd\n\nipl_data = {'Team': &#91;'Riders', 'Riders', 'Devils', 'Devils', 'Kings',\n         'kings', 'Kings', 'Kings', 'Riders', 'Royals', 'Royals', 'Riders'],\n         'Rank': &#91;1, 2, 2, 3, 3,4 ,1 ,1,2 , 4,1,2],\n         'Year': &#91;2014,2015,2014,2015,2014,2015,2016,2017,2016,2014,2015,2017],\n         'Points':&#91;876,789,863,673,741,812,756,788,694,701,804,690]}\ndf = pd.DataFrame(ipl_data)\n\ngrouped = df.groupby('Year')\nprint grouped.get_group(2014)</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>   Points  Rank     Team    Year\n0     876     1   Riders    2014\n2     863     2   Devils    2014\n4     741     3   Kings     2014\n9     701     4   Royals    2014</code></pre>\n\n\n\n<h2>Concatenating Data</h2>\n\n\n\n<p>Pandas provides various facilities for easily combining together&nbsp;<strong>Series, DataFrame</strong>, and&nbsp;<strong>Panel</strong>&nbsp;objects. In the below example the&nbsp;<strong>concat</strong>&nbsp;function performs concatenation operations along an axis. Let us create different objects and do concatenation.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\none = pd.DataFrame({\n         'Name': &#91;'Alex', 'Amy', 'Allen', 'Alice', 'Ayoung'],\n         'subject_id':&#91;'sub1','sub2','sub4','sub6','sub5'],\n         'Marks_scored':&#91;98,90,87,69,78]},\n         index=&#91;1,2,3,4,5])\ntwo = pd.DataFrame({\n         'Name': &#91;'Billy', 'Brian', 'Bran', 'Bryce', 'Betty'],\n         'subject_id':&#91;'sub2','sub4','sub3','sub6','sub5'],\n         'Marks_scored':&#91;89,80,79,97,88]},\n         index=&#91;1,2,3,4,5])\nprint pd.concat(&#91;one,two])</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>    Marks_scored     Name   subject_id\n1             98     Alex         sub1\n2             90      Amy         sub2\n3             87    Allen         sub4\n4             69    Alice         sub6\n5             78   Ayoung         sub5\n1             89    Billy         sub2\n2             80    Brian         sub4\n3             79     Bran         sub3\n4             97    Bryce         sub6\n5             88    Betty         sub5</code></pre>\n","protected":false},"excerpt":{"rendered":"<p>Data wrangling involves processing the data in various formats like &#8211; merging, grouping, concatenating etc. for the purpose of analysing or getting them ready to be used with another set of data. Python has built-in features to apply these wrangling methods to various data sets to achieve the analytical goal. In this chapter we will [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2082,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1141"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1141"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1141/revisions"}],"predecessor-version":[{"id":2097,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1141/revisions/2097"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2082"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1141"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1141"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1141"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1149,"date":"2020-05-21T07:13:45","date_gmt":"2020-05-21T07:13:45","guid":{"rendered":"http://python3.foobrdigital.com/?p=1149"},"modified":"2020-12-15T11:37:20","modified_gmt":"2020-12-15T11:37:20","slug":"data-aggregation","status":"publish","type":"post","link":"https://python3.foobrdigital.com/data-aggregation/","title":{"rendered":"Data Aggregation"},"content":{"rendered":"\n<p>Python has several methods are available to perform aggregations on data. It is done using the pandas and numpy libraries. The data must be available or converted to a dataframe to apply the aggregation functions.</p>\n\n\n\n<h2>Applying Aggregations on DataFrame</h2>\n\n\n\n<p>Let us create a DataFrame and apply aggregations on it.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\nimport numpy as np\n\ndf = pd.DataFrame(np.random.randn(10, 4),\n      index = pd.date_range('1/1/2000', periods=10),\n      columns = &#91;'A', 'B', 'C', 'D'])\n\nprint df\n\nr = df.rolling(window=3,min_periods=1)\nprint r</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>                    A           B           C           D\n2000-01-01   1.088512   -0.650942   -2.547450   -0.566858\n2000-01-02   0.790670   -0.387854   -0.668132    0.267283\n2000-01-03  -0.575523   -0.965025    0.060427   -2.179780\n2000-01-04   1.669653    1.211759   -0.254695    1.429166\n2000-01-05   0.100568   -0.236184    0.491646   -0.466081\n2000-01-06   0.155172    0.992975   -1.205134    0.320958\n2000-01-07   0.309468   -0.724053   -1.412446    0.627919\n2000-01-08   0.099489   -1.028040    0.163206   -1.274331\n2000-01-09   1.639500   -0.068443    0.714008   -0.565969\n2000-01-10   0.326761    1.479841    0.664282   -1.361169\n\nRolling &#91;window=3,min_periods=1,center=False,axis=0]</code></pre>\n\n\n\n<p>We can aggregate by passing a function to the entire DataFrame, or select a column via the standard&nbsp;<strong>get item</strong>&nbsp;method.</p>\n\n\n\n<h3>Apply Aggregation on a Whole Dataframe</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\nimport numpy as np\n\ndf = pd.DataFrame(np.random.randn(10, 4),\n      index = pd.date_range('1/1/2000', periods=10),\n      columns = &#91;'A', 'B', 'C', 'D'])\nprint df\n\nr = df.rolling(window=3,min_periods=1)\nprint r.aggregate(np.sum)</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>                    A           B           C           D\n2000-01-01   1.088512   -0.650942   -2.547450   -0.566858\n2000-01-02   1.879182   -1.038796   -3.215581   -0.299575\n2000-01-03   1.303660   -2.003821   -3.155154   -2.479355\n2000-01-04   1.884801   -0.141119   -0.862400   -0.483331\n2000-01-05   1.194699    0.010551    0.297378   -1.216695\n2000-01-06   1.925393    1.968551   -0.968183    1.284044\n2000-01-07   0.565208    0.032738   -2.125934    0.482797\n2000-01-08   0.564129   -0.759118   -2.454374   -0.325454\n2000-01-09   2.048458   -1.820537   -0.535232   -1.212381\n2000-01-10   2.065750    0.383357    1.541496   -3.201469\n\n                    A           B           C           D\n2000-01-01   1.088512   -0.650942   -2.547450   -0.566858\n2000-01-02   1.879182   -1.038796   -3.215581   -0.299575\n2000-01-03   1.303660   -2.003821   -3.155154   -2.479355\n2000-01-04   1.884801   -0.141119   -0.862400   -0.483331\n2000-01-05   1.194699    0.010551    0.297378   -1.216695\n2000-01-06   1.925393    1.968551   -0.968183    1.284044\n2000-01-07   0.565208    0.032738   -2.125934    0.482797\n2000-01-08   0.564129   -0.759118   -2.454374   -0.325454\n2000-01-09   2.048458   -1.820537   -0.535232   -1.212381\n2000-01-10   2.065750    0.383357    1.541496   -3.201469</code></pre>\n\n\n\n<h3>Apply Aggregation on a Single Column of a Dataframe</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\nimport numpy as np\n\ndf = pd.DataFrame(np.random.randn(10, 4),\n      index = pd.date_range('1/1/2000', periods=10),\n      columns = &#91;'A', 'B', 'C', 'D'])\nprint df\nr = df.rolling(window=3,min_periods=1)\nprint r&#91;'A'].aggregate(np.sum)</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>                 A           B           C           D\n2000-01-01   1.088512   -0.650942   -2.547450   -0.566858\n2000-01-02   1.879182   -1.038796   -3.215581   -0.299575\n2000-01-03   1.303660   -2.003821   -3.155154   -2.479355\n2000-01-04   1.884801   -0.141119   -0.862400   -0.483331\n2000-01-05   1.194699    0.010551    0.297378   -1.216695\n2000-01-06   1.925393    1.968551   -0.968183    1.284044\n2000-01-07   0.565208    0.032738   -2.125934    0.482797\n2000-01-08   0.564129   -0.759118   -2.454374   -0.325454\n2000-01-09   2.048458   -1.820537   -0.535232   -1.212381\n2000-01-10   2.065750    0.383357    1.541496   -3.201469\n2000-01-01   1.088512\n2000-01-02   1.879182\n2000-01-03   1.303660\n2000-01-04   1.884801\n2000-01-05   1.194699\n2000-01-06   1.925393\n2000-01-07   0.565208\n2000-01-08   0.564129\n2000-01-09   2.048458\n2000-01-10   2.065750\nFreq: D, Name: A, dtype: float64\n﻿</code></pre>\n\n\n\n<h3>Apply Aggregation on Multiple Columns of a DataFrame</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\nimport numpy as np\n\ndf = pd.DataFrame(np.random.randn(10, 4),\n      index = pd.date_range('1/1/2000', periods=10),\n      columns = &#91;'A', 'B', 'C', 'D'])\nprint df\nr = df.rolling(window=3,min_periods=1)\nprint r&#91;&#91;'A','B']].aggregate(np.sum)</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>                 A           B           C           D\n2000-01-01   1.088512   -0.650942   -2.547450   -0.566858\n2000-01-02   1.879182   -1.038796   -3.215581   -0.299575\n2000-01-03   1.303660   -2.003821   -3.155154   -2.479355\n2000-01-04   1.884801   -0.141119   -0.862400   -0.483331\n2000-01-05   1.194699    0.010551    0.297378   -1.216695\n2000-01-06   1.925393    1.968551   -0.968183    1.284044\n2000-01-07   0.565208    0.032738   -2.125934    0.482797\n2000-01-08   0.564129   -0.759118   -2.454374   -0.325454\n2000-01-09   2.048458   -1.820537   -0.535232   -1.212381\n2000-01-10   2.065750    0.383357    1.541496   -3.201469\n                    A           B\n2000-01-01   1.088512   -0.650942\n2000-01-02   1.879182   -1.038796\n2000-01-03   1.303660   -2.003821\n2000-01-04   1.884801   -0.141119\n2000-01-05   1.194699    0.010551\n2000-01-06   1.925393    1.968551\n2000-01-07   0.565208    0.032738\n2000-01-08   0.564129   -0.759118\n2000-01-09   2.048458   -1.820537\n2000-01-10   2.065750    0.383357</code></pre>\n","protected":false},"excerpt":{"rendered":"<p>Python has several methods are available to perform aggregations on data. It is done using the pandas and numpy libraries. The data must be available or converted to a dataframe to apply the aggregation functions. Applying Aggregations on DataFrame Let us create a DataFrame and apply aggregations on it. Its&nbsp;output&nbsp;is as follows − We can [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2083,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1149"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1149"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1149/revisions"}],"predecessor-version":[{"id":2098,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1149/revisions/2098"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2083"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1149"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1149"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1149"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1154,"date":"2020-05-21T07:15:50","date_gmt":"2020-05-21T07:15:50","guid":{"rendered":"http://python3.foobrdigital.com/?p=1154"},"modified":"2020-12-15T11:37:18","modified_gmt":"2020-12-15T11:37:18","slug":"reading-html-pages","status":"publish","type":"post","link":"https://python3.foobrdigital.com/reading-html-pages/","title":{"rendered":"Reading HTML Pages"},"content":{"rendered":"\n<p>library known as beautifulsoup. Using this library, we can search for the values of html tags and get specific data like title of the page and the list of headers in the page.</p>\n\n\n\n<h2>Install Beautifulsoup</h2>\n\n\n\n<p>Use the Anaconda package manager to install the required package and its dependent packages.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>conda install Beaustifulsoap</code></pre>\n\n\n\n<h2>Reading the HTML file</h2>\n\n\n\n<p>In the below example we make a request to an url to be loaded into the python environment. Then use the html parser parameter to read the entire html file. Next, we print first few lines of the html page.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import urllib2\nfrom bs4 import BeautifulSoup\n\n# Fetch the html file\nresponse = urllib2.urlopen('http://tutorialspoint.com/python/python_overview.htm')\nhtml_doc = response.read()\n\n# Parse the html file\nsoup = BeautifulSoup(html_doc, 'html.parser')\n\n# Format the parsed html file\nstrhtm = soup.prettify()\n\n# Print the first few characters\nprint (strhtm&#91;:225])</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>\n&lt;!--&#91;if IE 8]>&lt;html class=\"ie ie8\"> &lt;!&#91;endif]-->\n&lt;!--&#91;if IE 9]>&lt;html class=\"ie ie9\"> &lt;!&#91;endif]-->\n&lt;!--&#91;if gt IE 9]>&lt;!-->\n&lt;html>\n &lt;!--&lt;!&#91;endif]-->\n &lt;head>\n  &lt;!-- Basic -->\n  &lt;meta charset=\"utf-8\"/>\n  &lt;title></code></pre>\n\n\n\n<h2>Extracting Tag Value</h2>\n\n\n\n<p>We can extract tag value from the first instance of the tag using the following code.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import urllib2\nfrom bs4 import BeautifulSoup\n\nresponse = urllib2.urlopen('http://tutorialspoint.com/python/python_overview.htm')\nhtml_doc = response.read()\n\nsoup = BeautifulSoup(html_doc, 'html.parser')\n\nprint (soup.title)\nprint(soup.title.string)\nprint(soup.a.string)\nprint(soup.b.string)</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Python Overview\nNone\nPython is Interpreted</code></pre>\n\n\n\n<h2>Extracting All Tags</h2>\n\n\n\n<p>We can extract tag value from all the instances of a tag using the following code.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import urllib2\nfrom bs4 import BeautifulSoup\n\nresponse = urllib2.urlopen('http://tutorialspoint.com/python/python_overview.htm')\nhtml_doc = response.read()\nsoup = BeautifulSoup(html_doc, 'html.parser')\n\nfor x in soup.find_all('b'): print(x.string)</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Python is Interpreted\nPython is Interactive\nPython is Object-Oriented\nPython is a Beginner's Language\nEasy-to-learn\nEasy-to-read\nEasy-to-maintain\nA broad standard library\nInteractive Mode\nPortable\nExtendable\nDatabases\nGUI Programming\nScalable</code></pre>\n","protected":false},"excerpt":{"rendered":"<p>library known as beautifulsoup. Using this library, we can search for the values of html tags and get specific data like title of the page and the list of headers in the page. Install Beautifulsoup Use the Anaconda package manager to install the required package and its dependent packages. Reading the HTML file In the [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2084,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1154"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1154"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1154/revisions"}],"predecessor-version":[{"id":1158,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1154/revisions/1158"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2084"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1154"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1154"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1154"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1160,"date":"2020-05-21T07:18:16","date_gmt":"2020-05-21T07:18:16","guid":{"rendered":"http://python3.foobrdigital.com/?p=1160"},"modified":"2020-12-15T11:37:18","modified_gmt":"2020-12-15T11:37:18","slug":"processing-unstructured-data","status":"publish","type":"post","link":"https://python3.foobrdigital.com/processing-unstructured-data/","title":{"rendered":"Processing Unstructured Data"},"content":{"rendered":"\n<p>The data that is already present in a row and column format or which can be easily converted to rows and columns so that later it can fit nicely into a database is known as structured data. Examples are CSV, TXT, XLS files etc. These files have a delimiter and either fixed or variable width where the missing values are represented as blanks in between the delimiters. But sometimes we get data where the lines are not fixed width, or they are just HTML, image or pdf files. Such data is known as unstructured data. While the HTML file can be handled by processing the HTML tags, a feed from twitter or a plain text document from a news feed can without having a delimiter does not have tags to handle. In such scenario we use different in-built functions from various python libraries to process the file.</p>\n\n\n\n<h2>Reading Data</h2>\n\n\n\n<p>In the below example we take a text file and read the file segregating each of the lines in it. Next we can divide the output into further lines and words. The original file is a text file containing some paragraphs describing the python language.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>filename = 'path\\input.txt'  \n\nwith open(filename) as fn:  \n\n# Read each line\n   ln = fn.readline()\n\n# Keep count of lines\n   lncnt = 1\n   while ln:\n       print(\"Line {}: {}\".format(lncnt, ln.strip()))\n       ln = fn.readline()\n       lncnt += 1</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Line 1: Python is an interpreted high-level programming language for general-purpose programming. Created by Guido van Rossum and first released in 1991, Python has a design philosophy that emphasizes code readability, notably using significant whitespace. It provides constructs that enable clear programming on both small and large scales.\nLine 2: Python features a dynamic type system and automatic memory management. It supports multiple programming paradigms, including object-oriented, imperative, functional and procedural, and has a large and comprehensive standard library.\nLine 3: Python interpreters are available for many operating systems. CPython, the reference implementation of Python, is open source software and has a community-based development model, as do nearly all of its variant implementations. CPython is managed by the non-profit Python Software Foundation.</code></pre>\n\n\n\n<h2>Counting Word Frequency</h2>\n\n\n\n<p>We can count the frequency of the words in the file using the counter function as follows.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>from collections import Counter\n\nwith open(r'pathinput2.txt') as f:\n               p = Counter(f.read().split())\n               print(p)</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Counter({'and': 3, 'Python': 3, 'that': 2, 'a': 2, 'programming': 2, 'code': 1, '1991,': 1, 'is': 1, 'programming.': 1, 'dynamic': 1, 'an': 1, 'design': 1, 'in': 1, 'high-level': 1, 'management.': 1, 'features': 1, 'readability,': 1, 'van': 1, 'both': 1, 'for': 1, 'Rossum': 1, 'system': 1, 'provides': 1, 'memory': 1, 'has': 1, 'type': 1, 'enable': 1, 'Created': 1, 'philosophy': 1, 'constructs': 1, 'emphasizes': 1, 'general-purpose': 1, 'notably': 1, 'released': 1, 'significant': 1, 'Guido': 1, 'using': 1, 'interpreted': 1, 'by': 1, 'on': 1, 'language': 1, 'whitespace.': 1, 'clear': 1, 'It': 1, 'large': 1, 'small': 1, 'automatic': 1, 'scales.': 1, 'first': 1})</code></pre>\n","protected":false},"excerpt":{"rendered":"<p>The data that is already present in a row and column format or which can be easily converted to rows and columns so that later it can fit nicely into a database is known as structured data. Examples are CSV, TXT, XLS files etc. These files have a delimiter and either fixed or variable width [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2085,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1160"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1160"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1160/revisions"}],"predecessor-version":[{"id":1167,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1160/revisions/1167"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2085"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1160"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1160"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1160"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1168,"date":"2020-05-21T07:20:01","date_gmt":"2020-05-21T07:20:01","guid":{"rendered":"http://python3.foobrdigital.com/?p=1168"},"modified":"2020-12-15T11:37:17","modified_gmt":"2020-12-15T11:37:17","slug":"word-tokenization","status":"publish","type":"post","link":"https://python3.foobrdigital.com/word-tokenization/","title":{"rendered":"Word Tokenization"},"content":{"rendered":"\n<p>Word tokenization is the process of splitting a large sample of text into words. This is a requirement in natural language processing tasks where each word needs to be captured and subjected to further analysis like classifying and counting them for a particular sentiment etc. The Natural Language Tool kit(NLTK) is a library used to achieve this. Install NLTK before proceeding with the python program for word tokenization.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>conda install -c anaconda nltk</code></pre>\n\n\n\n<p>Next we use the&nbsp;<strong>word_tokenize</strong>&nbsp;method to split the paragraph into individual words.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import nltk\n\nword_data = \"It originated from the idea that there are readers who prefer learning new skills from the comforts of their drawing rooms\"\nnltk_tokens = nltk.word_tokenize(word_data)\nprint (nltk_tokens)</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&#91;'It', 'originated', 'from', 'the', 'idea', 'that', 'there', 'are', 'readers', \n'who', 'prefer', 'learning', 'new', 'skills', 'from', 'the',\n'comforts', 'of', 'their', 'drawing', 'rooms']</code></pre>\n\n\n\n<h2>Tokenizing Sentences</h2>\n\n\n\n<p>We can also tokenize the sentences in a paragraph like we tokenized the words. We use the method&nbsp;<strong>sent_tokenize</strong>&nbsp;to achieve this. Below is an example.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import nltk\nsentence_data = \"Sun rises in the east. Sun sets in the west.\"\nnltk_tokens = nltk.sent_tokenize(sentence_data)\nprint (nltk_tokens)</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&#91;'Sun rises in the east.', 'Sun sets in the west.']</code></pre>\n\n\n\n<p></p>\n","protected":false},"excerpt":{"rendered":"<p>Word tokenization is the process of splitting a large sample of text into words. This is a requirement in natural language processing tasks where each word needs to be captured and subjected to further analysis like classifying and counting them for a particular sentiment etc. The Natural Language Tool kit(NLTK) is a library used to [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2086,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1168"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1168"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1168/revisions"}],"predecessor-version":[{"id":2099,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1168/revisions/2099"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2086"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1168"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1168"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1168"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1195,"date":"2020-05-21T07:21:58","date_gmt":"2020-05-21T07:21:58","guid":{"rendered":"http://python3.foobrdigital.com/?p=1195"},"modified":"2020-12-15T11:37:16","modified_gmt":"2020-12-15T11:37:16","slug":"stemming-and-lemmatization","status":"publish","type":"post","link":"https://python3.foobrdigital.com/stemming-and-lemmatization/","title":{"rendered":"Stemming and Lemmatization"},"content":{"rendered":"\n<p>In the areas of Natural Language Processing we come across situation where two or more words have a common root. For example, the three words &#8211; agreed, agreeing and agreeable have the same root word agree. A search involving any of these words should treat them as the same word which is the root word. So it becomes essential to link all the words into their root word. The NLTK library has methods to do this linking and give the output showing the root word.</p>\n\n\n\n<p>The below program uses the Porter Stemming Algorithm for stemming.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import nltk\nfrom nltk.stem.porter import PorterStemmer\nporter_stemmer = PorterStemmer()\n\nword_data = \"It originated from the idea that there are readers who prefer learning new skills from the comforts of their drawing rooms\"\n# First Word tokenization\nnltk_tokens = nltk.word_tokenize(word_data)\n#Next find the roots of the word\nfor w in nltk_tokens:\n       print \"Actual: %s  Stem: %s\"  % (w,porter_stemmer.stem(w))</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Actual: It  Stem: It\nActual: originated  Stem: origin\nActual: from  Stem: from\nActual: the  Stem: the\nActual: idea  Stem: idea\nActual: that  Stem: that\nActual: there  Stem: there\nActual: are  Stem: are\nActual: readers  Stem: reader\nActual: who  Stem: who\nActual: prefer  Stem: prefer\nActual: learning  Stem: learn\nActual: new  Stem: new\nActual: skills  Stem: skill\nActual: from  Stem: from\nActual: the  Stem: the\nActual: comforts  Stem: comfort\nActual: of  Stem: of\nActual: their  Stem: their\nActual: drawing  Stem: draw\nActual: rooms  Stem: room</code></pre>\n\n\n\n<p>Lemmatization is similar ti stemming but it brings context to the words.So it goes a steps further by linking words with similar meaning to one word. For example if a paragraph has words like cars, trains and automobile, then it will link all of them to automobile. In the below program we use the WordNet lexical database for lemmatization.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import nltk\nfrom nltk.stem import WordNetLemmatizer\nwordnet_lemmatizer = WordNetLemmatizer()\n\nword_data = \"It originated from the idea that there are readers who prefer learning new skills from the comforts of their drawing rooms\"\nnltk_tokens = nltk.word_tokenize(word_data)\nfor w in nltk_tokens:\n       print \"Actual: %s  Lemma: %s\"  % (w,wordnet_lemmatizer.lemmatize(w))</code></pre>\n\n\n\n<p>When we execute the above code, it produces the following result.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Actual: It  Lemma: It\nActual: originated  Lemma: originated\nActual: from  Lemma: from\nActual: the  Lemma: the\nActual: idea  Lemma: idea\nActual: that  Lemma: that\nActual: there  Lemma: there\nActual: are  Lemma: are\nActual: readers  Lemma: reader\nActual: who  Lemma: who\nActual: prefer  Lemma: prefer\nActual: learning  Lemma: learning\nActual: new  Lemma: new\nActual: skills  Lemma: skill\nActual: from  Lemma: from\nActual: the  Lemma: the\nActual: comforts  Lemma: comfort\nActual: of  Lemma: of\nActual: their  Lemma: their\nActual: drawing  Lemma: drawing\nActual: rooms  Lemma: room</code></pre>\n","protected":false},"excerpt":{"rendered":"<p>In the areas of Natural Language Processing we come across situation where two or more words have a common root. For example, the three words &#8211; agreed, agreeing and agreeable have the same root word agree. A search involving any of these words should treat them as the same word which is the root word. [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2087,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1195"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1195"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1195/revisions"}],"predecessor-version":[{"id":1199,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1195/revisions/1199"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2087"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1195"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1195"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1195"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1201,"date":"2020-05-21T07:23:29","date_gmt":"2020-05-21T07:23:29","guid":{"rendered":"http://python3.foobrdigital.com/?p=1201"},"modified":"2020-12-15T11:37:15","modified_gmt":"2020-12-15T11:37:15","slug":"chart-properties","status":"publish","type":"post","link":"https://python3.foobrdigital.com/chart-properties/","title":{"rendered":"Chart Properties"},"content":{"rendered":"\n<p>Python has excellent libraries for data visualization. A combination of&nbsp;<strong>Pandas</strong>,&nbsp;<strong>numpy</strong>&nbsp;and&nbsp;<strong>matplotlib</strong>&nbsp;can help in creating in nearly all types of visualizations charts. In this chapter we will get started with looking at some simple chart and the various properties of the chart.</p>\n\n\n\n<h2>Creating a Chart</h2>\n\n\n\n<p>We use numpy library to create the required numbers to be mapped for creating the chart and the pyplot method in matplotlib to draws the actual chart.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import numpy as np \nimport matplotlib.pyplot as plt \n\nx = np.arange(0,10) \ny = x ^ 2 \n#Simple Plot\nplt.plot(x,y)</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"608\" height=\"417\" src=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2.jpg\" alt=\"\" class=\"wp-image-1285\" srcset=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2.jpg 608w, https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-300x206.jpg 300w\" sizes=\"(max-width: 608px) 100vw, 608px\" /></figure>\n\n\n\n<h2>Labling the Axes</h2>\n\n\n\n<p>We can apply labels to the axes as well as a title for the chart using appropriate methods from the library as shown below.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import numpy as np \nimport matplotlib.pyplot as plt \n\nx = np.arange(0,10) \ny = x ^ 2 \n#Labeling the Axes and Title\nplt.title(\"Graph Drawing\") \nplt.xlabel(\"Time\") \nplt.ylabel(\"Distance\") \n#Simple Plot\nplt.plot(x,y)</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"600\" height=\"433\" src=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-11.png\" alt=\"\" class=\"wp-image-1287\" srcset=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-11.png 600w, https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-11-300x217.png 300w\" sizes=\"(max-width: 600px) 100vw, 600px\" /></figure>\n\n\n\n<h2>Formatting Line type and Colour</h2>\n\n\n\n<p>The style as well as colour for the line in the chart can be specified using appropriate methods from the library as shown below.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import numpy as np \nimport matplotlib.pyplot as plt \n\nx = np.arange(0,10) \ny = x ^ 2 \n#Labeling the Axes and Title\nplt.title(\"Graph Drawing\") \nplt.xlabel(\"Time\") \nplt.ylabel(\"Distance\") \n\n# Formatting the line colors\nplt.plot(x,y,'r')\n\n# Formatting the line type  \nplt.plot(x,y,'>') </code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"579\" height=\"416\" src=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-13.png\" alt=\"\" class=\"wp-image-1292\" srcset=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-13.png 579w, https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-13-300x216.png 300w\" sizes=\"(max-width: 579px) 100vw, 579px\" /></figure>\n\n\n\n<h2>Saving the Chart File</h2>\n\n\n\n<p>The chart can be saved in different image file formats using appropriate methods from the library as shown below.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import numpy as np \nimport matplotlib.pyplot as plt \n\nx = np.arange(0,10) \ny = x ^ 2 \n#Labeling the Axes and Title\nplt.title(\"Graph Drawing\") \nplt.xlabel(\"Time\") \nplt.ylabel(\"Distance\") \n\n# Formatting the line colors\nplt.plot(x,y,'r')\n\n# Formatting the line type  \nplt.plot(x,y,'>') \n\n# save in pdf formats\nplt.savefig('timevsdist.pdf', format='pdf')</code></pre>\n\n\n\n<p>The above code creates the pdf file in the default path of the python environment.</p>\n","protected":false},"excerpt":{"rendered":"<p>Python has excellent libraries for data visualization. A combination of&nbsp;Pandas,&nbsp;numpy&nbsp;and&nbsp;matplotlib&nbsp;can help in creating in nearly all types of visualizations charts. In this chapter we will get started with looking at some simple chart and the various properties of the chart. Creating a Chart We use numpy library to create the required numbers to be mapped [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2026,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1201"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1201"}],"version-history":[{"count":4,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1201/revisions"}],"predecessor-version":[{"id":2045,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1201/revisions/2045"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2026"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1201"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1201"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1201"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1207,"date":"2020-05-21T07:24:57","date_gmt":"2020-05-21T07:24:57","guid":{"rendered":"http://python3.foobrdigital.com/?p=1207"},"modified":"2020-12-15T11:37:14","modified_gmt":"2020-12-15T11:37:14","slug":"chart-styling","status":"publish","type":"post","link":"https://python3.foobrdigital.com/chart-styling/","title":{"rendered":"Chart Styling"},"content":{"rendered":"\n<p>The charts created in python can have further styling by using some appropriate methods from the libraries used for charting. In this lesson we will see the implementation of Annotation, legends and chart background. We will continue to use the code from the last chapter and modify it to add these styles to the chart.</p>\n\n\n\n<h2>Adding Annotations</h2>\n\n\n\n<p>Many times, we need to annotate the chart by highlighting the specific locations of the chart. In the below example we indicate the sharp change in values in the chart by adding annotations at those points.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import numpy as np \nfrom matplotlib import pyplot as plt \n\nx = np.arange(0,10) \ny = x ^ 2 \nz = x ^ 3\nt = x ^ 4 \n# Labeling the Axes and Title\nplt.title(\"Graph Drawing\") \nplt.xlabel(\"Time\") \nplt.ylabel(\"Distance\") \nplt.plot(x,y)\n\n#Annotate\nplt.annotate(xy=&#91;2,1], s='Second Entry') \nplt.annotate(xy=&#91;4,6], s='Third Entry') </code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"580\" height=\"413\" src=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-8.png\" alt=\"\" class=\"wp-image-1280\" srcset=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-8.png 580w, https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-8-300x214.png 300w\" sizes=\"(max-width: 580px) 100vw, 580px\" /></figure>\n\n\n\n<h2>Adding Legends</h2>\n\n\n\n<p>We sometimes need a chart with multiple lines being plotted. Use of legend represents the meaning associated with each line. In the below chart we have 3 lines with appropriate legends.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import numpy as np \nfrom matplotlib import pyplot as plt \n\nx = np.arange(0,10) \ny = x ^ 2 \nz = x ^ 3\nt = x ^ 4 \n# Labeling the Axes and Title\nplt.title(\"Graph Drawing\") \nplt.xlabel(\"Time\") \nplt.ylabel(\"Distance\") \nplt.plot(x,y)\n\n#Annotate\nplt.annotate(xy=&#91;2,1], s='Second Entry') \nplt.annotate(xy=&#91;4,6], s='Third Entry') \n# Adding Legends\nplt.plot(x,z)\nplt.plot(x,t)\nplt.legend(&#91;'Race1', 'Race2','Race3'], loc=4) </code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"609\" height=\"437\" src=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-9.png\" alt=\"\" class=\"wp-image-1282\" srcset=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-9.png 609w, https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-9-300x215.png 300w\" sizes=\"(max-width: 609px) 100vw, 609px\" /></figure>\n\n\n\n<h2>Chart presentation Style</h2>\n\n\n\n<p>We can modify the presentation style of the chart by using different methods from the style package.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import numpy as np \nfrom matplotlib import pyplot as plt \n\nx = np.arange(0,10) \ny = x ^ 2 \nz = x ^ 3\nt = x ^ 4 \n# Labeling the Axes and Title\nplt.title(\"Graph Drawing\") \nplt.xlabel(\"Time\") \nplt.ylabel(\"Distance\") \nplt.plot(x,y)\n\n#Annotate\nplt.annotate(xy=&#91;2,1], s='Second Entry') \nplt.annotate(xy=&#91;4,6], s='Third Entry') \n# Adding Legends\nplt.plot(x,z)\nplt.plot(x,t)\nplt.legend(&#91;'Race1', 'Race2','Race3'], loc=4) \n\n#Style the background\nplt.style.use('fast')\nplt.plot(x,z)</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"557\" height=\"455\" src=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-10.png\" alt=\"\" class=\"wp-image-1283\" srcset=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-10.png 557w, https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-10-300x245.png 300w\" sizes=\"(max-width: 557px) 100vw, 557px\" /></figure>\n","protected":false},"excerpt":{"rendered":"<p>The charts created in python can have further styling by using some appropriate methods from the libraries used for charting. In this lesson we will see the implementation of Annotation, legends and chart background. We will continue to use the code from the last chapter and modify it to add these styles to the chart. [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2027,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1207"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1207"}],"version-history":[{"count":3,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1207/revisions"}],"predecessor-version":[{"id":2046,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1207/revisions/2046"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2027"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1207"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1207"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1207"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1209,"date":"2020-05-21T07:27:13","date_gmt":"2020-05-21T07:27:13","guid":{"rendered":"http://python3.foobrdigital.com/?p=1209"},"modified":"2020-12-15T11:37:13","modified_gmt":"2020-12-15T11:37:13","slug":"box-plots","status":"publish","type":"post","link":"https://python3.foobrdigital.com/box-plots/","title":{"rendered":"Box Plots"},"content":{"rendered":"\n<p>Boxplots are a measure of how well distributed the data in a data set is. It divides the data set into three quartiles. This graph represents the minimum, maximum, median, first quartile and third quartile in the data set. It is also useful in comparing the distribution of data across data sets by drawing boxplots for each of them.</p>\n\n\n\n<h2>Drawing a Box Plot</h2>\n\n\n\n<p>Boxplot can be drawn calling Series.box.plot() and DataFrame.box.plot(), or DataFrame.boxplot() to visualize the distribution of values within each column.</p>\n\n\n\n<p>For instance, here is a boxplot representing five trials of 10 observations of a uniform random variable on [0,1).</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\nimport numpy as np\ndf = pd.DataFrame(np.random.rand(10, 5), columns=&#91;'A', 'B', 'C', 'D', 'E'])\ndf.plot.box(grid='True')</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"606\" height=\"405\" src=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/boxplot.png\" alt=\"\" class=\"wp-image-1212\" srcset=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/boxplot.png 606w, https://python3.foobrdigital.com/wp-content/uploads/2020/05/boxplot-300x200.png 300w\" sizes=\"(max-width: 606px) 100vw, 606px\" /></figure>\n","protected":false},"excerpt":{"rendered":"<p>Boxplots are a measure of how well distributed the data in a data set is. It divides the data set into three quartiles. This graph represents the minimum, maximum, median, first quartile and third quartile in the data set. It is also useful in comparing the distribution of data across data sets by drawing boxplots [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2028,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1209"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1209"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1209/revisions"}],"predecessor-version":[{"id":2047,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1209/revisions/2047"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2028"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1209"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1209"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1209"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1215,"date":"2020-05-21T07:28:28","date_gmt":"2020-05-21T07:28:28","guid":{"rendered":"http://python3.foobrdigital.com/?p=1215"},"modified":"2020-12-15T11:37:12","modified_gmt":"2020-12-15T11:37:12","slug":"heat-maps","status":"publish","type":"post","link":"https://python3.foobrdigital.com/heat-maps/","title":{"rendered":"Heat Maps"},"content":{"rendered":"\n<p>A heatmap contains values representing various shades of the same colour for each value to be plotted. Usually the darker shades of the chart represent higher values than the lighter shade. For a very different value a completely different colour can also be used.</p>\n\n\n\n<p>The below example is a two-dimensional plot of values which are mapped to the indices and columns of the chart.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>from pandas import DataFrame\nimport matplotlib.pyplot as plt\n\ndata=&#91;{2,3,4,1},{6,3,5,2},{6,3,5,4},{3,7,5,4},{2,8,1,5}]\nIndex= &#91;'I1', 'I2','I3','I4','I5']\nCols = &#91;'C1', 'C2', 'C3','C4']\ndf = DataFrame(data, index=Index, columns=Cols)\n\nplt.pcolor(df)\nplt.show()</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"598\" height=\"405\" src=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/heatmap.png\" alt=\"\" class=\"wp-image-1216\" srcset=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/heatmap.png 598w, https://python3.foobrdigital.com/wp-content/uploads/2020/05/heatmap-300x203.png 300w\" sizes=\"(max-width: 598px) 100vw, 598px\" /></figure>\n","protected":false},"excerpt":{"rendered":"<p>A heatmap contains values representing various shades of the same colour for each value to be plotted. Usually the darker shades of the chart represent higher values than the lighter shade. For a very different value a completely different colour can also be used. The below example is a two-dimensional plot of values which are [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2060,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1215"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1215"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1215/revisions"}],"predecessor-version":[{"id":2061,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1215/revisions/2061"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2060"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1215"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1215"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1215"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1218,"date":"2020-05-21T07:30:02","date_gmt":"2020-05-21T07:30:02","guid":{"rendered":"http://python3.foobrdigital.com/?p=1218"},"modified":"2020-12-15T11:37:10","modified_gmt":"2020-12-15T11:37:10","slug":"scatter-plots","status":"publish","type":"post","link":"https://python3.foobrdigital.com/scatter-plots/","title":{"rendered":"Scatter Plots"},"content":{"rendered":"\n<p>Scatterplots show many points plotted in the Cartesian plane. Each point represents the values of two variables. One variable is chosen in the horizontal axis and another in the vertical axis.</p>\n\n\n\n<h2>Drawing a Scatter Plot</h2>\n\n\n\n<p>Scatter plot can be created using the DataFrame.plot.scatter() methods.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\nimport numpy as np\ndf = pd.DataFrame(np.random.rand(50, 4), columns=&#91;'a', 'b', 'c', 'd'])\ndf.plot.scatter(x='a', y='b')</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"625\" height=\"429\" src=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/heatmap-1.png\" alt=\"\" class=\"wp-image-1219\" srcset=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/heatmap-1.png 625w, https://python3.foobrdigital.com/wp-content/uploads/2020/05/heatmap-1-300x206.png 300w\" sizes=\"(max-width: 625px) 100vw, 625px\" /></figure>\n","protected":false},"excerpt":{"rendered":"<p>Scatterplots show many points plotted in the Cartesian plane. Each point represents the values of two variables. One variable is chosen in the horizontal axis and another in the vertical axis. Drawing a Scatter Plot Scatter plot can be created using the DataFrame.plot.scatter() methods. Its&nbsp;output&nbsp;is as follows −</p>\n","protected":false},"author":4,"featured_media":2062,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1218"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1218"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1218/revisions"}],"predecessor-version":[{"id":2063,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1218/revisions/2063"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2062"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1218"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1218"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1218"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1223,"date":"2020-05-21T07:31:11","date_gmt":"2020-05-21T07:31:11","guid":{"rendered":"http://python3.foobrdigital.com/?p=1223"},"modified":"2020-12-15T11:37:09","modified_gmt":"2020-12-15T11:37:09","slug":"bubble-charts","status":"publish","type":"post","link":"https://python3.foobrdigital.com/bubble-charts/","title":{"rendered":"Bubble Charts"},"content":{"rendered":"\n<p>Bubble charts display data as a cluster of circles. The required data to create bubble chart needs to have the xy coordinates, size of the bubble and the colour of the bubbles. The colours can be supplied by the library itself.</p>\n\n\n\n<h2>Drawing a Bubble Chart</h2>\n\n\n\n<p>Bubble chart can be created using the DataFrame.plot.scatter() methods.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import matplotlib.pyplot as plt\nimport numpy as np\n \n# create data\nx = np.random.rand(40)\ny = np.random.rand(40)\nz = np.random.rand(40)\ncolors = np.random.rand(40) \n# use the scatter function\nplt.scatter(x, y, s=z*1000,c=colors)\nplt.show()\n </code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"618\" height=\"415\" src=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/heatmap-2.png\" alt=\"\" class=\"wp-image-1225\" srcset=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/heatmap-2.png 618w, https://python3.foobrdigital.com/wp-content/uploads/2020/05/heatmap-2-300x201.png 300w\" sizes=\"(max-width: 618px) 100vw, 618px\" /></figure>\n","protected":false},"excerpt":{"rendered":"<p>Bubble charts display data as a cluster of circles. The required data to create bubble chart needs to have the xy coordinates, size of the bubble and the colour of the bubbles. The colours can be supplied by the library itself. Drawing a Bubble Chart Bubble chart can be created using the DataFrame.plot.scatter() methods. Its&nbsp;output&nbsp;is [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2030,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1223"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1223"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1223/revisions"}],"predecessor-version":[{"id":2048,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1223/revisions/2048"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2030"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1223"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1223"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1223"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1228,"date":"2020-05-21T07:32:28","date_gmt":"2020-05-21T07:32:28","guid":{"rendered":"http://python3.foobrdigital.com/?p=1228"},"modified":"2020-12-15T11:37:06","modified_gmt":"2020-12-15T11:37:06","slug":"3d-charts","status":"publish","type":"post","link":"https://python3.foobrdigital.com/3d-charts/","title":{"rendered":"3D Charts"},"content":{"rendered":"\n<p>Python is also capable of creating 3d charts. It involves adding a subplot to an existing two-dimensional plot and assigning the projection parameter as 3d.</p>\n\n\n\n<h2>Drawing a 3D Plot</h2>\n\n\n\n<p>3dPlot is drawn by mpl_toolkits.mplot3d to add a subplot to an existing 2d plot.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>from mpl_toolkits.mplot3d import axes3d\nimport matplotlib.pyplot as plt\n\n\nchart = plt.figure()\nchart3d = chart.add_subplot(111, projection='3d')\n\n# Create some test data.\nX, Y, Z = axes3d.get_test_data(0.08)\n\n# Plot a wireframe.\nchart3d.plot_wireframe(X, Y, Z, color='r',rstride=15, cstride=10)\n\nplt.show()</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"688\" height=\"460\" src=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/heatmap-3.png\" alt=\"\" class=\"wp-image-1230\" srcset=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/heatmap-3.png 688w, https://python3.foobrdigital.com/wp-content/uploads/2020/05/heatmap-3-300x201.png 300w\" sizes=\"(max-width: 688px) 100vw, 688px\" /></figure>\n","protected":false},"excerpt":{"rendered":"<p>Python is also capable of creating 3d charts. It involves adding a subplot to an existing two-dimensional plot and assigning the projection parameter as 3d. Drawing a 3D Plot 3dPlot is drawn by mpl_toolkits.mplot3d to add a subplot to an existing 2d plot. Its&nbsp;output&nbsp;is as follows −</p>\n","protected":false},"author":4,"featured_media":2031,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1228"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1228"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1228/revisions"}],"predecessor-version":[{"id":2049,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1228/revisions/2049"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2031"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1228"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1228"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1228"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1232,"date":"2020-05-21T07:33:42","date_gmt":"2020-05-21T07:33:42","guid":{"rendered":"http://python3.foobrdigital.com/?p=1232"},"modified":"2020-12-15T11:37:04","modified_gmt":"2020-12-15T11:37:04","slug":"time-series","status":"publish","type":"post","link":"https://python3.foobrdigital.com/time-series/","title":{"rendered":"Time Series"},"content":{"rendered":"\n<p>Time series is a series of data points in which each data point is associated with a timestamp. A simple example is the price of a stock in the stock market at different points of time on a given day. Another example is the amount of rainfall in a region at different months of the year.</p>\n\n\n\n<p>In the below example we take the value of stock prices every day for a quarter for a particular stock symbol. We capture these values as a csv file and then organize them to a dataframe using pandas library. We then set the date field as index of the dataframe by recreating the additional Valuedate column as index and deleting the old valuedate column.</p>\n\n\n\n<h2>Sample Data</h2>\n\n\n\n<p>Below is the sample data for the price of the stock on different days of a given quarter. The data is saved in a file named as stock.csv</p>\n\n\n\n<pre class=\"wp-block-code\"><code>ValueDate\tPrice\n01-01-2018,\t1042.05\n02-01-2018,\t1033.55\n03-01-2018,\t1029.7\n04-01-2018,\t1021.3\n05-01-2018,\t1015.4\n...\n...\n...\n...\n23-03-2018,\t1161.3\n26-03-2018,\t1167.6\n27-03-2018,\t1155.25\n28-03-2018,\t1154</code></pre>\n\n\n\n<h2>Creating Time Series</h2>\n\n\n\n<pre class=\"wp-block-code\"><code>from datetime import datetime\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndata = pd.read_csv('path_to_file/stock.csv')\ndf = pd.DataFrame(data, columns = &#91;'ValueDate', 'Price'])\n\n# Set the Date as Index\ndf&#91;'ValueDate'] = pd.to_datetime(df&#91;'ValueDate'])\ndf.index = df&#91;'ValueDate']\ndel df&#91;'ValueDate']\n\n\ndf.plot(figsize=(15, 6))\nplt.show()</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"884\" height=\"363\" src=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/heatmap-4.png\" alt=\"\" class=\"wp-image-1233\" srcset=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/heatmap-4.png 884w, https://python3.foobrdigital.com/wp-content/uploads/2020/05/heatmap-4-300x123.png 300w, https://python3.foobrdigital.com/wp-content/uploads/2020/05/heatmap-4-768x315.png 768w\" sizes=\"(max-width: 884px) 100vw, 884px\" /></figure>\n","protected":false},"excerpt":{"rendered":"<p>Time series is a series of data points in which each data point is associated with a timestamp. A simple example is the price of a stock in the stock market at different points of time on a given day. Another example is the amount of rainfall in a region at different months of the [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2032,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1232"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1232"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1232/revisions"}],"predecessor-version":[{"id":2050,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1232/revisions/2050"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2032"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1232"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1232"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1232"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1235,"date":"2020-05-21T07:35:26","date_gmt":"2020-05-21T07:35:26","guid":{"rendered":"http://python3.foobrdigital.com/?p=1235"},"modified":"2020-12-15T11:37:01","modified_gmt":"2020-12-15T11:37:01","slug":"geographical-data","status":"publish","type":"post","link":"https://python3.foobrdigital.com/geographical-data/","title":{"rendered":"Geographical Data"},"content":{"rendered":"\n<p>Many open source python libraries now have been created to represent the geographical maps. They are highly customizable and offer a varierty of maps depicting areas in different shapes and colours. One such package is Cartopy. You can download and install this package in your local environment from&nbsp;Cartopy. You can find numerous examples in its gallery.</p>\n\n\n\n<p>In the below example we show a portion of the world map showing parts of Asia and Australia. You can adjust the values of the parameters in the method set_extent to locate different areas of world map.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import matplotlib.pyplot as plt\nimport cartopy.crs as ccrs    \n\nfig = plt.figure(figsize=(15, 10))\nax = fig.add_subplot(1, 1, 1, projection=ccrs.PlateCarree())\n\n    # make the map global rather than have it zoom in to\n    # the extents of any plotted data\n\nax.set_extent((60, 150, 55, -25))\n\nax.stock_img()\nax.coastlines()\n\nax.tissot(facecolor='purple', alpha=0.8)\n\nplt.show()</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"526\" height=\"565\" src=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/heatmap-5.png\" alt=\"\" class=\"wp-image-1238\" srcset=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/heatmap-5.png 526w, https://python3.foobrdigital.com/wp-content/uploads/2020/05/heatmap-5-279x300.png 279w\" sizes=\"(max-width: 526px) 100vw, 526px\" /></figure>\n","protected":false},"excerpt":{"rendered":"<p>Many open source python libraries now have been created to represent the geographical maps. They are highly customizable and offer a varierty of maps depicting areas in different shapes and colours. One such package is Cartopy. You can download and install this package in your local environment from&nbsp;Cartopy. You can find numerous examples in its [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2033,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1235"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1235"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1235/revisions"}],"predecessor-version":[{"id":2051,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1235/revisions/2051"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2033"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1235"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1235"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1235"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1240,"date":"2020-05-21T07:37:46","date_gmt":"2020-05-21T07:37:46","guid":{"rendered":"http://python3.foobrdigital.com/?p=1240"},"modified":"2020-12-15T11:36:59","modified_gmt":"2020-12-15T11:36:59","slug":"graph-data","status":"publish","type":"post","link":"https://python3.foobrdigital.com/graph-data/","title":{"rendered":"Graph Data"},"content":{"rendered":"\n<p>CSGraph stands for&nbsp;<strong>Compressed Sparse Graph</strong>, which focuses on Fast graph algorithms based on sparse matrix representations.</p>\n\n\n\n<h2>Graph Representations</h2>\n\n\n\n<p>To begin with, let us understand what a sparse graph is and how it helps in graph representations.</p>\n\n\n\n<h3>What exactly is a sparse graph?</h3>\n\n\n\n<p>A graph is just a collection of nodes, which have links between them. Graphs can represent nearly anything − social network connections, where each node is a person and is connected to acquaintances; images, where each node is a pixel and is connected to neighbouring pixels; points in a high-dimensional distribution, where each node is connected to its nearest neighbours and practically anything else you can imagine.</p>\n\n\n\n<p>One very efficient way to represent graph data is in a sparse matrix: let us call it G. The matrix G is of size N x N, and G[i, j] gives the value of the connection between node ‘i&#8217; and node ‘j’. A sparse graph contains mostly zeros − that is, most nodes have only a few connections. This property turns out to be true in most cases of interest.</p>\n\n\n\n<p>The creation of the sparse graph submodule was motivated by several algorithms used in scikit-learn that included the following −</p>\n\n\n\n<ul><li><strong>Isomap</strong>&nbsp;− A manifold learning algorithm, which requires finding the shortest paths in a graph.</li><li><strong>Hierarchical clustering</strong>&nbsp;− A clustering algorithm based on a minimum spanning tree.</li><li><strong>Spectral Decomposition</strong>&nbsp;− A projection algorithm based on sparse graph laplacians.</li></ul>\n\n\n\n<p>As a concrete example, imagine that we would like to represent the following undirected graph −</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"231\" height=\"287\" src=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/undirected_graph_using_symmetric_matrix-1.jpg\" alt=\"\" class=\"wp-image-1243\"/></figure>\n\n\n\n<p>This graph has three nodes, where node 0 and 1 are connected by an edge of weight 2, and nodes 0 and 2 are connected by an edge of weight 1. We can construct the dense, masked and sparse representations as shown in the following example, keeping in mind that an undirected graph is represented by a symmetric matrix.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>G_dense = np.array(&#91; &#91;0, 2, 1],\n                     &#91;2, 0, 0],\n                     &#91;1, 0, 0] ])\n                     \nG_masked = np.ma.masked_values(G_dense, 0)\nfrom scipy.sparse import csr_matrix\n\nG_sparse = csr_matrix(G_dense)\nprint G_sparse.data</code></pre>\n\n\n\n<p>The above program will generate the following output.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>array(&#91;2, 1, 2, 1])</code></pre>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"125\" height=\"150\" src=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/undirected_graph_using_symmetric_matrix.jpg\" alt=\"\" class=\"wp-image-1242\"/></figure>\n\n\n\n<p>This is identical to the previous graph, except nodes 0 and 2 are connected by an edge of zero weight. In this case, the dense representation above leads to ambiguities − how can non-edges be represented, if zero is a meaningful value. In this case, either a masked or a sparse representation must be used to eliminate the ambiguity.</p>\n\n\n\n<p>Let us consider the following example.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>from scipy.sparse.csgraph import csgraph_from_dense\nG2_data = np.array\n(&#91;\n   &#91;np.inf, 2, 0 ],\n   &#91;2, np.inf, np.inf],\n   &#91;0, np.inf, np.inf]\n])\nG2_sparse = csgraph_from_dense(G2_data, null_value=np.inf)\nprint G2_sparse.data</code></pre>\n\n\n\n<p>The above program will generate the following output.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>array(&#91; 2., 0., 2., 0.])</code></pre>\n\n\n\n<p></p>\n","protected":false},"excerpt":{"rendered":"<p>CSGraph stands for&nbsp;Compressed Sparse Graph, which focuses on Fast graph algorithms based on sparse matrix representations. Graph Representations To begin with, let us understand what a sparse graph is and how it helps in graph representations. What exactly is a sparse graph? A graph is just a collection of nodes, which have links between them. [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2034,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1240"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1240"}],"version-history":[{"count":1,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1240/revisions"}],"predecessor-version":[{"id":1244,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1240/revisions/1244"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2034"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1240"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1240"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1240"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1247,"date":"2020-05-21T07:40:50","date_gmt":"2020-05-21T07:40:50","guid":{"rendered":"http://python3.foobrdigital.com/?p=1247"},"modified":"2020-12-15T11:36:56","modified_gmt":"2020-12-15T11:36:56","slug":"measuring-central-tendency","status":"publish","type":"post","link":"https://python3.foobrdigital.com/measuring-central-tendency/","title":{"rendered":"Measuring Central Tendency"},"content":{"rendered":"\n<p>Mathematically central tendency means measuring the center or distribution of location of values of a data set. It gives an idea of the average value of the data in the data set and also an indication of how widely the values are spread in the data set. That in turn helps in evaluating the chances of a new input fitting into the existing data set and hence probability of success.</p>\n\n\n\n<p>There are three main measures of central tendency which can be calculated using the methods in pandas python library.</p>\n\n\n\n<ul><li>Mean &#8211; It is the Average value of the data which is a division of sum of the values with the number of values.</li><li>Median &#8211; It is the middle value in distribution when the values are arranged in ascending or descending order.</li><li>Mode &#8211; It is the most commonly occurring value in a distribution.</li></ul>\n\n\n\n<h2>Calculating Mean and Median</h2>\n\n\n\n<p>The pandas functions can be directly used to calculate these values.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\n\n#Create a Dictionary of series\nd = {'Name':pd.Series(&#91;'Tom','James','Ricky','Vin','Steve','Smith','Jack',\n   'Lee','Chanchal','Gasper','Naviya','Andres']),\n   'Age':pd.Series(&#91;25,26,25,23,30,29,23,34,40,30,51,46]),\n   'Rating':pd.Series(&#91;4.23,3.24,3.98,2.56,3.20,4.6,3.8,3.78,2.98,4.80,4.10,3.65])}\n\n#Create a DataFrame\ndf = pd.DataFrame(d)\nprint \"Mean Values in the Distribution\"\nprint df.mean()\nprint \"*******************************\"\nprint \"Median Values in the Distribution\"\nprint df.median()</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Mean Values in the Distribution\nAge       31.833333\nRating     3.743333\ndtype: float64\n*******************************\nMedian Values in the Distribution\nAge       29.50\nRating     3.79\ndtype: float64</code></pre>\n\n\n\n<h2>Calculating Mode</h2>\n\n\n\n<p>Mode may or may not be available in a distribution depending on whether the data is continous or whether there are values which has maximum frquency. We take a simple distribution below to find out the mode. Here we have a value which has maximum frequency in the distribution.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\n\n#Create a Dictionary of series\nd = {'Name':pd.Series(&#91;'Tom','James','Ricky','Vin','Steve','Smith','Jack',\n   'Lee','Chanchal','Gasper','Naviya','Andres']),\n   'Age':pd.Series(&#91;25,26,25,23,30,25,23,34,40,30,25,46])}\n#Create a DataFrame\ndf = pd.DataFrame(d)\n\nprint df.mode()</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"600\" height=\"433\" src=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2.png\" alt=\"\" class=\"wp-image-1248\" srcset=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2.png 600w, https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-300x217.png 300w\" sizes=\"(max-width: 600px) 100vw, 600px\" /></figure>\n\n\n\n<pre class=\"wp-block-code\"><code>     Age      Name\n0   25.0    Andres\n1    NaN  Chanchal\n2    NaN    Gasper\n3    NaN      Jack\n4    NaN     James\n5    NaN       Lee\n6    NaN    Naviya\n7    NaN     Ricky\n8    NaN     Smith\n9    NaN     Steve\n10   NaN       Tom\n11   NaN       Vin</code></pre>\n","protected":false},"excerpt":{"rendered":"<p>Mathematically central tendency means measuring the center or distribution of location of values of a data set. It gives an idea of the average value of the data in the data set and also an indication of how widely the values are spread in the data set. That in turn helps in evaluating the chances [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2064,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1247"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1247"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1247/revisions"}],"predecessor-version":[{"id":2065,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1247/revisions/2065"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2064"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1247"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1247"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1247"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1250,"date":"2020-05-21T07:42:18","date_gmt":"2020-05-21T07:42:18","guid":{"rendered":"http://python3.foobrdigital.com/?p=1250"},"modified":"2020-12-15T11:36:53","modified_gmt":"2020-12-15T11:36:53","slug":"measuring-variance","status":"publish","type":"post","link":"https://python3.foobrdigital.com/measuring-variance/","title":{"rendered":"Measuring Variance"},"content":{"rendered":"\n<p>In statistics, variance is a measure of how far a value in a data set lies from the mean value. In other words, it indicates how dispersed the values are. It is measured by using standard deviation. The other method commonly used is skewness.</p>\n\n\n\n<p>Both of these are calculated by using functions available in pandas library.</p>\n\n\n\n<h2>Measuring Standard Deviation</h2>\n\n\n\n<p>Standard deviation is square root of variance. variance is the average of squared difference of values in a data set from the mean value. In python we calculate this value by using the function std() from pandas library.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\n\n#Create a Dictionary of series\nd = {'Name':pd.Series(&#91;'Tom','James','Ricky','Vin','Steve','Smith','Jack',\n   'Lee','Chanchal','Gasper','Naviya','Andres']),\n   'Age':pd.Series(&#91;25,26,25,23,30,25,23,34,40,30,25,46]),\n   'Rating':pd.Series(&#91;4.23,3.24,3.98,2.56,3.20,4.6,3.8,3.78,2.98,4.80,4.10,3.65])}\n\n#Create a DataFrame\ndf = pd.DataFrame(d)\n\n# Calculate the standard deviation\nprint df.std()</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Age       7.265527\nRating    0.661628\ndtype: float64</code></pre>\n\n\n\n<h2>Measuring Skewness</h2>\n\n\n\n<p>It used to determine whether the data is symmetric or skewed. If the index is between -1 and 1, then the distribution is symmetric. If the index is no more than -1 then it is skewed to the left and if it is at least 1, then it is skewed to the right</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import pandas as pd\n\n#Create a Dictionary of series\nd = {'Name':pd.Series(&#91;'Tom','James','Ricky','Vin','Steve','Smith','Jack',\n   'Lee','Chanchal','Gasper','Naviya','Andres']),\n   'Age':pd.Series(&#91;25,26,25,23,30,25,23,34,40,30,25,46]),\n   'Rating':pd.Series(&#91;4.23,3.24,3.98,2.56,3.20,4.6,3.8,3.78,2.98,4.80,4.10,3.65])}\n\n#Create a DataFrame\ndf = pd.DataFrame(d)\nprint df.skew()</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Age       1.443490\nRating   -0.153629\ndtype: float64</code></pre>\n\n\n\n<p>So the distribution of age rating is symmetric while the distribution of age is skewed to the right.</p>\n","protected":false},"excerpt":{"rendered":"<p>In statistics, variance is a measure of how far a value in a data set lies from the mean value. In other words, it indicates how dispersed the values are. It is measured by using standard deviation. The other method commonly used is skewness. Both of these are calculated by using functions available in pandas [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2036,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1250"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1250"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1250/revisions"}],"predecessor-version":[{"id":2052,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1250/revisions/2052"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2036"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1250"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1250"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1250"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1252,"date":"2020-05-21T07:43:33","date_gmt":"2020-05-21T07:43:33","guid":{"rendered":"http://python3.foobrdigital.com/?p=1252"},"modified":"2020-12-15T11:36:51","modified_gmt":"2020-12-15T11:36:51","slug":"normal-distribution","status":"publish","type":"post","link":"https://python3.foobrdigital.com/normal-distribution/","title":{"rendered":"Normal Distribution"},"content":{"rendered":"\n<p>The normal distribution is a form presenting data by arranging the probability distribution of each value in the data.Most values remain around the mean value making the arrangement symmetric.</p>\n\n\n\n<p>We use various functions in numpy library to mathematically calculate the values for a normal distribution. Histograms are created over which we plot the probability distribution curve.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import matplotlib.pyplot as plt\nimport numpy as np\n\nmu, sigma = 0.5, 0.1\ns = np.random.normal(mu, sigma, 1000)\n\n# Create the bins and histogram\ncount, bins, ignored = plt.hist(s, 20, normed=True)\n\n# Plot the distribution curve\nplt.plot(bins, 1/(sigma * np.sqrt(2 * np.pi)) *\n    np.exp( - (bins - mu)**2 / (2 * sigma**2) ),       linewidth=3, color='y')\nplt.show()</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"605\" height=\"407\" src=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-1.png\" alt=\"\" class=\"wp-image-1253\" srcset=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-1.png 605w, https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-1-300x202.png 300w\" sizes=\"(max-width: 605px) 100vw, 605px\" /></figure>\n","protected":false},"excerpt":{"rendered":"<p>The normal distribution is a form presenting data by arranging the probability distribution of each value in the data.Most values remain around the mean value making the arrangement symmetric. We use various functions in numpy library to mathematically calculate the values for a normal distribution. Histograms are created over which we plot the probability distribution [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2037,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1252"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1252"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1252/revisions"}],"predecessor-version":[{"id":2053,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1252/revisions/2053"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2037"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1252"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1252"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1252"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1255,"date":"2020-05-21T07:46:54","date_gmt":"2020-05-21T07:46:54","guid":{"rendered":"http://python3.foobrdigital.com/?p=1255"},"modified":"2020-12-15T11:36:49","modified_gmt":"2020-12-15T11:36:49","slug":"binomial-distribution","status":"publish","type":"post","link":"https://python3.foobrdigital.com/binomial-distribution/","title":{"rendered":"Binomial Distribution"},"content":{"rendered":"\n<p>The binomial distribution model deals with finding the probability of success of an event which has only two possible outcomes in a series of experiments. For example, tossing of a coin always gives a head or a tail. The probability of finding exactly 3 heads in tossing a coin repeatedly for 10 times is estimated during the binomial distribution.</p>\n\n\n\n<p>We use the seaborn python library which has in-built functions to create such probability distribution graphs. Also, the scipy package helps is creating the binomial distribution.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>from scipy.stats import binom\nimport seaborn as sb\n\nbinom.rvs(size=10,n=20,p=0.8)\n\ndata_binom = binom.rvs(n=20,p=0.8,loc=0,size=1000)\nax = sb.distplot(data_binom,\n                  kde=True,\n                  color='blue',\n                  hist_kws={\"linewidth\": 25,'alpha':1})\nax.set(xlabel='Binomial', ylabel='Frequency')</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"579\" height=\"395\" src=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-2.png\" alt=\"\" class=\"wp-image-1256\" srcset=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-2.png 579w, https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-2-300x205.png 300w\" sizes=\"(max-width: 579px) 100vw, 579px\" /></figure>\n","protected":false},"excerpt":{"rendered":"<p>The binomial distribution model deals with finding the probability of success of an event which has only two possible outcomes in a series of experiments. For example, tossing of a coin always gives a head or a tail. The probability of finding exactly 3 heads in tossing a coin repeatedly for 10 times is estimated [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2038,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1255"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1255"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1255/revisions"}],"predecessor-version":[{"id":2054,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1255/revisions/2054"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2038"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1255"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1255"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1255"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1258,"date":"2020-05-21T07:47:57","date_gmt":"2020-05-21T07:47:57","guid":{"rendered":"http://python3.foobrdigital.com/?p=1258"},"modified":"2020-12-15T11:36:47","modified_gmt":"2020-12-15T11:36:47","slug":"poisson-distribution","status":"publish","type":"post","link":"https://python3.foobrdigital.com/poisson-distribution/","title":{"rendered":"Poisson Distribution"},"content":{"rendered":"\n<p>A Poisson distribution is a distribution which shows the likely number of times that an event will occur within a pre-determined period of time. It is used for independent events which occur at a constant rate within a given interval of time. The Poisson distribution is a discrete function, meaning that the event can only be measured as occurring or not as occurring, meaning the variable can only be measured in whole numbers.</p>\n\n\n\n<p>We use the seaborn python library which has in-built functions to create such probability distribution graphs. Also the scipy package helps is creating the binomial distribution.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>from scipy.stats import poisson\nimport seaborn as sb\n\ndata_binom = poisson.rvs(mu=4, size=10000)\nax = sb.distplot(data_binom,\n                  kde=True,\n                  color='green',\n                  hist_kws={\"linewidth\": 25,'alpha':1})\nax.set(xlabel='Poisson', ylabel='Frequency')</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"628\" height=\"423\" src=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-3.png\" alt=\"\" class=\"wp-image-1259\" srcset=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-3.png 628w, https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-3-300x202.png 300w\" sizes=\"(max-width: 628px) 100vw, 628px\" /></figure>\n","protected":false},"excerpt":{"rendered":"<p>A Poisson distribution is a distribution which shows the likely number of times that an event will occur within a pre-determined period of time. It is used for independent events which occur at a constant rate within a given interval of time. The Poisson distribution is a discrete function, meaning that the event can only [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2039,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1258"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1258"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1258/revisions"}],"predecessor-version":[{"id":2055,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1258/revisions/2055"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2039"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1258"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1258"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1258"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1261,"date":"2020-05-21T07:49:03","date_gmt":"2020-05-21T07:49:03","guid":{"rendered":"http://python3.foobrdigital.com/?p=1261"},"modified":"2020-12-15T11:36:46","modified_gmt":"2020-12-15T11:36:46","slug":"bernoulli-distribution","status":"publish","type":"post","link":"https://python3.foobrdigital.com/bernoulli-distribution/","title":{"rendered":"Bernoulli Distribution"},"content":{"rendered":"\n<p>The Bernoulli distribution is a special case of the Binomial distribution where a single experiment is conducted so that the number of observation is 1. So, the Bernoulli distribution therefore describes events having exactly two outcomes.</p>\n\n\n\n<p>We use various functions in numpy library to mathematically calculate the values for a bernoulli distribution. Histograms are created over which we plot the probability distribution curve.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>from scipy.stats import bernoulli\nimport seaborn as sb\n\ndata_bern = bernoulli.rvs(size=1000,p=0.6)\nax = sb.distplot(data_bern,\n                  kde=True,\n                  color='crimson',\n                  hist_kws={\"linewidth\": 25,'alpha':1})\nax.set(xlabel='Bernouli', ylabel='Frequency')</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"623\" height=\"425\" src=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-4.png\" alt=\"\" class=\"wp-image-1262\" srcset=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-4.png 623w, https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-4-300x205.png 300w\" sizes=\"(max-width: 623px) 100vw, 623px\" /></figure>\n","protected":false},"excerpt":{"rendered":"<p>The Bernoulli distribution is a special case of the Binomial distribution where a single experiment is conducted so that the number of observation is 1. So, the Bernoulli distribution therefore describes events having exactly two outcomes. We use various functions in numpy library to mathematically calculate the values for a bernoulli distribution. Histograms are created [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2040,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1261"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1261"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1261/revisions"}],"predecessor-version":[{"id":2056,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1261/revisions/2056"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2040"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1261"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1261"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1261"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1264,"date":"2020-05-21T07:50:24","date_gmt":"2020-05-21T07:50:24","guid":{"rendered":"http://python3.foobrdigital.com/?p=1264"},"modified":"2020-12-15T11:36:44","modified_gmt":"2020-12-15T11:36:44","slug":"p-value","status":"publish","type":"post","link":"https://python3.foobrdigital.com/p-value/","title":{"rendered":"P-Value"},"content":{"rendered":"\n<p>The p-value is about the strength of a hypothesis. We build hypothesis based on some statistical model and compare the model&#8217;s validity using p-value. One way to get the p-value is by using T-test.</p>\n\n\n\n<p>This is a two-sided test for the null hypothesis that the expected value (mean) of a sample of independent observations ‘a’ is equal to the given population mean,&nbsp;<strong>popmean</strong>. Let us consider the following example.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>from scipy import stats\nrvs = stats.norm.rvs(loc = 5, scale = 10, size = (50,2))\nprint stats.ttest_1samp(rvs,5.0)</code></pre>\n\n\n\n<p>The above program will generate the following output.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Ttest_1sampResult(statistic = array(&#91;-1.40184894, 2.70158009]),\npvalue = array(&#91; 0.16726344, 0.00945234]))</code></pre>\n\n\n\n<h3>Comparing two samples</h3>\n\n\n\n<p>In the following examples, there are two samples, which can come either from the same or from different distribution, and we want to test whether these samples have the same statistical properties.</p>\n\n\n\n<p><strong>ttest_ind</strong>&nbsp;− Calculates the T-test for the means of two independent samples of scores. This is a two-sided test for the null hypothesis that two independent samples have identical average (expected) values. This test assumes that the populations have identical variances by default.</p>\n\n\n\n<p>We can use this test, if we observe two independent samples from the same or different population. Let us consider the following example.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>from scipy import stats\nrvs1 = stats.norm.rvs(loc = 5,scale = 10,size = 500)\nrvs2 = stats.norm.rvs(loc = 5,scale = 10,size = 500)\nprint stats.ttest_ind(rvs1,rvs2)</code></pre>\n\n\n\n<p>The above program will generate the following output.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>Ttest_indResult(statistic = -0.67406312233650278, pvalue = 0.50042727502272966)</code></pre>\n\n\n\n<p>You can test the same with a new array of the same length, but with a varied mean. Use a different value in&nbsp;<strong>loc</strong>&nbsp;and test the same.</p>\n","protected":false},"excerpt":{"rendered":"<p>The p-value is about the strength of a hypothesis. We build hypothesis based on some statistical model and compare the model&#8217;s validity using p-value. One way to get the p-value is by using T-test. This is a two-sided test for the null hypothesis that the expected value (mean) of a sample of independent observations ‘a’ [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2041,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1264"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1264"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1264/revisions"}],"predecessor-version":[{"id":2057,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1264/revisions/2057"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2041"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1264"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1264"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1264"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1266,"date":"2020-05-21T07:51:52","date_gmt":"2020-05-21T07:51:52","guid":{"rendered":"http://python3.foobrdigital.com/?p=1266"},"modified":"2020-12-15T11:36:43","modified_gmt":"2020-12-15T11:36:43","slug":"correlation","status":"publish","type":"post","link":"https://python3.foobrdigital.com/correlation/","title":{"rendered":"Correlation"},"content":{"rendered":"\n<p>Correlation refers to some statistical relationships involving dependence between two data sets. Simple examples of dependent phenomena include the correlation between the physical appearance of parents and their offspring, and the correlation between the price for a product and its supplied quantity.</p>\n\n\n\n<p>We take example of the iris data set available in seaborn python library. In it we try to establish the correlation between the length and the width of the sepals and petals of three species of iris flower. Based on the correlation found, a strong model could be created which easily distinguishes one species from another.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import matplotlib.pyplot as plt\nimport seaborn as sns\ndf = sns.load_dataset('iris')\n\n \n#without regression\nsns.pairplot(df, kind=\"scatter\")\nplt.show()</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"705\" height=\"712\" src=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-5.png\" alt=\"\" class=\"wp-image-1267\" srcset=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-5.png 705w, https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-5-297x300.png 297w, https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-5-150x150.png 150w\" sizes=\"(max-width: 705px) 100vw, 705px\" /></figure>\n\n\n\n<p></p>\n","protected":false},"excerpt":{"rendered":"<p>Correlation refers to some statistical relationships involving dependence between two data sets. Simple examples of dependent phenomena include the correlation between the physical appearance of parents and their offspring, and the correlation between the price for a product and its supplied quantity. We take example of the iris data set available in seaborn python library. [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2066,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1266"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1266"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1266/revisions"}],"predecessor-version":[{"id":2067,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1266/revisions/2067"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2066"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1266"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1266"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1266"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1269,"date":"2020-05-21T07:52:59","date_gmt":"2020-05-21T07:52:59","guid":{"rendered":"http://python3.foobrdigital.com/?p=1269"},"modified":"2020-12-15T11:36:41","modified_gmt":"2020-12-15T11:36:41","slug":"chi-square-test","status":"publish","type":"post","link":"https://python3.foobrdigital.com/chi-square-test/","title":{"rendered":"Chi-Square Test"},"content":{"rendered":"\n<p>Chi-Square test is a statistical method to determine if two categorical variables have a significant correlation between them. Both those variables should be from same population and they should be categorical like − Yes/No, Male/Female, Red/Green etc. For example, we can build a data set with observations on people&#8217;s ice-cream buying pattern and try to correlate the gender of a person with the flavour of the ice-cream they prefer. If a correlation is found we can plan for appropriate stock of flavours by knowing the number of gender of people visiting.</p>\n\n\n\n<p>We use various functions in numpy library to carry out the chi-square test.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>from scipy import stats\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.linspace(0, 10, 100)\nfig,ax = plt.subplots(1,1)\n\nlinestyles = &#91;':', '--', '-.', '-']\ndeg_of_freedom = &#91;1, 4, 7, 6]\nfor df, ls in zip(deg_of_freedom, linestyles):\n  ax.plot(x, stats.chi2.pdf(x, df), linestyle=ls)\n\nplt.xlim(0, 10)\nplt.ylim(0, 0.4)\n\nplt.xlabel('Value')\nplt.ylabel('Frequency')\nplt.title('Chi-Square Distribution')\n\nplt.legend()\nplt.show()</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"641\" height=\"446\" src=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-6.png\" alt=\"\" class=\"wp-image-1275\" srcset=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-6.png 641w, https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-6-300x209.png 300w\" sizes=\"(max-width: 641px) 100vw, 641px\" /></figure>\n","protected":false},"excerpt":{"rendered":"<p>Chi-Square test is a statistical method to determine if two categorical variables have a significant correlation between them. Both those variables should be from same population and they should be categorical like − Yes/No, Male/Female, Red/Green etc. For example, we can build a data set with observations on people&#8217;s ice-cream buying pattern and try to [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2043,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1269"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1269"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1269/revisions"}],"predecessor-version":[{"id":2058,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1269/revisions/2058"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2043"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1269"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1269"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1269"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":1277,"date":"2020-05-21T07:54:18","date_gmt":"2020-05-21T07:54:18","guid":{"rendered":"http://python3.foobrdigital.com/?p=1277"},"modified":"2020-12-15T11:36:39","modified_gmt":"2020-12-15T11:36:39","slug":"linear-regression","status":"publish","type":"post","link":"https://python3.foobrdigital.com/linear-regression/","title":{"rendered":"Linear Regression"},"content":{"rendered":"\n<p>In Linear Regression these two variables are related through an equation, where exponent (power) of both these variables is 1. Mathematically a linear relationship represents a straight line when plotted as a graph. A non-linear relationship where the exponent of any variable is not equal to 1 creates a curve.</p>\n\n\n\n<p>The functions in Seaborn to find the linear regression relationship is regplot. The below example shows its use.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import seaborn as sb\nfrom matplotlib import pyplot as plt\ndf = sb.load_dataset('tips')\nsb.regplot(x = \"total_bill\", y = \"tip\", data = df)\nplt.show()</code></pre>\n\n\n\n<p>Its&nbsp;<strong>output</strong>&nbsp;is as follows −</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"592\" height=\"408\" src=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-7.png\" alt=\"\" class=\"wp-image-1278\" srcset=\"https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-7.png 592w, https://python3.foobrdigital.com/wp-content/uploads/2020/05/chartprop2-7-300x207.png 300w\" sizes=\"(max-width: 592px) 100vw, 592px\" /></figure>\n","protected":false},"excerpt":{"rendered":"<p>In Linear Regression these two variables are related through an equation, where exponent (power) of both these variables is 1. Mathematically a linear relationship represents a straight line when plotted as a graph. A non-linear relationship where the exponent of any variable is not equal to 1 creates a curve. The functions in Seaborn to [&hellip;]</p>\n","protected":false},"author":4,"featured_media":2044,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15,71,147],"tags":[],"_links":{"self":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1277"}],"collection":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/users/4"}],"replies":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=1277"}],"version-history":[{"count":2,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1277/revisions"}],"predecessor-version":[{"id":2059,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/posts/1277/revisions/2059"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media/2044"}],"wp:attachment":[{"href":"https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=1277"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=1277"},{"taxonomy":"post_tag","embeddable":true,"href":"https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=1277"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}}]