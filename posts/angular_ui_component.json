[
    {
        "id": 4748,
        "date": "2021-02-27T10:51:22",
        "date_gmt": "2021-02-27T10:51:22",
        "guid": {
            "rendered": "http:\/\/angular.foobrdigital.com\/?p=4748"
        },
        "modified": "2021-02-27T10:51:22",
        "modified_gmt": "2021-02-27T10:51:22",
        "slug": "angular-ui-components",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/angular-ui-components\/",
        "title": {
            "rendered": "Angular UI components"
        },
        "content": {
            "rendered": "\n<p>The\u00a0Angular Material\u00a0library, which is maintained by the Angular team, is a suite of reusable UI components that aims to be fully accessible. The\u00a0Component Development Kit (CDK)\u00a0includes the\u00a0<code>a11y<\/code>\u00a0package that provides tools to support various areas of accessibility. For example:<\/p>\n\n\n\n<ul><li><code>LiveAnnouncer<\/code>\u00a0is used to announce messages for screen-reader users using an\u00a0<code>aria-live<\/code>\u00a0region. See the W3C documentation for more information on\u00a0aria-live regions.<\/li><li>The\u00a0<code>cdkTrapFocus<\/code>\u00a0directive traps Tab-key focus within an element. Use it to create accessible experience for components like modal dialogs, where focus must be constrained.<\/li><\/ul>\n\n\n\n<p>For full details of these and other tools, see the\u00a0Angular CDK accessibility overview.<\/p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>The\u00a0Angular Material\u00a0library, which is maintained by the Angular team, is a suite of reusable UI components that aims to be fully accessible. The\u00a0Component Development Kit (CDK)\u00a0includes the\u00a0a11y\u00a0package that provides tools to support various areas of accessibility. For example: LiveAnnouncer\u00a0is used to announce messages for screen-reader users using an\u00a0aria-live\u00a0region. See the W3C documentation for more information [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 2,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            258
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4748"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/2"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=4748"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4748\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 4751,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4748\/revisions\/4751"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=4748"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=4748"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=4748"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 4747,
        "date": "2021-02-27T10:52:04",
        "date_gmt": "2021-02-27T10:52:04",
        "guid": {
            "rendered": "http:\/\/angular.foobrdigital.com\/?p=4747"
        },
        "modified": "2021-02-27T10:52:04",
        "modified_gmt": "2021-02-27T10:52:04",
        "slug": "augmenting-native-elements",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/augmenting-native-elements\/",
        "title": {
            "rendered": "Augmenting native elements"
        },
        "content": {
            "rendered": "\n<p>Native HTML elements capture a number of standard interaction patterns that are important to accessibility. When authoring Angular components, you should re-use these native elements directly when possible, rather than re-implementing well-supported behaviors.<\/p>\n\n\n\n<p>For example, instead of creating a custom element for a new variety of button, you can create a component that uses an attribute selector with a native&nbsp;<code>&lt;button&gt;<\/code>&nbsp;element. This most commonly applies to&nbsp;<code>&lt;button&gt;<\/code>&nbsp;and&nbsp;<code>&lt;a&gt;<\/code>, but can be used with many other types of element.<\/p>\n\n\n\n<p>You can see examples of this pattern in Angular Material:\u00a0<code>MatButton<\/code>,\u00a0<code>MatTabNav<\/code>,\u00a0<code>MatTable<\/code><\/p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Native HTML elements capture a number of standard interaction patterns that are important to accessibility. When authoring Angular components, you should re-use these native elements directly when possible, rather than re-implementing well-supported behaviors. For example, instead of creating a custom element for a new variety of button, you can create a component that uses an [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 2,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            258
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4747"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/2"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=4747"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4747\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 4752,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4747\/revisions\/4752"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=4747"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=4747"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=4747"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 4746,
        "date": "2021-02-27T10:52:22",
        "date_gmt": "2021-02-27T10:52:22",
        "guid": {
            "rendered": "http:\/\/angular.foobrdigital.com\/?p=4746"
        },
        "modified": "2021-02-27T10:52:22",
        "modified_gmt": "2021-02-27T10:52:22",
        "slug": "using-containers-for-native-elements",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/using-containers-for-native-elements\/",
        "title": {
            "rendered": "Using containers for native elements"
        },
        "content": {
            "rendered": "\n<p>Sometimes using the appropriate native element requires a container element. For example, the native&nbsp;<code>&lt;input&gt;<\/code>&nbsp;element cannot have children, so any custom text entry components need to wrap an&nbsp;<code>&lt;input&gt;<\/code>&nbsp;with additional elements. While you might just include the&nbsp;<code>&lt;input&gt;<\/code>&nbsp;in your custom component&#8217;s template, this makes it impossible for users of the component to set arbitrary properties and attributes to the input element. Instead, you can create a container component that uses content projection to include the native control in the component&#8217;s API.<\/p>\n\n\n\n<p>You can see\u00a0<code>MatFormField<\/code>\u00a0as an example of this pattern.<\/p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Sometimes using the appropriate native element requires a container element. For example, the native&nbsp;&lt;input&gt;&nbsp;element cannot have children, so any custom text entry components need to wrap an&nbsp;&lt;input&gt;&nbsp;with additional elements. While you might just include the&nbsp;&lt;input&gt;&nbsp;in your custom component&#8217;s template, this makes it impossible for users of the component to set arbitrary properties and attributes to [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 2,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            258
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4746"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/2"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=4746"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4746\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 4753,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/4746\/revisions\/4753"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=4746"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=4746"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=4746"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    }
]