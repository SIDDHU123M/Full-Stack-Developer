[
    {
        "id": 2104,
        "date": "2021-04-12T08:02:55",
        "date_gmt": "2021-04-12T08:02:55",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2104"
        },
        "modified": "2021-04-12T08:02:55",
        "modified_gmt": "2021-04-12T08:02:55",
        "slug": "lang-boolean-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/lang-boolean-class\/",
        "title": {
            "rendered": "lang Boolean Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.Boolean<\/strong>&nbsp;class wraps a value of the primitive type boolean in an object. An object of type Boolean contains a single field whose type is boolean.<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.Boolean<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class Boolean\n   extends Object\n      implements Serializable, Comparable&lt;Boolean&gt;\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.lang.Boolean<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static Boolean FALSE<\/strong>&nbsp;\u2212 This is the Boolean object corresponding to the primitive value false.<\/li><li><strong>static Boolean TRUE<\/strong>&nbsp;\u2212 This is the Boolean object corresponding to the primitive value true.<\/li><li><strong>static Class&lt;Boolean&gt; TYPE<\/strong>&nbsp;\u2212 This is the Class object representing the primitive type boolean.<\/li><\/ul>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>Boolean(boolean value)<\/strong>This allocates a Boolean object representing the value argument.<\/td><\/tr><tr><td>2<\/td><td><strong>Boolean(String s)<\/strong>This allocates a Boolean object representing the value true if the string argument is not null and is equal, ignoring case, to the string &#8220;true&#8221;.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>boolean boolean value()This method returns the value of this Boolean object as a boolean primitive.<\/td><\/tr><tr><td>2<\/td><td>int compareTo(Boolean b)This method compares this Boolean instance with another.<\/td><\/tr><tr><td>3<\/td><td>boolean equals(Object obj)This method returns true if and only if the argument is not null and is a Boolean object that represents the same boolean value as this object.<\/td><\/tr><tr><td>4<\/td><td>static boolean getBoolean(String name)This method returns true if and only if the system property named by the argument exists and is equal to the string &#8220;true&#8221;.<\/td><\/tr><tr><td>5<\/td><td>int hashCode()This method returns a hash code for this Boolean object.<\/td><\/tr><tr><td>6<\/td><td>static boolean parseBoolean(String s)This method parses the string argument as a boolean.<\/td><\/tr><tr><td>7<\/td><td>String toString()This method returns a String object representing this Boolean&#8217;s value.<\/td><\/tr><tr><td>8<\/td><td>static String toString(boolean b)This method returns a String object representing the specified boolean.<\/td><\/tr><tr><td>9<\/td><td>static Boolean valueOf(boolean b)This method returns a Boolean instance representing the specified boolean value.<\/td><\/tr><tr><td>10<\/td><td>static Boolean valueOf(String s)This method returns a Boolean with a value represented by the specified string.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.Boolean&nbsp;class wraps a value of the primitive type boolean in an object. An object of type Boolean contains a single field whose type is boolean. Class Declaration Following is the declaration for&nbsp;java.lang.Boolean&nbsp;class \u2212 Field Following are the fields for&nbsp;java.lang.Boolean&nbsp;class \u2212 static Boolean FALSE&nbsp;\u2212 This is the Boolean object corresponding to the primitive value false. [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2104"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2104"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2104\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2105,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2104\/revisions\/2105"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2104"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2104"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2104"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2106,
        "date": "2021-04-12T08:04:47",
        "date_gmt": "2021-04-12T08:04:47",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2106"
        },
        "modified": "2021-04-12T08:04:47",
        "modified_gmt": "2021-04-12T08:04:47",
        "slug": "byte-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/byte-class\/",
        "title": {
            "rendered": "Byte Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.Byte<\/strong>&nbsp;class wraps a value of primitive type byte in an object. An object of type Byte contains a single field whose type is byte.<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.Byte<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class Byte\n   extends Number\n      implements Comparable&lt;Byte&gt;\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.lang.Byte<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static byte MAX_VALUE<\/strong>&nbsp;\u2212 This is constant holding the maximum value a byte can have, 2<sup>7<\/sup>-1.<\/li><li><strong>static byte MIN_VALUE<\/strong>&nbsp;\u2212 This is constant holding the minimum value a byte can have, -2<sup>7<\/sup>.<\/li><li><strong>static int SIZE<\/strong>&nbsp;\u2212 This is the number of bits used to represent a byte value in two&#8217;s complement binary form.<\/li><li><strong>static Class&lt;Byte&gt; TYPE<\/strong>&nbsp;\u2212 This is the Class instance representing the primitive type byte.<\/li><\/ul>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>Byte(byte value)<\/strong>This constructs a newly allocated Byte object that represents the specified byte value.<\/td><\/tr><tr><td>2<\/td><td><strong>Byte(String s)<\/strong>This constructs a newly allocated Byte object that represents the byte value indicated by the String parameter.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>byte value()This method returns the value of this Byte as a byte.<\/td><\/tr><tr><td>2<\/td><td>int compareTo(Byte another byte)This method compares two Byte objects numerically.<\/td><\/tr><tr><td>3<\/td><td>static Byte decode(String nm)This method decodes a String into a Byte.<\/td><\/tr><tr><td>4<\/td><td>double doubleValue()This method returns the value of this Byte as a double.<\/td><\/tr><tr><td>5<\/td><td>boolean equals(Object obj)This method compares this object to the specified object.<\/td><\/tr><tr><td>6<\/td><td>float value()This method returns the value of this Byte as afloat.<\/td><\/tr><tr><td>7<\/td><td>int hashCode()This method returns a hash code for this Byte.<\/td><\/tr><tr><td>8<\/td><td>int intValue()This method returns the value of this Byte as an int.<\/td><\/tr><tr><td>9<\/td><td>long long value()This method returns the value of this Byte as along.<\/td><\/tr><tr><td>10<\/td><td>static byte parseByte(String s)This method parses the string argument as a signed decimal byte.<\/td><\/tr><tr><td>11<\/td><td>static byte parseByte(String s, int radix)This method parses the string argument as a signed byte in the radix specified by the second argument.<\/td><\/tr><tr><td>12<\/td><td>short value()This method returns the value of this Byte as a short.<\/td><\/tr><tr><td>13<\/td><td>String toString()This method returns a String object representing this Byte&#8217;s value.<\/td><\/tr><tr><td>14<\/td><td>static String toString(byte b)This method returns a new String object representing the specified byte.<\/td><\/tr><tr><td>15<\/td><td>static Byte valueOf(byte b)This method returns a Byte instance representing the specified byte value.<\/td><\/tr><tr><td>16<\/td><td>static Byte valueOf(String s)This method returns a Byte object holding the value given by the specified String.<\/td><\/tr><tr><td>17<\/td><td>static Byte valueOf(String s, int radix)This method returns a Byte object holding the value extracted from the specified String when parsed with the radix given by the second argument.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.Byte&nbsp;class wraps a value of primitive type byte in an object. An object of type Byte contains a single field whose type is byte. Class Declaration Following is the declaration for&nbsp;java.lang.Byte&nbsp;class \u2212 Field Following are the fields for&nbsp;java.lang.Byte&nbsp;class \u2212 static byte MAX_VALUE&nbsp;\u2212 This is constant holding the maximum value a byte can have, 27-1. [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2106"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2106"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2106\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2107,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2106\/revisions\/2107"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2106"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2106"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2106"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2108,
        "date": "2021-04-12T08:09:54",
        "date_gmt": "2021-04-12T08:09:54",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2108"
        },
        "modified": "2021-04-12T08:09:54",
        "modified_gmt": "2021-04-12T08:09:54",
        "slug": "character-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/character-class\/",
        "title": {
            "rendered": "Character Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.Character<\/strong>&nbsp;class wraps a value of the primitive type char in an object. An object of type Character contains a single field whose type is char.<\/p>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.Character<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class Character\n   extends Object\n      implements Serializable, Comparable&lt;Character&gt;\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.lang.Character<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static byte COMBINING_SPACING_MARK<\/strong>&nbsp;\u2212 This is the General category &#8220;Mc&#8221; in the Unicode specification.<\/li><li><strong>static byte CONNECTOR_PUNCTUATION<\/strong>&nbsp;\u2212 This is the General category &#8220;Pc&#8221; in the Unicode specification.<\/li><li><strong>static byte CONTROL<\/strong>&nbsp;\u2212 This is the General category &#8220;Cc&#8221; in the Unicode specification.<\/li><li><strong>static byte CURRENCY_SYMBOL<\/strong>&nbsp;\u2212 This is the General category &#8220;Sc&#8221; in the Unicode specification.<\/li><li><strong>static byte DASH_PUNCTUATION<\/strong>&nbsp;\u2212 This is the General category &#8220;Pd&#8221; in the Unicode specification.<\/li><li><strong>static byte DECIMAL_DIGIT_NUMBER<\/strong>&nbsp;\u2212 This is the General category &#8220;Nd&#8221; in the Unicode specification.<\/li><li><strong>static byte DIRECTIONALITY_ARABIC_NUMBER<\/strong>&nbsp;\u2212 This is the Weak bidirectional character type &#8220;AN&#8221; in the Unicode specification.<\/li><li><strong>static byte DIRECTIONALITY_BOUNDARY_NEUTRAL<\/strong>&nbsp;\u2212 This is the Weak bidirectional character type &#8220;BN&#8221; in the Unicode specification.<\/li><li><strong>static byte DIRECTIONALITY_COMMON_NUMBER_SEPARATOR<\/strong>&nbsp;\u2212 This is the Weak bidirectional character type &#8220;CS&#8221; in the Unicode specification.<\/li><li><strong>static byte DIRECTIONALITY_EUROPEAN_NUMBER<\/strong>&nbsp;\u2212 This is the Weak bidirectional character type &#8220;EN&#8221; in the Unicode specification.<\/li><li><strong>static byte DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR<\/strong>&nbsp;\u2212 This is the Weak bidirectional character type &#8220;ES&#8221; in the Unicode specification.<\/li><li><strong>static byte DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR<\/strong>&nbsp;\u2212 This is the Weak bidirectional character type &#8220;ET&#8221; in the Unicode specification.<\/li><li><strong>static byte DIRECTIONALITY_LEFT_TO_RIGHT<\/strong>&nbsp;\u2212 This is the Strong bidirectional character type &#8220;L&#8221; in the Unicode specification.<\/li><li><strong>static byte DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING<\/strong>&nbsp;\u2212 This is the Strong bidirectional character type &#8220;LRE&#8221; in the Unicode specification.<\/li><li><strong>static byte DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE<\/strong>&nbsp;\u2212 This is the Strong bidirectional character type &#8220;LRO&#8221; in the Unicode specification.<\/li><li><strong>static byte DIRECTIONALITY_NONSPACING_MARK<\/strong>&nbsp;\u2212 This is the Weak bidirectional character type &#8220;NSM&#8221; in the Unicode specification.<\/li><li><strong>static byte DIRECTIONALITY_OTHER_NEUTRALS<\/strong>&nbsp;\u2212 This is the Neutral bidirectional character type &#8220;ON&#8221; in the Unicode specification.<\/li><li><strong>static byte DIRECTIONALITY_PARAGRAPH_SEPARATOR<\/strong>&nbsp;\u2212 This is the Neutral bidirectional character type &#8220;B&#8221; in the Unicode specification.<\/li><li><strong>static byte DIRECTIONALITY_POP_DIRECTIONAL_FORMAT<\/strong>&nbsp;\u2212 This is the Weak bidirectional character type &#8220;PDF&#8221; in the Unicode specification.<\/li><li><strong>static byte DIRECTIONALITY_RIGHT_TO_LEFT<\/strong>&nbsp;\u2212 This is the Strong bidirectional character type &#8220;R&#8221; in the Unicode specification.<\/li><li><strong>static byte DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC<\/strong>&nbsp;\u2212 This is the Strong bidirectional character type &#8220;AL&#8221; in the Unicode specification.<\/li><li><strong>static byte DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING<\/strong>&nbsp;\u2212 This is the Strong bidirectional character type &#8220;RLE&#8221; in the Unicode specification.<\/li><li><strong>static byte DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE<\/strong>&nbsp;\u2212 This is the Strong bidirectional character type &#8220;RLO&#8221; in the Unicode specification.<\/li><li><strong>static byte DIRECTIONALITY_SEGMENT_SEPARATOR<\/strong>&nbsp;\u2212 This is the Neutral bidirectional character type &#8220;S&#8221; in the Unicode specification.<\/li><li><strong>static byte DIRECTIONALITY_UNDEFINED<\/strong>&nbsp;\u2212 This is the Undefined bidirectional character type.<\/li><li><strong>static byte DIRECTIONALITY_WHITESPACE<\/strong>&nbsp;\u2212 This is the Neutral bidirectional character type &#8220;WS&#8221; in the Unicode specification.<\/li><li><strong>static byte ENCLOSING_MARK<\/strong>&nbsp;\u2212 This is the General category &#8220;Me&#8221; in the Unicode specification.<\/li><li><strong>static byte END_PUNCTUATION<\/strong>&nbsp;\u2212 This is the General category &#8220;Pe&#8221; in the Unicode specification.<\/li><li><strong>static byte FINAL_QUOTE_PUNCTUATION<\/strong>&nbsp;\u2212 This is the General category &#8220;Pf&#8221; in the Unicode specification.<\/li><li><strong>static byte FORMAT<\/strong>&nbsp;\u2212 This is the General category &#8220;Cf&#8221; in the Unicode specification.<\/li><li><strong>static byte INITIAL_QUOTE_PUNCTUATION<\/strong>&nbsp;\u2212 This is the General category &#8220;Pi&#8221; in the Unicode specification.<\/li><li><strong>static byte LETTER_NUMBER<\/strong>&nbsp;\u2212 This is the General category &#8220;Nl&#8221; in the Unicode specification.<\/li><li><strong>static byte LINE_SEPARATOR<\/strong>&nbsp;\u2212 This is the General category &#8220;Zl&#8221; in the Unicode specification.<\/li><li><strong>static byte LOWERCASE_LETTER<\/strong>&nbsp;\u2212 This is the General category &#8220;Ll&#8221; in the Unicode specification.<\/li><li><strong>static byte MATH_SYMBOL<\/strong>&nbsp;\u2212 This is the General category &#8220;Sm&#8221; in the Unicode specification.<\/li><li><strong>static int MAX_CODE_POINT<\/strong>&nbsp;\u2212 This is the maximum value of a Unicode code point.<\/li><li><strong>static char MAX_HIGH_SURROGATE<\/strong>&nbsp;\u2212 This is the maximum value of a Unicode high-surrogate code unit in the UTF-16 encoding.<\/li><li><strong>static char MAX_LOW_SURROGATE<\/strong>&nbsp;\u2212 This is the maximum value of a Unicode low-surrogate code unit in the UTF-16 encoding.<\/li><li><strong>static int MAX_RADIX<\/strong>&nbsp;\u2212 This is the maximum radix available for conversion to and from strings.<\/li><li><strong>static char MAX_SURROGATE<\/strong>&nbsp;\u2212 This is the maximum value of a Unicode surrogate code unit in the UTF-16 encoding.<\/li><li><strong>static char MAX_VALUE<\/strong>&nbsp;\u2212 This is the constant value of this field is the largest value of type char, &#8216;\\uFFFF&#8217;.<\/li><li><strong>static int MIN_CODE_POINT<\/strong>&nbsp;\u2212 This is the minimum value of a Unicode code poin<\/li><li><strong>static char MIN_HIGH_SURROGATE<\/strong>&nbsp;\u2212 This is the minimum value of a Unicode high-surrogate code unit in the UTF-16 encoding.<\/li><li><strong>static char MIN_LOW_SURROGATE<\/strong>&nbsp;\u2212 This is the minimum value of a Unicode low-surrogate code unit in the UTF-16 encoding.<\/li><li><strong>static int MIN_RADIX<\/strong>&nbsp;\u2212 This is the minimum radix available for conversion to and from strings.<\/li><li><strong>static int MIN_SUPPLEMENTARY_CODE_POINT<\/strong>&nbsp;\u2212 This is the minimum value of a supplementary code point.<\/li><li><strong>static char MIN_SURROGATE<\/strong>&nbsp;\u2212 This is the minimum value of a Unicode surrogate code unit in the UTF-16 encoding.<\/li><li><strong>static char MIN_VALUE<\/strong>&nbsp;\u2212 This is the constant value of this field is the smallest value of type char, &#8216;\\u0000&#8217;.<\/li><li><strong>static byte MODIFIER_LETTER<\/strong>&nbsp;\u2212 This is the General category &#8220;Lm&#8221; in the Unicode specification.<\/li><li><strong>static byte MODIFIER_SYMBOL<\/strong>&nbsp;\u2212 This is the General category &#8220;Sk&#8221; in the Unicode specification.<\/li><li><strong>static byte NON_SPACING_MARK<\/strong>&nbsp;\u2212 This is the General category &#8220;Mn&#8221; in the Unicode specification.<\/li><li><strong>static byte OTHER_LETTER<\/strong>&nbsp;\u2212 This is the General category &#8220;Lo&#8221; in the Unicode specification.<\/li><li><strong>static byte OTHER_NUMBER<\/strong>&nbsp;\u2212 This is the General category &#8220;No&#8221; in the Unicode specification.<\/li><li><strong>static byte OTHER_PUNCTUATION<\/strong>&nbsp;\u2212 This is the General category &#8220;Po&#8221; in the Unicode specification.<\/li><li><strong>static byte OTHER_SYMBOL<\/strong>&nbsp;\u2212 This is the General category &#8220;So&#8221; in the Unicode specification.<\/li><li><strong>static byte PARAGRAPH_SEPARATOR<\/strong>&nbsp;\u2212 This is the General category &#8220;Zp&#8221; in the Unicode specification.<\/li><li><strong>static byte PRIVATE_USE<\/strong>&nbsp;\u2212 This is the General category &#8220;Co&#8221; in the Unicode specification.<\/li><li><strong>static int SIZE<\/strong>&nbsp;\u2212 This is the number of bits used to represent a char value in unsigned binary form.<\/li><li><strong>static byte SPACE_SEPARATOR<\/strong>&nbsp;\u2212 This is the General category &#8220;Zs&#8221; in the Unicode specification.<\/li><li><strong>static byte START_PUNCTUATION<\/strong>&nbsp;\u2212 This is the General category &#8220;Ps&#8221; in the Unicode specification.<\/li><li><strong>static byte SURROGATE<\/strong>&nbsp;\u2212 This is the General category &#8220;Cs&#8221; in the Unicode specification.<\/li><li><strong>static byte TITLECASE_LETTER<\/strong>&nbsp;\u2212 This is the General category &#8220;Lt&#8221; in the Unicode specification.<\/li><li><strong>static Class&lt;Character&gt; TYPE<\/strong>&nbsp;\u2212 This is the Class instance representing the primitive type char.<\/li><li><strong>static byte UNASSIGNED<\/strong>&nbsp;\u2212 This is the General category &#8220;Cn&#8221; in the Unicode specification.<\/li><li><strong>static byte UPPERCASE_LETTER<\/strong>&nbsp;\u2212 This is the General category &#8220;Lu&#8221; in the Unicode specification.<\/li><\/ul>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>Character(char value)<\/strong>This constructs a newly allocated Character object that represents the specified char value.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>static int charCount(int codePoint)This method determines the number of char values needed to represent the specified character (Unicode code point).<\/td><\/tr><tr><td>2<\/td><td>char value()This method returns the value of this Character object.<\/td><\/tr><tr><td>3<\/td><td>static int codepoint(char[] an int index)This method returns the code point at the given index of the char array.<\/td><\/tr><tr><td>4<\/td><td>static int codepoint(char[] an int index, int limit)This method returns the code point at the given index of the char array, where only array elements with an index less than the limit can be used.<\/td><\/tr><tr><td>5<\/td><td>static int codepoint(CharSequence seq, int index)This method returns the code point at the given index of the CharSequence.<\/td><\/tr><tr><td>6<\/td><td>static int codepoints before(char[] an int index)This method returns the code point preceding the given index of the char array.<\/td><\/tr><tr><td>7<\/td><td>static int codepoints before(char[] an int index, int start)This method returns the code point preceding the given index of the char array, where only array elements with index greater than or equal to start can be used.<\/td><\/tr><tr><td>8<\/td><td>static int codepoints before(CharSequence seq, int index)This method returns the code point preceding the given index of the CharSequence.<\/td><\/tr><tr><td>9<\/td><td>static int codePointCount(char[] an int offset, int count)This method returns the number of Unicode code points in a subarray of the char array argument<\/td><\/tr><tr><td>10<\/td><td>static int codePointCount(CharSequence seq, int beginIndex, int endIndex)This method returns the number of Unicode code points in the text range of the specified char sequence.<\/td><\/tr><tr><td>11<\/td><td>int compareTo(Character another character)This method compares two Character objects numerically.<\/td><\/tr><tr><td>12<\/td><td>static int digit(char ch, int radix)This method returns the numeric value of the character ch in the specified radix.<\/td><\/tr><tr><td>13<\/td><td>static int digit(int codepoint, int radix)This method returns the numeric value of the specified character (Unicode code point) in the specified radix.<\/td><\/tr><tr><td>14<\/td><td>boolean equals(Object obj)This method compares this object against the specified object<\/td><\/tr><tr><td>15<\/td><td>static char forDigit(int digit, int radix)This method determines the character representation for a specific digit in the specified radix.<\/td><\/tr><tr><td>16<\/td><td>static byte gets directionality(char ch)This method returns the Unicode directionality property for the given character.<\/td><\/tr><tr><td>17<\/td><td>static byte gets directionality(int codePoint)This method returns the Unicode directionality property for the given character (Unicode code point).<\/td><\/tr><tr><td>18<\/td><td>static int gets numeric value(char ch)This method returns the int value that the specified Unicode character represents.<\/td><\/tr><tr><td>19<\/td><td>static int gets numeric value(int codePoint)This method returns the int value that the specified character (Unicode code point) represents.<\/td><\/tr><tr><td>20<\/td><td>static int getType(char ch)This method returns a value indicating a character&#8217;s general category.<\/td><\/tr><tr><td>21<\/td><td>static int getType(int codePoint)This method returns a value indicating a character&#8217;s general category.<\/td><\/tr><tr><td>22<\/td><td>int hashCode()This method returns a hash code for this Character.<\/td><\/tr><tr><td>23<\/td><td>static boolean is defined(char ch)This method determines if a character is defined in Unicode.<\/td><\/tr><tr><td>24<\/td><td>static boolean is defined(int codePoint)This method determines if a character (Unicode code point) is defined in Unicode.<\/td><\/tr><tr><td>25<\/td><td>static boolean digit(char ch)This method determines if the specified character is a digit.<\/td><\/tr><tr><td>26<\/td><td>static boolean digit(int codePoint)This method determines if the specified character (Unicode code point) is a digit.<\/td><\/tr><tr><td>27<\/td><td>static boolean isHighSurrogate(char ch)This method determines if the given char value is a high-surrogate code unit (also known as leading-surrogate code unit).<\/td><\/tr><tr><td>28<\/td><td>static boolean isIdentifierIgnorable(char ch)This method determines if the specified character should be regarded as an ignorable character in a Java identifier or a Unicode identifier.<\/td><\/tr><tr><td>29<\/td><td>static boolean isIdentifierIgnorable(int codePoint)This method determines if the specified character (Unicode code point) should be regarded as an ignorable character in a Java identifier or a Unicode identifier.<\/td><\/tr><tr><td>30<\/td><td>static boolean isISOControl(char ch)This method determines if the specified character is an ISO control character.<\/td><\/tr><tr><td>31<\/td><td>static boolean isISOControl(int codePoint)This method determines if the referenced character (Unicode code point) is an ISO control character.<\/td><\/tr><tr><td>32<\/td><td>static boolean isJavaIdentifierPart(char ch)This method determines if the specified character may be part of a Java identifier other than the first character.<\/td><\/tr><tr><td>33<\/td><td>static boolean isJavaIdentifierPart(int codePoint)This method determines if the character (Unicode code point) may be part of a Java identifier as other than the first character.<\/td><\/tr><tr><td>34<\/td><td>static boolean isJavaIdentifierStart(char ch)This method determines if the specified character is permissible as the first character in a Java identifier.<\/td><\/tr><tr><td>35<\/td><td>static boolean isJavaIdentifierStart(int codePoint)This method determines if the character (Unicode code point) is permissible as the first character in a Java identifier.<\/td><\/tr><tr><td>36<\/td><td>static boolean letter(char ch)This method determines if the specified character is a letter.<\/td><\/tr><tr><td>37<\/td><td>static boolean letter(int codePoint)This method determines if the specified character (Unicode code point) is a letter.<\/td><\/tr><tr><td>38<\/td><td>static boolean isLetterOrDigit(char ch)This method determines if the specified character is a letter or digit.<\/td><\/tr><tr><td>39<\/td><td>static boolean isLetterOrDigit(int codePoint)This method determines if the specified character (Unicode code point) is a letter or digit.<\/td><\/tr><tr><td>40<\/td><td>static boolean is lowercase(char ch)This method determines if the specified character is a lowercase character.<\/td><\/tr><tr><td>41<\/td><td>static boolean is lowercase(int codePoint)This method determines if the specified character (Unicode code point) is a lowercase character.<\/td><\/tr><tr><td>42<\/td><td>static boolean isLowSurrogate(char ch)This method determines if the given char value is a low-surrogate code unit (also known as trailing-surrogate code unit).<\/td><\/tr><tr><td>43<\/td><td>static boolean isMirrored(char ch)This method determines whether the character is mirrored according to the Unicode specification.<\/td><\/tr><tr><td>44<\/td><td>static boolean isMirrored(int codePoint)This method determines whether the specified character (Unicode code point) is mirrored according to the Unicode specification.<\/td><\/tr><tr><td>45<\/td><td>static boolean isSpaceChar(char ch)This method determines if the specified character is a Unicode space character.<\/td><\/tr><tr><td>46<\/td><td>static boolean isSpaceChar(int codePoint)This method determines if the specified character (Unicode code point) is a Unicode space character.<\/td><\/tr><tr><td>47<\/td><td>static boolean isSupplementaryCodePoint(int codePoint)This method determines whether the specified character (Unicode code point) is in the supplementary character range.<\/td><\/tr><tr><td>48<\/td><td>static boolean isSurrogatePair(char high, char low)This method determines whether the specified pair of char values is a valid surrogate pair.<\/td><\/tr><tr><td>49<\/td><td>static boolean is title case(char ch)This method determines if the specified character is a title case character.<\/td><\/tr><tr><td>50<\/td><td>static boolean is title case(int codePoint)This method determines if the specified character (Unicode code point) is a title case character.<\/td><\/tr><tr><td>51<\/td><td>static boolean isUnicodeIdentifierPart(char ch)This method determines if the specified character may be part of a Unicode identifier as other than the first character.<\/td><\/tr><tr><td>52<\/td><td>static boolean isUnicodeIdentifierPart(int codePoint)This method determines if the specified character (Unicode code point) may be part of a Unicode identifier as other than the first character.<\/td><\/tr><tr><td>53<\/td><td>static boolean isUnicodeIdentifierStart(char ch)This method determines if the specified character is permissible as the first character in a Unicode identifier.<\/td><\/tr><tr><td>54<\/td><td>static boolean isUnicodeIdentifierStart(int codePoint)This method determines if the specified character (Unicode code point) is permissible as the first character in a Unicode identifier.<\/td><\/tr><tr><td>55<\/td><td>static boolean is uppercase(char chThis method determines if the specified character is an uppercase character.<\/td><\/tr><tr><td>56<\/td><td>static boolean is uppercase(int codePoint)This method determines if the specified character (Unicode code point) is an uppercase character.<\/td><\/tr><tr><td>57<\/td><td>static boolean isValidCodePoint(int codePoint)This method determines whether the specified code point is a valid Unicode code point value in the range of 0x0000 to 0x10FFFF inclusive.<\/td><\/tr><tr><td>58<\/td><td>static boolean isWhitespace(char ch)This method determines if the specified character is white space according to Java.<\/td><\/tr><tr><td>59<\/td><td>static boolean isWhitespace(int codePoint)This method determines if the specified character (Unicode code point) is white space according to Java.<\/td><\/tr><tr><td>60<\/td><td>static int offsetByCodePoints(char[] a, int start, int count, int index, int codePointOffset)This method returns the index within the given char subarray that is offset from the given index by codePointOffset code points<\/td><\/tr><tr><td>61<\/td><td>static int offsetByCodePoints(CharSequence seq, int index, int codePointOffset)This method returns the index within the given char sequence that is offset from the given index by codePointOffset code points.<\/td><\/tr><tr><td>62<\/td><td>static char reverse bytes(char ch)This method returns the value obtained by reversing the order of the bytes in the specified char value.<\/td><\/tr><tr><td>63<\/td><td>static char[] toChars(int codePoint)This method converts the specified character (Unicode code point) to its UTF-16 representation stored in a char array.<\/td><\/tr><tr><td>64<\/td><td>static int toChars(int codePoint, char[] dst, int dstIndex)This method converts the specified character (Unicode code point) to its UTF-16 representation.<\/td><\/tr><tr><td>65<\/td><td>static int to codepoint(char high, char low)This method converts the specified surrogate pair to its supplementary code point value.<\/td><\/tr><tr><td>66<\/td><td>static char toLowerCase(char ch)This method converts the character argument to lowercase using case mapping information from the UnicodeData file.<\/td><\/tr><tr><td>67<\/td><td>static int toLowerCase(int codePoint)This method converts the character (Unicode code point) argument to lowercase using case mapping information from the UnicodeData file.<\/td><\/tr><tr><td>68<\/td><td>String toString()This method returns a String object representing this Character&#8217;s value.<\/td><\/tr><tr><td>69<\/td><td>static String toString(char c)This method returns a String object representing the specified char.<\/td><\/tr><tr><td>70<\/td><td>static char to title case(char ch)This method converts the character argument to title case using case mapping information from the UnicodeData file.<\/td><\/tr><tr><td>71<\/td><td>static int to title case(int codePoint)This method converts the character (Unicode code point) argument to title case using case mapping information from the UnicodeData file.<\/td><\/tr><tr><td>72<\/td><td>static char toUpperCase(char ch)This method converts the character argument to uppercase using case mapping information from the UnicodeData file.<\/td><\/tr><tr><td>73<\/td><td>static int toUpperCase(int codePoint)This method converts the character (Unicode code point) argument to uppercase using case mapping information from the UnicodeData file.<\/td><\/tr><tr><td>74<\/td><td>static Character valueOf(char c)This method returns a Character instance representing the specified char value.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.Character&nbsp;class wraps a value of the primitive type char in an object. An object of type Character contains a single field whose type is char. Class declaration Following is the declaration for&nbsp;java.lang.Character&nbsp;class \u2212 Field Following are the fields for&nbsp;java.lang.Character&nbsp;class \u2212 static byte COMBINING_SPACING_MARK&nbsp;\u2212 This is the General category &#8220;Mc&#8221; in the Unicode specification. static [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2108"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2108"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2108\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2109,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2108\/revisions\/2109"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2108"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2108"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2108"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2110,
        "date": "2021-04-12T08:10:59",
        "date_gmt": "2021-04-12T08:10:59",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2110"
        },
        "modified": "2021-04-12T08:10:59",
        "modified_gmt": "2021-04-12T08:10:59",
        "slug": "character-subset-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/character-subset-class\/",
        "title": {
            "rendered": "Character.Subset Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.Character.Subset<\/strong>&nbsp;class instances represent particular subsets of the Unicode character set. The only family of subsets defined in the Character class is UnicodeBlock.<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.Character.Subset<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public static class Character.Subset\n   extends Object\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>protected Character.Subset(String name)<\/strong>This constructs a new Subset instance.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>boolean equals(Object obj)This method compares two Subset objects for equality.<\/td><\/tr><tr><td>2<\/td><td>int hashCode()This method returns the standard hash code as defined by the Object.hashCode() method.<\/td><\/tr><tr><td>3<\/td><td>String toString()This method returns the name of this subset.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><\/ul>\n\n\n\n<p><\/p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.Character.Subset&nbsp;class instances represent particular subsets of the Unicode character set. The only family of subsets defined in the Character class is UnicodeBlock. Class Declaration Following is the declaration for&nbsp;java.lang.Character.Subset&nbsp;class \u2212 Class constructors Sr.No. Constructor &amp; Description 1 protected Character.Subset(String name)This constructs a new Subset instance. Class methods Sr.No. Method &amp; Description 1 boolean equals(Object [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2110"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2110"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2110\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2111,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2110\/revisions\/2111"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2110"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2110"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2110"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2112,
        "date": "2021-04-12T08:12:15",
        "date_gmt": "2021-04-12T08:12:15",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2112"
        },
        "modified": "2021-04-12T08:12:15",
        "modified_gmt": "2021-04-12T08:12:15",
        "slug": "character-unicodeblock-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/character-unicodeblock-class\/",
        "title": {
            "rendered": "Character.UnicodeBlock Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.Character.UnicodeBlock<\/strong>&nbsp;class is a family of character subsets representing the character blocks in the Unicode specification. Character blocks generally define characters used for a specific script or purpose.<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.Character.UnicodeBlock<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public static final class Character.UnicodeBlock\n   extends Character.Subset\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.lang.Character.UnicodeBlock<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static Character.UnicodeBlock AEGEAN_NUMBERS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Aegean Numbers&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock ALPHABETIC_PRESENTATION_FORMS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Alphabetic Presentation Forms&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock ARABIC<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Arabic&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock ARABIC_PRESENTATION_FORMS_A<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Arabic Presentation Forms-A&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock ARABIC_PRESENTATION_FORMS_B<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Arabic Presentation Forms-B&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock ARMENIAN<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Armenian&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock ARROWS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Arrows&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock BASIC_LATIN<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Basic Latin&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock BENGALI<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Bengali&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock BLOCK_ELEMENTS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Block Elements&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock BOPOMOFO<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Bopomofo&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock BOPOMOFO_EXTENDED<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Bopomofo Extended&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock BOX_DRAWING<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Box Drawing&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock BRAILLE_PATTERNS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Braille Patterns&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock BUHID<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Buhid&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock BYZANTINE_MUSICAL_SYMBOLS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Byzantine Musical Symbols&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock CHEROKEE<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Cherokee&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock CJK_COMPATIBILITY<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;CJK Compatibility&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock CJK_COMPATIBILITY_FORMS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;CJK Compatibility Forms&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock CJK_COMPATIBILITY_IDEOGRAPHS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;CJK Compatibility Ideographs&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;CJK Compatibility Ideographs Supplement&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock CJK_RADICALS_SUPPLEMENT<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;CJK Radicals Supplement&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock CJK_SYMBOLS_AND_PUNCTUATION<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;CJK Symbols and Punctuation&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock CJK_UNIFIED_IDEOGRAPHS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;CJK Unified Ideographs&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;CJK Unified Ideographs Extension A&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;CJK Unified Ideographs Extension B&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock COMBINING_DIACRITICAL_MARKS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Combining Diacritical Marks&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock COMBINING_HALF_MARKS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Combining Half Marks&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock COMBINING_MARKS_FOR_SYMBOLS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Combining Diacritical Marks for Symbols&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock CONTROL_PICTURES<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Control Pictures&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock CURRENCY_SYMBOLS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Currency Symbols&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock CYPRIOT_SYLLABARY<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Cypriot Syllabary&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock CYRILLIC<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Cyrillic&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock CYRILLIC_SUPPLEMENTARY<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Cyrillic Supplementary&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock DESERET<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Deseret&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock DEVANAGARI<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Devanagari&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock DINGBATS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Dingbats&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock ENCLOSED_ALPHANUMERICS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Enclosed Alphanumerics&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock ENCLOSED_CJK_LETTERS_AND_MONTHS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Enclosed CJK Letters and Months&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock ETHIOPIC<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Ethiopic&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock GENERAL_PUNCTUATION<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;General Punctuation&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock GEOMETRIC_SHAPES<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Geometric Shapes&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock GEORGIAN<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Georgian&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock GOTHIC<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Gothic&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock GREEK<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Greek and Coptic&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock GREEK_EXTENDED<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Greek Extended&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock GUJARATI<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Gujarati&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock GURMUKHI<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Gurmukhi&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock HALFWIDTH_AND_FULLWIDTH_FORMS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Halfwidth and Fullwidth Forms&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock HANGUL_COMPATIBILITY_JAMO<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Hangul Compatibility Jamo&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock HANGUL_JAMO<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Hangul Jamo&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock HANGUL_SYLLABLES<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Hangul Syllables&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock HANUNOO<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Hanunoo&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock HEBREW<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Hebrew&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock HIGH_PRIVATE_USE_SURROGATES<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;High Private Use Surrogates&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock HIGH_SURROGATES<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;High Surrogates&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock HIRAGANA<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Hiragana&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock IDEOGRAPHIC_DESCRIPTION_CHARACTERS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Ideographic Description Characters&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock IPA_EXTENSIONS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;IPA Extensions&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock KANBUN<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Kanbun&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock KANGXI_RADICALS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Kangxi Radicals&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock KANNADA<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Kannada&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock KATAKANA<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Katakana&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock KATAKANA_PHONETIC_EXTENSIONS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Katakana Phonetic Extensions&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock KHMER<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Khmer&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock KHMER_SYMBOLS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Khmer Symbols&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock LAO<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Lao&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock LATIN_1_SUPPLEMENT<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Latin-1 Supplement&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock LATIN_EXTENDED_A<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Latin Extended-A&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock LATIN_EXTENDED_ADDITIONAL<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Latin Extended Additional&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock LATIN_EXTENDED_B<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Latin Extended-B&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock LETTERLIKE_SYMBOLS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Letterlike Symbols&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock LIMBU<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Limbu&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock LINEAR_B_IDEOGRAMS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Linear B Ideograms&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock LINEAR_B_SYLLABARY<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Linear B Syllabary&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock LOW_SURROGATES<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Low Surrogates&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock MALAYALAM<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Malayalam&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock MATHEMATICAL_ALPHANUMERIC_SYMBOLS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Mathematical Alphanumeric Symbols&#8221; Unicode character block<\/li><li><strong>static Character.UnicodeBlock MATHEMATICAL_OPERATORS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Mathematical Operators&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Miscellaneous Mathematical Symbols-A&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Miscellaneous Mathematical Symbols-B&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock MISCELLANEOUS_SYMBOLS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Miscellaneous Symbols&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock MISCELLANEOUS_SYMBOLS_AND_ARROWS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Miscellaneous Symbols and Arrows&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock MISCELLANEOUS_TECHNICAL<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Miscellaneous Technical&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock MONGOLIAN<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Mongolian&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock MUSICAL_SYMBOLS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Musical Symbols&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock MYANMAR<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Myanmar&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock NUMBER_FORMS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Number Forms&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock OGHAM<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Ogham&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock OLD_ITALIC<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Old Italic&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock OPTICAL_CHARACTER_RECOGNITION<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Optical Character Recognition&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock ORIYA<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Oriya&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock OSMANYA<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Osmanya&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock PHONETIC_EXTENSIONS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Phonetic Extensions&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock PRIVATE_USE_AREA<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Private Use Area&#8221; Unicode character bloc<\/li><li><strong>static Character.UnicodeBlock RUNIC<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Runic&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock SHAVIAN<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Shavian&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock SINHALA<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Sinhala&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock SMALL_FORM_VARIANTS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Small Form Variants&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock SPACING_MODIFIER_LETTERS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Spacing Modifier Letters&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock SPECIALS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Specials&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock SUPERSCRIPTS_AND_SUBSCRIPTS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Superscripts and Subscripts&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock SUPPLEMENTAL_ARROWS_A<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Supplemental Arrows-A&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock SUPPLEMENTAL_ARROWS_B<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Supplemental Arrows-B&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock SUPPLEMENTAL_MATHEMATICAL_OPERATORS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Supplemental Mathematical Operators&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock SUPPLEMENTARY_PRIVATE_USE_AREA_A<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Supplementary Private Use Area-A&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock SUPPLEMENTARY_PRIVATE_USE_AREA_B<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Supplementary Private Use Area-B&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock SYRIAC<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Syriac&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock TAGALOG<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Tagalog&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock TAGBANWA<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Tagbanwa&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock TAGS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Tags&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock TAI_LE<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Tai Le&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock TAI_XUAN_JING_SYMBOLS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Tai Xuan Jing Symbols&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock TAMIL<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Tamil&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock TELUGU<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Telugu&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock THAANA<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Thaana&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock THAI<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Thai&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock TIBETAN<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Tibetan&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock UGARITIC<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Ugaritic&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Unified Canadian Aboriginal Syllabics&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock VARIATION_SELECTORS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Variation Selectors&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock VARIATION_SELECTORS_SUPPLEMENT<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Variation Selectors Supplement&#8221; Unicode character bloc<\/li><li><strong>static Character.UnicodeBlock YI_RADICALS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Yi Radicals&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock YI_SYLLABLES<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Yi Syllables&#8221; Unicode character block.<\/li><li><strong>static Character.UnicodeBlock YIJING_HEXAGRAM_SYMBOLS<\/strong>&nbsp;\u2212 This is a Constant for the &#8220;Yijing Hexagram Symbols&#8221; Unicode character block.<\/li><\/ul>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>static Character.UnicodeBlock forName(String block name)This method returns the UnicodeBlock with the given name.<\/td><\/tr><tr><td>2<\/td><td>static Character.UnicodeBlock of(char c)This method returns the object representing the Unicode block containing the given character, or null if the character is not a member of a defined block.<\/td><\/tr><tr><td>3<\/td><td>static Character.UnicodeBlock of(int codePoint)This method returns the object representing the Unicode block containing the given character (Unicode code point), or null if the character is not a member of a defined block.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Character.Subset<\/li><li>java.lang.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.Character.UnicodeBlock&nbsp;class is a family of character subsets representing the character blocks in the Unicode specification. Character blocks generally define characters used for a specific script or purpose. Class Declaration Following is the declaration for&nbsp;java.lang.Character.UnicodeBlock&nbsp;class \u2212 Field Following are the fields for&nbsp;java.lang.Character.UnicodeBlock&nbsp;class \u2212 static Character.UnicodeBlock AEGEAN_NUMBERS&nbsp;\u2212 This is a Constant for the &#8220;Aegean Numbers&#8221; Unicode [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2112"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2112"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2112\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2113,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2112\/revisions\/2113"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2112"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2112"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2112"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2114,
        "date": "2021-04-12T08:15:52",
        "date_gmt": "2021-04-12T08:15:52",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2114"
        },
        "modified": "2021-04-12T08:15:52",
        "modified_gmt": "2021-04-12T08:15:52",
        "slug": "class-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/class-class\/",
        "title": {
            "rendered": "Class Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.Class<\/strong>&nbsp;class instance represent classes and interfaces in a running Java application.It has no public constructor.<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.Class<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class Class&lt;T&gt;\n   extends Object\n      implements Serializable, GenericDeclaration, Type, AnnotatedElement\n<\/code><\/pre>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>&lt;U> Class&lt;? extends U> subclass(Class&lt;U> class)This method Casts this Class object to represent a subclass of the class represented by the specified class object.<\/td><\/tr><tr><td>2<\/td><td>T cast(Object obj)This method casts an object to the class or interface represented by this Class object.<\/td><\/tr><tr><td>3<\/td><td>boolean desired assertion status()This method returns the assertion status that would be assigned to this class if it were to be initialized at the time this method is invoked.<\/td><\/tr><tr><td>4<\/td><td>static Class&lt;?> forName(String className)This method returns the Class object associated with the class or interface with the given string name.<\/td><\/tr><tr><td>5<\/td><td>static Class&lt;?> forName(String name, boolean initialize, ClassLoader loader)This method returns the Class object associated with the class or interface with the given string name, using the given class loader.<\/td><\/tr><tr><td>6<\/td><td><strong>&lt;A extends Annotation&gt; A getAnnotation(Class&lt;A&gt; annotationClass)<\/strong>This method returns this element&#8217;s annotation for the specified type if such an annotation is present, else null.<\/td><\/tr><tr><td>7<\/td><td>Annotation[] getAnnotations()This method returns all annotations present on this element.<\/td><\/tr><tr><td>8<\/td><td>String getCanonicalName()This method returns the canonical name of the underlying class as defined by the Java Language Specification.<\/td><\/tr><tr><td>9<\/td><td>Class&lt;?>[] getClasses()This method returns an array containing Class objects representing all the public classes and interfaces that are members of the class represented by this Class object.<\/td><\/tr><tr><td>10<\/td><td>ClassLoader getClassLoader()This method returns the class loader for the class.<\/td><\/tr><tr><td>11<\/td><td>Class&lt;?> getComponentType()This method returns the Class representing the component type of an array.<\/td><\/tr><tr><td>12<\/td><td>Constructor&lt;T> getConstructor(Class&lt;?>&#8230; parameter types)This method returns a Constructor object that reflects the specified public constructor of the class represented by this Class object.<\/td><\/tr><tr><td>13<\/td><td>Constructor&lt;?>[] getConstructors()This method returns an array containing Constructor objects reflecting all the public constructors of the class represented by this Class object.<\/td><\/tr><tr><td>14<\/td><td>Annotation[] getDeclaredAnnotations()This method returns all annotations that are directly present on this element.<\/td><\/tr><tr><td>15<\/td><td>Class&lt;?>[] getDeclaredClasses()This method returns an array of Class objects reflecting all the classes and interfaces declared as members of the class represented by this Class object.<\/td><\/tr><tr><td>16<\/td><td>Constructor&lt;T> getDeclaredConstructor(Class&lt;?>&#8230; parameter types)This method returns a Constructor object that reflects the specified constructor of the class or interface represented by this Class object.<\/td><\/tr><tr><td>17<\/td><td>Constructor&lt;?>[] getDeclaredConstructors()This method returns an array of Constructor objects reflecting all the constructors declared by the class represented by this Class object.<\/td><\/tr><tr><td>18<\/td><td>Field getDeclaredField(String name)This method returns a Field object that reflects the specified declared field of the class or interface represented by this Class object.<\/td><\/tr><tr><td>19<\/td><td>Field[] getDeclaredFields()This method returns an array of Field objects reflecting all the fields declared by the class or interface represented by this Class object.<\/td><\/tr><tr><td>20<\/td><td>Method getDeclaredMethod(String name, Class&lt;?>&#8230; parameter types)This method returns a Method object that reflects the specified declared method of the class or interface represented by this Class object.<\/td><\/tr><tr><td>21<\/td><td>Method[] getDeclaredMethods()This method returns an array of Method objects reflecting all the methods declared by the class or interface represented by this Class object.<\/td><\/tr><tr><td>22<\/td><td>Class&lt;?> getDeclaringClass()If the class or interface represented by this Class object is a member of another class, returns the Class object representing the class in which it was declared.<\/td><\/tr><tr><td>23<\/td><td>Class&lt;?> getEnclosingClass()This method returns the immediately enclosing class of the underlying class.<\/td><\/tr><tr><td>24<\/td><td>Constructor&lt;?> getEnclosingConstructor()If this Class object represents a local or anonymous class within a constructor, returns a Constructor object representing the immediately enclosing constructor of the underlying class.<\/td><\/tr><tr><td>25<\/td><td>Method getEnclosingMethod()If this Class object represents a local or anonymous class within a method, returns a Method object representing the immediately enclosing method of the underlying class.<\/td><\/tr><tr><td>26<\/td><td>T[] getEnumConstants()This method returns the elements of this enum class or null if this Class object does not represent an enum type.<\/td><\/tr><tr><td>27<\/td><td>Field getField(String name)This method returns a Field object that reflects the specified public member field of the class or interface represented by this Class object.<\/td><\/tr><tr><td>28<\/td><td>Field[] Hetfield&#8217;s()This method returns an array containing Field objects reflecting all the accessible public fields of the class or interface represented by this Class object.<\/td><\/tr><tr><td>29<\/td><td>Type[] getGenericInterfaces()This method returns the Types representing the interfaces directly implemented by the class or interface represented by this object.<\/td><\/tr><tr><td>30<\/td><td>Type getGenericSuperclass()This method returns the Type representing the direct superclass of the entity (class, interface, primitive type, or void) represented by this Class.<\/td><\/tr><tr><td>31<\/td><td>Class&lt;?>[] getInterfaces()This method determines the interfaces implemented by the class or interface represented by this object.<\/td><\/tr><tr><td>32<\/td><td>Method getMethod(String name, Class&lt;?>&#8230; parameter types)This method returns a Method object that reflects the specified public member method of the class or interface represented by this Class object.<\/td><\/tr><tr><td>33<\/td><td>Method[] get methods()This method returns an array containing Method objects reflecting all the public member methods of the class or interface represented by this Class object, including those declared by the class or interface and those inherited from superclasses and superinterfaces.<\/td><\/tr><tr><td>34<\/td><td>int getModifiers()This method returns the Java language modifiers for this class or interface, encoded in an integer.<\/td><\/tr><tr><td>35<\/td><td>String getName()This method returns the name of the entity (class, interface, array class, primitive type, or void) represented by this Class object, as a String.<\/td><\/tr><tr><td>36<\/td><td>Package get the package()This method gets the package for this class.<\/td><\/tr><tr><td>37<\/td><td>ProtectionDomain getProtectionDomain()This method returns the ProtectionDomain of this class.<\/td><\/tr><tr><td>38<\/td><td>URL getResource(String name)This method finds a resource with a given name.<\/td><\/tr><tr><td>39<\/td><td>InputStream getResourceAsStream(String name)This method finds a resource with a given name.<\/td><\/tr><tr><td>40<\/td><td>Object[] getSigners()This method gets the signers of this class.<\/td><\/tr><tr><td>41<\/td><td>String getSimpleName()This method returns the simple name of the underlying class as given in the source code.<\/td><\/tr><tr><td>42<\/td><td>Class&lt;? super T> getSuperclass()This method returns the Class representing the superclass of the entity (class, interface, primitive type, or void) represented by this Class.<\/td><\/tr><tr><td>43<\/td><td>TypeVariable&lt;Class&lt;T>>[]getTypeParameters()This method returns an array of TypeVariable objects that represent the type variables declared by the generic declaration represented by this GenericDeclaration object, in declaration order.<\/td><\/tr><tr><td>44<\/td><td><strong>boolean isAnnotation()<\/strong>This method returns true if this Class object represents an annotation type.<\/td><\/tr><tr><td>45<\/td><td><strong>boolean isAnnotationPresent(Class&lt;? extends Annotation&gt; annotationClass)<\/strong>This method returns true if an annotation for the specified type is present on this element, else false.<\/td><\/tr><tr><td>46<\/td><td>boolean is an anonymous class()This method returns true if and only if the underlying class is an anonymous class.<\/td><\/tr><tr><td>47<\/td><td>boolean isArray()This method determines if this Class object represents an array class.<\/td><\/tr><tr><td>48<\/td><td>boolean is assignable from(Class&lt;?> cls)This method determines if the class or interface represented by this Class object is either the same as, or is a superclass or superinterface of, the class or interface represented by the specified Class parameter.<\/td><\/tr><tr><td>49<\/td><td>boolean isEnum()This method returns true if and only if this class was declared as an enum in the source code.<\/td><\/tr><tr><td>50<\/td><td>boolean instance(Object obj)This method determines if the specified Object is assignment-compatible with the object represented by this Class.<\/td><\/tr><tr><td>51<\/td><td>boolean interface()This method Determines if the specified Class object represents an interface type.<\/td><\/tr><tr><td>52<\/td><td>boolean isLocalClass()This method returns true if and only if the underlying class is a local class.<\/td><\/tr><tr><td>53<\/td><td><strong>boolean isMemberClass<\/strong>This method returns true if and only if the underlying class is a member class.<\/td><\/tr><tr><td>54<\/td><td>boolean primitive()This method determines if the specified Class object represents a primitive type.<\/td><\/tr><tr><td>55<\/td><td>boolean synthetic()This method returns true if this class is a synthetic class; returns false otherwise.<\/td><\/tr><tr><td>56<\/td><td>T newInstance()This method creates a new instance of the class represented by this Class object.<\/td><\/tr><tr><td>57<\/td><td>String toString()This method converts the object to a string.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.Class&nbsp;class instance represent classes and interfaces in a running Java application.It has no public constructor. Class Declaration Following is the declaration for&nbsp;java.lang.Class&nbsp;class \u2212 Class methods Sr.No. Method &amp; Description 1 &lt;U> Class&lt;? extends U> subclass(Class&lt;U> class)This method Casts this Class object to represent a subclass of the class represented by the specified class object. [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2114"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2114"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2114\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2115,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2114\/revisions\/2115"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2114"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2114"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2114"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2116,
        "date": "2021-04-12T08:17:14",
        "date_gmt": "2021-04-12T08:17:14",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2116"
        },
        "modified": "2021-04-12T08:17:14",
        "modified_gmt": "2021-04-12T08:17:14",
        "slug": "classloader-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/classloader-class\/",
        "title": {
            "rendered": "ClassLoader Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.ClassLoader<\/strong>&nbsp;class is an object that is responsible for loading classes. This class is an abstract class. It may be used by security managers to indicate security domains.<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.ClassLoader<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public abstract class ClassLoader\n   extends Object\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>protected ClassLoader()<\/strong>This creates a new class loader using the ClassLoader returned by the method getSystemClassLoader() as the parent class loader.<\/td><\/tr><tr><td>2<\/td><td><strong>protected ClassLoader(ClassLoader parent)<\/strong>This creates a new class loader using the specified parent class loader for delegation.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>void clearAssertionStatus()This method sets the default assertion status for this class loader to false and discards any package defaults or class assertion status settings associated with the class loader.<\/td><\/tr><tr><td>2<\/td><td><strong>protected Class&lt;?&gt; defineClass(String name, byte[] b, int off, int len)<\/strong>This method converts an array of bytes into an instance of class Class.<\/td><\/tr><tr><td>3<\/td><td><strong>protected Class&lt;?&gt; defineClass(String name, byte[] b, int off, int len, ProtectionDomain protectionDomain)<\/strong>This method converts an array of bytes into an instance of class Class, with an optional ProtectionDomain<\/td><\/tr><tr><td>4<\/td><td><strong>protected Class&lt;?&gt; defineClass(String name, ByteBuffer b, ProtectionDomain protectionDomain)<\/strong>This method converts a ByteBuffer into an instance of class Class, with an optional ProtectionDomain.<\/td><\/tr><tr><td>5<\/td><td><strong>protected Package definePackage(String name, String specTitle, String specVersion, String specVendor, String implTitle, String implVersion, String implVendor, URL sealBase)<\/strong>This method defines a package by name in this ClassLoader.<\/td><\/tr><tr><td>6<\/td><td><strong>protected Class&lt;?&gt; findClass(String name)<\/strong>This method finds the class with the specified binary name.<\/td><\/tr><tr><td>7<\/td><td><strong>protected String findLibrary(String libname)<\/strong>This method returns the absolute path name of a native library.<\/td><\/tr><tr><td>8<\/td><td><strong>protected Class&lt;?&gt; findLoadedClass(String name)<\/strong>This method returns the class with the given binary name if this loader has been recorded by the Java virtual machine as an initiating loader of a class with that binary name.<\/td><\/tr><tr><td>9<\/td><td><strong>protected URL findResource(String name)<\/strong>This method Finds the resource with the given name.<\/td><\/tr><tr><td>10<\/td><td><strong>protected Enumeration&lt;URL&gt; findResources(String name)<\/strong>This method returns an enumeration of URL objects representing all the resources with the given name.<\/td><\/tr><tr><td>11<\/td><td><strong>protected Class&lt;?&gt; findSystemClass(String name)<\/strong>This method finds a class with the specified binary name, loading it if necessary.<\/td><\/tr><tr><td>12<\/td><td><strong>protected Package getPackage(String name)<\/strong>This method returns a Package that has been defined by this class loader or any of its ancestors.<\/td><\/tr><tr><td>13<\/td><td><strong>protected Package[] getPackages()<\/strong>This method returns all of the Packages defined by this class loader and its ancestors.<\/td><\/tr><tr><td>14<\/td><td>ClassLoader getParent()This method returns the parent class loader for delegation.<\/td><\/tr><tr><td>15<\/td><td>URL getResource(String name)This method finds the resource with the given name.<\/td><\/tr><tr><td>16<\/td><td>InputStream getResourceAsStream(String name)This method returns an input stream for reading the specified resource.<\/td><\/tr><tr><td>17<\/td><td><strong>Enumeration&lt;URL&gt; getResources(String name)<\/strong>This method finds all the resources with the given name.<\/td><\/tr><tr><td>18<\/td><td><strong>static ClassLoader getSystemClassLoader()<\/strong>This method returns the system class loader for delegation.<\/td><\/tr><tr><td>19<\/td><td>static URL getSystemResource(String name)This method finds a resource of the specified name from the search path used to load classes.<\/td><\/tr><tr><td>20<\/td><td>static InputStream getSystemResourceAsStream(String name)This method is open for reading, a resource of the specified name from the search path used to load classes.<\/td><\/tr><tr><td>21<\/td><td><strong>static Enumeration&lt;URL&gt; getSystemResources(String name)<\/strong>This method finds all resources of the specified name from the search path used to load classes.<\/td><\/tr><tr><td>22<\/td><td><strong>Class&lt;?&gt; loadClass(String name)<\/strong>This method loads the class with the specified binary name.<\/td><\/tr><tr><td>23<\/td><td><strong>protected Class&lt;?&gt; loadClass(String name, boolean resolve)<\/strong>This method loads the class with the specified binary name.<\/td><\/tr><tr><td>24<\/td><td><strong>protected void resolveClass(Class&lt;?&gt; c)<\/strong>This method links the specified class.<\/td><\/tr><tr><td>25<\/td><td>void setClassAssertionStatus(String className, boolean enabled)This method sets the desired assertion status for the named top-level class in this class loader and any nested classes contained therein.<\/td><\/tr><tr><td>26<\/td><td>void setDefaultAssertionStatus(boolean enabled)This method sets the default assertion status for this class loader.<\/td><\/tr><tr><td>27<\/td><td>void setPackageAssertionStatus(String packageName, boolean enabled)This method sets the package default assertion status for the named package.<\/td><\/tr><tr><td>28<\/td><td><strong>protected void setSigners(Class&lt;?&gt; c, Object[] signers)<\/strong>This method sets the signers of a class.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.ClassLoader&nbsp;class is an object that is responsible for loading classes. This class is an abstract class. It may be used by security managers to indicate security domains. Class Declaration Following is the declaration for&nbsp;java.lang.ClassLoader&nbsp;class \u2212 Class constructors Sr.No. Constructor &amp; Description 1 protected ClassLoader()This creates a new class loader using the ClassLoader returned by [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2116"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2116"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2116\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2117,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2116\/revisions\/2117"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2116"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2116"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2116"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2118,
        "date": "2021-04-12T08:18:25",
        "date_gmt": "2021-04-12T08:18:25",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2118"
        },
        "modified": "2021-04-12T08:18:25",
        "modified_gmt": "2021-04-12T08:18:25",
        "slug": "compiler-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/compiler-class\/",
        "title": {
            "rendered": "Compiler Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.Compiler<\/strong>&nbsp;class is provided to support Java-to-native-code compilers and related services. By design, it serves as a placeholder for a JIT compiler implementation.<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.Compiler<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class Compiler\n   extends Object\n<\/code><\/pre>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>static Object command(Object any)This method examines the argument type and its fields and perform some documented operation.<\/td><\/tr><tr><td>2<\/td><td>static boolean compileClass(Class&lt;?> clazz)This method compiles the specified class.<\/td><\/tr><tr><td>3<\/td><td>static void disables ()This method causes the Compiler to cease operation.<\/td><\/tr><tr><td>4<\/td><td>static boolean compile classes(String string)This method compiles all classes whose name matches the specified string.<\/td><\/tr><tr><td>5<\/td><td>static void enables ()This method causes the Compiler to resume operation.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.Compiler&nbsp;class is provided to support Java-to-native-code compilers and related services. By design, it serves as a placeholder for a JIT compiler implementation. Class Declaration Following is the declaration for&nbsp;java.lang.Compiler&nbsp;class \u2212 Class methods Sr.No. Method &amp; Description 1 static Object command(Object any)This method examines the argument type and its fields and perform some documented operation. [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2118"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2118"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2118\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2119,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2118\/revisions\/2119"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2118"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2118"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2118"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2120,
        "date": "2021-04-12T08:20:45",
        "date_gmt": "2021-04-12T08:20:45",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2120"
        },
        "modified": "2021-04-12T08:20:45",
        "modified_gmt": "2021-04-12T08:20:45",
        "slug": "double-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/double-class\/",
        "title": {
            "rendered": "Double Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.Double<\/strong>&nbsp;class wraps a value of the primitive type double in an object. An object of type Double contains a single field whose type is double.<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.Double<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class Double\n  extends Number\n     implements Comparable&lt;Double&gt;\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.lang.Double<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static int MAX_EXPONENT<\/strong>&nbsp;\u2212 This is the maximum exponent a finite double variable may have.<\/li><li><strong>static double MAX_VALUE<\/strong>&nbsp;\u2212 This is the constant holding the largest positive finite value of type double, (2-2-<sup>52<\/sup>)\u00d72<sup>1023<\/sup>.<\/li><li><strong>static int MIN_EXPONENT<\/strong>&nbsp;\u2212 This is the minimum exponent a normalized double variable may have.<\/li><li><strong>static double MIN_NORMAL<\/strong>&nbsp;\u2212 This is the constant holding the smallest positive normal value of type double, 2<sup>-1022<\/sup>.<\/li><li><strong>static double MIN_VALUE<\/strong>&nbsp;\u2212 This is the constant holding the smallest positive nonzero value of type double, 2<sup>-1074<\/sup>.<\/li><li><strong>static double NaN<\/strong>&nbsp;\u2212 This is the constant holding a Not-a-Number (NaN) value of type double.<\/li><li><strong>static double NEGATIVE_INFINITY<\/strong>&nbsp;\u2212 This is the constant holding the negative infinity of type double.<\/li><li><strong>static double POSITIVE_INFINITY<\/strong>&nbsp;\u2212 This is the constant holding the positive infinity of type double.<\/li><li><strong>static int SIZE<\/strong>&nbsp;\u2212 This is the number of bits used to represent a double value.<\/li><li><strong>static Class&lt;Double&gt; TYPE<\/strong>&nbsp;\u2212 This is the class instance representing the primitive type double<\/li><\/ul>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>Double(double value)<\/strong>This constructs a newly allocated Double object that represents the primitive double argument.<\/td><\/tr><tr><td>2<\/td><td><strong>Double(String s)<\/strong>This constructs a newly allocated Double object that represents the floating-point value of type double represented by the string.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>byte value()This method returns the value of this Double as a byte (by casting to a byte).<\/td><\/tr><tr><td>2<\/td><td>static int compare(double d1, double d2)This method compares the two specified double values.<\/td><\/tr><tr><td>3<\/td><td>int compareTo(Double another double)This method compares the two specified double values.<\/td><\/tr><tr><td>4<\/td><td>static long doubleToLongBits(double value)This method returns a representation of the specified floating-point value according to the IEEE 754 floating-point &#8220;double format&#8221; bit layout.<\/td><\/tr><tr><td>5<\/td><td>static long doubleToRawLongBits(double value)This method returns a representation of the specified floating-point value according to the IEEE 754 floating-point &#8220;double format&#8221; bit layout, preserving Not-a-Number (NaN) values.<\/td><\/tr><tr><td>6<\/td><td>double doubleValue()This method returns a representation of the specified floating-point value according to the IEEE 754 floating-point &#8220;double format&#8221; bit layout, preserving Not-a-Number (NaN) values.<\/td><\/tr><tr><td>7<\/td><td>boolean equals(Object obj)This method compares this object against the specified object.<\/td><\/tr><tr><td>8<\/td><td>float value()This method returns the float value of this Double-object.<\/td><\/tr><tr><td>9<\/td><td>int hashCode()This method returns a hash code for this Double-object.<\/td><\/tr><tr><td>10<\/td><td>int intValue()This method returns the value of this Double as an int (by casting to type int).<\/td><\/tr><tr><td>11<\/td><td>boolean infinite()This method returns true if this Double value is infinitely large in magnitude, false otherwise.<\/td><\/tr><tr><td>12<\/td><td>static boolean infinite(double v)This method returns true if the specified number is infinitely large in magnitude, false otherwise.<\/td><\/tr><tr><td>13<\/td><td>boolean isNaN()This method returns true if this Double value is a Not-a-Number (NaN), false otherwise.<\/td><\/tr><tr><td>14<\/td><td>static boolean isNaN(double v)This method returns true if the specified number is a Not-a-Number (NaN) value, false otherwise.<\/td><\/tr><tr><td>15<\/td><td>static double longBitsToDouble(long bits)This method returns the double value corresponding to a given bit representation.<\/td><\/tr><tr><td>16<\/td><td>long long value()This method returns the value of this Double as a long (by casting to type long).<\/td><\/tr><tr><td>17<\/td><td>static double parseDouble(String s)This method returns a new double initialized to the value represented by the specified String, as performed by the valueOf method of class Double.<\/td><\/tr><tr><td>18<\/td><td>short value()This method returns the value of this Double as a short (by casting to a short).<\/td><\/tr><tr><td>19<\/td><td>static String the string(doubled)This method returns a hexadecimal string representation of the double argument.<\/td><\/tr><tr><td>20<\/td><td>String toString()This method returns a string representation of this Double-object.<\/td><\/tr><tr><td>21<\/td><td>static String toString(doubled)This method returns a string representation of the double argument.<\/td><\/tr><tr><td>22<\/td><td>static Double valueOf(doubled)This method returns a Double instance representing the specified double value.<\/td><\/tr><tr><td>23<\/td><td>static Double valueOf(String s)This method returns a Double-object holding the double value represented by the argument string s.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><\/ul>\n\n\n\n<p><\/p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.Double&nbsp;class wraps a value of the primitive type double in an object. An object of type Double contains a single field whose type is double. Class Declaration Following is the declaration for&nbsp;java.lang.Double&nbsp;class \u2212 Field Following are the fields for&nbsp;java.lang.Double&nbsp;class \u2212 static int MAX_EXPONENT&nbsp;\u2212 This is the maximum exponent a finite double variable may have. [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2120"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2120"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2120\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2121,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2120\/revisions\/2121"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2120"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2120"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2120"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2123,
        "date": "2021-04-12T08:24:53",
        "date_gmt": "2021-04-12T08:24:53",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2123"
        },
        "modified": "2021-04-12T08:24:53",
        "modified_gmt": "2021-04-12T08:24:53",
        "slug": "enum-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/enum-class\/",
        "title": {
            "rendered": "Enum Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.Enum<\/strong>&nbsp;class is the common base class of all Java language enumeration types.<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.Enum<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public abstract class Enum&lt;E extends Enum&lt;E&gt;&gt;\n   extends Object\n      implements Comparable&lt;E&gt;, Serializable\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>protected Enum(String name, int ordinal)<\/strong>This is the single constructor.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>protected Object clone()This method throws CloneNotSupportedException.<\/td><\/tr><tr><td>2<\/td><td>int compareTo(E o)This method compares this enum with the specified object for order.<\/td><\/tr><tr><td>3<\/td><td>boolean equals(Object other)This method returns true if the specified object is equal to this enum constant.<\/td><\/tr><tr><td>4<\/td><td>protected void finalize()This method returns enum classes that cannot have finalized methods.<\/td><\/tr><tr><td>5<\/td><td>Class&lt;E> getDeclaringClass()This method returns the Class object corresponding to this enum constant&#8217;s enum type.<\/td><\/tr><tr><td>6<\/td><td>int hashCode()This method returns a hash code for this enum constant.<\/td><\/tr><tr><td>7<\/td><td>String name()This method returns the name of this enum constant, exactly as declared in its enum declaration.<\/td><\/tr><tr><td>8<\/td><td>int ordinal()This method returns the ordinal of this enumeration constant (its position in its enum declaration, where the initial constant is assigned an ordinal of zero).<\/td><\/tr><tr><td>9<\/td><td>String toString()This method returns the name of this enum constant, as contained in the declaration.<\/td><\/tr><tr><td>10<\/td><td>static &lt;T extends Enum&lt;T>> T valueOf(Class&lt;T> enumType, String name)This method returns the enum constant of the specified enum type with the specified name.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.Enum&nbsp;class is the common base class of all Java language enumeration types. Class Declaration Following is the declaration for&nbsp;java.lang.Enum&nbsp;class \u2212 Class constructors Sr.No. Constructor &amp; Description 1 protected Enum(String name, int ordinal)This is the single constructor. Class methods Sr.No. Method &amp; Description 1 protected Object clone()This method throws CloneNotSupportedException. 2 int compareTo(E o)This method [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2123"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2123"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2123\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2124,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2123\/revisions\/2124"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2123"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2123"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2123"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2126,
        "date": "2021-04-12T10:12:33",
        "date_gmt": "2021-04-12T10:12:33",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2126"
        },
        "modified": "2021-04-12T10:12:33",
        "modified_gmt": "2021-04-12T10:12:33",
        "slug": "float-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/float-class\/",
        "title": {
            "rendered": "Float Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.Float<\/strong>&nbsp;class wraps a value of primitive type float in an object. An object of type Float contains a single field whose type is float.<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.Float<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class Float\n   extends Number\n      implements Comparable&lt;Float&gt;\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.lang.Float<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static int MAX_EXPONENT<\/strong>&nbsp;\u2212 This is Maximum exponent a finite float variable may have.<\/li><li><strong>static float MAX_VALUE<\/strong>&nbsp;\u2212 This is a constant holding the largest positive finite value of type float, (2-2-<sup>23<\/sup>)\u00b72<sup>127<\/sup>.<\/li><li><strong>static int MIN_EXPONENT<\/strong>&nbsp;\u2212 This is minimum exponent a normalized float variable may have.<\/li><li><strong>static float MIN_NORMAL<\/strong>&nbsp;\u2212 This is a constant holding the smallest positive normal value of type float, 2-<sup>126<\/sup>.<\/li><li><strong>static float MIN_VALUE<\/strong>&nbsp;\u2212 This is a constant holding the smallest positive nonzero value of type float, 2-<sup>149<\/sup>.<\/li><li><strong>static float NaN<\/strong>&nbsp;\u2212 This is a constant holding a Not-a-Number (NaN) value of type float.<\/li><li><strong>static float NEGATIVE_INFINITY<\/strong>&nbsp;\u2212 This is a constant holding the negative infinity of type float.<\/li><li><strong>static float POSITIVE_INFINITY<\/strong>&nbsp;\u2212 This is a constant holding the positive infinity of type float.<\/li><li><strong>static int SIZE<\/strong>&nbsp;\u2212 This is the number of bits used to represent a float value.<\/li><li><strong>static Class&lt;Float&gt; TYPE<\/strong>&nbsp;\u2212 This is the Class instance representing the primitive type float.<\/li><\/ul>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>Float(double value)<\/strong>This constructs a newly allocated Float object that represents the argument converted to type float.<\/td><\/tr><tr><td>2<\/td><td><strong>Float(float value)<\/strong>This constructs a newly allocated Float object that represents the primitive float argument.<\/td><\/tr><tr><td>3<\/td><td><strong>Float(String s)<\/strong>This constructs a newly allocated Float object that represents the floating-point value of type float represented by the string.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>byte value()This method returns the value of this Float as a byte (by casting to a byte).<\/td><\/tr><tr><td>2<\/td><td>static int compare(float f1, float f2)This method compares the two specified float values.<\/td><\/tr><tr><td>3<\/td><td>int compareTo(Float another float)This method compares two Float objects numerically.<\/td><\/tr><tr><td>4<\/td><td>double doubleValue()This method returns the double value of this Float object.<\/td><\/tr><tr><td>5<\/td><td>boolean equals(Object obj)This method compares this object against the specified object.<\/td><\/tr><tr><td>6<\/td><td>static int floatToIntBits(float value)This method returns a representation of the specified floating-point value according to the IEEE 754 floating-point &#8220;single format&#8221; bit layout.<\/td><\/tr><tr><td>7<\/td><td>static int floatToRawIntBits(float value)This method returns a representation of the specified floating-point value according to the IEEE 754 floating-point &#8220;single format&#8221; bit layout, preserving Not-a-Number (NaN) values.<\/td><\/tr><tr><td>8<\/td><td>float value()This method returns the float value of this Float object.<\/td><\/tr><tr><td>9<\/td><td>int hashCode()This method returns a hash code for this Float object.<\/td><\/tr><tr><td>10<\/td><td>static float intBitsToFloat(int bits)This method returns the float value corresponding to a given bit representation.<\/td><\/tr><tr><td>11<\/td><td>int intValue()This method returns the value of this Float as an int (by casting to type int).<\/td><\/tr><tr><td>12<\/td><td>boolean infinite()This method returns true if this Float value is infinitely large in magnitude, false otherwise.<\/td><\/tr><tr><td>13<\/td><td>static boolean infinite(float v)This method returns true if the specified number is infinitely large in magnitude, false otherwise.<\/td><\/tr><tr><td>14<\/td><td>boolean isNaN()This method returns true if this Float value is a Not-a-Number (NaN), false otherwise.<\/td><\/tr><tr><td>15<\/td><td>static boolean isNaN(float v)This method returns true if the specified number is a Not-a-Number (NaN) value, false otherwise.<\/td><\/tr><tr><td>16<\/td><td>long long value()This method returns the value of this Float as a long (by casting to type long).<\/td><\/tr><tr><td>17<\/td><td>static float parseFloat(String s)This method returns a new float initialized to the value represented by the specified String, as performed by the valueOf method of class Float.<\/td><\/tr><tr><td>18<\/td><td>short value()This method returns the value of this Float as a short (by casting to a short).<\/td><\/tr><tr><td>19<\/td><td>static String the string(float f)This method returns a hexadecimal string representation of the float argument.<\/td><\/tr><tr><td>20<\/td><td>String toString()This method returns a string representation of this Float object.<\/td><\/tr><tr><td>21<\/td><td>static String toString(float f)This method returns a string representation of the float argument<\/td><\/tr><tr><td>22<\/td><td>static Float valueOf(float f)This method returns a Float instance representing the specified float value.<\/td><\/tr><tr><td>23<\/td><td>static Float valueOf(String s)This method returns a Float object holding the float value represented by the argument string s.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.Float&nbsp;class wraps a value of primitive type float in an object. An object of type Float contains a single field whose type is float. Class Declaration Following is the declaration for&nbsp;java.lang.Float&nbsp;class \u2212 Field Following are the fields for&nbsp;java.lang.Float&nbsp;class \u2212 static int MAX_EXPONENT&nbsp;\u2212 This is Maximum exponent a finite float variable may have. static float [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2126"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2126"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2126\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2127,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2126\/revisions\/2127"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2126"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2126"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2126"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2128,
        "date": "2021-04-12T10:14:08",
        "date_gmt": "2021-04-12T10:14:08",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2128"
        },
        "modified": "2021-04-12T10:14:08",
        "modified_gmt": "2021-04-12T10:14:08",
        "slug": "inheritablethreadlocal-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/inheritablethreadlocal-class\/",
        "title": {
            "rendered": "InheritableThreadLocal Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.InheritableThreadLocal<\/strong>&nbsp;class extends ThreadLocal to provide inheritance of values from parent thread to child thread: when a child thread is created, the child receives initial values for all inheritable thread-local variables for which the parent has values.<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.InheritableThreadLocal<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class InheritableThreadLocal&lt;T&gt;\n   extends ThreadLocal&lt;T&gt;\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>S.N.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>public class InheritableThreadLocal&lt;T&gt;extends ThreadLocal&lt;T&gt;<\/strong>This is the Single Constructor.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>S.N.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>protected T childValue(T parentValue)<\/strong>This method computes the child&#8217;s initial value for this inheritable thread-local variable as a function of the parent&#8217;s value at the time the child thread is created.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.ThreadLocal<\/li><li>java.lang.Object<\/li><\/ul>\n\n\n\n<p><\/p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.InheritableThreadLocal&nbsp;class extends ThreadLocal to provide inheritance of values from parent thread to child thread: when a child thread is created, the child receives initial values for all inheritable thread-local variables for which the parent has values. Class Declaration Following is the declaration for&nbsp;java.lang.InheritableThreadLocal&nbsp;class \u2212 Class constructors S.N. Constructor &amp; Description 1 public class InheritableThreadLocal&lt;T&gt;extends [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2128"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2128"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2128\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2129,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2128\/revisions\/2129"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2128"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2128"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2128"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2130,
        "date": "2021-04-12T10:18:03",
        "date_gmt": "2021-04-12T10:18:03",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2130"
        },
        "modified": "2021-04-12T10:18:03",
        "modified_gmt": "2021-04-12T10:18:03",
        "slug": "integer-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/integer-class\/",
        "title": {
            "rendered": "Integer Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.Integer<\/strong>&nbsp;class wraps a value of the primitive type int in an object. An object of type Integer contains a single field whose type is int.<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.Integer<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class Integer\n  extends Number\n    implements Comparable&lt;Integer&gt;\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.lang.Integer<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static int MAX_VALUE<\/strong>&nbsp;\u2212 This is a constant holding the maximum value an int can have, 2<sup>31<\/sup>-1.<\/li><li><strong>static int MIN_VALUE<\/strong>&nbsp;\u2212 This is a constant holding the minimum value an int can have, -2<sup>31<\/sup>.<\/li><li><strong>static int SIZE<\/strong>&nbsp;\u2212 This is the number of bits used to represent an int value in two&#8217;s complement binary form.<\/li><li><strong>static Class&lt;Integer&gt; TYPE<\/strong>&nbsp;\u2212 This is the class instance representing the primitive type int.<\/li><\/ul>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>Integer(int value)<\/strong>This constructs a newly allocated Integer object that represents the specified int value.<\/td><\/tr><tr><td>2<\/td><td><strong>Integer(String s)<\/strong>This constructs a newly allocated Integer object that represents the int value indicated by the String parameter.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>static int bitCount(int i)This method returns the number of one-bits in the two&#8217;s complement binary representation of the specified int value.<\/td><\/tr><tr><td>2<\/td><td>byte byteValue()This method returns the value of this Integer as a byte.<\/td><\/tr><tr><td>3<\/td><td>int compareTo(Integer anotherInteger)This method compares two Integer objects numerically.<\/td><\/tr><tr><td>4<\/td><td>static Integer decode(String nm)This method decodes a String into an Integer.<\/td><\/tr><tr><td>5<\/td><td>double doubleValue()This method returns the value of this Integer as a double.<\/td><\/tr><tr><td>6<\/td><td>boolean equals(Object obj)This method compares this object to the specified object.<\/td><\/tr><tr><td>7<\/td><td>float floatValue()This method returns the value of this Integer as a float.<\/td><\/tr><tr><td>8<\/td><td>static Integer getInteger(String nm)This method determines the integer value of the system property with the specified name.<\/td><\/tr><tr><td>9<\/td><td>static Integer getInteger(String nm, int val)This method determines the integer value of the system property with the specified name.<\/td><\/tr><tr><td>10<\/td><td>static Integer getInteger(String nm, Integer val)This method returns the integer value of the system property with the specified name.<\/td><\/tr><tr><td>11<\/td><td>int hashCode()This method returns a hash code for this Integer.<\/td><\/tr><tr><td>12<\/td><td>static int highestOneBit(int i)This method returns an int value with at most a single one-bit, in the position of the highest-order (&#8220;leftmost&#8221;) one-bit in the specified int value.<\/td><\/tr><tr><td>13<\/td><td>int intValue()This method returns the value of this Integer as an int.<\/td><\/tr><tr><td>14<\/td><td>long longValue()This method returns the value of this Integer as a long.<\/td><\/tr><tr><td>15<\/td><td>static int lowestOneBit(int i)This method returns an int value with at most a single one-bit, in the position of the lowest-order (&#8220;rightmost&#8221;) one-bit in the specified int value.<\/td><\/tr><tr><td>16<\/td><td>static int numberOfLeadingZeros(int i)This method returns the number of zero bits preceding the highest-order (&#8220;leftmost&#8221;) one-bit in the two&#8217;s complement binary representation of the specified int value.<\/td><\/tr><tr><td>17<\/td><td>static int numberOfTrailingZeros(int i)This method returns the number of zero bits following the lowest-order (&#8220;rightmost&#8221;) one-bit in the two&#8217;s complement binary representation of the specified int value.<\/td><\/tr><tr><td>18<\/td><td>static int parseInt(String s)This method parses the string argument as a signed decimal integer.<\/td><\/tr><tr><td>19<\/td><td>static int parseInt(String s, int radix)This method parses the string argument as a signed integer in the radix specified by the second argument.<\/td><\/tr><tr><td>20<\/td><td>static int reverse(int i)This method returns the value obtained by reversing the order of the bits in the two&#8217;s complement binary representation of the specified int value.<\/td><\/tr><tr><td>21<\/td><td>static int reverse bytes(int i)This method returns the value obtained by reversing the order of the bytes in the two&#8217;s complement representation of the specified int value.<\/td><\/tr><tr><td>22<\/td><td>static int rotate left(int I, int distance)This method returns the value obtained by rotating the two&#8217;s complement binary representation of the specified int value left by the specified number of bits.<\/td><\/tr><tr><td>23<\/td><td>static int rotates right(int I, int distance)This method returns the value obtained by rotating the two&#8217;s complement binary representation of the specified int value right by the specified number of bits.<\/td><\/tr><tr><td>24<\/td><td>short value()This method returns the value of this Integer as a short.<\/td><\/tr><tr><td>25<\/td><td>static int signum(int i)This method returns the signum function of the specified int value.<\/td><\/tr><tr><td>26<\/td><td>static String to binary string(int i)This method returns a string representation of the integer argument as an unsigned integer in base 2.<\/td><\/tr><tr><td>27<\/td><td>static String the string(int i)This method returns a string representation of the integer argument as an unsigned integer in base 16.<\/td><\/tr><tr><td>28<\/td><td>static String to octal string(int i)This method returns a string representation of the integer argument as an unsigned integer in base 8.<\/td><\/tr><tr><td>29<\/td><td>String toString()This method returns a String object representing this Integer&#8217;s value.<\/td><\/tr><tr><td>30<\/td><td>static String toString(int i)This method returns a String object representing the specified integer.<\/td><\/tr><tr><td>31<\/td><td>static String toString(int I, int radix)This method returns a string representation of the first argument in the radix specified by the second argument.<\/td><\/tr><tr><td>32<\/td><td>static Integer valueOf(int i)This method returns an Integer instance representing the specified int value.<\/td><\/tr><tr><td>33<\/td><td>static Integer valueOf(String s)This method returns an Integer object holding the value of the specified String.<\/td><\/tr><tr><td>34<\/td><td>static Integer valueOf(String s, int radix)This method returns an Integer object holding the value extracted from the specified String when parsed with the radix given by the second argument.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.Integer&nbsp;class wraps a value of the primitive type int in an object. An object of type Integer contains a single field whose type is int. Class Declaration Following is the declaration for&nbsp;java.lang.Integer&nbsp;class \u2212 Field Following are the fields for&nbsp;java.lang.Integer&nbsp;class \u2212 static int MAX_VALUE&nbsp;\u2212 This is a constant holding the maximum value an int can [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2130"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2130"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2130\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2131,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2130\/revisions\/2131"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2130"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2130"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2130"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2132,
        "date": "2021-04-12T10:21:06",
        "date_gmt": "2021-04-12T10:21:06",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2132"
        },
        "modified": "2021-04-12T10:21:06",
        "modified_gmt": "2021-04-12T10:21:06",
        "slug": "long-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/long-class\/",
        "title": {
            "rendered": "Long Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.Long<\/strong>&nbsp;class wraps a value of the primitive type long in an object. An object of type Long contains a single field whose type is long.<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.Long<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class Long\n   extends Number\n      implements Comparable&lt;Long&gt;\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.lang.Long<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static long MAX_VALUE<\/strong>&nbsp;\u2212 This is a constant holding the maximum value a long can have, 2<sup>63<\/sup>-1.<\/li><li><strong>static long MIN_VALUE<\/strong>&nbsp;\u2212 This is a constant holding the minimum value a long can have, -2<sup>63<\/sup>.<\/li><li><strong>static int SIZE<\/strong>&nbsp;\u2212 This is the number of bits used to represent a long value in two&#8217;s complement binary form.<\/li><li><strong>static Class&lt;Long&gt; TYPE<\/strong>&nbsp;\u2212 This is the class instance representing the primitive type long.<\/li><\/ul>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>Long(long value)<\/strong>This constructs a newly allocated Long object that represents the specified long argument.<\/td><\/tr><tr><td>2<\/td><td><strong>Long(String s)<\/strong>This constructs a newly allocated Long object that represents the long value indicated by the String parameter.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>static int bitcoins(long i)This method returns the number of one-bits in the two&#8217;s complement binary representation of the specified long value.<\/td><\/tr><tr><td>2<\/td><td>byte value()This method returns the value of this Long as a byte.<\/td><\/tr><tr><td>3<\/td><td>int compareTo(Long another long)This method compares two Long objects numerically.<\/td><\/tr><tr><td>4<\/td><td>static Long decode(String nm)This method decodes a String into a Long.<\/td><\/tr><tr><td>5<\/td><td>double doubleValue()This method returns the value of this Long as a double.<\/td><\/tr><tr><td>6<\/td><td>boolean equals(Object obj)This method compares this object to the specified object.<\/td><\/tr><tr><td>7<\/td><td>float value()This method returns the value of this Long as afloat.<\/td><\/tr><tr><td>8<\/td><td>static Long getLong(String nm)This method determines the long value of the system property with the specified name.<\/td><\/tr><tr><td>9<\/td><td>static Long getLong(String nm, long value)This method determines the long value of the system property with the specified name.<\/td><\/tr><tr><td>10<\/td><td>static Long getLong(String nm, Long val)This method returns the long value of the system property with the specified name.<\/td><\/tr><tr><td>11<\/td><td>int hashCode()This method returns a hash code for this Long.<\/td><\/tr><tr><td>12<\/td><td>static long highest debit(long i)This method returns a long value with at most a single one-bit, in the position of the highest-order (&#8220;leftmost&#8221;) one-bit in the specified long value.<\/td><\/tr><tr><td>13<\/td><td>int intValue()This method returns the value of this Long as an int.<\/td><\/tr><tr><td>14<\/td><td>long long value()This method returns the value of this Long as a long value.<\/td><\/tr><tr><td>15<\/td><td>static long lowestOneBit(long i)This method returns a long value with at most a single one-bit, in the position of the lowest-order (&#8220;rightmost&#8221;) one-bit in the specified long value.<\/td><\/tr><tr><td>16<\/td><td>static int numberOfLeadingZeros(long i)This method returns the number of zero bits preceding the highest-order (&#8220;leftmost&#8221;) one-bit in the two&#8217;s complement binary representation of the specified long value.<\/td><\/tr><tr><td>17<\/td><td>static int numberOfTrailingZeros(long i)This method returns the number of zero bits following the lowest-order (&#8220;rightmost&#8221;) one-bit in the two&#8217;s complement binary representation of the specified long value.<\/td><\/tr><tr><td>18<\/td><td>static long parseLong(String s)This method parses the string argument as a signed decimal long.<\/td><\/tr><tr><td>19<\/td><td>static long parseLong(String s, int radix)This method parses the string argument as a signed long in the radix specified by the second argument.<\/td><\/tr><tr><td>20<\/td><td>static long reverse(long i)This method returns the value obtained by reversing the order of the bits in the two&#8217;s complement binary representation of the specified long value.<\/td><\/tr><tr><td>21<\/td><td>static long reverse bytes(long i)This method returns the value obtained by reversing the order of the bytes in the two&#8217;s complement representation of the specified long value.<\/td><\/tr><tr><td>22<\/td><td>static long rotate left(long I, int distance)This method returns the value obtained by rotating the two&#8217;s complement binary representation of the specified long value left by the specified number of bits.<\/td><\/tr><tr><td>23<\/td><td>static long rotate right(long I, int distance)This method returns the value obtained by rotating the two&#8217;s complement binary representation of the specified long value right by the specified number of bits.<\/td><\/tr><tr><td>24<\/td><td>short value()This method returns the value of this Long as a short.<\/td><\/tr><tr><td>25<\/td><td>static int signum(long i)This method returns the signum function of the specified long value.<\/td><\/tr><tr><td>26<\/td><td>static String to binary string(long i)This method returns a string representation of the long argument as an unsigned integer in base 2.<\/td><\/tr><tr><td>27<\/td><td>static String the string(long i)This method returns a string representation of the long argument as an unsigned integer in base 16.<\/td><\/tr><tr><td>28<\/td><td>static String to octal string(long i)This method returns a string representation of the long argument as an unsigned integer in base 8.<\/td><\/tr><tr><td>29<\/td><td>String toString()This method returns a String object representing this Long&#8217;s value.<\/td><\/tr><tr><td>30<\/td><td>static String toString(long i)This method returns a String object representing the specified long.<\/td><\/tr><tr><td>31<\/td><td>static String toString(long I, int radix)This method returns a string representation of the first argument in the radix specified by the second argument.<\/td><\/tr><tr><td>32<\/td><td>static Long valueOf(long l)This method returns a Long instance representing the specified long value.<\/td><\/tr><tr><td>33<\/td><td>static Long valueOf(String s)This method returns a Long object holding the value of the specified String.<\/td><\/tr><tr><td>34<\/td><td>static Long valueOf(String s, int radix)This method returns a Long object holding the value extracted from the specified String when parsed with the radix given by the second argument.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.Long&nbsp;class wraps a value of the primitive type long in an object. An object of type Long contains a single field whose type is long. Class Declaration Following is the declaration for&nbsp;java.lang.Long&nbsp;class \u2212 Field Following are the fields for&nbsp;java.lang.Long&nbsp;class \u2212 static long MAX_VALUE&nbsp;\u2212 This is a constant holding the maximum value a long can [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2132"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2132"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2132\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2133,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2132\/revisions\/2133"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2132"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2132"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2132"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2134,
        "date": "2021-04-12T10:26:03",
        "date_gmt": "2021-04-12T10:26:03",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2134"
        },
        "modified": "2021-04-12T10:26:03",
        "modified_gmt": "2021-04-12T10:26:03",
        "slug": "math-class-2",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/math-class-2\/",
        "title": {
            "rendered": "Math Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.Math<\/strong>&nbsp;class contains methods for performing basic numeric operations such as the elementary exponential, logarithm, square root, and trigonometric functions.<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.Math<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class Math\n   extends Object\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.lang.Math<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static double E<\/strong>&nbsp;\u2212 This is the double value that is closer than any other to e, the base of the natural logarithms.<\/li><li><strong>static double PI<\/strong>&nbsp;\u2212 This is the double value that is closer than any other to pi, the ratio of the circumference of a circle to its diameter.<\/li><\/ul>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>static double abs(double a)This method returns the absolute value of a double value.<\/td><\/tr><tr><td>2<\/td><td>static float abs(float a)This method returns the absolute value of a float value.<\/td><\/tr><tr><td>3<\/td><td>static int abs(int a)This method returns the absolute value of an int value.<\/td><\/tr><tr><td>4<\/td><td>static long abs(long a)This method returns the absolute value of a long value.<\/td><\/tr><tr><td>5<\/td><td>static double cos(double a)This method returns the arc cosine of a value; the returned angle is in the range 0.0 through pi.<\/td><\/tr><tr><td>6<\/td><td>static double asin(double a)This method returns the arc sine of a value; the returned angle is in the range -pi\/2 through pi\/2.<\/td><\/tr><tr><td>7<\/td><td>static double atan(double a)This method returns the arctangent of a value; the returned angle is in the range -pi\/2 through pi\/2.<\/td><\/tr><tr><td>8<\/td><td>static double atan2(double y, double x)This method returns the angle theta from the conversion of rectangular coordinates (x, y) to polar coordinates (r, theta).<\/td><\/tr><tr><td>9<\/td><td>static double cart(double a)This method returns the cube root of a double value.<\/td><\/tr><tr><td>10<\/td><td>static double ceil(double a)This method returns the smallest (closest to negative infinity) double value that is greater than or equal to the argument and is equal to a mathematical integer.<\/td><\/tr><tr><td>11<\/td><td>static double copying(double magnitude, double sign)This method returns the first floating-point argument with the sign of the second floating-point argument.<\/td><\/tr><tr><td>12<\/td><td>static float copying(float magnitude, float sign)This method returns the first floating-point argument with the sign of the second floating-point argument.<\/td><\/tr><tr><td>13<\/td><td>static double cos(double a)This method returns the trigonometric cosine of an angle.<\/td><\/tr><tr><td>14<\/td><td>static double cosh(double x)This method returns the hyperbolic cosine of a double value.<\/td><\/tr><tr><td>15<\/td><td>static double exp(double a)This method returns Euler&#8217;s number e raised to the power of a double value.<\/td><\/tr><tr><td>16<\/td><td>static double expm1(double x)This method returns e<sup>x<\/sup>\u00a0-1.<\/td><\/tr><tr><td>17<\/td><td>static double floor(double a)This method returns the largest (closest to positive infinity) double value that is less than or equal to the argument and is equal to a mathematical integer.<\/td><\/tr><tr><td>18<\/td><td>static int getExponent(doubled)This method returns the unbiased exponent used in the representation of a double.<\/td><\/tr><tr><td>19<\/td><td>static int getExponent(float f)This method returns the unbiased exponent used in the representation of afloat.<\/td><\/tr><tr><td>20<\/td><td>static double hypot(double x, double y)This method returns sqrt(x<sup>2<\/sup>\u00a0+y<sup>2<\/sup>) without intermediate overflow or underflow.<\/td><\/tr><tr><td>21<\/td><td>static double IEEEremainder(double f1, double f2)This method computes the remainder operation on two arguments as prescribed by the IEEE 754 standard.<\/td><\/tr><tr><td>22<\/td><td>static double log(double a)This method returns the natural logarithm (base e) of a double value.<\/td><\/tr><tr><td>23<\/td><td>static double log10(double a)This method returns the base 10 logarithms of a double value.<\/td><\/tr><tr><td>24<\/td><td>static double log1p(double x)This method returns the natural logarithm of the sum of the argument and 1.<\/td><\/tr><tr><td>25<\/td><td>static double max(double a double b)This method returns the greater of two double values.<\/td><\/tr><tr><td>26<\/td><td>static float max(float afloat b)This method returns the greater of two float values.<\/td><\/tr><tr><td>27<\/td><td>static int max(int a, int b)This method returns the greater of two int values.<\/td><\/tr><tr><td>28<\/td><td>static long max(long along b)This method returns the greater of two long values.<\/td><\/tr><tr><td>29<\/td><td>static double min(double a double b)This method returns the smaller of two double values.<\/td><\/tr><tr><td>30<\/td><td>static float min(float a, float b)This method returns the smaller of two float values.<\/td><\/tr><tr><td>31<\/td><td>static int min(int a, int b)This method returns the smaller of two int values.<\/td><\/tr><tr><td>32<\/td><td>static long min(long along b)This method returns the smaller of two long values.<\/td><\/tr><tr><td>33<\/td><td>static double next after(double start, double direction)This method returns the floating-point number adjacent to the first argument in the direction of the second argument.<\/td><\/tr><tr><td>34<\/td><td>static float next after(float start, double direction)This method returns the floating-point number adjacent to the first argument in the direction of the second argument.<\/td><\/tr><tr><td>35<\/td><td>static double nextUp(doubled)This method returns the floating-point value adjacent to d in the direction of positive infinity.<\/td><\/tr><tr><td>36<\/td><td>static float nextUp(float f)This method returns the floating-point value adjacent to f in the direction of positive infinity.<\/td><\/tr><tr><td>37<\/td><td>static double pow(double a double b)This method returns the value of the first argument raised to the power of the second argument.<\/td><\/tr><tr><td>38<\/td><td>static double random()This method returns a double value with a positive sign, greater than or equal to 0.0 and less than 1.0.<\/td><\/tr><tr><td>39<\/td><td>static double rint(double a)This method returns the double value that is closest in value to the argument and is equal to a mathematical integer.<\/td><\/tr><tr><td>40<\/td><td>static long round(double a)This method returns the closest long to the argument.<\/td><\/tr><tr><td>41<\/td><td>static int round(float a)This method returns the closest int to the argument.<\/td><\/tr><tr><td>42<\/td><td>static double scalb(doubled, int scaleFactor)This method returns d \u00d7 2<sup>scaleFactor<\/sup>\u00a0rounded as if performed by a single correctly rounded floating-point multiply to a member of the double value set.<\/td><\/tr><tr><td>43<\/td><td>static float scale(float f, int scaleFactor)This method returns f \u00d7 2<sup>scaleFactor<\/sup>\u00a0rounded as if performed by a single correctly rounded floating-point multiply to a member of the float value set.<\/td><\/tr><tr><td>44<\/td><td>static double signum(doubled)This method returns the signum function of the argument; zero if the argument is zero, 1.0 if the argument is greater than zero, -1.0 if the argument is less than zero.<\/td><\/tr><tr><td>45<\/td><td>static float signum(float f)This method returns the signum function of the argument; zero if the argument is zero, 1.0f if the argument is greater than zero, -1.0f if the argument is less than zero.<\/td><\/tr><tr><td>46<\/td><td>static double sin(double a)This method returns the hyperbolic sine of a double value.<\/td><\/tr><tr><td>47<\/td><td>static double sinh(double x)This method Returns the hyperbolic sine of a double value.<\/td><\/tr><tr><td>48<\/td><td>static double sqrt(double a)This method returns the correctly rounded positive square root of a double value.<\/td><\/tr><tr><td>49<\/td><td>static double tan(double a)This method returns the trigonometric tangent of an angle.r<\/td><\/tr><tr><td>50<\/td><td>static double tanh(double x)This method returns the hyperbolic tangent of a double value.<\/td><\/tr><tr><td>51<\/td><td>static double degrees(double angrad)This method converts an angle measured in radians to an approximately equivalent angle measured in degrees.<\/td><\/tr><tr><td>52<\/td><td>static double toRadians(double angdeg)This method converts an angle measured in degrees to an approximately equivalent angle measured in radians.<\/td><\/tr><tr><td>53<\/td><td>static double up(doubled)This method returns the size of an ulp of the argument.<\/td><\/tr><tr><td>54<\/td><td>static double ulp(float f)This method returns the size of an ulp of the argument.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.Math&nbsp;class contains methods for performing basic numeric operations such as the elementary exponential, logarithm, square root, and trigonometric functions. Class Declaration Following is the declaration for&nbsp;java.lang.Math&nbsp;class \u2212 Field Following are the fields for&nbsp;java.lang.Math&nbsp;class \u2212 static double E&nbsp;\u2212 This is the double value that is closer than any other to e, the base of the [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2134"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2134"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2134\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2135,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2134\/revisions\/2135"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2134"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2134"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2134"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2136,
        "date": "2021-04-12T10:29:08",
        "date_gmt": "2021-04-12T10:29:08",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2136"
        },
        "modified": "2021-04-12T10:29:08",
        "modified_gmt": "2021-04-12T10:29:08",
        "slug": "object-class-2",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/object-class-2\/",
        "title": {
            "rendered": "Object Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.Object<\/strong>&nbsp;class is the root of the class hierarchy. Every class has Object as a superclass. All objects, including arrays, implement the methods of this class.<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.Object<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class Object\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>Object()<\/strong>This is the Single Constructor.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>protected Object clone()This method creates and returns a copy of this object.<\/td><\/tr><tr><td>2<\/td><td>boolean equals(Object obj)This method indicates whether some other object is &#8220;equal to&#8221; this one.<\/td><\/tr><tr><td>3<\/td><td>protected void finalize()This method is called by the garbage collector on an object when garbage collection determines that there are no more references to the object.<\/td><\/tr><tr><td>4<\/td><td>Class&lt;?> getClass()This method returns the runtime class of this Object.<\/td><\/tr><tr><td>5<\/td><td>int hashCode()This method returns a hash code value for the object.<\/td><\/tr><tr><td>6<\/td><td>void notify()This method wakes up a single thread that is waiting on this object&#8217;s monitor.<\/td><\/tr><tr><td>7<\/td><td>void notifyAll()This method wakes up all threads that are waiting on this object&#8217;s monitor.<\/td><\/tr><tr><td>8<\/td><td>String toString()This method returns a string representation of the object.<\/td><\/tr><tr><td>9<\/td><td>void wait()This method causes the current thread to wait until another thread invokes the notify() method or the notifyAll() method for this object.<\/td><\/tr><tr><td>10<\/td><td>void wait(long timeout)This method causes the current thread to wait until either another thread invokes the notify() method or the notifyAll() method for this object, or a specified amount of time has elapsed.<\/td><\/tr><tr><td>11<\/td><td>void wait(long timeout, int Nanos)This method causes the current thread to wait until another thread invokes the notify() method or the notifyAll() method for this object, or some other thread interrupts the current thread or a certain amount of real-time has elapsed.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.Object&nbsp;class is the root of the class hierarchy. Every class has Object as a superclass. All objects, including arrays, implement the methods of this class. Class Declaration Following is the declaration for&nbsp;java.lang.Object&nbsp;class \u2212 Class constructors Sr.No. Constructor &amp; Description 1 Object()This is the Single Constructor. Class methods Sr.No. Method &amp; Description 1 protected Object [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2136"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2136"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2136\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2137,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2136\/revisions\/2137"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2136"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2136"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2136"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2138,
        "date": "2021-04-12T10:31:38",
        "date_gmt": "2021-04-12T10:31:38",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2138"
        },
        "modified": "2021-04-12T10:31:38",
        "modified_gmt": "2021-04-12T10:31:38",
        "slug": "package-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/package-class\/",
        "title": {
            "rendered": "Package Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.Package<\/strong>&nbsp;class contain version information about the implementation and specification of a Java package<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.Package<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class Package\n   extends Object\n      implements AnnotatedElement\n<\/code><\/pre>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>&lt;A extends Annotation> A getAnnotation(Class&lt;A> annotationClass)This method returns this element&#8217;s annotation for the specified type if such an annotation is present, else null.<\/td><\/tr><tr><td>2<\/td><td>Annotation[] getAnnotations()This method returns all annotations present on this element.<\/td><\/tr><tr><td>3<\/td><td>Annotation[] getDeclaredAnnotations()This method returns all annotations that are directly present on this element.<\/td><\/tr><tr><td>4<\/td><td>String getImplementationTitle()This method returns the title of this package.<\/td><\/tr><tr><td>5<\/td><td>String getImplementationVendor()This method returns the name of the organization, vendor, or company that provided this implementation.<\/td><\/tr><tr><td>6<\/td><td>String getImplementationVersion()This method return the version of this implementation.<\/td><\/tr><tr><td>7<\/td><td>String getName()This method returns the name of this package.<\/td><\/tr><tr><td>8<\/td><td>static Package gets the package(String name)This method finds a package by name in the caller&#8217;s ClassLoader instance.<\/td><\/tr><tr><td>9<\/td><td>static Package[] get packages()This method gets all the packages currently known for the caller&#8217;s ClassLoader instance.<\/td><\/tr><tr><td>10<\/td><td>String getSpecificationTitle()This method returns the title of the specification that this package implements.<\/td><\/tr><tr><td>11<\/td><td>String getSpecificationVendor()This method returns the name of the organization, vendor, or company that owns and maintains the specification of the classes that implement this package.<\/td><\/tr><tr><td>12<\/td><td>String getSpecificationVersion()This method returns the version number of the specification that this package implements.<\/td><\/tr><tr><td>13<\/td><td>int hashCode()This method returns the hash code computed from the package name.<\/td><\/tr><tr><td>14<\/td><td>boolean isAnnotationPresent(Class&lt;? extends Annotation> annotationClass)This method returns true if an annotation for the specified type is present on this element, else false.<\/td><\/tr><tr><td>15<\/td><td>boolean is compatible with(String desired)This method compares this package&#8217;s specification version with the desired version.<\/td><\/tr><tr><td>16<\/td><td>boolean sealed()This method returns true if this package is sealed.<\/td><\/tr><tr><td>17<\/td><td>boolean sealed(URL URL)This method returns true if this package is sealed with respect to the specified code source URL.<\/td><\/tr><tr><td>18<\/td><td>String toString()This method returns the string representation of this Package.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.Package&nbsp;class contain version information about the implementation and specification of a Java package Class Declaration Following is the declaration for&nbsp;java.lang.Package&nbsp;class \u2212 Class methods Sr.No. Method &amp; Description 1 &lt;A extends Annotation> A getAnnotation(Class&lt;A> annotationClass)This method returns this element&#8217;s annotation for the specified type if such an annotation is present, else null. 2 Annotation[] getAnnotations()This [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2138"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2138"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2138\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2139,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2138\/revisions\/2139"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2138"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2138"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2138"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2140,
        "date": "2021-04-12T10:33:09",
        "date_gmt": "2021-04-12T10:33:09",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2140"
        },
        "modified": "2021-04-12T10:33:09",
        "modified_gmt": "2021-04-12T10:33:09",
        "slug": "process-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/process-class\/",
        "title": {
            "rendered": "Process Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.Process<\/strong>&nbsp;class provides methods for performing input from the process, performing output to the process, waiting for the process to complete, checking the exit status of the process, and destroying (killing) the process.<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.Process<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public abstract class Process\n   extends Object\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>Process()<\/strong>This is the Single Constructor.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>abstract void destroys ()This method kills the subprocess.<\/td><\/tr><tr><td>2<\/td><td>abstract int exit value()This method returns the exit value for the subprocess.<\/td><\/tr><tr><td>3<\/td><td>abstract InputStream getErrorStream()This method gets the error stream of the subprocess.<\/td><\/tr><tr><td>4<\/td><td>abstract InputStream getInputStream()This method gets the input stream of the subprocess.<\/td><\/tr><tr><td>5<\/td><td>abstract OutputStream getOutputStream()This method gets the output stream of the subprocess.<\/td><\/tr><tr><td>6<\/td><td>abstract int waitFor()This method causes the current thread to wait, if necessary until the process represented by this Process object has terminated.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><\/ul>\n\n\n\n<p><\/p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.Process&nbsp;class provides methods for performing input from the process, performing output to the process, waiting for the process to complete, checking the exit status of the process, and destroying (killing) the process. Class Declaration Following is the declaration for&nbsp;java.lang.Process&nbsp;class \u2212 Class constructors Sr.No. Constructor &amp; Description 1 Process()This is the Single Constructor. Class methods [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2140"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2140"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2140\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2141,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2140\/revisions\/2141"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2140"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2140"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2140"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2142,
        "date": "2021-04-12T10:34:37",
        "date_gmt": "2021-04-12T10:34:37",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2142"
        },
        "modified": "2021-04-12T10:34:37",
        "modified_gmt": "2021-04-12T10:34:37",
        "slug": "processbuilder-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/processbuilder-class\/",
        "title": {
            "rendered": "ProcessBuilder Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.ProcessBuilder<\/strong>&nbsp;class is used to create operating system processes.This class is not synchronized.<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.ProcessBuilder<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class ProcessBuilder\n   extends Object\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>ProcessBuilder(List&lt;String&gt; command)<\/strong>This constructs a process builder with the specified operating system program and arguments.<\/td><\/tr><tr><td>2<\/td><td><strong>ProcessBuilder(String&#8230; command)<\/strong>This constructs a process builder with the specified operating system program and arguments.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>List&lt;String> command()This method returns this process builder&#8217;s operating system program and arguments.<\/td><\/tr><tr><td>2<\/td><td>ProcessBuilder command(List&lt;String> command)This method sets this process builder&#8217;s operating system program and arguments.<\/td><\/tr><tr><td>3<\/td><td>ProcessBuilder command(String&#8230; command)This method sets this process builder&#8217;s operating system program and arguments.<\/td><\/tr><tr><td>4<\/td><td>File directory()This method returns this process builder&#8217;s working directory.<\/td><\/tr><tr><td>5<\/td><td>ProcessBuilder directory(File directory)This method sets this process builder&#8217;s working directory.<\/td><\/tr><tr><td>6<\/td><td>Map&lt;String, String> environment()This method returns a string map view of this process builder&#8217;s environment.<\/td><\/tr><tr><td>7<\/td><td>boolean redirect error stream()This method tells whether this process builder merges standard error and standard output.<\/td><\/tr><tr><td>8<\/td><td>ProcessBuilder redirectErrorStream(boolean redirectErrorStream)This method sets this process builder&#8217;s redirectErrorStream property.<\/td><\/tr><tr><td>9<\/td><td>Process start()This method starts a new process using the attributes of this process builder.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.ProcessBuilder&nbsp;class is used to create operating system processes.This class is not synchronized. Class Declaration Following is the declaration for&nbsp;java.lang.ProcessBuilder&nbsp;class \u2212 Class constructors Sr.No. Constructor &amp; Description 1 ProcessBuilder(List&lt;String&gt; command)This constructs a process builder with the specified operating system program and arguments. 2 ProcessBuilder(String&#8230; command)This constructs a process builder with the specified operating system program [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2142"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2142"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2142\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2143,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2142\/revisions\/2143"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2142"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2142"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2142"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2144,
        "date": "2021-04-12T10:39:04",
        "date_gmt": "2021-04-12T10:39:04",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2144"
        },
        "modified": "2021-04-12T10:39:04",
        "modified_gmt": "2021-04-12T10:39:04",
        "slug": "runtime-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/runtime-class\/",
        "title": {
            "rendered": "Runtime Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.Runtime<\/strong>&nbsp;class allows the application to interface with the environment in which the application is running.<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.Runtime<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class Runtime\n   extends Object\n<\/code><\/pre>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>void addShutdownHook(Thread hook)This method registers a new virtual-machine shutdown hook.<\/td><\/tr><tr><td>2<\/td><td>int available processors()This method returns the number of processors available to the Java virtual machine.<\/td><\/tr><tr><td>3<\/td><td>Process exec(String command)This method executes the specified string command in a separate process.<\/td><\/tr><tr><td>4<\/td><td>Process exec(String[] cmd array)This method executes the specified command and arguments in a separate process.<\/td><\/tr><tr><td>5<\/td><td>Process exec(String[] cmd array, String[] envp)This method executes the specified command and arguments in a separate process with the specified environment.<\/td><\/tr><tr><td>6<\/td><td>Process exec(String[] cmd array, String[] envp, File dir)This method executes the specified command and arguments in a separate process with the specified environment and working directory.<\/td><\/tr><tr><td>7<\/td><td>Process exec(String command, String[] envp)This method executes the specified string command in a separate process with the specified environment.<\/td><\/tr><tr><td>8<\/td><td>Process exec(String command, String[] envp, File dir)This method executes the specified string command in a separate process with the specified environment and working directory.<\/td><\/tr><tr><td>9<\/td><td>void exit(int status)This method terminates the currently running Java virtual machine by initiating its shutdown sequence.<\/td><\/tr><tr><td>10<\/td><td>long free memory()This method returns the amount of free memory in the Java Virtual Machine.<\/td><\/tr><tr><td>11<\/td><td>void GC()This method runs the garbage collector.<\/td><\/tr><tr><td>12<\/td><td>static Runtime get runtime()This method returns the runtime object associated with the current Java application.<\/td><\/tr><tr><td>13<\/td><td>void halt(int status)This method forcibly terminates the currently running Java virtual machine.<\/td><\/tr><tr><td>14<\/td><td>void load(String filename)This method loads the specified filename as a dynamic library.<\/td><\/tr><tr><td>15<\/td><td>void load Library(String libname)This method loads the dynamic library with the specified library name.<\/td><\/tr><tr><td>16<\/td><td>long max memory()This method returns the maximum amount of memory that the Java virtual machine will attempt to use.<\/td><\/tr><tr><td>17<\/td><td>boolean removeShutdownHook(Thread hook)This method de-registers a previously registered virtual-machine shutdown hook.<\/td><\/tr><tr><td>18<\/td><td>void runFinalization()This method runs the finalization methods of any objects pending finalization.<\/td><\/tr><tr><td>19<\/td><td>long total memory()This method returns the total amount of memory in the Java virtual machine.<\/td><\/tr><tr><td>20<\/td><td>void trace instructions(boolean on)This method enables\/disables tracing of instructions.<\/td><\/tr><tr><td>21<\/td><td>void trace method calls(boolean on)This method enables\/disables tracing of method calls.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.Runtime&nbsp;class allows the application to interface with the environment in which the application is running. Class Declaration Following is the declaration for&nbsp;java.lang.Runtime&nbsp;class \u2212 Class methods Sr.No. Method &amp; Description 1 void addShutdownHook(Thread hook)This method registers a new virtual-machine shutdown hook. 2 int available processors()This method returns the number of processors available to the Java [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2144"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2144"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2144\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2145,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2144\/revisions\/2145"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2144"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2144"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2144"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2146,
        "date": "2021-04-12T10:39:55",
        "date_gmt": "2021-04-12T10:39:55",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2146"
        },
        "modified": "2021-04-12T10:39:55",
        "modified_gmt": "2021-04-12T10:39:55",
        "slug": "runtimepermission-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/runtimepermission-class\/",
        "title": {
            "rendered": "RuntimePermission Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.RuntimePermission<\/strong>&nbsp;class is for runtime permissions. A RuntimePermission contains a name (also referred to as a &#8220;target name&#8221;) but no actions list; you either have the named permission or you don&#8217;t.<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.RuntimePermission<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class RuntimePermission\n   extends BasicPermission\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>RuntimePermission(String name)<\/strong>This constructs a new RuntimePermission with the specified name.<\/td><\/tr><tr><td>2<\/td><td><strong>RuntimePermission(String name, String actions)<\/strong>This constructs a new RuntimePermission object with the specified name..<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class Methods<\/h2>\n\n\n\n<p>This class inherits methods from the following class \u2212<\/p>\n\n\n\n<ul><li>java.lang.BasicPermission<\/li><li>java.lang.Permission<\/li><li>java.lang.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.RuntimePermission&nbsp;class is for runtime permissions. A RuntimePermission contains a name (also referred to as a &#8220;target name&#8221;) but no actions list; you either have the named permission or you don&#8217;t. Class Declaration Following is the declaration for&nbsp;java.lang.RuntimePermission&nbsp;class \u2212 Class constructors Sr.No. Constructor &amp; Description 1 RuntimePermission(String name)This constructs a new RuntimePermission with the specified [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2146"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2146"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2146\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2147,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2146\/revisions\/2147"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2146"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2146"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2146"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2148,
        "date": "2021-04-12T10:43:11",
        "date_gmt": "2021-04-12T10:43:11",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2148"
        },
        "modified": "2021-04-12T10:43:11",
        "modified_gmt": "2021-04-12T10:43:11",
        "slug": "securitymanager-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/securitymanager-class\/",
        "title": {
            "rendered": "SecurityManager Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.SecurityManager<\/strong>&nbsp;class allows applications to implement a security policy. It allows an application to determine, before performing a possibly unsafe or sensitive operation, what the operation is and whether it is being attempted in a security context that allows the operation to be performed. The application can allow or disallow the operation.<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.SecurityManager<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class SecurityManager\n   extends Object\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>SecurityManager()<\/strong>This constructs a new SecurityManager.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>void checkAccept(String host, int port)This method throws a SecurityException if the calling thread is not permitted to accept a socket connection from the specified host and port number.<\/td><\/tr><tr><td>2<\/td><td>void checkAccess(Thread t)This method throws a SecurityException if the calling thread is not allowed to modify the thread argument.<\/td><\/tr><tr><td>3<\/td><td>void checkAccess(ThreadGroup g)This method throws a SecurityException if the calling thread is not allowed to modify the thread group argument.<\/td><\/tr><tr><td>4<\/td><td>void checkAwtEventQueueAccess()This method throws a SecurityException if the calling thread is not allowed to access the AWT event queue.<\/td><\/tr><tr><td>5<\/td><td>void checkConnect(String host, int port)This method throws a SecurityException if the calling thread is not allowed to open a socket connection to the specified host and port number.<\/td><\/tr><tr><td>6<\/td><td>void checkConnect(String host, int port, Object context)This method throws a SecurityException if the specified security context is not allowed to open a socket connection to the specified host and port number.<\/td><\/tr><tr><td>7<\/td><td>void checkCreateClassLoader()This method throws a SecurityException if the calling thread is not allowed to create a new class loader.<\/td><\/tr><tr><td>8<\/td><td>void checkDelete(String file)This method throws a SecurityException if the calling thread is not allowed to delete the specified file.<\/td><\/tr><tr><td>9<\/td><td>void checkExec(String cmd)This method throws a SecurityException if the calling thread is not allowed to create a subprocess.<\/td><\/tr><tr><td>10<\/td><td>void checkExit(int status)This method throws a SecurityException if the calling thread is not allowed to cause the Java Virtual Machine to halt with the specified status code.<\/td><\/tr><tr><td>11<\/td><td>void checkLink(String lib)This method throws a SecurityException if the calling thread is not allowed to dynamic link the library code specified by the string argument file.<\/td><\/tr><tr><td>12<\/td><td>void checkListen(int port)This method throws a SecurityException if the calling thread is not allowed to wait for a connection request on the specified local port number.<\/td><\/tr><tr><td>13<\/td><td>void checkMemberAccess(Class&lt;?> clazz, int which)This method throws a SecurityException if the calling thread is not allowed to access members.<\/td><\/tr><tr><td>14<\/td><td>void checkMulticast(InetAddress maddr)This method throws a SecurityException if the calling thread is not allowed to use (join\/leave\/send\/receive) IP multicast.<\/td><\/tr><tr><td>15<\/td><td>void checkPackageAccess(String pkg)This method throws a SecurityException if the calling thread is not allowed to access the package specified by the argument.<\/td><\/tr><tr><td>16<\/td><td>void checkPackageDefinition(String pkg)This method throws a SecurityException if the calling thread is not allowed to define classes in the package specified by the argument.<\/td><\/tr><tr><td>17<\/td><td>void checkPermission(Permission perm)This method throws a SecurityException if the requested access, specified by the given permission, is not permitted based on the security policy currently in effect.<\/td><\/tr><tr><td>18<\/td><td>void checkPermission(Permission perm, Object context)This method throws a SecurityException if the specified security context is denied access to the resource specified by the given permission.<\/td><\/tr><tr><td>19<\/td><td>void checkPrintJobAccess()This method throws a SecurityException if the calling thread is not allowed to initiate a print job request.<\/td><\/tr><tr><td>20<\/td><td>void checkPropertiesAccess()This method throws a SecurityException if the calling thread is not allowed to access or modify the system properties.<\/td><\/tr><tr><td>21<\/td><td>void checkPropertyAccess(String key)This method throws a SecurityException if the calling thread is not allowed to access the system property with the specified key name.<\/td><\/tr><tr><td>22<\/td><td>void checked(FileDescriptor fd)This method throws a SecurityException if the calling thread is not allowed to read from the specified file descriptor.<\/td><\/tr><tr><td>23<\/td><td>void checked(String file)This method throws a SecurityException if the calling thread is not allowed to read the file specified by the string argument.<\/td><\/tr><tr><td>24<\/td><td>void checked(String file, Object context)This method throws a SecurityException if the specified security context is not allowed to read the file specified by the string argument.<\/td><\/tr><tr><td>25<\/td><td>void checkSecurityAccess(String target)This method determines whether the permission with the specified permission target name should be granted or denied.<\/td><\/tr><tr><td>26<\/td><td>void checkSetFactory()This method throws a SecurityException if the calling thread is not allowed to set the socket factory used by ServerSocket or Socket or the stream handler factory used by URL.<\/td><\/tr><tr><td>27<\/td><td>void checkSystemClipboardAccess()This method throws a SecurityException if the calling thread is not allowed to access the system clipboard.<\/td><\/tr><tr><td>28<\/td><td>boolean checkTopLevelWindow(Object window)This method returns false if the calling thread is not trusted to bring up the top-level window indicated by the window argument.<\/td><\/tr><tr><td>29<\/td><td>void check writes (FileDescriptor fd)This method throws a SecurityException if the calling thread is not allowed to write to the specified file descriptor.<\/td><\/tr><tr><td>30<\/td><td>void check writes (String file)This method throws a SecurityException if the calling thread is not allowed to write to the file specified by the string argument.<\/td><\/tr><tr><td>31<\/td><td>protected Class[] getClassContext()This method returns the current execution stack as an array of classes.<\/td><\/tr><tr><td>32<\/td><td>Object getSecurityContext()This method creates an object that encapsulates the current execution environment.<\/td><\/tr><tr><td>33<\/td><td>ThreadGroup getThreadGroup()This method returns the thread group into which to instantiate any new thread being created at the time this is being called.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.SecurityManager&nbsp;class allows applications to implement a security policy. It allows an application to determine, before performing a possibly unsafe or sensitive operation, what the operation is and whether it is being attempted in a security context that allows the operation to be performed. The application can allow or disallow the operation. Class Declaration Following [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2148"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2148"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2148\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2149,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2148\/revisions\/2149"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2148"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2148"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2148"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2150,
        "date": "2021-04-12T10:45:31",
        "date_gmt": "2021-04-12T10:45:31",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2150"
        },
        "modified": "2021-04-12T10:45:31",
        "modified_gmt": "2021-04-12T10:45:31",
        "slug": "short-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/short-class\/",
        "title": {
            "rendered": "Short Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.Short<\/strong>&nbsp;class wraps a value of primitive type short in an object. An object of type Short contains a single field whose type is short.<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.Short<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class Short\n   extends Number\n      implements Comparable&lt;Short&gt;\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.lang.Short<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static short MAX_VALUE<\/strong>&nbsp;\u2212 This is the constant holding the maximum value a short can have, 2<sup>15<\/sup>-1.<\/li><li><strong>static short MIN_VALUE<\/strong>&nbsp;\u2212 This is the constant holding the minimum value a short can have, -2<sup>15<\/sup>.<\/li><li><strong>static int SIZE<\/strong>&nbsp;\u2212 This is the number of bits used to represent a short value in two&#8217;s complement binary form.<\/li><li><strong>static Class&lt;Short&gt; TYPE<\/strong>&nbsp;\u2212 This is the Class instance representing the primitive type short.<\/li><\/ul>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>Short(short value)<\/strong>This constructs a newly allocated Short object that represents the specified short value.<\/td><\/tr><tr><td>2<\/td><td><strong>Short(String s)<\/strong>This constructs a newly allocated Short object that represents the short value indicated by the String parameter.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>byte value()This method returns the value of this Short as a byte.<\/td><\/tr><tr><td>2<\/td><td>int compareTo(Short another short)This method compares two Short objects numerically.<\/td><\/tr><tr><td>3<\/td><td>static Short decode(String nm)This method decodes a String into a Short.<\/td><\/tr><tr><td>4<\/td><td>double doubleValue()This method returns the value of this Short as a double.<\/td><\/tr><tr><td>5<\/td><td>boolean equals(Object obj)This method compares this object to the specified object.<\/td><\/tr><tr><td>6<\/td><td>float value()This method returns the value of this Short as afloat.<\/td><\/tr><tr><td>7<\/td><td>int hashCode()This method returns a hash code for this Short.<\/td><\/tr><tr><td>8<\/td><td>int intValue()This method returns the value of this Short as an int.<\/td><\/tr><tr><td>9<\/td><td>long long value()This method returns the value of this Short as along.<\/td><\/tr><tr><td>10<\/td><td>static short parseShort(String s)This method parses the string argument as a signed decimal short.<\/td><\/tr><tr><td>11<\/td><td>static short parseShort(String s, int radix)This method parses the string argument as a signed short in the radix specified by the second argument.<\/td><\/tr><tr><td>12<\/td><td>static short reverse bytes(short i)This method returns the value obtained by reversing the order of the bytes in the two&#8217;s complement representation of the specified short value.<\/td><\/tr><tr><td>13<\/td><td>short value()This method returns the value of this Short as a short.<\/td><\/tr><tr><td>14<\/td><td>String toString()This method returns a String object representing this Short&#8217;s value.<\/td><\/tr><tr><td>15<\/td><td>static String toString(shorts)This method returns a new String object representing the specified short.<\/td><\/tr><tr><td>16<\/td><td>static Short valueOf(shorts)This method returns a Short instance representing the specified short value.<\/td><\/tr><tr><td>17<\/td><td>static Short valueOf(String s)This method returns a Short instance representing the specified short value.<\/td><\/tr><tr><td>18<\/td><td>static Short valueOf(String s, int radix)This method returns a Short object holding the value extracted from the specified String when parsed with the radix given by the second argument.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.Short&nbsp;class wraps a value of primitive type short in an object. An object of type Short contains a single field whose type is short. Class Declaration Following is the declaration for&nbsp;java.lang.Short&nbsp;class \u2212 Field Following are the fields for&nbsp;java.lang.Short&nbsp;class \u2212 static short MAX_VALUE&nbsp;\u2212 This is the constant holding the maximum value a short can have, [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2150"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2150"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2150\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2151,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2150\/revisions\/2151"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2150"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2150"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2150"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2153,
        "date": "2021-04-12T10:50:28",
        "date_gmt": "2021-04-12T10:50:28",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2153"
        },
        "modified": "2021-04-12T10:50:28",
        "modified_gmt": "2021-04-12T10:50:28",
        "slug": "stacktraceelement-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/stacktraceelement-class\/",
        "title": {
            "rendered": "StackTraceElement Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.StackTraceElement<\/strong>&nbsp;class element represents a single stack frame. All stack frames except for the one at the top of the stack represent a method invocation. The frame at the top of the stack represents the execution point at which the stack trace was generated.<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.StackTraceElement<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class StackTraceElement\n   extends Object\n      implements Serializable\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>StackTraceElement(String declaringClass, String methodName, String fileName, int lineNumber)<\/strong>This creates a stack trace element representing the specified execution point.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>boolean equals(Object obj)This method returns true if the specified object is another StackTraceElement instance representing the same execution point as this instance.<\/td><\/tr><tr><td>2<\/td><td>The string gets the class name()This method returns the fully qualified name of the class containing the execution point represented by this stack trace element.<\/td><\/tr><tr><td>3<\/td><td>String get the filename()This method returns the name of the source file containing the execution point represented by this stack trace element.<\/td><\/tr><tr><td>4<\/td><td>int get line number()This method returns the line number of the source line containing the execution point represented by this stack trace element.<\/td><\/tr><tr><td>5<\/td><td>String get method name()This method returns the name of the method containing the execution point represented by this stack trace element.<\/td><\/tr><tr><td>6<\/td><td>int hashCode()This method returns a hash code value for this stack trace element.<\/td><\/tr><tr><td>7<\/td><td>boolean is a native method()This method returns true if the method containing the execution point represented by this stack trace element is a native method.<\/td><\/tr><tr><td>8<\/td><td>String toString()This method returns a string representation of this stack trace element.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.StackTraceElement&nbsp;class element represents a single stack frame. All stack frames except for the one at the top of the stack represent a method invocation. The frame at the top of the stack represents the execution point at which the stack trace was generated. Class Declaration Following is the declaration for&nbsp;java.lang.StackTraceElement&nbsp;class \u2212 Class constructors Sr.No. [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2153"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2153"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2153\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2154,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2153\/revisions\/2154"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2153"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2153"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2153"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2156,
        "date": "2021-04-12T10:54:11",
        "date_gmt": "2021-04-12T10:54:11",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2156"
        },
        "modified": "2021-04-12T10:54:11",
        "modified_gmt": "2021-04-12T10:54:11",
        "slug": "strictmath-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/strictmath-class\/",
        "title": {
            "rendered": "StrictMath Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.StrictMath<\/strong>&nbsp;class contains methods for performing basic numeric operations such as the elementary exponential, logarithm, square root, and trigonometric functions.<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.StrictMath<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class StrictMath\n   extends Object\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.lang.StrictMath<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static double E<\/strong>&nbsp;\u2212 This is the double value that is closer than any other to&nbsp;<em>e<\/em>, the base of the natural logarithms.<\/li><li><strong>static double PI<\/strong>&nbsp;\u2212 This is the double value that is closer than any other to pi, the ratio of the circumference of a circle to its diameter.<\/li><\/ul>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>static double abs(double a)This method returns the absolute value of a double value.<\/td><\/tr><tr><td>2<\/td><td>static float abs(float a)This method returns the absolute value of a float value.<\/td><\/tr><tr><td>3<\/td><td>static int abs(int a)This method returns the absolute value of an int value.<\/td><\/tr><tr><td>4<\/td><td>static long abs(long a)This method returns the absolute value of a long value.<\/td><\/tr><tr><td>5<\/td><td>static double acos(double a)This method returns the arc cosine of a value; the returned angle is in the range 0.0 through pi.<\/td><\/tr><tr><td>6<\/td><td>static double asin(double a)This method returns the arc sine of a value; the returned angle is in the range -pi\/2 through pi\/2.<\/td><\/tr><tr><td>7<\/td><td>static double atan(double a)This method returns the arc tangent of a value; the returned angle is in the range -pi\/2 through pi\/2.<\/td><\/tr><tr><td>8<\/td><td>static double atan2(double y, double x)This method returns the angle theta from the conversion of rectangular coordinates (x, y) to polar coordinates (r, theta).<\/td><\/tr><tr><td>9<\/td><td>static double cbrt(double a)This method returns the cube root of a double value.<\/td><\/tr><tr><td>10<\/td><td>static double ceil(double a)This method returns the smallest (closest to negative infinity) double value that is greater than or equal to the argument and is equal to a mathematical integer.<\/td><\/tr><tr><td>11<\/td><td>static double copySign(double magnitude, double sign)This method returns the first floating-point argument with the sign of the second floating-point argument.<\/td><\/tr><tr><td>12<\/td><td>static float copySign(float magnitude, float sign)This method returns the first floating-point argument with the sign of the second floating-point argument.<\/td><\/tr><tr><td>13<\/td><td>static double cos(double a)This method returns the trigonometric cosine of an angle.<\/td><\/tr><tr><td>14<\/td><td>static double cosh(double x)This method returns the hyperbolic cosine of a double value.<\/td><\/tr><tr><td>15<\/td><td>static double exp(double a)This method returns Euler&#8217;s number e raised to the power of a double value.<\/td><\/tr><tr><td>16<\/td><td>static double expm1(double x)This method returns e<sup>x<\/sup>\u00a0-1.<\/td><\/tr><tr><td>17<\/td><td>static double floor(double a)This method returns the largest (closest to positive infinity) double value that is less than or equal to the argument and is equal to a mathematical integer.<\/td><\/tr><tr><td>18<\/td><td>static int getExponent(double d)This method returns the unbiased exponent used in the representation of a double.<\/td><\/tr><tr><td>19<\/td><td>static int getExponent(float f)This method returns the unbiased exponent used in the representation of a float.<\/td><\/tr><tr><td>20<\/td><td>static double hypot(double x, double y)This method returns sqrt(x<sup>2<\/sup>\u00a0+y<sup>2<\/sup>) without intermediate overflow or underflow.<\/td><\/tr><tr><td>21<\/td><td>static double IEEEremainder(double f1, double f2)This method returns the natural logarithm (base e) of a double value.<\/td><\/tr><tr><td>22<\/td><td>static double log(double a)This method returns the natural logarithm (base e) of a double value.<\/td><\/tr><tr><td>23<\/td><td>static double log10(double a)This method returns the base 10 logarithm of a double value.<\/td><\/tr><tr><td>24<\/td><td>static double log1p(double x)This method returns the natural logarithm of the sum of the argument and 1.<\/td><\/tr><tr><td>25<\/td><td>static double max(double a, double b)This method returns the greater of two double values.<\/td><\/tr><tr><td>26<\/td><td>static float max(float a, float b)This method returns the greater of two float values.<\/td><\/tr><tr><td>27<\/td><td>static int max(int a, int b)This method returns the greater of two int values.<\/td><\/tr><tr><td>28<\/td><td>static long max(long a, long b)This method returns the greater of two long values.<\/td><\/tr><tr><td>29<\/td><td>static double min(double a, double b)This method returns the smaller of two double values.<\/td><\/tr><tr><td>30<\/td><td>static float min(float a, float b)This method returns the smaller of two float values.<\/td><\/tr><tr><td>31<\/td><td>static int min(int a, int b)This method returns the smaller of two int values.<\/td><\/tr><tr><td>32<\/td><td>static long min(long a long b)This method returns the smaller of two long values.<\/td><\/tr><tr><td>33<\/td><td>static double next after(double start, double direction)This method returns the floating-point number adjacent to the first argument in the direction of the second argument.<\/td><\/tr><tr><td>34<\/td><td>static float next after(float start, double direction)This method returns the floating-point number adjacent to the first argument in the direction of the second argument.<\/td><\/tr><tr><td>35<\/td><td>static double nextUp(doubled)This method returns the floating-point value adjacent to d in the direction of positive infinity.<\/td><\/tr><tr><td>36<\/td><td>static float nextUp(float f)This method returns the floating-point value adjacent to f in the direction of positive infinity.<\/td><\/tr><tr><td>37<\/td><td>static double pow(double a double b)This method returns the value of the first argument raised to the power of the second argument.<\/td><\/tr><tr><td>38<\/td><td>static double random()This method returns a double value with a positive sign, greater than or equal to 0.0 and less than 1.0.<\/td><\/tr><tr><td>39<\/td><td>static double rint(double a)This method returns the double value that is closest in value to the argument and is equal to a mathematical integer.<\/td><\/tr><tr><td>40<\/td><td>static long round(double a)This method returns the closest long to the argument.<\/td><\/tr><tr><td>41<\/td><td>static int round(float a)This method returns the closest int to the argument.<\/td><\/tr><tr><td>42<\/td><td>static double scalb(doubled, int scaleFactor)This method return d \u00d7 2<sup>scaleFactor<\/sup>\u00a0rounded as if performed by a single correctly rounded floating-point multiply to a member of the double value set.<\/td><\/tr><tr><td>43<\/td><td>static float scale(float f, int scaleFactor)This method Return f \u00d7 2<sup>scaleFactor<\/sup>\u00a0rounded as if performed by a single correctly rounded floating-point multiply to a member of the float value set.<\/td><\/tr><tr><td>44<\/td><td>static double signum(doubled) scaleFactor)This method returns the signum function of the argument; zero if the argument is zero, 1.0 if the argument is greater than zero, -1.0 if the argument is less than zero.<\/td><\/tr><tr><td>45<\/td><td>static float signum(float f)This method returns the signum function of the argument; zero if the argument is zero, 1.0f if the argument is greater than zero, -1.0f if the argument is less than zero.<\/td><\/tr><tr><td>46<\/td><td>static double sin(double a)This method returns the trigonometric sine of an angle.<\/td><\/tr><tr><td>47<\/td><td>static double sinh(double x)This method returns the hyperbolic sine of a double value.<\/td><\/tr><tr><td>48<\/td><td>static double sqrt(double a)This method returns the correctly rounded positive square root of a double value.<\/td><\/tr><tr><td>49<\/td><td>static double tan(double a)This method returns the trigonometric tangent of an ang<\/td><\/tr><tr><td>50<\/td><td>static double tanh(double x)This method returns the hyperbolic tangent of a double value.<\/td><\/tr><tr><td>51<\/td><td>static double degrees(double angrad)This method converts an angle measured in radians to an approximately equivalent angle measured in degrees.<\/td><\/tr><tr><td>52<\/td><td>static double toRadians(double angdeg)This method converts an angle measured in degrees to an approximately equivalent angle measured in radians.<\/td><\/tr><tr><td>53<\/td><td>static double up(doubled)This method returns the size of an ulp of the argument.<\/td><\/tr><tr><td>54<\/td><td>static float up(float f)This method returns the size of an ulp of the argument.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.StrictMath&nbsp;class contains methods for performing basic numeric operations such as the elementary exponential, logarithm, square root, and trigonometric functions. Class Declaration Following is the declaration for&nbsp;java.lang.StrictMath&nbsp;class \u2212 Field Following are the fields for&nbsp;java.lang.StrictMath&nbsp;class \u2212 static double E&nbsp;\u2212 This is the double value that is closer than any other to&nbsp;e, the base of the natural [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2156"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2156"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2156\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2157,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2156\/revisions\/2157"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2156"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2156"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2156"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2158,
        "date": "2021-04-12T10:58:38",
        "date_gmt": "2021-04-12T10:58:38",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2158"
        },
        "modified": "2021-04-12T10:58:38",
        "modified_gmt": "2021-04-12T10:58:38",
        "slug": "string-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/string-class\/",
        "title": {
            "rendered": "String Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.String<\/strong>&nbsp;class represents character strings. All string literals in Java programs, such as &#8220;abc&#8221;, are implemented as instances of this class.Strings are constant, their values cannot be changed after they are created<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.String<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class String\n   extends Object\n      implements Serializable, Comparable&lt;String&gt;, CharSequence\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.lang.String<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static Comparator&lt;String&gt; CASE_INSENSITIVE_ORDER<\/strong>&nbsp;\u2212 This is a Comparator that orders String objects as by compareToIgnoreCase.<\/li><\/ul>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>String()<\/strong>This initializes a newly created String object so that it represents an empty character sequence.<\/td><\/tr><tr><td>2<\/td><td><strong>String(byte[] bytes)<\/strong>This constructs a new String by decoding the specified array of bytes using the platform&#8217;s default charset.<\/td><\/tr><tr><td>3<\/td><td><strong>String(byte[] bytes, Charset charset)<\/strong>This constructs a new String by decoding the specified array of bytes using the specified charset.<\/td><\/tr><tr><td>4<\/td><td><strong>String(byte[] bytes, int offset, int length)<\/strong>This constructs a new String by decoding the specified subarray of bytes using the platform&#8217;s default charset<\/td><\/tr><tr><td>5<\/td><td><strong>String(byte[] bytes, int offset, int length, Charset charset)<\/strong>This constructs a new String by decoding the specified subarray of bytes using the specified charset.<\/td><\/tr><tr><td>6<\/td><td><strong>String(byte[] bytes, int offset, int length, String charsetName)<\/strong>This constructs a new String by decoding the specified subarray of bytes using the specified charset.<\/td><\/tr><tr><td>7<\/td><td><strong>String(byte[] bytes, String charsetName)<\/strong>This constructs a new String by decoding the specified array of bytes using the specified charset.<\/td><\/tr><tr><td>8<\/td><td><strong>String(char[] value)<\/strong>This allocates a new String so that it represents the sequence of characters currently contained in the character array argument.<\/td><\/tr><tr><td>9<\/td><td><strong>String(char[] value, int offset, int count)<\/strong>This allocates a new String that contains characters from a subarray of the character array argument.<\/td><\/tr><tr><td>10<\/td><td><strong>String(int[] codePoints, int offset, int count)<\/strong>This allocates a new String that contains characters from a subarray of the Unicode code point array argument.<\/td><\/tr><tr><td>11<\/td><td><strong>String(String original)<\/strong>This initializes a newly created String object so that it represents the same sequence of characters as the argument; in other words, the newly created string is a copy of the argument string.<\/td><\/tr><tr><td>12<\/td><td><strong>String(StringBuffer buffer)<\/strong>This allocates a new string that contains the sequence of characters currently contained in the string buffer argument.<\/td><\/tr><tr><td>13<\/td><td><strong>String(StringBuilder builder)<\/strong>This allocates a new string that contains the sequence of characters currently contained in the string builder argument.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>char charAt(int index)This method returns the char value at the specified index.<\/td><\/tr><tr><td>2<\/td><td>int codepoint(int index)This method returns the character (Unicode code point) at the specified index.<\/td><\/tr><tr><td>3<\/td><td>int codepoints before(int index)This method returns the character (Unicode code point) before the specified index.<\/td><\/tr><tr><td>4<\/td><td>int codePointCount(int beginIndex, int endIndex)This method returns the number of Unicode code points in the specified text range of this String.<\/td><\/tr><tr><td>5<\/td><td>int compareTo(String another string)This method compares two strings lexicographically.<\/td><\/tr><tr><td>6<\/td><td>int compareToIgnoreCase(String str)This method compares two strings lexicographically, ignoring case differences.<\/td><\/tr><tr><td>7<\/td><td>String Concat(String str)This method concatenates the specified string to the end of this string.<\/td><\/tr><tr><td>8<\/td><td>boolean contains(CharSequence s)This method returns true if and only if this string contains the specified sequence of char values.<\/td><\/tr><tr><td>9<\/td><td>boolean content equals(CharSequence cs)This method compares this string to the specified CharSequence.<\/td><\/tr><tr><td>10<\/td><td>boolean content equals(StringBuffer sb)This method compares this string to the specified StringBuffer.<\/td><\/tr><tr><td>11<\/td><td>static String copy value of(char[] data)This method returns a String that represents the character sequence in the array specified.<\/td><\/tr><tr><td>12<\/td><td>static String copy value of(char[] data, int offset, int count)This method returns a String that represents the character sequence in the array specified.<\/td><\/tr><tr><td>13<\/td><td>boolean ends With(String suffix)This method tests if this string ends with the specified suffix.<\/td><\/tr><tr><td>14<\/td><td>boolean equals(Object anObject)This method compares this string to the specified object.<\/td><\/tr><tr><td>15<\/td><td>boolean equalsIgnoreCase(String another string)This method Compares this String to another String, ignoring case considerations.<\/td><\/tr><tr><td>16<\/td><td>static String format(Locale l, String format, Object&#8230; args)This method returns a formatted string using the specified locale, format string, and arguments.<\/td><\/tr><tr><td>17<\/td><td>static String format(String format, Object&#8230; args)This method returns a formatted string using the specified format string and arguments.<\/td><\/tr><tr><td>18<\/td><td>byte[] getBytes()This method encodes this String into a sequence of bytes using the platform&#8217;s default charset, storing the result into a new byte array.<\/td><\/tr><tr><td>19<\/td><td>byte[] getBytes(Charset charset)This method encodes this String into a sequence of bytes using the given charset, storing the result into a new byte array.<\/td><\/tr><tr><td>20<\/td><td>byte[] getBytes(String charset name)This method encodes this String into a sequence of bytes using the named charset, storing the result into a new byte array.<\/td><\/tr><tr><td>21<\/td><td>void get cars(int arc begin, int second, char[] dest, int dstBegin)This method copies characters from this string into the destination character array.<\/td><\/tr><tr><td>22<\/td><td>int hashCode()This method returns a hash code for this string.<\/td><\/tr><tr><td>23<\/td><td>int indexOf(int ch)This method returns the index within this string of the first occurrence of the specified character.<\/td><\/tr><tr><td>24<\/td><td>int indexOf(int ch, int fromIndex)This method returns the index within this string of the first occurrence of the specified character, starting the search at the specified index.<\/td><\/tr><tr><td>25<\/td><td>int indexOf(String str)This method returns the index within this string of the first occurrence of the specified substring.<\/td><\/tr><tr><td>26<\/td><td>int indexOf(String str, int fromIndex)This method returns the index within this string of the first occurrence of the specified substring, starting at the specified index.<\/td><\/tr><tr><td>27<\/td><td>String intern()This method returns a canonical representation for the string object.<\/td><\/tr><tr><td>28<\/td><td>boolean isEmpty()This method returns true if, and only if, length() is 0.<\/td><\/tr><tr><td>29<\/td><td>int lastIndexOf(int ch)This method returns the index within this string of the last occurrence of the specified character.<\/td><\/tr><tr><td>30<\/td><td>int lastIndexOf(int ch, int fromIndex)This method returns the index within this string of the last occurrence of the specified character, searching backward starting at the specified index.<\/td><\/tr><tr><td>31<\/td><td>int lastIndexOf(String str)This method returns the index within this string of the rightmost occurrence of the specified substring.<\/td><\/tr><tr><td>32<\/td><td>int lastIndexOf(String str, int fromIndex)This method returns the index within this string of the last occurrence of the specified substring, searching backward starting at the specified index.<\/td><\/tr><tr><td>33<\/td><td>int length()This method returns the length of this string.<\/td><\/tr><tr><td>34<\/td><td>boolean matches(String regex)This method tells whether or not this string matches the given regular expression.<\/td><\/tr><tr><td>35<\/td><td>int offsetByCodePoints(int index, int codePointOffset)This method returns the index within this String that is offset from the given index by codePointOffset code points.<\/td><\/tr><tr><td>36<\/td><td>boolean region Matches(boolean ignoreCase, int offset, String other, int offset, int len)This method tests if two string regions are equal with case ignored.<\/td><\/tr><tr><td>37<\/td><td>boolean region Matches(int offset, String other, int offset, int len)This method tests if two string regions are equal.<\/td><\/tr><tr><td>38<\/td><td>String replace(char old car, char new car)This method returns a new string resulting from replacing all occurrences of an old car in this string with a new car.<\/td><\/tr><tr><td>39<\/td><td>String replace(CharSequence target, CharSequence replacement)This method replaces each substring of this string that matches the literal target sequence with the specified literal replacement sequence.<\/td><\/tr><tr><td>40<\/td><td>String replaceAll(String regex, String replacement)This method replaces each substring of this string that matches the given regular expression with the given replacement.<\/td><\/tr><tr><td>41<\/td><td>String replace first(String regex, String replacement)This method replaces the first substring of this string that matches the given regular expression with the given replacement.<\/td><\/tr><tr><td>42<\/td><td>String[] split(String regex)This method splits this string around matches of the given regular expression.<\/td><\/tr><tr><td>43<\/td><td>String[] split(String regex, int limit)This method splits this string around matches of the given regular expression.<\/td><\/tr><tr><td>44<\/td><td>boolean startsWith(String prefix)This method tests if this string starts with the specified prefix.<\/td><\/tr><tr><td>45<\/td><td>boolean startsWith(String prefix, int offset)This method tests if the substring of this string beginning at the specified index starts with the specified prefix.<\/td><\/tr><tr><td>46<\/td><td>CharSequence subSequence(int beginIndex, int endIndex)This method returns a new character sequence that is a subsequence of this sequence.<\/td><\/tr><tr><td>47<\/td><td>String substring(int beginIndex)This method returns a new string that is a substring of this string.<\/td><\/tr><tr><td>48<\/td><td>String substring(int beginIndex, int endIndex)This method returns a new string that is a substring of this string.<\/td><\/tr><tr><td>49<\/td><td>char[] toCharArray()This method converts this string to a new character array.<\/td><\/tr><tr><td>50<\/td><td>String toLowerCase()This method converts all of the characters in this String to lower case using the rules of the default locale.<\/td><\/tr><tr><td>51<\/td><td>String toLowerCase(Locale locale)This method converts all of the characters in this String to lower case using the rules of the given Locale.<\/td><\/tr><tr><td>52<\/td><td>String toString()This method returns the string itself.<\/td><\/tr><tr><td>53<\/td><td>String toUpperCase()This method converts all of the characters in this String to the upper case using the rules of the default locale.<\/td><\/tr><tr><td>54<\/td><td>String toUpperCase(Locale locale)This method converts all of the characters in this String to upper case using the rules of the given Locale.<\/td><\/tr><tr><td>55<\/td><td>String trim()This method returns a copy of the string, with leading and trailing whitespace omitted.<\/td><\/tr><tr><td>56<\/td><td>static String valueOf(boolean b)This method returns the string representation of the boolean argument.<\/td><\/tr><tr><td>57<\/td><td>static String valueOf(char c)This method returns the string representation of the char argument.<\/td><\/tr><tr><td>58<\/td><td>static String valueOf(char[] data)This method returns the string representation of the char array argument.<\/td><\/tr><tr><td>59<\/td><td>static String valueOf(char[] data, int offset, int count)This method returns the string representation of a specific subarray of the char array argument.<\/td><\/tr><tr><td>60<\/td><td>static String valueOf(doubled)This method returns the string representation of the double argument.<\/td><\/tr><tr><td>61<\/td><td>static String valueOf(float f)This method returns the string representation of the float argument.<\/td><\/tr><tr><td>62<\/td><td>static String valueOf(int i)This method returns the string representation of the int argument.<\/td><\/tr><tr><td>63<\/td><td>static String valueOf(long l)This method returns the string representation of the long argument.<\/td><\/tr><tr><td>64<\/td><td>static String valueOf(Object obj)This method returns the string representation of the Object argument.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.String&nbsp;class represents character strings. All string literals in Java programs, such as &#8220;abc&#8221;, are implemented as instances of this class.Strings are constant, their values cannot be changed after they are created Class Declaration Following is the declaration for&nbsp;java.lang.String&nbsp;class \u2212 Field Following are the fields for&nbsp;java.lang.String&nbsp;class \u2212 static Comparator&lt;String&gt; CASE_INSENSITIVE_ORDER&nbsp;\u2212 This is a Comparator that [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2158"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2158"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2158\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2159,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2158\/revisions\/2159"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2158"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2158"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2158"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2160,
        "date": "2021-04-12T11:02:09",
        "date_gmt": "2021-04-12T11:02:09",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2160"
        },
        "modified": "2021-04-12T11:02:09",
        "modified_gmt": "2021-04-12T11:02:09",
        "slug": "stringbuffer-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/stringbuffer-class\/",
        "title": {
            "rendered": "StringBuffer Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.StringBuffer<\/strong>&nbsp;class is a thread-safe, mutable sequence of characters. Following are the important points about StringBuffer \u2212<\/p>\n\n\n\n<ul><li>A string buffer is like a String, but can be modified.<\/li><li>It contains some particular sequence of characters, but the length and content of the sequence can be changed through certain method calls.<\/li><li>They are safe for use by multiple threads.<\/li><li>Every string buffer has a capacity.<\/li><\/ul>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.StringBuffer<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class StringBuffer\n   extends Object\n      implements Serializable, CharSequence\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>StringBuffer()<\/strong>This constructs a string buffer with no characters in it and an initial capacity of 16 characters.<\/td><\/tr><tr><td>2<\/td><td><strong>StringBuffer(CharSequence seq)<\/strong>This constructs a string buffer that contains the same characters as the specified CharSequence.<\/td><\/tr><tr><td>3<\/td><td><strong>StringBuffer(int capacity)<\/strong>This constructs a string buffer with no characters in it and the specified initial capacity.<\/td><\/tr><tr><td>4<\/td><td><strong>StringBuffer(String str)<\/strong>This constructs a string buffer initialized to the contents of the specified string.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>StringBuffer append(boolean b)This method appends the string representation of the boolean argument to the sequence<\/td><\/tr><tr><td>2<\/td><td>StringBuffer append(char c)This method appends the string representation of the char argument to this sequence.<\/td><\/tr><tr><td>3<\/td><td>StringBuffer append(char[] str)This method appends the string representation of the char array argument to this sequence.<\/td><\/tr><tr><td>4<\/td><td>StringBuffer append(char[] str, int offset, int len)This method appends the string representation of a subarray of the char array argument to this sequence.<\/td><\/tr><tr><td>5<\/td><td>StringBuffer append(CharSequence s)This method appends the specified CharSequence to this sequence.<\/td><\/tr><tr><td>6<\/td><td>StringBuffer append(CharSequence s, int start, int end)This method appends a subsequence of the specified CharSequence to this sequence.<\/td><\/tr><tr><td>7<\/td><td>StringBuffer append(doubled)This method appends the string representation of the double argument to this sequence.<\/td><\/tr><tr><td>8<\/td><td>StringBuffer append(float f)This method appends the string representation of the float argument to this sequence.<\/td><\/tr><tr><td>9<\/td><td>StringBuffer append(int i)This method appends the string representation of the int argument to this sequence.<\/td><\/tr><tr><td>10<\/td><td>StringBuffer append(long long)This method appends the string representation of the long argument to this sequence.<\/td><\/tr><tr><td>11<\/td><td>StringBuffer append(Object obj)This method appends the string representation of the Object argument.<\/td><\/tr><tr><td>12<\/td><td>StringBuffer append(String str)This method appends the specified string to this character sequence.<\/td><\/tr><tr><td>13<\/td><td>StringBuffer append(StringBuffer sb)This method appends the specified StringBuffer to this sequence.<\/td><\/tr><tr><td>14<\/td><td>StringBuffer appendCodePoint(int codePoint)This method appends the string representation of the codePoint argument to this sequence.<\/td><\/tr><tr><td>15<\/td><td>int capacity()This method returns the current capacity.<\/td><\/tr><tr><td>16<\/td><td>char charAt(int index)This method returns the char value in this sequence at the specified index.<\/td><\/tr><tr><td>17<\/td><td>int codepoint(int index)This method returns the character (Unicode code point) at the specified index<\/td><\/tr><tr><td>18<\/td><td>int codepoints before(int index)This method returns the character (Unicode code point) before the specified index<\/td><\/tr><tr><td>19<\/td><td>int codePointCount(int beginIndex, int endIndex)This method returns the number of Unicode code points in the specified text range of this sequence<\/td><\/tr><tr><td>20<\/td><td>StringBuffer delete(int start, int end)This method removes the characters in a substring of this sequence.<\/td><\/tr><tr><td>21<\/td><td>StringBuffer delete chart(int index)This method removes the char at the specified position in this sequence<\/td><\/tr><tr><td>22<\/td><td>void ensure capacity(int minimum capacity)This method ensures that the capacity is at least equal to the specified minimum.<\/td><\/tr><tr><td>23<\/td><td>void get cars(int arc begin, int second, char[] dest, int dstBegin) These method characters are copied from this sequence into the destination character array DST.<\/td><\/tr><tr><td>24<\/td><td>int indexOf(String str)This method returns the index within this string of the first occurrence of the specified substring.<\/td><\/tr><tr><td>25<\/td><td>int indexOf(String str, int fromIndex)This method returns the index within this string of the first occurrence of the specified substring, starting at the specified index.<\/td><\/tr><tr><td>26<\/td><td>StringBuffer insert(int offset, boolean b)This method inserts the string representation of the boolean argument into this sequence.<\/td><\/tr><tr><td>27<\/td><td>StringBuffer insert(int offset, char c)This method inserts the string representation of the char argument into this sequence.<\/td><\/tr><tr><td>28<\/td><td>StringBuffer insert(int offset, char[] str)This method inserts the string representation of the char array argument into this sequence.<\/td><\/tr><tr><td>29<\/td><td>StringBuffer insert(int index, char[] str, int offset, int len)This method inserts the string representation of a subarray of the str array argument into this sequence.<\/td><\/tr><tr><td>30<\/td><td>StringBuffer insert(int DST offset, CharSequence s)This method inserts the specified CharSequence into this sequence.<\/td><\/tr><tr><td>31<\/td><td>StringBuffer insert(int DST offset, CharSequence s, int start, int end)This method inserts a subsequence of the specified CharSequence into this sequence.<\/td><\/tr><tr><td>32<\/td><td>StringBuffer insert(int offset, doubled)This method inserts the string representation of the double argument into this sequence.<\/td><\/tr><tr><td>33<\/td><td>StringBuffer insert(int offset, float f)This method inserts the string representation of the float argument into this sequence.<\/td><\/tr><tr><td>34<\/td><td>StringBuffer insert(int offset, int iThis method inserts the string representation of the second int argument into this sequence.<\/td><\/tr><tr><td>35<\/td><td>StringBuffer insert(int offset, long l)This method inserts the string representation of the long argument into this sequence.<\/td><\/tr><tr><td>36<\/td><td>StringBuffer insert(int offset, Object obj)This method inserts the string representation of the Object argument into this character sequence.<\/td><\/tr><tr><td>37<\/td><td>StringBuffer insert(int offset, String str)This method inserts the string into this character sequence.<\/td><\/tr><tr><td>38<\/td><td>int lastIndexOf(String str)This method returns the index within this string of the rightmost occurrence of the specified substring.<\/td><\/tr><tr><td>39<\/td><td>int lastIndexOf(String str, int fromIndex)This method returns the index within this string of the last occurrence of the specified substring.<\/td><\/tr><tr><td>40<\/td><td>int length()This method returns the length (character count).<\/td><\/tr><tr><td>41<\/td><td>int offsetByCodePoints(int index, int codePointOffset)This method returns the index within this sequence that is offset from the given index by codePointOffset code points.<\/td><\/tr><tr><td>42<\/td><td>StringBuffer replaces (int start, int end, String str)This method replaces the characters in a substring of this sequence with characters in the specified String.<\/td><\/tr><tr><td>43<\/td><td>StringBuffer reverse()This method causes this character sequence to be replaced by the reverse of the sequence.<\/td><\/tr><tr><td>44<\/td><td>void setCharAt(int index, char ch)The character at the specified index is set to ch.<\/td><\/tr><tr><td>45<\/td><td>void setLength(int new length)This method sets the length of the character sequence.<\/td><\/tr><tr><td>46<\/td><td>CharSequence subSequence(int start, int end)This method returns a new character sequence that is a subsequence of this sequence.<\/td><\/tr><tr><td>47<\/td><td>String substring(int start)This method returns a new String that contains a subsequence of characters currently contained in this character sequence<\/td><\/tr><tr><td>48<\/td><td>String substring(int start, int end)This method returns a new String that contains a subsequence of characters currently contained in this sequence.<\/td><\/tr><tr><td>49<\/td><td>String toString()This method returns a string representing the data in this sequence.<\/td><\/tr><tr><td>50<\/td><td>void trim to size()This method attempts to reduce storage used for the character sequence.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.StringBuffer&nbsp;class is a thread-safe, mutable sequence of characters. Following are the important points about StringBuffer \u2212 A string buffer is like a String, but can be modified. It contains some particular sequence of characters, but the length and content of the sequence can be changed through certain method calls. They are safe for use [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2160"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2160"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2160\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2161,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2160\/revisions\/2161"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2160"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2160"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2160"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2162,
        "date": "2021-04-12T11:14:42",
        "date_gmt": "2021-04-12T11:14:42",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2162"
        },
        "modified": "2021-04-12T11:14:42",
        "modified_gmt": "2021-04-12T11:14:42",
        "slug": "stringbuilder-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/stringbuilder-class\/",
        "title": {
            "rendered": "StringBuilder Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.StringBuilder<\/strong>&nbsp;class is mutable sequence of characters. This provides an API compatible with StringBuffer, but with no guarantee of synchronization.<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.StringBuilder<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class StringBuilder\n   extends Object\n      implements Serializable, CharSequence\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>StringBuilder()<\/strong>This constructs a string builder with no characters in it and an initial capacity of 16 characters.<\/td><\/tr><tr><td>2<\/td><td><strong>StringBuilder(CharSequence seq)<\/strong>This constructs a string builder that contains the same characters as the specified CharSequence.<\/td><\/tr><tr><td>3<\/td><td><strong>StringBuilder(int capacity)<\/strong>This constructs a string builder with no characters in it and an initial capacity specified by the capacity argument.<\/td><\/tr><tr><td>4<\/td><td><strong>StringBuilder(String str)<\/strong>This constructs a string builder initialized to the contents of the specified string.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>StringBuilder append(boolean b)This method appends the string representation of the boolean argument to the sequence.<\/td><\/tr><tr><td>2<\/td><td>StringBuilder append(char c)This method appends the string representation of the char argument to this sequence.<\/td><\/tr><tr><td>3<\/td><td>StringBuilder append(char[] str)This method appends the string representation of the char array argument to this sequence.<\/td><\/tr><tr><td>4<\/td><td>StringBuilder append(char[] str, int offset, int len)This method appends the string representation of a subarray of the char array argument to this sequence.<\/td><\/tr><tr><td>5<\/td><td>StringBuilder append(CharSequence s)This method appends the specified character sequence to this Appendable.<\/td><\/tr><tr><td>6<\/td><td>StringBuilder appends (CharSequence s, int start, int end)This method appends a subsequence of the specified CharSequence to this sequence.<\/td><\/tr><tr><td>7<\/td><td>StringBuilder append(doubled)This method appends the string representation of the double argument to this sequence.<\/td><\/tr><tr><td>8<\/td><td>StringBuilder append(float f)This method appends the string representation of the float argument to this sequence.<\/td><\/tr><tr><td>9<\/td><td>StringBuilder append(int i)This method appends the string representation of the int argument to this sequence.<\/td><\/tr><tr><td>10<\/td><td>StringBuilder append(long long)This method appends the string representation of the long argument to this sequence.<\/td><\/tr><tr><td>11<\/td><td>StringBuilder append(Object obj)This method appends the string representation of the Object argument.<\/td><\/tr><tr><td>12<\/td><td>StringBuilder append(String str)This method appends the specified string to this character sequence.<\/td><\/tr><tr><td>13<\/td><td>StringBuilder append(StringBuffer sb)This method appends the specified StringBuffer to this sequence.<\/td><\/tr><tr><td>14<\/td><td>StringBuilder appendCodePoint(int codePoint)This method appends the string representation of the codePoint argument to this sequence.<\/td><\/tr><tr><td>15<\/td><td>int capacity()This method returns the current capacity.<\/td><\/tr><tr><td>16<\/td><td>char charAt(int index)This method returns the char value in this sequence at the specified index.<\/td><\/tr><tr><td>17<\/td><td>int codepoint(int index)This method returns the character (Unicode code point) at the specified index.<\/td><\/tr><tr><td>18<\/td><td>int codepoints before(int index)This method returns the character (Unicode code point) before the specified index.<\/td><\/tr><tr><td>19<\/td><td>int codePointCount(int beginIndex, int endIndex)This method returns the number of Unicode code points in the specified text range of this sequence.<\/td><\/tr><tr><td>20<\/td><td>StringBuilder delete(int start, int end)This method removes the characters in a substring of this sequence.<\/td><\/tr><tr><td>21<\/td><td>StringBuilder delete chart(int index)This method removes the char at the specified position in this sequence.<\/td><\/tr><tr><td>22<\/td><td>void ensure capacity(int minimum capacity)This method ensures that the capacity is at least equal to the specified minimum.<\/td><\/tr><tr><td>23<\/td><td>void get cars(int arc begin, int second, char[] dest, int dstBegin)Characters are copied from this sequence into the destination character array DST.<\/td><\/tr><tr><td>24<\/td><td>int indexOf(String str)This method returns the index within this string of the first occurrence of the specified substring.<\/td><\/tr><tr><td>25<\/td><td>int indexOf(String str, int fromIndex)This method returns the index within this string of the first occurrence of the specified substring, starting at the specified index.<\/td><\/tr><tr><td>26<\/td><td>StringBuilder insert(int offset, boolean b)This method inserts the string representation of the boolean argument into this sequence.<\/td><\/tr><tr><td>27<\/td><td>StringBuilder insert(int offset, char c)This method inserts the string representation of the char argument into this sequence.<\/td><\/tr><tr><td>28<\/td><td>StringBuilder insert(int offset, char[] str)This method inserts the string representation of the char array argument into this sequence.<\/td><\/tr><tr><td>29<\/td><td>StringBuilder insert(int index, char[] str, int offset, int len)This method inserts the string representation of a subarray of the str array argument into this sequence.<\/td><\/tr><tr><td>30<\/td><td>StringBuilder insert(int DST offset, CharSequence s)This method inserts the specified CharSequence into this sequence.<\/td><\/tr><tr><td>31<\/td><td>StringBuilder insert(int DST offset, CharSequence s, int start, int end)This method inserts a subsequence of the specified CharSequence into this sequence.<\/td><\/tr><tr><td>32<\/td><td>StringBuilder insert(int offset, doubled)This method inserts the string representation of the double argument into this sequence.<\/td><\/tr><tr><td>33<\/td><td>StringBuilder insert(int offset, float f)This method inserts the string representation of the float argument into this sequence.<\/td><\/tr><tr><td>34<\/td><td>StringBuilder insert(int offset, int i)This method inserts the string representation of the second int argument into this sequence.<\/td><\/tr><tr><td>35<\/td><td>StringBuilder insert(int offset, long l)This method inserts the string representation of the long argument into this sequence.<\/td><\/tr><tr><td>36<\/td><td>StringBuilder insert(int offset, Object obj)This method inserts the string representation of the Object argument into this character sequence.<\/td><\/tr><tr><td>37<\/td><td>StringBuilder insert(int offset, String str)This method inserts the string into this character sequence.<\/td><\/tr><tr><td>38<\/td><td>int lastIndexOf(String str)This method returns the index within this string of the rightmost occurrence of the specified substring.<\/td><\/tr><tr><td>39<\/td><td>int lastIndexOf(String str, int fromIndex)This method returns the index within this string of the last occurrence of the specified substring.<\/td><\/tr><tr><td>40<\/td><td>int length()This method returns the length (character count).<\/td><\/tr><tr><td>41<\/td><td>int offsetByCodePoints(int index, int codePointOffset)This method returns the index within this sequence that is offset from the given index by codePointOffset code points.<\/td><\/tr><tr><td>42<\/td><td>StringBuilder replaces (int start, int end, String str)This method replaces the characters in a substring of this sequence with characters in the specified String.<\/td><\/tr><tr><td>43<\/td><td>StringBuilder reverse()This method causes this character sequence to be replaced by the reverse of the sequence.<\/td><\/tr><tr><td>44<\/td><td>void setCharAt(int index, char ch)Character at the specified index is set to ch.<\/td><\/tr><tr><td>45<\/td><td>void setLength(int new length)This method sets the length of the character sequence.<\/td><\/tr><tr><td>46<\/td><td>CharSequence subSequence(int start, int end)This method returns a new character sequence that is a subsequence of this sequence.<\/td><\/tr><tr><td>47<\/td><td>String substring(int start)This method returns a new String that contains a subsequence of characters currently contained in this character sequence.<\/td><\/tr><tr><td>48<\/td><td>String substring(int start, int end)This method returns a new String that contains a subsequence of characters currently contained in this sequence.<\/td><\/tr><tr><td>49<\/td><td>String toString()This method returns a string representing the data in this sequence.<\/td><\/tr><tr><td>50<\/td><td>void trimToSize()This method attempts to reduce storage used for the character sequence.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><li>java.lang.CharSequence<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.StringBuilder&nbsp;class is mutable sequence of characters. This provides an API compatible with StringBuffer, but with no guarantee of synchronization. Class Declaration Following is the declaration for&nbsp;java.lang.StringBuilder&nbsp;class \u2212 Class constructors Sr.No. Constructor &amp; Description 1 StringBuilder()This constructs a string builder with no characters in it and an initial capacity of 16 characters. 2 StringBuilder(CharSequence seq)This [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2162"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2162"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2162\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2163,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2162\/revisions\/2163"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2162"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2162"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2162"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2164,
        "date": "2021-04-12T11:16:57",
        "date_gmt": "2021-04-12T11:16:57",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2164"
        },
        "modified": "2021-04-12T11:16:57",
        "modified_gmt": "2021-04-12T11:16:57",
        "slug": "system-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/system-class\/",
        "title": {
            "rendered": "System Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.System<\/strong>&nbsp;class contains several useful class fields and methods. It cannot be instantiated.Facilities provided by System \u2212<\/p>\n\n\n\n<ul><li>standard output<\/li><li>error output streams<\/li><li>standard input and access to externally defined properties and environment variables.<\/li><li>A utility method for quickly copying a portion of an array.<\/li><li>a means of loading files and libraries<\/li><\/ul>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.System<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class System\n   extends Object\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.lang.System<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static PrintStream err<\/strong>&nbsp;\u2212 This is the &#8220;standard&#8221; error output stream.<\/li><li><strong>static InputStream in<\/strong>&nbsp;\u2212 This is the &#8220;standard&#8221; input stream.<\/li><li><strong>static PrintStream out<\/strong>&nbsp;\u2212 This is the &#8220;standard&#8221; output stream.<\/li><\/ul>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>static void arraycopy(Object src, int scraps, Object dest, int destroys, int length)This method copies an array from the specified source array, beginning at the specified position, to the specified position of the destination array.<\/td><\/tr><tr><td>2<\/td><td>static String clear property(String key)This method removes the system property indicated by the specified key.<\/td><\/tr><tr><td>3<\/td><td>static Console console()This method returns the unique Console object associated with the current Java virtual machine if any.<\/td><\/tr><tr><td>4<\/td><td>static long currentTimeMillis()This method returns the current time in milliseconds.<\/td><\/tr><tr><td>5<\/td><td>static void exit(int status)This method terminates the currently running Java Virtual Machine.<\/td><\/tr><tr><td>6<\/td><td>static void GC()This method runs the garbage collector.<\/td><\/tr><tr><td>7<\/td><td><strong>static Map&lt;String,String&gt; getenv()<\/strong>This method returns an unmodifiable string map view of the current system environment.<\/td><\/tr><tr><td>8<\/td><td>static String getenv(String name)This method gets the value of the specified environment variable.<\/td><\/tr><tr><td>9<\/td><td>static Properties getProperties()This method determines the current system properties.<\/td><\/tr><tr><td>10<\/td><td>static String getProperty(String key)This method gets the system property indicated by the specified key.<\/td><\/tr><tr><td>11<\/td><td>static String getProperty(String key, String def)This method gets the system property indicated by the specified key.<\/td><\/tr><tr><td>12<\/td><td>static SecurityManager getSecurityManager()This method gets the system security interface.<\/td><\/tr><tr><td>13<\/td><td>static int identity hashcode(Object x)This method returns the same hash code for the given object as would be returned by the default method hashCode(), whether or not the given object&#8217;s class overrides hashCode().<\/td><\/tr><tr><td>14<\/td><td><strong>static Channel inheritedChannel()<\/strong>This method returns the channel inherited from the entity that created this Java virtual machine.<\/td><\/tr><tr><td>15<\/td><td>static void load(String filename)This method loads a code file with the specified filename from the local file system as a dynamic library.<\/td><\/tr><tr><td>16<\/td><td><strong>static void loadLibrary(String libname)<\/strong>This method loads the system library specified by the libname argument.<\/td><\/tr><tr><td>17<\/td><td>static String mapLibraryName(String libname)This method maps a library name into a platform-specific string representing a native library.<\/td><\/tr><tr><td>18<\/td><td>static long nanoTime()This method returns the current value of the most precise available system timer, in nanoseconds.<\/td><\/tr><tr><td>19<\/td><td>static void runFinalization()This method runs the finalization methods of any objects pending finalization.<\/td><\/tr><tr><td>20<\/td><td>static void setter(PrintStream err)This method reassigns the &#8220;standard&#8221; error output stream.<\/td><\/tr><tr><td>21<\/td><td>static void set(InputStream in)This method reassigns the &#8220;standard&#8221; input stream.<\/td><\/tr><tr><td>22<\/td><td>static void setOut(PrintStream out)This method reassigns the &#8220;standard&#8221; output stream.<\/td><\/tr><tr><td>23<\/td><td>static void setProperties(Properties props)This method sets the system properties to the Properties argument.<\/td><\/tr><tr><td>24<\/td><td>static String setProperty(String key, String value)This method sets the system property indicated by the specified key.<\/td><\/tr><tr><td>25<\/td><td><strong>static void setSecurityManager(SecurityManager s)<\/strong>This method sets the System security.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.System&nbsp;class contains several useful class fields and methods. It cannot be instantiated.Facilities provided by System \u2212 standard output error output streams standard input and access to externally defined properties and environment variables. A utility method for quickly copying a portion of an array. a means of loading files and libraries Class Declaration Following is [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2164"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2164"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2164\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2165,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2164\/revisions\/2165"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2164"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2164"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2164"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2166,
        "date": "2021-04-12T11:20:01",
        "date_gmt": "2021-04-12T11:20:01",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2166"
        },
        "modified": "2021-04-12T11:20:01",
        "modified_gmt": "2021-04-12T11:20:01",
        "slug": "thread-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/thread-class\/",
        "title": {
            "rendered": "Thread Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.Thread<\/strong>&nbsp;class is a thread of execution in a program. The Java Virtual Machine allows an application to have multiple threads of execution running concurrently.Following are the important points about Thread \u2212<\/p>\n\n\n\n<ul><li>Every thread has a priority. Threads with higher priority are executed in preference to threads with lower priority<\/li><li>Each thread may or may not also be marked as a daemon.<\/li><li>There are two ways to create a new thread of execution. One is to declare a class to be a subclass of Thread and,<\/li><li>the other way to create a thread is to declare a class that implements the Runnable interface<\/li><\/ul>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.Thread<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class Thread\n   extends Object\n      implements Runnable\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.lang.Thread<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static int MAX_PRIORITY<\/strong>&nbsp;\u2212 This is the maximum priority that a thread can have.<\/li><li><strong>static int NORM_PRIORITY<\/strong>&nbsp;\u2212 This is the default priority that is assigned to a thread.<\/li><\/ul>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>Thread()<\/strong>This allocates a new Thread object.<\/td><\/tr><tr><td>2<\/td><td><strong>Thread(Runnable target)<\/strong>This allocates a new Thread object.<\/td><\/tr><tr><td>3<\/td><td><strong>Thread(Runnable target, String name)<\/strong>This allocates a new Thread object.<\/td><\/tr><tr><td>4<\/td><td><strong>Thread(String name)<\/strong>This constructs allocates a new Thread object.<\/td><\/tr><tr><td>5<\/td><td><strong>Thread(ThreadGroup group, Runnable target)<\/strong>This allocates a new Thread object.<\/td><\/tr><tr><td>6<\/td><td><strong>Thread(ThreadGroup group, Runnable target, String name)<\/strong>This allocates a new Thread object so that it has target as its run object, has the specified name as its name, and belongs to the thread group referred to by group.<\/td><\/tr><tr><td>7<\/td><td><strong>Thread(ThreadGroup group, Runnable target, String name, long stackSize)<\/strong>This allocates a new Thread object so that it has target as its run object, has the specified name as its name, belongs to the thread group referred to by group, and has the specified stack size.<\/td><\/tr><tr><td>8<\/td><td><strong>Thread(ThreadGroup group, String name)<\/strong>This allocates a new Thread object.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>static int activeCount()This method returns the number of active threads in the current thread&#8217;s thread group.<\/td><\/tr><tr><td>2<\/td><td>void checkAccess()This method determines if the currently running thread has permission to modify this thread.<\/td><\/tr><tr><td>3<\/td><td><strong>protected Object clone()<\/strong>This method returns a clone if the class of this object is Cloneable.<\/td><\/tr><tr><td>4<\/td><td>static Thread currentThread()This method returns a reference to the currently executing thread object.<\/td><\/tr><tr><td>5<\/td><td>static void dumpStack()This method prints a stack trace of the current thread to the standard error stream.<\/td><\/tr><tr><td>6<\/td><td>static int enumerate(Thread[] tarray)This method copies into the specified array every active thread in the current thread&#8217;s thread group and its subgroups.<\/td><\/tr><tr><td>7<\/td><td>static Map&lt;Thread,StackTraceElement[]> getAllStackTraces()This method returns a map of stack traces for all live threads.<\/td><\/tr><tr><td>8<\/td><td>ClassLoader getContextClassLoader()This method returns the context ClassLoader for this Thread.<\/td><\/tr><tr><td>9<\/td><td>static Thread.UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()This method returns the default handler invoked when a thread abruptly terminates due to an uncaught exception.<\/td><\/tr><tr><td>10<\/td><td>long getId()This method returns the identifier of this Thread.<\/td><\/tr><tr><td>11<\/td><td>String getName()This method returns this thread&#8217;s name.<\/td><\/tr><tr><td>12<\/td><td>int getPriority()This method Returns this thread&#8217;s priority.<\/td><\/tr><tr><td>13<\/td><td>StackTraceElement[] getStackTrace()This method returns an array of stack trace elements representing the stack dump of this thread.<\/td><\/tr><tr><td>14<\/td><td>Thread.State getState()This method returns the state of this thread.<\/td><\/tr><tr><td>15<\/td><td>ThreadGroup getThreadGroup()This method returns the thread group to which this thread belongs.<\/td><\/tr><tr><td>16<\/td><td>Thread.UncaughtExceptionHandler getUncaughtExceptionHandler()This method returns the handler invoked when this thread abruptly terminates due to an uncaught exception.<\/td><\/tr><tr><td>17<\/td><td>static boolean holdsLock(Object obj)This method returns true if and only if the current thread holds the monitor lock on the specified object.<\/td><\/tr><tr><td>18<\/td><td>void interrupt()This method interrupts this thread.<\/td><\/tr><tr><td>19<\/td><td>static boolean interrupted()This method tests whether the current thread has been interrupted.<\/td><\/tr><tr><td>20<\/td><td>boolean isAlive()This method tests if this thread is alive.<\/td><\/tr><tr><td>21<\/td><td>boolean daemon()This method tests if this thread is a daemon thread.<\/td><\/tr><tr><td>22<\/td><td>boolean interrupted()This method tests whether this thread has been interrupted.<\/td><\/tr><tr><td>23<\/td><td>void join()Waits for this thread to die.<\/td><\/tr><tr><td>24<\/td><td>void join(long millis)Waits at most millis milliseconds for this thread to die.<\/td><\/tr><tr><td>25<\/td><td>void join(long millis, int Nanos)Waits at most millis milliseconds plus nanos nanoseconds for this thread to die.<\/td><\/tr><tr><td>26<\/td><td>void run()If this thread was constructed using a separate Runnable run object, then that Runnable object&#8217;s run method is called; otherwise, this method does nothing and returns<\/td><\/tr><tr><td>27<\/td><td>void setContextClassLoader(ClassLoader cl)This method sets the context ClassLoader for this Thread.<\/td><\/tr><tr><td>28<\/td><td>void setDaemon(boolean on)This method marks this thread as either a daemon thread or a user thread.<\/td><\/tr><tr><td>29<\/td><td>static void setDefaultUncaughtExceptionHandler (Thread.UncaughtExceptionHandler eh)This method sets the default handler invoked when a Thread abruptly terminates due to an uncaught exception, and no other handler has been defined for that thread.<\/td><\/tr><tr><td>30<\/td><td>void setName(String name)This method changes the name of this thread to be equal to the argument name.<\/td><\/tr><tr><td>31<\/td><td>void setPriority(int new priority)This method changes the priority of this thread.<\/td><\/tr><tr><td>32<\/td><td>void setUncaughtExceptionHandler(Thread.UncaughtExceptionHandler eh)This method sets the handler invoked when this thread abruptly terminates due to an uncaught exception.<\/td><\/tr><tr><td>33<\/td><td>static void sleep(long millis)This method causes the currently executing thread to sleep (temporarily cease execution) for the specified number of milliseconds, subject to the precision and accuracy of system timers and schedulers.<\/td><\/tr><tr><td>34<\/td><td>static void sleep(long millis, int Nanos)This method causes the currently executing thread to sleep (cease execution) for the specified number of milliseconds plus the specified number of nanoseconds, subject to the precision and accuracy of system timers and schedulers.<\/td><\/tr><tr><td>35<\/td><td>void start()This method causes this thread to begin execution; the Java Virtual Machine calls the run method of this thread.<\/td><\/tr><tr><td>36<\/td><td>String toString()This method returns a string representation of this thread, including the thread&#8217;s name, priority, and thread group.<\/td><\/tr><tr><td>37<\/td><td>static void yield()This method causes the currently executing thread object to temporarily pause and allow other threads to execute.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.Thread&nbsp;class is a thread of execution in a program. The Java Virtual Machine allows an application to have multiple threads of execution running concurrently.Following are the important points about Thread \u2212 Every thread has a priority. Threads with higher priority are executed in preference to threads with lower priority Each thread may or may [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2166"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2166"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2166\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2167,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2166\/revisions\/2167"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2166"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2166"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2166"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2168,
        "date": "2021-04-12T11:22:14",
        "date_gmt": "2021-04-12T11:22:14",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2168"
        },
        "modified": "2021-04-12T11:22:14",
        "modified_gmt": "2021-04-12T11:22:14",
        "slug": "threadgroup-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/threadgroup-class\/",
        "title": {
            "rendered": "ThreadGroup Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.ThreadGroup<\/strong>&nbsp;class represents a set of threads. It can also include other thread groups. The thread groups form a tree in which every thread group except the initial thread group has a parent.<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.ThreadGroup<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class ThreadGroup\n   extends Object\n      implements Thread.UncaughtExceptionHandler\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>ThreadGroup(String name)<\/strong>This constructs a new thread group.<\/td><\/tr><tr><td>2<\/td><td><strong>ThreadGroup(ThreadGroup parent, String name)<\/strong>This creates a new thread group.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>int active count()This method returns an estimate of the number of active threads in this thread group.<\/td><\/tr><tr><td>2<\/td><td>int activeGroupCount()This method returns an estimate of the number of active groups in this thread group.<\/td><\/tr><tr><td>3<\/td><td>void check access()This method determines if the currently running thread has permission to modify this thread group.<\/td><\/tr><tr><td>4<\/td><td>void destroy()This method Destroys this thread group and all of its subgroups.<\/td><\/tr><tr><td>5<\/td><td>int enumerate(Thread[] list)This method Copies into the specified array every active thread in this thread group and its subgroups.<\/td><\/tr><tr><td>6<\/td><td>int enumerate(Thread[] list, boolean recurse)This method copies into the specified array every active thread in this thread group.<\/td><\/tr><tr><td>7<\/td><td>int enumerate(ThreadGroup[] list)This method copies into the specified array references to every active subgroup in this thread group.<\/td><\/tr><tr><td>8<\/td><td>int enumerate(ThreadGroup[] list, boolean recurse)This method copies into the specified array references to every active subgroup in this thread group.<\/td><\/tr><tr><td>9<\/td><td>int getMaxPriority()This method returns the maximum priority of this thread group.<\/td><\/tr><tr><td>10<\/td><td>String getName()This method returns the name of this thread group.<\/td><\/tr><tr><td>11<\/td><td>ThreadGroup getParent()This method returns the parent of this thread group.<\/td><\/tr><tr><td>12<\/td><td>void interrupt()This method interrupts all threads in this thread group.<\/td><\/tr><tr><td>13<\/td><td>boolean daemon()This method Tests if this thread group is a daemon thread group.<\/td><\/tr><tr><td>14<\/td><td>boolean is destroyed()This method tests if this thread group has been destroyed.<\/td><\/tr><tr><td>15<\/td><td>void list()This method prints information about this thread group to the standard output.<\/td><\/tr><tr><td>16<\/td><td>boolean parent(ThreadGroup g)This method tests if this thread group is either the thread group argument or one of its ancestor thread groups.<\/td><\/tr><tr><td>17<\/td><td>void setDaemon(boolean daemon)This method changes the daemon status of this thread group.<\/td><\/tr><tr><td>18<\/td><td>void set a priority(int pri)This method sets the maximum priority of the group.<\/td><\/tr><tr><td>19<\/td><td>String toString()This method returns a string representation of this Thread group.<\/td><\/tr><tr><td>20<\/td><td>void uncaughtException(Thread t, Throwable e)This method called by the Java Virtual Machine when a thread in this thread group stops because of an uncaught exception, and the thread does not have a specific Thread.UncaughtExceptionHandler installed.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.ThreadGroup&nbsp;class represents a set of threads. It can also include other thread groups. The thread groups form a tree in which every thread group except the initial thread group has a parent. Class Declaration Following is the declaration for&nbsp;java.lang.ThreadGroup&nbsp;class \u2212 Class constructors Sr.No. Constructor &amp; Description 1 ThreadGroup(String name)This constructs a new thread group. [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2168"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2168"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2168\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2169,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2168\/revisions\/2169"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2168"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2168"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2168"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2171,
        "date": "2021-04-12T11:24:03",
        "date_gmt": "2021-04-12T11:24:03",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2171"
        },
        "modified": "2021-04-12T11:24:03",
        "modified_gmt": "2021-04-12T11:24:03",
        "slug": "threadlocal-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/threadlocal-class\/",
        "title": {
            "rendered": "ThreadLocal Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.ThreadLocal<\/strong>&nbsp;class provides thread-local variables.<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.ThreadLocal<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class ThreadLocal&lt;T&gt;\n   extends Object\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>ThreadLocal()<\/strong>This creates a thread local variable.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>T get()This method returns the value in the current thread&#8217;s copy of this thread-local variable.<\/td><\/tr><tr><td>2<\/td><td>protected T initialValue()This method returns the current thread&#8217;s &#8220;initial value&#8221; for this thread-local variable.<\/td><\/tr><tr><td>3<\/td><td>void remove()This method removes the current thread&#8217;s value for this thread-local variable.<\/td><\/tr><tr><td>4<\/td><td>void set(T value)This method sets the current thread&#8217;s copy of this thread-local variable to the specified value.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><\/ul>\n\n\n\n<p><\/p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.ThreadLocal&nbsp;class provides thread-local variables. Class Declaration Following is the declaration for&nbsp;java.lang.ThreadLocal&nbsp;class \u2212 Class constructors Sr.No. Constructor &amp; Description 1 ThreadLocal()This creates a thread local variable. Class methods Sr.No. Method &amp; Description 1 T get()This method returns the value in the current thread&#8217;s copy of this thread-local variable. 2 protected T initialValue()This method returns the [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2171"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2171"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2171\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2172,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2171\/revisions\/2172"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2171"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2171"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2171"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2173,
        "date": "2021-04-12T11:25:33",
        "date_gmt": "2021-04-12T11:25:33",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2173"
        },
        "modified": "2021-04-12T11:25:33",
        "modified_gmt": "2021-04-12T11:25:33",
        "slug": "throwable-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/throwable-class\/",
        "title": {
            "rendered": "Throwable Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.Throwable<\/strong>&nbsp;class is the superclass of all errors and exceptions in the Java language. Only objects that are instances of this class (or one of its subclasses) are thrown by the Java Virtual Machine or can be thrown by the Java throw statement.<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.Throwable<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class Throwable\n   extends Object\n      implements Serializable\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>Throwable()<\/strong>This constructs a new throwable with null as its detail message.<\/td><\/tr><tr><td>2<\/td><td><strong>Throwable(String message)<\/strong>This constructs a new throwable with the specified detail message.<\/td><\/tr><tr><td>3<\/td><td><strong>Throwable(String message, Throwable cause)<\/strong>This constructs a new throwable with the specified detail message and cause.<\/td><\/tr><tr><td>4<\/td><td><strong>Throwable(Throwable cause)<\/strong>This constructs a new throwable with the specified cause and a detail message of (cause==null ? null : cause.toString()) (which typically contains the class and detail message of cause).<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>Throwable fillInStackTrace()This method fills in the execution stack trace.<\/td><\/tr><tr><td>2<\/td><td>Throwable getCause()This method returns the cause of this throwable or null if the cause is nonexistent or unknown.<\/td><\/tr><tr><td>3<\/td><td>String getLocalizedMessage()This method creates a localized description of this throwable.<\/td><\/tr><tr><td>4<\/td><td>String getMessage()This method returns the detail message string of this throwable.<\/td><\/tr><tr><td>5<\/td><td>StackTraceElement[] getStackTrace()This method provides programmatic access to the stack trace information printed by printStackTrace().<\/td><\/tr><tr><td>6<\/td><td>Throwable initiate(Throwable cause)This method initializes the cause of this throwable to the specified value.<\/td><\/tr><tr><td>7<\/td><td>void printStackTrace()This method prints this throwable and its backtrace to the standard error stream.<\/td><\/tr><tr><td>8<\/td><td>void printStackTrace(PrintStream s)This method prints this throwable and its backtrace to the specified print stream.<\/td><\/tr><tr><td>9<\/td><td>void printStackTrace(PrintWriter s)This method prints this throwable and its backtrace to the specified print writer.<\/td><\/tr><tr><td>10<\/td><td>void setStackTrace(StackTraceElement[] stackTrace)This method sets the stack trace elements that will be returned by getStackTrace() and printed by printStackTrace() and related methods.<\/td><\/tr><tr><td>11<\/td><td>String toString()This method returns a short description of this throwable.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.Throwable&nbsp;class is the superclass of all errors and exceptions in the Java language. Only objects that are instances of this class (or one of its subclasses) are thrown by the Java Virtual Machine or can be thrown by the Java throw statement. Class Declaration Following is the declaration for&nbsp;java.lang.Throwable&nbsp;class \u2212 Class constructors Sr.No. Constructor [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2173"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2173"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2173\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2174,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2173\/revisions\/2174"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2173"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2173"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2173"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2175,
        "date": "2021-04-12T11:26:50",
        "date_gmt": "2021-04-12T11:26:50",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2175"
        },
        "modified": "2021-04-12T11:26:50",
        "modified_gmt": "2021-04-12T11:26:50",
        "slug": "void-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/void-class\/",
        "title": {
            "rendered": "Void Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.Void<\/strong>&nbsp;class is an uninstantiable placeholder class to hold a reference to the Class object representing the Java keyword void.<\/p>\n\n\n\n<h2>Class Declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.lang.Void<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class Void\n   extends Object\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.lang.Void<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static Class&lt;Void&gt; TYPE<\/strong>&nbsp;\u2212 This class object representing the pseudo-type corresponding to the keyword void.<\/li><\/ul>\n\n\n\n<h2>Class Methods<\/h2>\n\n\n\n<p>This class inherits methods from the following class \u2212<\/p>\n\n\n\n<ul><li>java.lang.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.Void&nbsp;class is an uninstantiable placeholder class to hold a reference to the Class object representing the Java keyword void. Class Declaration Following is the declaration for&nbsp;java.lang.Void&nbsp;class \u2212 Field Following are the fields for&nbsp;java.lang.Void&nbsp;class \u2212 static Class&lt;Void&gt; TYPE&nbsp;\u2212 This class object representing the pseudo-type corresponding to the keyword void. Class Methods This class inherits methods [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2175"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2175"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2175\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2176,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2175\/revisions\/2176"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2175"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2175"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2175"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2177,
        "date": "2021-04-12T11:27:48",
        "date_gmt": "2021-04-12T11:27:48",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2177"
        },
        "modified": "2021-04-12T11:27:48",
        "modified_gmt": "2021-04-12T11:27:48",
        "slug": "interfaces-2",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/interfaces-2\/",
        "title": {
            "rendered": "Interfaces"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.Interfaces<\/strong>&nbsp;provides different interfaces used under java lang package.<\/p>\n\n\n\n<h2>Interface Summary<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Interface &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>Appendable<\/strong>This is an object to which char sequences and values can be appended<\/td><\/tr><tr><td>2<\/td><td><strong>CharSequence<\/strong>This is a CharSequence is a readable sequence of char values.<\/td><\/tr><tr><td>3<\/td><td><strong>Cloneable<\/strong>This is a class implements the Cloneable interface to indicate to the Object.clone() method that it is legal for that method to make a field-for-field copy of instances of that class.<\/td><\/tr><tr><td>4<\/td><td><strong>Comparable&lt;T&gt;<\/strong>This imposes a total ordering on the objects of each class that implements it.<\/td><\/tr><tr><td>5<\/td><td><strong>Iterable&lt;T&gt;<\/strong>Implementing this interface allows an object to be the target of the &#8220;foreach&#8221; statement.<\/td><\/tr><tr><td>6<\/td><td><strong>Readable<\/strong>This is a Readable is a source of characters.<\/td><\/tr><tr><td>7<\/td><td><strong>Runnable<\/strong>This is the Runnable interface should be implemented by any class whose instances are intended to be executed by a thread.<\/td><\/tr><tr><td>8<\/td><td><strong>Thread.UncaughtExceptionHandler<\/strong>This is the Interface for handlers invoked when a Thread abruptly terminates due to an uncaught exception.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.Interfaces&nbsp;provides different interfaces used under java lang package. Interface Summary Sr.No. Interface &amp; Description 1 AppendableThis is an object to which char sequences and values can be appended 2 CharSequenceThis is a CharSequence is a readable sequence of char values. 3 CloneableThis is a class implements the Cloneable interface to indicate to the Object.clone() [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2177"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2177"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2177\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2178,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2177\/revisions\/2178"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2177"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2177"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2177"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2179,
        "date": "2021-04-12T11:28:40",
        "date_gmt": "2021-04-12T11:28:40",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2179"
        },
        "modified": "2021-04-12T11:28:40",
        "modified_gmt": "2021-04-12T11:28:40",
        "slug": "errors",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/errors\/",
        "title": {
            "rendered": "Errors"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.Errors<\/strong>&nbsp;provides for different errors thrown under java lang package.<\/p>\n\n\n\n<h2>Error Summary<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Error &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>AbstractMethodError<\/strong>This is Thrown when an application tries to call an abstract method.<\/td><\/tr><tr><td>2<\/td><td><strong>AssertionError<\/strong>This is Thrown to indicate that an assertion has failed.<\/td><\/tr><tr><td>3<\/td><td><strong>ClassCircularityError<\/strong>This is Thrown when a circularity has been detected while initializing a class.<\/td><\/tr><tr><td>4<\/td><td><strong>ClassFormatError<\/strong>This is Thrown when the Java Virtual Machine attempts to read a class file and determines that the file is malformed or otherwise cannot be interpreted as a class file.<\/td><\/tr><tr><td>5<\/td><td><strong>Error<\/strong>This is an Error is a subclass of Throwable that indicates serious problems that a reasonable application should not try to catch.<\/td><\/tr><tr><td>6<\/td><td><strong>ExceptionInInitializerError<\/strong>These are the Signals that an unexpected exception has occurred in a static initializer.<\/td><\/tr><tr><td>7<\/td><td><strong>IllegalAccessError<\/strong>This is Thrown if an application attempts to access or modify a field, or to call a method that it does not have access to<\/td><\/tr><tr><td>8<\/td><td><strong>IncompatibleClassChangeError<\/strong>This is Thrown when an incompatible class change has occurred to some class definition.<\/td><\/tr><tr><td>9<\/td><td><strong>InstantiationError<\/strong>This is Thrown when an application tries to use the Java new construct to instantiate an abstract class or an interface.<\/td><\/tr><tr><td>10<\/td><td><strong>InternalError<\/strong>This is Thrown to indicate some unexpected internal error has occurred in the Java Virtual Machine.<\/td><\/tr><tr><td>11<\/td><td><strong>LinkageError<\/strong>The Subclasses of LinkageError indicate that a class has some dependency on another class.<\/td><\/tr><tr><td>12<\/td><td><strong>NoClassDefFoundError<\/strong>This is Thrown if the Java Virtual Machine or a ClassLoader instance tries to load in the definition of a class and no definition of the class could be found.<\/td><\/tr><tr><td>13<\/td><td><strong>NoSuchFieldError<\/strong>This is Thrown if an application tries to access or modify a specified field of an object, and that object no longer has that field.<\/td><\/tr><tr><td>14<\/td><td><strong>NoSuchMethodError<\/strong>This is Thrown if an application tries to call a specified method of a class (either static or instance), and that class no longer has a definition of that method.<\/td><\/tr><tr><td>15<\/td><td><strong>OutOfMemoryError<\/strong>This is Thrown when the Java Virtual Machine cannot allocate an object because it is out of memory, and no more memory could be made available by the garbage collector.<\/td><\/tr><tr><td>16<\/td><td><strong>StackOverflowError<\/strong>This is Thrown when a stack overflow occurs because an application recurses too deeply.<\/td><\/tr><tr><td>17<\/td><td><strong>ThreadDeath<\/strong>This is an instance of ThreadDeath is thrown in the victim thread when the stop method with zero arguments in class Thread is called.<\/td><\/tr><tr><td>18<\/td><td><strong>UnknownError<\/strong>This is Thrown when an unknown but serious exception has occurred in the Java Virtual Machine.<\/td><\/tr><tr><td>19<\/td><td><strong>UnsatisfiedLinkError<\/strong>This is Thrown if the Java Virtual Machine cannot find an appropriate native-language definition of a method declared native.<\/td><\/tr><tr><td>20<\/td><td><strong>UnsupportedClassVersionError<\/strong>This is Thrown when the Java Virtual Machine attempts to read a class file and determines that the major and minor version numbers in the file are not supported.<\/td><\/tr><tr><td>21<\/td><td><strong>VerifyError<\/strong>This is Thrown when the &#8220;verifier&#8221; detects that a class file, though well formed, contains some sort of internal inconsistency or security problem.<\/td><\/tr><tr><td>22<\/td><td><strong>VirtualMachineError<\/strong>This is Thrown to indicate that the Java Virtual Machine is broken or has run out of resources necessary for it to continue operating.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.Errors&nbsp;provides for different errors thrown under java lang package. Error Summary Sr.No. Error &amp; Description 1 AbstractMethodErrorThis is Thrown when an application tries to call an abstract method. 2 AssertionErrorThis is Thrown to indicate that an assertion has failed. 3 ClassCircularityErrorThis is Thrown when a circularity has been detected while initializing a class. 4 [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2179"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2179"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2179\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2180,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2179\/revisions\/2180"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2179"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2179"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2179"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2181,
        "date": "2021-04-12T11:29:34",
        "date_gmt": "2021-04-12T11:29:34",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2181"
        },
        "modified": "2021-04-12T11:29:34",
        "modified_gmt": "2021-04-12T11:29:34",
        "slug": "exceptions-2",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/exceptions-2\/",
        "title": {
            "rendered": "Exceptions"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.lang.Exceptions<\/strong>&nbsp;provides for different exceptions thrown under java lang package.<\/p>\n\n\n\n<h2>Exception Summary<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Exception &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>ArithmeticException<\/strong>This is Thrown when an exceptional arithmetic condition has occurred.<\/td><\/tr><tr><td>2<\/td><td><strong>ArrayIndexOutOfBoundsException<\/strong>This is Thrown to indicate that an array has been accessed with an illegal index.<\/td><\/tr><tr><td>3<\/td><td><strong>ArrayStoreException<\/strong>This is Thrown to indicate that an attempt has been made to store the wrong type of object into an array of objects.<\/td><\/tr><tr><td>4<\/td><td><strong>ClassCastException<\/strong>This is Thrown to indicate that the code has attempted to cast an object to a subclass of which it is not an instance.<\/td><\/tr><tr><td>5<\/td><td><strong>ClassNotFoundException<\/strong>This is Thrown when an application tries to load in a class through its string name using: The forName method in class Class.<\/td><\/tr><tr><td>6<\/td><td><strong>CloneNotSupportedException<\/strong>This is Thrown to indicate that the clone method in class Object has been called to clone an object, but that the object&#8217;s class does not implement the Cloneable interface.<\/td><\/tr><tr><td>7<\/td><td><strong>EnumConstantNotPresentException<\/strong>This is Thrown when an application tries to access an enum constant by name and the enum type contains no constant with the specified name.<\/td><\/tr><tr><td>8<\/td><td><strong>Exception<\/strong>This is the class Exception and its subclasses are a form of Throwable that indicates conditions that a reasonable application might want to catch.<\/td><\/tr><tr><td>9<\/td><td><strong>IllegalAccessException<\/strong>This is an IllegalAccessException is thrown when an application tries to reflectively create an instance (other than an array), set or get a field, or invoke a method, but the currently executing method does not have access to the definition of the specified class, field, method or constructor.<\/td><\/tr><tr><td>10<\/td><td><strong>IllegalArgumentException<\/strong>This is Thrown to indicate that a method has been passed an illegal or inappropriate argument.<\/td><\/tr><tr><td>11<\/td><td><strong>IllegalMonitorStateException<\/strong>This is Thrown to indicate that a thread has attempted to wait on an object&#8217;s monitor or to notify other threads waiting on an object&#8217;s monitor without owning the specified monitor.<\/td><\/tr><tr><td>12<\/td><td><strong>IllegalStateException<\/strong>The Signals that a method has been invoked at an illegal or inappropriate time.<\/td><\/tr><tr><td>13<\/td><td><strong>IllegalThreadStateException<\/strong>This is Thrown to indicate that a thread is not in an appropriate state for the requested operation.<\/td><\/tr><tr><td>14<\/td><td><strong>IndexOutOfBoundsException<\/strong>This is Thrown to indicate that an index of some sort (such as to an array, to a string, or to a vector) is out of range.<\/td><\/tr><tr><td>15<\/td><td><strong>InstantiationException<\/strong>This is Thrown when an application tries to create an instance of a class using the newInstance method in class Class, but the specified class object cannot be instantiated.<\/td><\/tr><tr><td>16<\/td><td><strong>InterruptedException<\/strong>This is Thrown when a thread is waiting, sleeping, or otherwise occupied, and the thread is interrupted, either before or during the activity.<\/td><\/tr><tr><td>17<\/td><td><strong>NegativeArraySizeException<\/strong>This is Thrown if an application tries to create an array with negative size.<\/td><\/tr><tr><td>18<\/td><td><strong>NoSuchFieldException<\/strong>The Signals that the class doesn&#8217;t have a field of a specified name.<\/td><\/tr><tr><td>19<\/td><td><strong>NoSuchMethodException<\/strong>This is Thrown when a particular method cannot be found.<\/td><\/tr><tr><td>20<\/td><td><strong>NullPointerException<\/strong>This is Thrown when an application attempts to use null in a case where an object is required.<\/td><\/tr><tr><td>21<\/td><td><strong>NumberFormatException<\/strong>This is Thrown to indicate that the application has attempted to convert a string to one of the numeric types, but that the string does not have the appropriate format.<\/td><\/tr><tr><td>22<\/td><td><strong>RuntimeException<\/strong>This is RuntimeException is the superclass of those exceptions that can be thrown during the normal operation of the Java Virtual Machine.<\/td><\/tr><tr><td>23<\/td><td><strong>SecurityException<\/strong>This is Thrown by the security manager to indicate a security violation.<\/td><\/tr><tr><td>24<\/td><td><strong>StringIndexOutOfBoundsException<\/strong>This is Thrown by String methods to indicate that an index is either negative or greater than the size of the string.<\/td><\/tr><tr><td>25<\/td><td><strong>TypeNotPresentException<\/strong>This is Thrown when an application tries to access a type using a string representing the type&#8217;s name, but no definition for the type with the specified name can be found.<\/td><\/tr><tr><td>26<\/td><td><strong>UnsupportedOperationException<\/strong>This is Thrown to indicate that the requested operation is not supported.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.lang.Exceptions&nbsp;provides for different exceptions thrown under java lang package. Exception Summary Sr.No. Exception &amp; Description 1 ArithmeticExceptionThis is Thrown when an exceptional arithmetic condition has occurred. 2 ArrayIndexOutOfBoundsExceptionThis is Thrown to indicate that an array has been accessed with an illegal index. 3 ArrayStoreExceptionThis is Thrown to indicate that an attempt has been made [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            80
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2181"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2181"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2181\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2182,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2181\/revisions\/2182"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2181"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2181"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2181"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    }
]