[
    {
        "id": 1969,
        "date": "2021-04-10T10:57:52",
        "date_gmt": "2021-04-10T10:57:52",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=1969"
        },
        "modified": "2021-04-10T10:57:52",
        "modified_gmt": "2021-04-10T10:57:52",
        "slug": "clock-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/clock-class\/",
        "title": {
            "rendered": "Clock Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.time.Clock<\/strong>&nbsp;class provides access to the current instant, date and time using a time-zone.<\/p>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.io.Clock<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public abstract class Clock\n   extends Object\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>protected Clock()<\/strong>This creates a Clock.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>boolean equals(Object obj)This method checks if this clock is equal to another clock.<\/td><\/tr><tr><td>2<\/td><td>static Clock fixed(Instant fixed instant, ZoneId zone)This method obtains a clock that always returns the same instant.<\/td><\/tr><tr><td>3<\/td><td>abstract ZoneId get one()This method gets the time zone is used to create dates and times.<\/td><\/tr><tr><td>4<\/td><td>int hashCode()This method gets a hash code for this clock.<\/td><\/tr><tr><td>5<\/td><td>int instant()This method gets the current instant of the clock.<\/td><\/tr><tr><td>6<\/td><td>long millis ()This method gets the current millisecond instant of the clock.<\/td><\/tr><tr><td>7<\/td><td>static Clock offset(Clock base clock, Duration offsetDuration)This method obtains a clock that returns instants from the specified clock with the specified duration added.<\/td><\/tr><tr><td>8<\/td><td>static Clock system(ZoneId zone)This method obtains a clock that returns the current instant using the best available system clock.<\/td><\/tr><tr><td>9<\/td><td>static Clock system default one()This method obtains a clock that returns the current instant using the best available system clock, converting to date and time using the default time-zone.<\/td><\/tr><tr><td>10<\/td><td>static Clock systematic()This method obtains a clock that returns the current instant using the best available system clock, converting to date and time using the UTC time-zone.<\/td><\/tr><tr><td>11<\/td><td>static Clock tick(Clock base clock, Duration tick duration)This method obtains a clock that returns instants from the specified clock truncated to the nearest occurrence of the specified duration.<\/td><\/tr><tr><td>12<\/td><td>static Clock tickMinutes(ZoneId zone)This method obtains a clock that returns the current instant ticking in whole minutes using the best available system clock.<\/td><\/tr><tr><td>13<\/td><td>static Clock tickSeconds(ZoneId zone)This method obtains a clock that returns the current instant ticking in whole seconds using the best available system clock.<\/td><\/tr><tr><td>14<\/td><td>static Clock with one(ZoneId zone)This method returns a copy of this clock with a different time zone.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>Java.lang.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.time.Clock&nbsp;class provides access to the current instant, date and time using a time-zone. Class declaration Following is the declaration for&nbsp;java.io.Clock&nbsp;class \u2212 Class constructors Sr.No. Constructor &amp; Description 1 protected Clock()This creates a Clock. Class methods Sr.No. Method &amp; Description 1 boolean equals(Object obj)This method checks if this clock is equal to another clock. 2 [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            78
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1969"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=1969"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1969\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1970,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1969\/revisions\/1970"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=1969"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=1969"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=1969"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 1971,
        "date": "2021-04-10T11:02:20",
        "date_gmt": "2021-04-10T11:02:20",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=1971"
        },
        "modified": "2021-04-10T11:02:20",
        "modified_gmt": "2021-04-10T11:02:20",
        "slug": "duration-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/duration-class\/",
        "title": {
            "rendered": "Duration Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.time.Duration<\/strong>&nbsp;class models a quantity or amount of time in terms of seconds and nanoseconds. It can be accessed using other duration-based units, such as minutes and hours.<\/p>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.time.Duration<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class Duration\n   extends Object\n      implements TemporalAmount, Comparable&lt;Duration&gt;, Serializable\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.time.Duration<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static Duration ZERO<\/strong>&nbsp;\u2212 Constant for a duration of zero.<\/li><\/ul>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>Duration abs()Returns a copy of this duration with a positive length.<\/td><\/tr><tr><td>2<\/td><td>Temporal addTo(Temporal temporal)Adds this duration to the specified temporal object.<\/td><\/tr><tr><td>3<\/td><td>static Duration between(Temporal startInclusive, Temporal endExclusive)Obtains a Duration representing the duration between two temporal objects.<\/td><\/tr><tr><td>4<\/td><td>int compareTo(Duration otherDuration)Compares this duration to the specified Duration.<\/td><\/tr><tr><td>5<\/td><td>Duration dividedBy(long divisor)Returns a copy of this duration divided by the specified value.<\/td><\/tr><tr><td>6<\/td><td>boolean equals(Object otherDuration)Checks if this duration is equal to the specified Duration.<\/td><\/tr><tr><td>7<\/td><td>static Duratio from(TemporalAmount amount)Obtains an instance of Duration from a temporal amount.<\/td><\/tr><tr><td>8<\/td><td>long get(TemporalUnit unit)Gets the value of the requested unit.<\/td><\/tr><tr><td>9<\/td><td>int getNano()Gets the number of nanoseconds within the second in this duration.<\/td><\/tr><tr><td>10<\/td><td>long getSeconds()Gets the number of seconds in this duration.<\/td><\/tr><tr><td>11<\/td><td>List&lt;TemporalUnit> getUnits()Gets the set of units supported by this duration.<\/td><\/tr><tr><td>12<\/td><td>int hashCode()A hash code for this duration.<\/td><\/tr><tr><td>13<\/td><td>boolean isNegative()Checks if this duration is negative, excluding zero.<\/td><\/tr><tr><td>14<\/td><td>boolean isZero()Checks if this duration is zero length.<\/td><\/tr><tr><td>15<\/td><td>Duration minus(Duration duration)Returns a copy of this duration with the specified duration subtracted.<\/td><\/tr><tr><td>16<\/td><td>Duration minus(long amountToSubtract, TemporalUnit unit)Returns a copy of this duration with the specified duration subtracted.<\/td><\/tr><tr><td>17<\/td><td>Duration minusDays(long daysToSubtract)Returns a copy of this duration with the specified duration in standard 24 hour days subtracted.<\/td><\/tr><tr><td>18<\/td><td>Duration minusHours(long hoursToSubtract)Returns a copy of this duration with the specified duration in hours subtracted.<\/td><\/tr><tr><td>19<\/td><td>Duration minusMillis(long millisToSubtract)Returns a copy of this duration with the specified duration in milliseconds subtracted.<\/td><\/tr><tr><td>20<\/td><td>Duration minusMinutes(long minutesToSubtract)Returns a copy of this duration with the specified duration in minutes subtracted.<\/td><\/tr><tr><td>21<\/td><td>Duration minusNanos(long nanosToSubtract)Returns a copy of this duration with the specified duration in nanoseconds subtracted.<\/td><\/tr><tr><td>22<\/td><td>Duration minusSeconds(long secondsToSubtract)Returns a copy of this duration with the specified duration in seconds subtracted.<\/td><\/tr><tr><td>23<\/td><td>Duration multipliedBy(long multiplicand)Returns a copy of this duration multiplied by the scalar.<\/td><\/tr><tr><td>24<\/td><td>Duration negated()Returns a copy of this duration with the length negated.<\/td><\/tr><tr><td>25<\/td><td>static Duration of(long amount, TemporalUnit unit)Obtains a Duration representing an amount in the specified unit.<\/td><\/tr><tr><td>26<\/td><td>static Duration ofDays(long days)Obtains a Duration representing a number of standard 24 hour days.<\/td><\/tr><tr><td>27<\/td><td>static Duration ofHours(long hours)Obtains a Duration representing a number of standard hours.<\/td><\/tr><tr><td>28<\/td><td>static Duration ofMillis(long millis)Obtains a Duration representing a number of milliseconds.<\/td><\/tr><tr><td>29<\/td><td>static Duration ofMinutes(long minutes)Obtains a Duration representing a number of standard minutes.<\/td><\/tr><tr><td>30<\/td><td>static Duration ofNanos(long nanos)Obtains a Duration representing a number of nanoseconds.<\/td><\/tr><tr><td>31<\/td><td>static Duration of seconds(long seconds)Obtains a Duration representing a number of seconds.<\/td><\/tr><tr><td>32<\/td><td>static Duration of seconds(long seconds, long nanoAdjustment)Obtains a Duration representing a number of seconds and an adjustment in nanoseconds.<\/td><\/tr><tr><td>33<\/td><td>static Duration parse(CharSequence text)Obtains a Duration from a text string such as PnDTnHnMn.nS.<\/td><\/tr><tr><td>34<\/td><td>Duration plus(Duration duration)Returns a copy of this duration with the specified duration added.<\/td><\/tr><tr><td>35<\/td><td>Duration plus(long amount to add, TemporalUnit unit)Returns a copy of this duration with the specified duration added.<\/td><\/tr><tr><td>36<\/td><td>Duration plus days(long day to add)Returns a copy of this duration with the specified duration in standard 24 hour days added.<\/td><\/tr><tr><td>37<\/td><td>Duration plus hours(long hours to add)Returns a copy of this duration with the specified duration in hours added.<\/td><\/tr><tr><td>38<\/td><td>Duration plus mills(long millisToAdd)Returns a copy of this duration with the specified duration in milliseconds added.<\/td><\/tr><tr><td>39<\/td><td>Duration plus minutes(long minutesToAdd)Returns a copy of this duration with the specified duration in minutes added.<\/td><\/tr><tr><td>40<\/td><td>Duration plusNanos(long nano to add)Returns a copy of this duration with the specified duration in nanoseconds added.<\/td><\/tr><tr><td>41<\/td><td>Duration plus seconds(long secondsToAdd)Returns a copy of this duration with the specified duration in seconds added.<\/td><\/tr><tr><td>42<\/td><td>Temporal subtract from(Temporal temporal)Subtracts this duration from the specified temporal object.<\/td><\/tr><tr><td>43<\/td><td>long days()Gets the number of days in this duration.<\/td><\/tr><tr><td>44<\/td><td>long tours()Gets the number of hours in this duration.<\/td><\/tr><tr><td>45<\/td><td>long to Millis()Converts this duration to the total length in milliseconds.<\/td><\/tr><tr><td>46<\/td><td>long minutes()Gets the number of minutes in this duration.<\/td><\/tr><tr><td>47<\/td><td>long to Nanos()Converts this duration to the total length in nanoseconds expressed as along.<\/td><\/tr><tr><td>48<\/td><td>String toString()A string representation of this duration using ISO-8601 seconds based representation, such as PT8H6M12.345S.<\/td><\/tr><tr><td>49<\/td><td>Duration with Nanos(int nanosecond)Returns a copy of this duration with the specified nano-of-second.<\/td><\/tr><tr><td>50<\/td><td>Duration with seconds(long seconds)Returns a copy of this duration with the specified amount of seconds.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.time.Duration&nbsp;class models a quantity or amount of time in terms of seconds and nanoseconds. It can be accessed using other duration-based units, such as minutes and hours. Class declaration Following is the declaration for&nbsp;java.time.Duration&nbsp;class \u2212 Field Following are the fields for&nbsp;java.time.Duration&nbsp;class \u2212 static Duration ZERO&nbsp;\u2212 Constant for a duration of zero. Class methods Sr.No. [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            78
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1971"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=1971"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1971\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1972,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1971\/revisions\/1972"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=1971"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=1971"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=1971"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 1973,
        "date": "2021-04-10T11:05:39",
        "date_gmt": "2021-04-10T11:05:39",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=1973"
        },
        "modified": "2021-04-10T11:05:39",
        "modified_gmt": "2021-04-10T11:05:39",
        "slug": "instant-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/instant-class\/",
        "title": {
            "rendered": "Instant Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.time.Instant<\/strong>&nbsp;class models a single instantaneous point on the time-line.<\/p>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.time.Instant<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class Instant\n   extends Object\n      implements Temporal, TemporalAdjuster, Comparable, Serializable\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<ul><li>Following are the fields for&nbsp;<strong>Java.time.Instant<\/strong>&nbsp;class \u2212<\/li><\/ul>\n\n\n\n<ul><li><strong>static Instant EPOCH<\/strong>&nbsp;\u2212 Constant for the 1970-01-01T00:00:00Z epoch instant.<\/li><li><strong>static Instant MAX<\/strong>&nbsp;\u2212 The maximum supported Instant, &#8216;1000000000-12-31T23:59:59.999999999Z&#8217;.<\/li><li><strong>static Instant MIN<\/strong>&nbsp;\u2212 The minimum supported Instant, &#8216;-1000000000-01-01T00:00Z&#8217;.<\/li><\/ul>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>Temporal adjustInto(Temporal temporal)Adjusts the specified temporal object to have this instant.<\/td><\/tr><tr><td>2<\/td><td>OffsetDateTime atOffset(ZoneOffset offset)Combines this instant with an offset to create an OffsetDateTime.<\/td><\/tr><tr><td>3<\/td><td>ZonedDateTime atZone(ZoneId zone)Combines this instant with a time-zone to create a ZonedDateTime.<\/td><\/tr><tr><td>4<\/td><td>int compareTo(Instant otherInstant)Compares this instant to the specified instant.<\/td><\/tr><tr><td>5<\/td><td>boolean equals(Object otherInstant)Checks if this instant is equal to the specified instant.<\/td><\/tr><tr><td>6<\/td><td>static Instant from(TemporalAccessor temporal)Obtains an instance of Instant from a temporal object.<\/td><\/tr><tr><td>7<\/td><td>int get(TemporalField field)Gets the value of the specified field from this instant as an int.<\/td><\/tr><tr><td>8<\/td><td>long getEpochSecond()Gets the number of seconds from the Java epoch of 1970-01-01T00:00:00Z.<\/td><\/tr><tr><td>9<\/td><td>long getLong(TemporalField field)Gets the value of the specified field from this instant as a long.<\/td><\/tr><tr><td>10<\/td><td>int getNano()Gets the number of nanoseconds, later along the time-line, from the start of the second.<\/td><\/tr><tr><td>11<\/td><td>int hashCode()Returns a hash code for this instant.<\/td><\/tr><tr><td>12<\/td><td>boolean isAfter(Instant otherInstant)Checks if this instant is after the specified instant.<\/td><\/tr><tr><td>13<\/td><td>boolean isBefore(Instant otherInstant)Checks if this instant is before the specified instant.<\/td><\/tr><tr><td>14<\/td><td>boolean isSupported(TemporalField field)Checks if the specified field is supported.<\/td><\/tr><tr><td>15<\/td><td>boolean isSupported(TemporalUnit unit)Checks if the specified unit is supported.<\/td><\/tr><tr><td>16<\/td><td>Instant minus(long amountToSubtract, TemporalUnit unit)Returns a copy of this instant with the specified amount subtracted.<\/td><\/tr><tr><td>17<\/td><td>Instant minus(TemporalAmount amountToSubtract)Returns a copy of this instant with the specified amount subtracted.<\/td><\/tr><tr><td>18<\/td><td>Instant minusMillis(long millisToSubtract)Returns a copy of this instant with the specified duration in milliseconds subtracted.<\/td><\/tr><tr><td>19<\/td><td>Instant minusNanos(long nanosToSubtract)Returns a copy of this instant with the specified duration in nanoseconds subtracted.<\/td><\/tr><tr><td>20<\/td><td>Instant minusSeconds(long seconds to subtract)Returns a copy of this instant with the specified duration in seconds subtracted.<\/td><\/tr><tr><td>21<\/td><td>static Instant now()Obtains the current instant from the system clock.<\/td><\/tr><tr><td>22<\/td><td>static Instant now(Clock clock)Obtains the current instant from the specified clock.<\/td><\/tr><tr><td>23<\/td><td>static Instant ofEpochMilli(long epochMilli)Obtains an instance of Instant using milliseconds from the epoch of 1970-01-01T00:00:00Z.<\/td><\/tr><tr><td>24<\/td><td>static Instant ofEpochSecond(long epochSecond)Obtains an instance of Instant using seconds from the epoch of 1970-01-01T00:00:00Z.<\/td><\/tr><tr><td>25<\/td><td>static Instant ofEpochSecond(long epochSecond, long nanoAdjustment)Obtains an instance of Instant using seconds from the epoch of 1970-01-01T00:00:00Z and nanosecond fraction of second.<\/td><\/tr><tr><td>26<\/td><td>static Instant parse(CharSequence text)Obtains an instance of Instant from a text string such as 2007-12-03T10:15:30.00Z.<\/td><\/tr><tr><td>27<\/td><td>Instant plus(long amount to add, TemporalUnit unit)Returns a copy of this instant with the specified amount added.<\/td><\/tr><tr><td>28<\/td><td>Instant plus(TemporalAmount amount to add)Returns a copy of this instant with the specified amount added.<\/td><\/tr><tr><td>29<\/td><td>Instant plus mills(long millisToAdd)Returns a copy of this instant with the specified duration in milliseconds added.<\/td><\/tr><tr><td>30<\/td><td>Instant plusNanos(long nano to add)Returns a copy of this instant with the specified duration in nanoseconds added.<\/td><\/tr><tr><td>31<\/td><td>Instant plus seconds(long secondsToAdd)Returns a copy of this instant with the specified duration in seconds added.<\/td><\/tr><tr><td>32<\/td><td>R query(TemporalQuery\u00a0query)Queries this instant using the specified query.<\/td><\/tr><tr><td>33<\/td><td>ValueRange range(TemporalField field)Gets the range of valid values for the specified field.<\/td><\/tr><tr><td>34<\/td><td>long toEpochMilli()Converts this instant to the number of milliseconds from the epoch of 1970-01-01T00:00:00Z.<\/td><\/tr><tr><td>35<\/td><td>String toString()A string representation of this instant using ISO-8601 representation.<\/td><\/tr><tr><td>36<\/td><td>Instant truncated(TemporalUnit unit)Returns a copy of this Instant truncated to the specified unit.<\/td><\/tr><tr><td>37<\/td><td>long until(Temporal endExclusive, TemporalUnit unit)Calculates the amount of time until another instant in terms of the specified unit.<\/td><\/tr><tr><td>38<\/td><td>Instant with(TemporalAdjuster adjuster)Returns an adjusted copy of this instant.<\/td><\/tr><tr><td>39<\/td><td>Instant with(TemporalField field, long newValue)Returns a copy of this instant with the specified field set to a new value.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.time.Instant&nbsp;class models a single instantaneous point on the time-line. Class declaration Following is the declaration for&nbsp;java.time.Instant&nbsp;class \u2212 Field Following are the fields for&nbsp;Java.time.Instant&nbsp;class \u2212 static Instant EPOCH&nbsp;\u2212 Constant for the 1970-01-01T00:00:00Z epoch instant. static Instant MAX&nbsp;\u2212 The maximum supported Instant, &#8216;1000000000-12-31T23:59:59.999999999Z&#8217;. static Instant MIN&nbsp;\u2212 The minimum supported Instant, &#8216;-1000000000-01-01T00:00Z&#8217;. Class methods Sr.No. Method &amp; [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            78
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1973"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=1973"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1973\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1974,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1973\/revisions\/1974"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=1973"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=1973"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=1973"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 1975,
        "date": "2021-04-10T11:11:03",
        "date_gmt": "2021-04-10T11:11:03",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=1975"
        },
        "modified": "2021-04-10T11:11:03",
        "modified_gmt": "2021-04-10T11:11:03",
        "slug": "localdate-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/localdate-class\/",
        "title": {
            "rendered": "LocalDate Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.time.LocalDate<\/strong>&nbsp;class represents a date without a time-zone in the ISO-8601 calendar system, such as 2007-12-03.<\/p>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.time.LocalDate<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class LocalDate\n   extends Object\n      implements Temporal, TemporalAdjuster, ChronoLocalDate, Serializable\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<ul><li>Following are the fields for&nbsp;<strong>java.time.LocalDate<\/strong>&nbsp;class \u2212<\/li><\/ul>\n\n\n\n<ul><li><strong>static LocalDate MAX<\/strong>&nbsp;\u2212 The maximum supported LocalDate, &#8216;+999999999-12-31&#8217;.<\/li><li><strong>static LocalDate MIN<\/strong>&nbsp;\u2212 The minimum supported LocalDate, &#8216;-999999999-01-01&#8217;.<\/li><\/ul>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>Temporal adjustInto(Temporal temporal)Adjusts the specified temporal object to have the same date as this object.<\/td><\/tr><tr><td>2<\/td><td>LocalDateTime atStartOfDay()Combines this date with the time of midnight to create a LocalDateTime at the start of this date.<\/td><\/tr><tr><td>3<\/td><td>ZonedDateTime atStartOfDay(ZoneId zone)Returns a zoned date-time from this date at the earliest valid time according to the rules in the time-zone.<\/td><\/tr><tr><td>4<\/td><td>LocalDateTime atTime(int hour, int minute)Combines this date with a time to create a LocalDateTime.<\/td><\/tr><tr><td>5<\/td><td>LocalDateTime atTime(int hour, int minute, int second)Combines this date with a time to create a LocalDateTime.<\/td><\/tr><tr><td>6<\/td><td>LocalDateTime atTime(int hour, int minute, int second, int nanoOfSecond)Combines this date with a time to create a LocalDateTime.<\/td><\/tr><tr><td>7<\/td><td>LocalDateTime atTime(LocalTime time)Combines this date with a time to create a LocalDateTime.<\/td><\/tr><tr><td>8<\/td><td>OffsetDateTime atTime(OffsetTime time)Combines this date with an offset time to create an OffsetDateTime.<\/td><\/tr><tr><td>9<\/td><td>int compareTo(ChronoLocalDate other)Compares this date to another date.<\/td><\/tr><tr><td>10<\/td><td>boolean equals(Object obj)Checks if this date is equal to another date.<\/td><\/tr><tr><td>11<\/td><td>String format(DateTimeFormatter formatter)Formats this date using the specified formatter.<\/td><\/tr><tr><td>12<\/td><td>static LocalDate from(TemporalAccessor temporal)Obtains an instance of LocalDate from a temporal object.<\/td><\/tr><tr><td>13<\/td><td>int get(TemporalField field)Gets the value of the specified field from this date as an int.<\/td><\/tr><tr><td>14<\/td><td>IsoChronology getChronology()Gets the chronology of this date, which is the ISO calendar system.<\/td><\/tr><tr><td>15<\/td><td>int getDayOfMonth()Gets the day-of-month field.<\/td><\/tr><tr><td>16<\/td><td>DayOfWeek getDayOfWeek()Gets the day-of-week field, which is an enum DayOfWeek.<\/td><\/tr><tr><td>17<\/td><td>int getDayOfYear()Gets the day-of-year field.<\/td><\/tr><tr><td>18<\/td><td>Era getEra()Gets the era applicable at this date.<\/td><\/tr><tr><td>19<\/td><td>long getLong(TemporalField field)Gets the value of the specified field from this date as a long.<\/td><\/tr><tr><td>20<\/td><td>Month getMonth()Gets the month-of-year field using the Month enum.<\/td><\/tr><tr><td>21<\/td><td>int getMonthValue()Gets the month-of-year field from 1 to 12.<\/td><\/tr><tr><td>22<\/td><td>int getYear()Gets the year field.<\/td><\/tr><tr><td>23<\/td><td>int hashCode()A hash code for this date.<\/td><\/tr><tr><td>24<\/td><td>boolean isAfter(ChronoLocalDate other)Checks if this date is after the specified date.<\/td><\/tr><tr><td>25<\/td><td>boolean isBefore(ChronoLocalDate other)Checks if this date is before the specified date.<\/td><\/tr><tr><td>26<\/td><td>boolean isEqual(ChronoLocalDate other)Checks if this date is equal to the specified date.<\/td><\/tr><tr><td>27<\/td><td>boolean isLeapYear()Checks if the year is a leap year, according to the ISO proleptic calendar system rules.<\/td><\/tr><tr><td>28<\/td><td>boolean isSupported(TemporalField field)Checks if the specified field is supported.<\/td><\/tr><tr><td>29<\/td><td>boolean isSupported(TemporalUnit unit)Checks if the specified unit is supported.<\/td><\/tr><tr><td>30<\/td><td>int lengthOfMonth()Returns the length of the month represented by this date.<\/td><\/tr><tr><td>31<\/td><td>int lengthOfYear()Returns the length of the year represented by this date.<\/td><\/tr><tr><td>32<\/td><td>LocalDate minus(long amountToSubtract, TemporalUnit unit)Returns a copy of this date with the specified amount subtracted.<\/td><\/tr><tr><td>33<\/td><td>LocalDate minus(TemporalAmount amountToSubtract)Returns a copy of this date with the specified amount subtracted.<\/td><\/tr><tr><td>34<\/td><td>LocalDate minusDays(long daysToSubtract)Returns a copy of this LocalDate with the specified number of days subtracted.<\/td><\/tr><tr><td>35<\/td><td>LocalDate minusMonths(long monthsToSubtract)Returns a copy of this LocalDate with the specified number of months subtracted.<\/td><\/tr><tr><td>36<\/td><td>LocalDate minusWeeks(long weeksToSubtract)Returns a copy of this LocalDate with the specified number of weeks subtracted.<\/td><\/tr><tr><td>37<\/td><td>LocalDate minusYears(long yearsToSubtract)Returns a copy of this LocalDate with the specified number of years subtracted.<\/td><\/tr><tr><td>38<\/td><td>static LocalDate now()Obtains the current date from the system clock in the default time-zone.<\/td><\/tr><tr><td>39<\/td><td>static LocalDate now(Clock clock)Obtains the current date from the specified clock.<\/td><\/tr><tr><td>40<\/td><td>static LocalDate now(ZoneId zone)Obtains the current date from the system clock in the specified time-zone.<\/td><\/tr><tr><td>41<\/td><td>static LocalDate of(int year, int month, int dayOfMonth)Obtains an instance of LocalDate from a year, month and day.<\/td><\/tr><tr><td>42<\/td><td>static LocalDate of(int year, Month month, int dayOfMonth)Obtains an instance of LocalDate from a year, month and day.<\/td><\/tr><tr><td>43<\/td><td>static LocalDate ofEpochDay(long epochDay)Obtains an instance of LocalDate from the epoch day count.<\/td><\/tr><tr><td>44<\/td><td>static LocalDate ofYearDay(int year, int dayOfYear)Obtains an instance of LocalDate from a year and day-of-year.<\/td><\/tr><tr><td>45<\/td><td>static LocalDate parse(CharSequence text)Obtains an instance of LocalDate from a text string such as 2007-12-03.<\/td><\/tr><tr><td>46<\/td><td>static LocalDate parse(CharSequence text, DateTimeFormatter formatter)Obtains an instance of LocalDate from a text string using a specific formatter.<\/td><\/tr><tr><td>47<\/td><td>LocalDate plus(long amount to add, TemporalUnit unit)Returns a copy of this data with the specified amount added.<\/td><\/tr><tr><td>48<\/td><td>LocalDate plus(TemporalAmount amount to add)Returns a copy of this data with the specified amount added.<\/td><\/tr><tr><td>49<\/td><td>LocalDate plus days(long day to add)Returns a copy of this LocalDate with the specified number of days added.<\/td><\/tr><tr><td>50<\/td><td>LocalDate plus months(long monthsToAdd)Returns a copy of this LocalDate with the specified number of months added.<\/td><\/tr><tr><td>51<\/td><td>LocalDate plus weeks(long weeksToAdd)Returns a copy of this LocalDate with the specified number of weeks added.<\/td><\/tr><tr><td>52<\/td><td>LocalDate plus years(long yearsToAdd)Returns a copy of this LocalDate with the specified number of years added.<\/td><\/tr><tr><td>53<\/td><td>&lt;R> R query(TemporalQuery&lt;R> query)Queries this date using the specified query.<\/td><\/tr><tr><td>54<\/td><td>ValueRange range(TemporalField field)Gets the range of valid values for the specified field.<\/td><\/tr><tr><td>55<\/td><td>long toEpochDay()Converts this date to Epoch Day.<\/td><\/tr><tr><td>56<\/td><td>String toString()Outputs this date as a String, such as 2007-12-03.<\/td><\/tr><tr><td>57<\/td><td>The period until(ChronoLocalDate endDateExclusive)Calculates the period between this date and another date as a Period.<\/td><\/tr><tr><td>58<\/td><td>long until(Temporal endExclusive, TemporalUnit unit)Calculates the amount of time until another date in terms of the specified unit.<\/td><\/tr><tr><td>59<\/td><td>LocalDate with(TemporalAdjuster adjuster)Returns an adjusted copy of this date.<\/td><\/tr><tr><td>60<\/td><td>LocalDate with(TemporalField field, long newValue)Returns a copy of this date with the specified field set to a new value.<\/td><\/tr><tr><td>61<\/td><td>LocalDate withDayOfMonth(int day of the month)Returns a copy of this LocalDate with the day-of-month altered.<\/td><\/tr><tr><td>62<\/td><td>LocalDate withDayOfYear(int day of the year)Returns a copy of this LocalDate with the day-of-year altered.<\/td><\/tr><tr><td>63<\/td><td>LocalDate with the month(int month)Returns a copy of this LocalDate with the month-of-year altered.<\/td><\/tr><tr><td>64<\/td><td>LocalDate with year(int year)Returns a copy of this LocalDate with the year altered.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.time.LocalDate&nbsp;class represents a date without a time-zone in the ISO-8601 calendar system, such as 2007-12-03. Class declaration Following is the declaration for&nbsp;java.time.LocalDate&nbsp;class \u2212 Field Following are the fields for&nbsp;java.time.LocalDate&nbsp;class \u2212 static LocalDate MAX&nbsp;\u2212 The maximum supported LocalDate, &#8216;+999999999-12-31&#8217;. static LocalDate MIN&nbsp;\u2212 The minimum supported LocalDate, &#8216;-999999999-01-01&#8217;. Class methods Sr.No. Method &amp; Description 1 Temporal [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            78
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1975"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=1975"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1975\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1976,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1975\/revisions\/1976"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=1975"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=1975"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=1975"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 1977,
        "date": "2021-04-10T11:19:01",
        "date_gmt": "2021-04-10T11:19:01",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=1977"
        },
        "modified": "2021-04-10T11:19:01",
        "modified_gmt": "2021-04-10T11:19:01",
        "slug": "localdatetime-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/localdatetime-class\/",
        "title": {
            "rendered": "LocalDateTime Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.time.LocalDateTime<\/strong>&nbsp;class represents a date-time without a time-zone in the ISO-8601 calendar system, such as 2007-12-03T10:15:30.<\/p>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.time.LocalDateTime<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class LocalDateTime\n   extends Object\n      implements Temporal, TemporalAdjuster, ChronoLocalDateTime, Serializable\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.time.LocalDateTime<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static LocalDateTime MAX<\/strong>&nbsp;\u2212 The maximum supported LocalDateTime, &#8216;+999999999-12-31T23:59:59.999999999&#8217;.<\/li><li><strong>static LocalDateTime MIN<\/strong>&nbsp;\u2212 The minimum supported LocalDateTime, &#8216;-999999999-01-01T00:00:00&#8217;.<\/li><\/ul>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>Temporal adjustInto(Temporal temporal)Adjusts the specified temporal object to have the same date and time as this object.<\/td><\/tr><tr><td>2<\/td><td>OffsetDateTime atOffset(ZoneOffset offset)Combines this date-time with an offset time to create an OffsetDateTime.<\/td><\/tr><tr><td>3<\/td><td>ZonedDateTime atZone(ZoneId zone)Combines this date-time with a timezone to create a ZonedDateTime.<\/td><\/tr><tr><td>4<\/td><td>int compareTo(ChronoLocalDateTime&lt;?> other)Compares this date-time to another date-time.<\/td><\/tr><tr><td>5<\/td><td>boolean equals(Object obj)Checks if this date-time is equal to another date-time.<\/td><\/tr><tr><td>6<\/td><td>String format(DateTimeFormatter formatter)Formats this date-time using the specified formatter.<\/td><\/tr><tr><td>7<\/td><td>static LocalDateTime from(TemporalAccessor temporal)Obtains an instance of LocalDateTime from a temporal object.<\/td><\/tr><tr><td>8<\/td><td>int get(TemporalField field)Gets the value of the specified field from this date-time as an int.<\/td><\/tr><tr><td>9<\/td><td>int getDayOfMonth()Gets the day-of-month field.<\/td><\/tr><tr><td>10<\/td><td>DayOfWeek getDayOfWeek()Gets the day-of-week field, which is an enum DayOfWeek.<\/td><\/tr><tr><td>11<\/td><td>int getDayOfYear()Gets the day-of-year field.<\/td><\/tr><tr><td>12<\/td><td>int getHour()Gets the hour-of-day field.<\/td><\/tr><tr><td>13<\/td><td>long getLong(TemporalField field)Gets the value of the specified field from this date-time as a long.<\/td><\/tr><tr><td>14<\/td><td>Month getMinute()Gets the minute-of-hour field.<\/td><\/tr><tr><td>15<\/td><td>Month getMonth()Gets the month-of-year field using the Month enum.<\/td><\/tr><tr><td>16<\/td><td>int getMonthValue()Gets the month-of-year field from 1 to 12.<\/td><\/tr><tr><td>17<\/td><td>int getNano()Gets the nano-of-second field.<\/td><\/tr><tr><td>18<\/td><td>int getSecond()Gets the second-of-minute field.<\/td><\/tr><tr><td>19<\/td><td>int getYear()Gets the year field.<\/td><\/tr><tr><td>20<\/td><td>int hashCode()A hash code for this date-time.<\/td><\/tr><tr><td>21<\/td><td>boolean isAfter(ChronoLocalDateTime&lt;?> other)Checks if this date-time is after the specified date-time.<\/td><\/tr><tr><td>22<\/td><td>boolean isBefore(ChronoLocalDateTime&lt;?> other)Checks if this date-time is before the specified date-time.<\/td><\/tr><tr><td>23<\/td><td>boolean isEqual(ChronoLocalDateTime&lt;?> other)Checks if this date-time is equal to the specified date-time.<\/td><\/tr><tr><td>24<\/td><td>boolean isSupported(TemporalField field)Checks if the specified field is supported.<\/td><\/tr><tr><td>25<\/td><td>boolean isSupported(TemporalUnit unit)Checks if the specified unit is supported.<\/td><\/tr><tr><td>26<\/td><td>LocalDateTime minus(long amountToSubtract, TemporalUnit unit)Returns a copy of this date-time with the specified amount subtracted.<\/td><\/tr><tr><td>27<\/td><td>LocalDateTime minus(TemporalAmount amountToSubtract)Returns a copy of this date-time with the specified amount subtracted.<\/td><\/tr><tr><td>28<\/td><td>LocalDateTime minusDays(long daysToSubtract)Returns a copy of this LocalDateTime with the specified number of days subtracted.<\/td><\/tr><tr><td>29<\/td><td>LocalDateTime minusHours(long hoursToSubtract)Returns a copy of this LocalDateTime with the specified number of hours subtracted.<\/td><\/tr><tr><td>30<\/td><td>LocalDateTime minusMinutes(long minutesToSubtract)Returns a copy of this LocalDateTime with the specified number of minutes subtracted.<\/td><\/tr><tr><td>31<\/td><td>LocalDateTime minusMonths(long monthsToSubtract)Returns a copy of this LocalDateTime with the specified number of months subtracted.<\/td><\/tr><tr><td>32<\/td><td>LocalDateTime minusNanos(long nanos)Returns a copy of this LocalDateTime with the specified number of nanoseconds subtracted.<\/td><\/tr><tr><td>33<\/td><td>LocalDateTime minusSeconds(long seconds)Returns a copy of this LocalDateTime with the specified number of seconds subtracted.<\/td><\/tr><tr><td>34<\/td><td>LocalDateTime minusWeeks(long weeksToSubtract)Returns a copy of this LocalDateTime with the specified number of weeks subtracted.<\/td><\/tr><tr><td>35<\/td><td>LocalDateTime minusYears(long yearsToSubtract)Returns a copy of this LocalDateTime with the specified number of years subtracted.<\/td><\/tr><tr><td>36<\/td><td>static LocalDateTime now()Obtains the current date-time from the system clock in the default time-zone.<\/td><\/tr><tr><td>37<\/td><td>static LocalDateTime now(Clock clock)Obtains the current date-time from the specified clock.<\/td><\/tr><tr><td>38<\/td><td>static LocalDateTime now(ZoneId zone)Obtains the current date-time from the system clock in the specified time-zone.<\/td><\/tr><tr><td>39<\/td><td>static LocalDateTime of(int year, int month, int dayOfMonth, int hour, int minute)Obtains an instance of LocalDateTime from year, month, day, hour and minute, setting the second and nanosecond to zero.<\/td><\/tr><tr><td>40<\/td><td>static LocalDateTime of(int year, int month, int dayOfMonth, int hour, int minute, int second)Obtains an instance of LocalDateTime from year, month, day, hour, minute and second, setting the nanosecond to zero.<\/td><\/tr><tr><td>41<\/td><td>static LocalDateTime of(int year, int month, int dayOfMonth, int hour, int minute, int second, int nanoOfSecond)Obtains an instance of LocalDateTime from year, month, day, hour, minute, second and nanosecond.<\/td><\/tr><tr><td>42<\/td><td>static LocalDateTime of(int year, Month month, int dayOfMonth, int hour, int minute, int second)Obtains an instance of LocalDateTime from year, month, day, hour, minute and second, setting the nanosecond to zero.<\/td><\/tr><tr><td>43<\/td><td>static LocalDateTime of(int year, Month month, int dayOfMonth, int hour, int minute, int second, int nanoOfSecond)Obtains an instance of LocalDateTime from year, month, day, hour, minute, second and nanosecond.<\/td><\/tr><tr><td>44<\/td><td>static LocalDateTime of(LocalDate date, LocalTime time)Obtains an instance of LocalDateTime from a date and time.<\/td><\/tr><tr><td>45<\/td><td>static LocalDateTime ofEpochSecond(long epochSecond, int nanoOfSecond, ZoneOffset offset)Obtains an instance of LocalDateTime from the epoch of 1970-01-01T00:00:00Z.<\/td><\/tr><tr><td>46<\/td><td>static LocalDateTime ofInstant(Instant instant, ZoneId zone)Obtains an instance of LocalDateTime from an Instant and zone ID.<\/td><\/tr><tr><td>47<\/td><td>static LocalDateTime parse(CharSequence text)Obtains an instance of LocalDateTime from a text string such as 2007-12-03T10:15:30.<\/td><\/tr><tr><td>48<\/td><td>static LocalDateTime parse(CharSequence text, DateTimeFormatter formatter)Obtains an instance of LocalDateTime from a text string using a specific formatter.<\/td><\/tr><tr><td>49<\/td><td>LocalDateTime plus(long amountToAdd, TemporalUnit unit)Returns a copy of this date-time with the specified amount added.<\/td><\/tr><tr><td>50<\/td><td>LocalDateTime plus(TemporalAmount amountToAdd)Returns a copy of this date-time with the specified amount added.<\/td><\/tr><tr><td>51<\/td><td>LocalDateTime plusDays(long daysToAdd)Returns a copy of this LocalDateTime with the specified number of days added.<\/td><\/tr><tr><td>52<\/td><td>LocalDateTime plusHours(long hoursToAdd)Returns a copy of this LocalDateTime with the specified number of hours added.<\/td><\/tr><tr><td>53<\/td><td>LocalDateTime plusMinutes(long minutesToAdd)Returns a copy of this LocalDateTime with the specified number of minutes added.<\/td><\/tr><tr><td>54<\/td><td>LocalDateTime plusMonths(long monthsToAdd)Returns a copy of this LocalDateTime with the specified number of months added.<\/td><\/tr><tr><td>55<\/td><td>LocalDateTime plusNanos(long nanos)Returns a copy of this LocalDateTime with the specified number of nanoseconds added.<\/td><\/tr><tr><td>56<\/td><td>LocalDateTime plus seconds(long seconds)Returns a copy of this LocalDateTime with the specified number of seconds added.<\/td><\/tr><tr><td>57<\/td><td>LocalDateTime plus weeks(long weeksToAdd)Returns a copy of this LocalDateTime with the specified number of weeks added.<\/td><\/tr><tr><td>58<\/td><td>LocalDateTime plus years(long yearsToAdd)Returns a copy of this LocalDateTime with the specified number of years added.<\/td><\/tr><tr><td>59<\/td><td>&lt;R> R query(TemporalQuery&lt;R> query)Queries this date-time using the specified query.<\/td><\/tr><tr><td>60<\/td><td>ValueRange range(TemporalField field)Gets the range of valid values for the specified field.<\/td><\/tr><tr><td>61<\/td><td>LocalDate to local date()Gets the LocalDate part of this date-time.<\/td><\/tr><tr><td>62<\/td><td>LocalTime toLocalTime()Gets the LocalTime part of this date-time.<\/td><\/tr><tr><td>63<\/td><td>String toString()Outputs this date as a String, such as 2007-12-03T10:15:30.<\/td><\/tr><tr><td>64<\/td><td>LocalDateTime truncated(TemporalUnit unit)Returns a copy of this LocalDateTime with the time truncated.<\/td><\/tr><tr><td>65<\/td><td>long until(Temporal endExclusive, TemporalUnit unit)Calculates the amount of time until another date-time in terms of the specified unit.<\/td><\/tr><tr><td>66<\/td><td>LocalDateTime with(TemporalAdjuster adjuster)Returns an adjusted copy of this date-time.<\/td><\/tr><tr><td>67<\/td><td>LocalDateTime with(TemporalField field, long newValue)Returns a copy of this date-time with the specified field set to a new value.<\/td><\/tr><tr><td>68<\/td><td>LocalDateTime withDayOfMonth(int dayOfMonth)Returns a copy of this LocalDateTime with the day-of-month altered.<\/td><\/tr><tr><td>69<\/td><td>LocalDateTime withDayOfYear(int day of year)Returns a copy of this LocalDateTime with the day-of-year altered.<\/td><\/tr><tr><td>70<\/td><td>LocalDateTime with our(int hour)Returns a copy of this LocalDateTime with the hour-of-day altered.<\/td><\/tr><tr><td>71<\/td><td>LocalDateTime with minute(int minute)Returns a copy of this LocalDateTime with the minute-of-hour altered.<\/td><\/tr><tr><td>72<\/td><td>LocalDateTime with the month(int month)Returns a copy of this LocalDateTime with the month-of-year altered.<\/td><\/tr><tr><td>73<\/td><td>LocalDateTime withNano(int nanosecond)Returns a copy of this LocalDateTime with the nano-of-second altered.<\/td><\/tr><tr><td>74<\/td><td>LocalDateTime with the second(int second)Returns a copy of this LocalDateTime with the second-of-minute altered.<\/td><\/tr><tr><td>75<\/td><td>LocalDateTime with the year(int year)Returns a copy of this LocalDateTime with the year altered.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.time.LocalDateTime&nbsp;class represents a date-time without a time-zone in the ISO-8601 calendar system, such as 2007-12-03T10:15:30. Class declaration Following is the declaration for&nbsp;java.time.LocalDateTime&nbsp;class \u2212 Field Following are the fields for&nbsp;java.time.LocalDateTime&nbsp;class \u2212 static LocalDateTime MAX&nbsp;\u2212 The maximum supported LocalDateTime, &#8216;+999999999-12-31T23:59:59.999999999&#8217;. static LocalDateTime MIN&nbsp;\u2212 The minimum supported LocalDateTime, &#8216;-999999999-01-01T00:00:00&#8217;. Class methods Sr.No. Method &amp; Description 1 Temporal [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            78
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1977"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=1977"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1977\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1978,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1977\/revisions\/1978"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=1977"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=1977"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=1977"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 1979,
        "date": "2021-04-10T11:22:28",
        "date_gmt": "2021-04-10T11:22:28",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=1979"
        },
        "modified": "2021-04-10T11:22:28",
        "modified_gmt": "2021-04-10T11:22:28",
        "slug": "localtime-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/localtime-class\/",
        "title": {
            "rendered": "LocalTime Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.time.LocalTime<\/strong>&nbsp;class represents a time without a time-zone in the ISO-8601 calendar system, such as 10:15:30.<\/p>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.time.LocalTime<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class LocalTime\n   extends Object\n      implements Temporal, TemporalAdjuster, Comparable&lt;LocalDate&gt;, Serializable\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.time.LocalTime<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static LocalTime MAX<\/strong>&nbsp;\u2212 The maximum supported LocalTime, &#8217;23:59:59.999999999&#8242;.<\/li><li><strong>static LocalTime MIN<\/strong>&nbsp;\u2212 The minimum supported LocalTime, &#8217;00:00&#8242;.<\/li><li><strong>static LocalTime MIDNIGHT<\/strong>&nbsp;\u2212 The time of midnight at the start of the day, &#8217;00:00&#8242;.<\/li><li><strong>static LocalTime NOON<\/strong>&nbsp;\u2212 The time of noon in the middle of the day, &#8217;12:00&#8242;.<\/li><\/ul>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>Temporal adjustInto(Temporal temporal)Adjusts the specified temporal object to have the same date and time as this object.<\/td><\/tr><tr><td>2<\/td><td>LocalDateTime atDate(LocalDate date)Combines this time with a date to create a LocalDateTime.<\/td><\/tr><tr><td>3<\/td><td>OffsetDateTime atOffset(ZoneOffset offset)Combines this time with an offset time to create an OffsetDateTime.<\/td><\/tr><tr><td>4<\/td><td>int compareTo(LocalTime other)Compares this time to another time.<\/td><\/tr><tr><td>5<\/td><td>boolean equals(Object obj)Checks if this time is equal to another time.<\/td><\/tr><tr><td>6<\/td><td>String format(DateTimeFormatter formatter)Formats this time using the specified formatter.<\/td><\/tr><tr><td>7<\/td><td>static LocalTime from(TemporalAccessor temporal)Obtains an instance of LocalTime from a temporal object.<\/td><\/tr><tr><td>8<\/td><td>int get(TemporalField field)Gets the value of the specified field from this time as an int.<\/td><\/tr><tr><td>9<\/td><td>int getHour()Gets the hour-of-day field.<\/td><\/tr><tr><td>10<\/td><td>long getLong(TemporalField field)Gets the value of the specified field from this time as a long.<\/td><\/tr><tr><td>11<\/td><td>int getMinute()Gets the minute-of-hour field.<\/td><\/tr><tr><td>12<\/td><td>int getNano()Gets the nano-of-second field.<\/td><\/tr><tr><td>13<\/td><td>int getSecond()Gets the second-of-minute field.<\/td><\/tr><tr><td>14<\/td><td>int hashCode()A hash code for this time.<\/td><\/tr><tr><td>15<\/td><td>boolean isAfter(LocalTime other)Checks if this time is after the specified time.<\/td><\/tr><tr><td>16<\/td><td>boolean isBefore(LocalTime other)Checks if this time is before the specified time.<\/td><\/tr><tr><td>17<\/td><td>boolean isSupported(TemporalField field)Checks if the specified field is supported.<\/td><\/tr><tr><td>18<\/td><td>boolean isSupported(TemporalUnit unit)Checks if the specified unit is supported.<\/td><\/tr><tr><td>19<\/td><td>LocalTime minus(long amountToSubtract, TemporalUnit unit)Returns a copy of this time with the specified amount subtracted.<\/td><\/tr><tr><td>20<\/td><td>LocalTime minus(TemporalAmount amountToSubtract)Returns a copy of this time with the specified amount subtracted.<\/td><\/tr><tr><td>21<\/td><td>LocalTime minusHours(long hoursToSubtract)Returns a copy of this LocalTime with the specified number of hours subtracted.<\/td><\/tr><tr><td>22<\/td><td>LocalTime minusMinutes(long minutesToSubtract)Returns a copy of this LocalTime with the specified number of minutes subtracted.<\/td><\/tr><tr><td>23<\/td><td>LocalTime minusNanos(long nanos)Returns a copy of this LocalTime with the specified number of nanoseconds subtracted.<\/td><\/tr><tr><td>24<\/td><td>LocalTime minusSeconds(long seconds)Returns a copy of this LocalTime with the specified number of seconds subtracted.<\/td><\/tr><tr><td>25<\/td><td>static LocalTime now()Obtains the current time from the system clock in the default time-zone.<\/td><\/tr><tr><td>26<\/td><td>static LocalTime now(Clock clock)Obtains the current time from the specified clock.<\/td><\/tr><tr><td>27<\/td><td>static LocalTime now(ZoneId zone)Obtains the current time from the system clock in the specified time-zone.<\/td><\/tr><tr><td>28<\/td><td>static LocalTime of(int hour, int minute)Obtains an instance of LocalTime from an hour and minute.<\/td><\/tr><tr><td>29<\/td><td>static LocalTime of(int hour, int minute, int second)Obtains an instance of LocalTime from an hour, minute and second.<\/td><\/tr><tr><td>30<\/td><td>static LocalTime of(int hour, int minute, int second, int nanoOfSecond)Obtains an instance of LocalTime from an hour, minute, second and nanosecond.<\/td><\/tr><tr><td>31<\/td><td>static LocalTime ofNanoOfDay(long nanoOfDay)Obtains an instance of LocalTime from a nanos-of-day value.<\/td><\/tr><tr><td>32<\/td><td>static LocalTime ofSecondOfDay(long secondOfDay)Obtains an instance of LocalTime from a second-of-day value.<\/td><\/tr><tr><td>33<\/td><td>static LocalTime parse(CharSequence text)Obtains an instance of LocalTime from a text string such as 2007-12-03T10:15:30.<\/td><\/tr><tr><td>34<\/td><td>static LocalTime parse(CharSequence text, DateTimeFormatter formatter)Obtains an instance of LocalTime from a text string using a specific formatter.<\/td><\/tr><tr><td>35<\/td><td>LocalTime plus(long amount to add, TemporalUnit unit)Returns a copy of this time with the specified amount added.<\/td><\/tr><tr><td>36<\/td><td>LocalTime plus(TemporalAmount amount to add)Returns a copy of this time with the specified amount added.<\/td><\/tr><tr><td>37<\/td><td>LocalTime plus hours(long hours to add)Returns a copy of this LocalTime with the specified number of hours added.<\/td><\/tr><tr><td>38<\/td><td>LocalTime plus minutes(long minutesToAdd)Returns a copy of this LocalTime with the specified number of minutes added.<\/td><\/tr><tr><td>39<\/td><td>LocalTime plusNanos(long Nanos)Returns a copy of this LocalTime with the specified number of nanoseconds added.<\/td><\/tr><tr><td>40<\/td><td>LocalTime plus seconds(long seconds)Returns a copy of this LocalTime with the specified number of seconds added.<\/td><\/tr><tr><td>41<\/td><td>&lt;R> R query(TemporalQuery&lt;R> query)Queries this time using the specified query.<\/td><\/tr><tr><td>42<\/td><td>ValueRange range(TemporalField field)Gets the range of valid values for the specified field.<\/td><\/tr><tr><td>43<\/td><td>long toNanoOfDay()Extracts the time as nanos of day, from 0 to 24 * 60 * 60 * 1,000,000,000 &#8211; 1.<\/td><\/tr><tr><td>44<\/td><td>int toSecondOfDay()Extracts the time as seconds of day, from 0 to 24 * 60 * 60 &#8211; 1.<\/td><\/tr><tr><td>45<\/td><td>String toString()Outputs this date as a String, such as 10:15.<\/td><\/tr><tr><td>46<\/td><td>LocalTime truncated(TemporalUnit unit)Returns a copy of this LocalTime with the time truncated.<\/td><\/tr><tr><td>47<\/td><td>long until(Temporal endExclusive, TemporalUnit unit)Calculates the amount of time until another time in terms of the specified unit.<\/td><\/tr><tr><td>48<\/td><td>LocalTime with(TemporalAdjuster adjuster)Returns an adjusted copy of this time.<\/td><\/tr><tr><td>49<\/td><td>LocalTime with(TemporalField field, long newValue)Returns a copy of this time with the specified field set to a new value.<\/td><\/tr><tr><td>50<\/td><td>LocalTime with our(int hour)Returns a copy of this LocalTime with the hour-of-day altered.<\/td><\/tr><tr><td>51<\/td><td>LocalTime with minute(int minute)Returns a copy of this LocalTime with the minute-of-hour altered.<\/td><\/tr><tr><td>52<\/td><td>LocalTime withNano(int nanosecond)Returns a copy of this LocalTime with the nano-of-second altered.<\/td><\/tr><tr><td>53<\/td><td>LocalTime with second(int second)Returns a copy of this LocalTime with the second-of-minute altered.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.time.LocalTime&nbsp;class represents a time without a time-zone in the ISO-8601 calendar system, such as 10:15:30. Class declaration Following is the declaration for&nbsp;java.time.LocalTime&nbsp;class \u2212 Field Following are the fields for&nbsp;java.time.LocalTime&nbsp;class \u2212 static LocalTime MAX&nbsp;\u2212 The maximum supported LocalTime, &#8217;23:59:59.999999999&#8242;. static LocalTime MIN&nbsp;\u2212 The minimum supported LocalTime, &#8217;00:00&#8242;. static LocalTime MIDNIGHT&nbsp;\u2212 The time of midnight at [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            78
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1979"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=1979"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1979\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1980,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1979\/revisions\/1980"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=1979"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=1979"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=1979"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 1981,
        "date": "2021-04-10T11:25:52",
        "date_gmt": "2021-04-10T11:25:52",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=1981"
        },
        "modified": "2021-04-10T11:25:52",
        "modified_gmt": "2021-04-10T11:25:52",
        "slug": "month-day-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/month-day-class\/",
        "title": {
            "rendered": "Month Day Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.time.MonthDay<\/strong>&nbsp;class represents a month-day in the ISO-8601 calendar system, such as &#8211;12-03.<\/p>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.time.MonthDay<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class MonthDay\n   extends Object\n      implements TemporalAccessor, TemporalAdjuster, Comparable&lt;MonthDay&gt;, Serializable\n<\/code><\/pre>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>Temporal adjustInto(Temporal temporal)Adjusts the specified temporal object to have this month-day.<\/td><\/tr><tr><td>2<\/td><td>LocalDate atYear(int year)Combines this month-day with a year to create a LocalDate.<\/td><\/tr><tr><td>3<\/td><td>int compareTo(MonthDay other)Compares this month-day to another month-day.<\/td><\/tr><tr><td>4<\/td><td>boolean equals(Object obj)Checks if this month-day is equal to another month-day.<\/td><\/tr><tr><td>5<\/td><td>String format(DateTimeFormatter formatter)Formats this month-day using the specified formatter.<\/td><\/tr><tr><td>6<\/td><td>static MonthDay from(TemporalAccessor temporal)Obtains an instance of MonthDay from a temporal object.<\/td><\/tr><tr><td>7<\/td><td>int get(TemporalField field)Gets the value of the specified field from this month-day as an int.<\/td><\/tr><tr><td>8<\/td><td>int getDayOfMonth()Gets the day-of-month field.<\/td><\/tr><tr><td>9<\/td><td>long getLong(TemporalField field)Gets the value of the specified field from this time as a long.<\/td><\/tr><tr><td>10<\/td><td>Month getMonth()Gets the month-of-year field using the Month enum.<\/td><\/tr><tr><td>11<\/td><td>int getMonthValue()Gets the month-of-year field from 1 to 12.<\/td><\/tr><tr><td>12<\/td><td>int hashCode()A hash code for this month-day.<\/td><\/tr><tr><td>13<\/td><td>boolean isAfter(MonthDay other)Checks if this month-day is after the specified month-day.<\/td><\/tr><tr><td>14<\/td><td>boolean before(MonthDay other)Checks if this month-day is before the specified month-day.<\/td><\/tr><tr><td>15<\/td><td>boolean supported(TemporalField field)Checks if the specified field is supported.<\/td><\/tr><tr><td>16<\/td><td>boolean supported(TemporalUnit unit)Checks if the specified unit is supported.<\/td><\/tr><tr><td>17<\/td><td>boolean isValidYear(int year)Checks if the year is valid for this month-day.<\/td><\/tr><tr><td>18<\/td><td>static MonthDay now()Obtains the current time from the system clock in the default time-zone.<\/td><\/tr><tr><td>19<\/td><td>static MonthDay now(Clock clock)Obtains the current time from the specified clock.<\/td><\/tr><tr><td>20<\/td><td>static MonthDay now(ZoneId zone)Obtains the current time from the system clock in the specified time-zone.<\/td><\/tr><tr><td>21<\/td><td>static MonthDay of(int month, int day of month)Obtains an instance of MonthDay.<\/td><\/tr><tr><td>22<\/td><td>static MonthDay of(Month month, int day of month)Obtains an instance of MonthDay.<\/td><\/tr><tr><td>23<\/td><td>static MonthDay parse(CharSequence text)Obtains an instance of MonthDay from a text string such as &#8211;12-03.<\/td><\/tr><tr><td>24<\/td><td>static MonthDay parse(CharSequence text, DateTimeFormatter formatter)Obtains an instance of MonthDay from a text string using a specific formatter.<\/td><\/tr><tr><td>25<\/td><td>&lt;R> R query(TemporalQuery&lt;R> query)Queries this time using the specified query.<\/td><\/tr><tr><td>26<\/td><td>ValueRange range(TemporalField field)Gets the range of valid values for the specified field.<\/td><\/tr><tr><td>27<\/td><td>String toString()Outputs this date as a String, such as &#8211;12-03.<\/td><\/tr><tr><td>28<\/td><td>Month day with(Month month)Returns a copy of this MonthDay with the month-of-year altered.<\/td><\/tr><tr><td>29<\/td><td>Month Day withDayOfMonth(int day of the month)Returns a copy of this MonthDay with the day-of-month altered.<\/td><\/tr><tr><td>30<\/td><td>Month Day with the month(int month)Returns a copy of this MonthDay with the month-of-year altered.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.time.MonthDay&nbsp;class represents a month-day in the ISO-8601 calendar system, such as &#8211;12-03. Class declaration Following is the declaration for&nbsp;java.time.MonthDay&nbsp;class \u2212 Class methods Sr.No. Method &amp; Description 1 Temporal adjustInto(Temporal temporal)Adjusts the specified temporal object to have this month-day. 2 LocalDate atYear(int year)Combines this month-day with a year to create a LocalDate. 3 int compareTo(MonthDay [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            78
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1981"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=1981"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1981\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1982,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1981\/revisions\/1982"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=1981"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=1981"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=1981"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 1983,
        "date": "2021-04-10T11:30:01",
        "date_gmt": "2021-04-10T11:30:01",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=1983"
        },
        "modified": "2021-04-10T11:30:01",
        "modified_gmt": "2021-04-10T11:30:01",
        "slug": "offsetdatetime-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/offsetdatetime-class\/",
        "title": {
            "rendered": "OffsetDateTime Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.time.OffsetDateTime<\/strong>&nbsp;class represents a date-time with an offset from UTC\/Greenwich in the ISO-8601 calendar system, such as 2007-12-03T10:15:30+01:00.<\/p>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.time.OffsetDateTime<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class OffsetDateTime\n   extends Object\n      implements Temporal, TemporalAdjuster, Comparable&lt;OffsetDateTime&gt;, Serializable\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.time.OffsetDateTime<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static OffsetDateTime MAX<\/strong>&nbsp;\u2212 The maximum supported OffsetDateTime, &#8216;+999999999-12-31T23:59:59.999999999+18:00&#8217;.<\/li><li><strong>static OffsetDateTime MIN<\/strong>&nbsp;\u2212 The minimum supported OffsetDateTime, &#8216;-999999999-01-01T00:00:00-18:00&#8217;.<\/li><\/ul>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>Temporal adjustInto(Temporal temporal)Adjusts the specified temporal object to have the same date and time as this object.<\/td><\/tr><tr><td>2<\/td><td>ZonedDateTime atZoneSameInstant(ZoneId zone)Combines this date-time with a time-zone to create a ZonedDateTime ensuring that the result has the same instant.<\/td><\/tr><tr><td>3<\/td><td>ZonedDateTime atZoneSimilarLocal(ZoneId zone)Combines this date-time with a time-zone to create a ZonedDateTime trying to keep the same local date and time.<\/td><\/tr><tr><td>4<\/td><td>int compareTo(OffsetDateTime other)Compares this date-time to another date-time.<\/td><\/tr><tr><td>5<\/td><td>boolean equals(Object obj)Checks if this date-time is equal to another date-time.<\/td><\/tr><tr><td>6<\/td><td>String format(DateTimeFormatter formatter)Formats this date-time using the specified formatter.<\/td><\/tr><tr><td>7<\/td><td>static OffsetDateTime from(TemporalAccessor temporal)Obtains an instance of OffsetDateTime from a temporal object.<\/td><\/tr><tr><td>8<\/td><td>int get(TemporalField field)Gets the value of the specified field from this date-time as an int.<\/td><\/tr><tr><td>9<\/td><td>int getDayOfMonth()Gets the day-of-month field.<\/td><\/tr><tr><td>10<\/td><td>DayOfWeek getDayOfWeek()Gets the day-of-week field, which is an enum DayOfWeek.<\/td><\/tr><tr><td>11<\/td><td>int getDayOfYear()Gets the day-of-year field.<\/td><\/tr><tr><td>12<\/td><td>int getHour()Gets the hour-of-day field.<\/td><\/tr><tr><td>13<\/td><td>long getLong(TemporalField field)Gets the value of the specified field from this date-time as a long.<\/td><\/tr><tr><td>14<\/td><td>Month getMinute()Gets the minute-of-hour field.<\/td><\/tr><tr><td>15<\/td><td>Month getMonth()Gets the month-of-year field using the Month enum.<\/td><\/tr><tr><td>16<\/td><td>int getMonthValue()Gets the month-of-year field from 1 to 12.<\/td><\/tr><tr><td>17<\/td><td>int getNano()Gets the nano-of-second field.<\/td><\/tr><tr><td>18<\/td><td>ZoneOffset getOffset()Gets the zone offset, such as &#8216;+01:00&#8217;.<\/td><\/tr><tr><td>19<\/td><td>int getSecond()Gets the second-of-minute field.<\/td><\/tr><tr><td>20<\/td><td>int getYear()Gets the year field.<\/td><\/tr><tr><td>21<\/td><td>int hashCode()A hash code for this date-time.<\/td><\/tr><tr><td>22<\/td><td>boolean isAfter(OffsetDateTime other)Checks if this date-time is after the specified date-time.<\/td><\/tr><tr><td>23<\/td><td>boolean isBefore(OffsetDateTime other)Checks if this date-time is before the specified date-time.<\/td><\/tr><tr><td>24<\/td><td>boolean isEqual(OffsetDateTime other)Checks if this date-time is equal to the specified date-time.<\/td><\/tr><tr><td>25<\/td><td>boolean isSupported(TemporalField field)Checks if the specified field is supported.<\/td><\/tr><tr><td>26<\/td><td>boolean isSupported(TemporalUnit unit)Checks if the specified unit is supported.<\/td><\/tr><tr><td>27<\/td><td>OffsetDateTime minus(long amountToSubtract, TemporalUnit unit)Returns a copy of this date-time with the specified amount subtracted.<\/td><\/tr><tr><td>28<\/td><td>OffsetDateTime minus(TemporalAmount amountToSubtract)Returns a copy of this date-time with the specified amount subtracted.<\/td><\/tr><tr><td>29<\/td><td><strong>OffsetDateTime minusDays(long daysToSubtract)<\/strong>Returns a copy of this OffsetDateTime with the specified number of days subtracted.<\/td><\/tr><tr><td>30<\/td><td>OffsetDateTime minusHours(long hoursToSubtract)Returns a copy of this OffsetDateTime with the specified number of hours subtracted.<\/td><\/tr><tr><td>31<\/td><td>OffsetDateTime minusMinutes(long minutesToSubtract)Returns a copy of this OffsetDateTime with the specified number of minutes subtracted.<\/td><\/tr><tr><td>32<\/td><td>OffsetDateTime minusMonths(long monthsToSubtract)Returns a copy of this OffsetDateTime with the specified number of months subtracted.<\/td><\/tr><tr><td>33<\/td><td>OffsetDateTime minusNanos(long nanos)Returns a copy of this OffsetDateTime with the specified number of nanoseconds subtracted.<\/td><\/tr><tr><td>34<\/td><td>OffsetDateTime minusSeconds(long seconds)Returns a copy of this OffsetDateTime with the specified number of seconds subtracted.<\/td><\/tr><tr><td>35<\/td><td>OffsetDateTime minusWeeks(long weeksToSubtract)Returns a copy of this OffsetDateTime with the specified number of weeks subtracted.<\/td><\/tr><tr><td>36<\/td><td>OffsetDateTime minusYears(long yearsToSubtract)Returns a copy of this OffsetDateTime with the specified number of years subtracted.<\/td><\/tr><tr><td>37<\/td><td>static OffsetDateTime now()Obtains the current date-time from the system clock in the default time-zone.<\/td><\/tr><tr><td>38<\/td><td>static OffsetDateTime now(Clock clock)Obtains the current date-time from the specified clock.<\/td><\/tr><tr><td>39<\/td><td>static OffsetDateTime now(ZoneId zone)Obtains the current date-time from the system clock in the specified time-zone.<\/td><\/tr><tr><td>40<\/td><td>static OffsetDateTime of(int year, int month, int dayOfMonth, int hour, int minute, int second, int nanoOfSecond, ZoneOffset offset)Obtains an instance of OffsetDateTime from a year, month, day, hour, minute, second, nanosecond and offset.<\/td><\/tr><tr><td>41<\/td><td>static OffsetDateTime of(LocalDate date, LocalTime time, ZoneOffset offset)Obtains an instance of OffsetDateTime from a date, time and offset.<\/td><\/tr><tr><td>42<\/td><td>static OffsetDateTime of(LocalDateTime dateTime, ZoneOffset offset)Obtains an instance of OffsetDateTime from a date-time and offset.<\/td><\/tr><tr><td>43<\/td><td>static OffsetDateTime ofInstant(Instant instant, ZoneId zone)Obtains an instance of OffsetDateTime from an Instant and zone ID.<\/td><\/tr><tr><td>44<\/td><td>static OffsetDateTime parse(CharSequence text)Obtains an instance of OffsetDateTime from a text string such as 2007-12-03T10:15:30.<\/td><\/tr><tr><td>45<\/td><td>static OffsetDateTime parse(CharSequence text, DateTimeFormatter formatter)Obtains an instance of OffsetDateTime from a text string using a specific formatter.<\/td><\/tr><tr><td>46<\/td><td>OffsetDateTime plus(long amountToAdd, TemporalUnit unit)Returns a copy of this date-time with the specified amount added.<\/td><\/tr><tr><td>47<\/td><td>OffsetDateTime plus(TemporalAmount amountToAdd)Returns a copy of this date-time with the specified amount added.<\/td><\/tr><tr><td>48<\/td><td>OffsetDateTime plusDays(long daysToAdd)Returns a copy of this OffsetDateTime with the specified number of days added.<\/td><\/tr><tr><td>49<\/td><td>OffsetDateTime plusHours(long hoursToAdd)Returns a copy of this OffsetDateTime with the specified number of hours added.<\/td><\/tr><tr><td>50<\/td><td>OffsetDateTime plusMinutes(long minutesToAdd)Returns a copy of this OffsetDateTime with the specified number of minutes added.<\/td><\/tr><tr><td>51<\/td><td>OffsetDateTime plusMonths(long monthsToAdd)Returns a copy of this OffsetDateTime with the specified number of months added.<\/td><\/tr><tr><td>52<\/td><td>OffsetDateTime plusNanos(long nanos)Returns a copy of this OffsetDateTime with the specified number of nanoseconds added.<\/td><\/tr><tr><td>53<\/td><td>OffsetDateTime plusSeconds(long seconds)Returns a copy of this OffsetDateTime with the specified number of seconds added.<\/td><\/tr><tr><td>54<\/td><td>OffsetDateTime plusWeeks(long weeksToAdd)Returns a copy of this OffsetDateTime with the specified number of weeks added.<\/td><\/tr><tr><td>55<\/td><td>OffsetDateTime plusYears(long yearsToAdd)Returns a copy of this OffsetDateTime with the specified number of years added.<\/td><\/tr><tr><td>56<\/td><td>&lt;R> R query(TemporalQuery&lt;R> query)Queries this date-time using the specified query.<\/td><\/tr><tr><td>57<\/td><td>ValueRange range(TemporalField field)Gets the range of valid values for the specified field.<\/td><\/tr><tr><td>58<\/td><td>static Comparator&lt;OffsetDateTime> timeLineOrder()Gets a comparator that compares two OffsetDateTime instances based solely on the instant.<\/td><\/tr><tr><td>59<\/td><td>long toEpochSecond()Converts this date-time to the number of seconds from the epoch of 1970-01-01T00:00:00Z.<\/td><\/tr><tr><td>60<\/td><td>Instant toInstant()Converts this date-time to an Instant.<\/td><\/tr><tr><td>61<\/td><td>LocalDate to local date()Gets the LocalDate part of this date-time.<\/td><\/tr><tr><td>62<\/td><td>LocalDateTime toLocalDateTime()Gets the LocalDateTime part of this date-time.<\/td><\/tr><tr><td>63<\/td><td>LocalTime toLocalTime()Gets the LocalTime part of this date-time.<\/td><\/tr><tr><td>64<\/td><td>OffsetTime toOffsetTime()Gets the OffsetTime part of this date-time.<\/td><\/tr><tr><td>65<\/td><td>String toString()Outputs this date as a String, such as 2007-12-03T10:15:30.<\/td><\/tr><tr><td>66<\/td><td>ZonedDateTime toZonedDateTime()Converts this date-time to a ZonedDateTime using the offset as the zone ID.<\/td><\/tr><tr><td>67<\/td><td>OffsetDateTime truncatedTo(TemporalUnit unit)Returns a copy of this OffsetDateTime with the time truncated.<\/td><\/tr><tr><td>68<\/td><td>long until(Temporal endExclusive, TemporalUnit unit)Calculates the amount of time until another date-time in terms of the specified unit.<\/td><\/tr><tr><td>69<\/td><td>OffsetDateTime with(TemporalAdjuster adjuster)Returns an adjusted copy of this date-time.<\/td><\/tr><tr><td>70<\/td><td>OffsetDateTime with(TemporalField field, long newValue)Returns a copy of this date-time with the specified field set to a new value.<\/td><\/tr><tr><td>71<\/td><td>OffsetDateTime withDayOfMonth(int dayOfMonth)Returns a copy of this OffsetDateTime with the day-of-month altered.<\/td><\/tr><tr><td>72<\/td><td>OffsetDateTime withDayOfYear(int dayOfYear)Returns a copy of this OffsetDateTime with the day-of-year altered.<\/td><\/tr><tr><td>73<\/td><td>OffsetDateTime with our(int hour)Returns a copy of this OffsetDateTime with the hour-of-day altered.<\/td><\/tr><tr><td>74<\/td><td>OffsetDateTime withMinute(int minute)Returns a copy of this OffsetDateTime with the minute-of-hour altered.<\/td><\/tr><tr><td>75<\/td><td>OffsetDateTime withMonth(int month)Returns a copy of this OffsetDateTime with the month-of-year altered.<\/td><\/tr><tr><td>76<\/td><td>OffsetDateTime withNano(int nanoOfSecond)Returns a copy of this OffsetDateTime with the nano-of-second altered.<\/td><\/tr><tr><td>77<\/td><td>OffsetDateTime withOffsetSameInstant(ZoneOffset offset)Returns a copy of this OffsetDateTime with the specified offset ensuring that the result is at the same instant.<\/td><\/tr><tr><td>78<\/td><td>OffsetDateTime withOffsetSameLocal(ZoneOffset offset)Returns a copy of this OffsetDateTime with the specified offset ensuring that the result has the same local date-time.<\/td><\/tr><tr><td>79<\/td><td>OffsetDateTime withSecond(int second)Returns a copy of this OffsetDateTime with the second-of-minute altered.<\/td><\/tr><tr><td>80<\/td><td>OffsetDateTime with year(int year)Returns a copy of this OffsetDateTime with the year altered.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<p><\/p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.time.OffsetDateTime&nbsp;class represents a date-time with an offset from UTC\/Greenwich in the ISO-8601 calendar system, such as 2007-12-03T10:15:30+01:00. Class declaration Following is the declaration for&nbsp;java.time.OffsetDateTime&nbsp;class \u2212 Field Following are the fields for&nbsp;java.time.OffsetDateTime&nbsp;class \u2212 static OffsetDateTime MAX&nbsp;\u2212 The maximum supported OffsetDateTime, &#8216;+999999999-12-31T23:59:59.999999999+18:00&#8217;. static OffsetDateTime MIN&nbsp;\u2212 The minimum supported OffsetDateTime, &#8216;-999999999-01-01T00:00:00-18:00&#8217;. Class methods Sr.No. Method &amp; Description [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            78
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1983"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=1983"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1983\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1984,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1983\/revisions\/1984"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=1983"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=1983"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=1983"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 1985,
        "date": "2021-04-12T05:21:13",
        "date_gmt": "2021-04-12T05:21:13",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=1985"
        },
        "modified": "2021-04-12T05:21:13",
        "modified_gmt": "2021-04-12T05:21:13",
        "slug": "offsettime-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/offsettime-class\/",
        "title": {
            "rendered": "OffsetTime Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.time.OffsetTime<\/strong>&nbsp;class represents a time with an offset from UTC\/Greenwich in the ISO-8601 calendar system, such as 10:15:30+01:00.<\/p>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.time.OffsetTime<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class OffsetTime\n   extends Object\n      implements Temporal, TemporalAdjuster, Comparable&lt;OffsetTime&gt;, Serializable\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.time.OffsetTime<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static OffsetTime MAX<\/strong>&nbsp;\u2212 The maximum supported OffsetTime, &#8217;23:59:59.999999999-18:00&#8242;.<\/li><li><strong>static OffsetTime MIN<\/strong>&nbsp;\u2212 The minimum supported OffsetTime, &#8217;00:00:00+18:00&#8242;.<\/li><\/ul>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>Temporal adjustInto(Temporal temporal)Adjusts the specified temporal object to have the same date and time as this object.<\/td><\/tr><tr><td>2<\/td><td>OffsetDateTime atDate(LocalDate date)Combines this time with a date to create a OffsetDateTime.<\/td><\/tr><tr><td>3<\/td><td>int compareTo(OffsetTime other)Compares this time to another time.<\/td><\/tr><tr><td>4<\/td><td>boolean equals(Object obj)Checks if this time is equal to another time.<\/td><\/tr><tr><td>5<\/td><td>String format(DateTimeFormatter formatter)Formats this time using the specified formatter.<\/td><\/tr><tr><td>6<\/td><td>static OffsetTime from(TemporalAccessor temporal)Obtains an instance of OffsetTime from a temporal object.<\/td><\/tr><tr><td>7<\/td><td>int get(TemporalField field)Gets the value of the specified field from this time as an int.<\/td><\/tr><tr><td>8<\/td><td>int getHour()Gets the hour-of-day field.<\/td><\/tr><tr><td>9<\/td><td>long getLong(TemporalField field)Gets the value of the specified field from this time as a long.<\/td><\/tr><tr><td>10<\/td><td>int getMinute()Gets the minute-of-hour field.<\/td><\/tr><tr><td>11<\/td><td>int getNano()Gets the nano-of-second field.<\/td><\/tr><tr><td>12<\/td><td>ZoneOffset getOffset()Gets the zone offset, such as &#8216;+01:00&#8217;.<\/td><\/tr><tr><td>13<\/td><td>int getSecond()Gets the second-of-minute field.<\/td><\/tr><tr><td>14<\/td><td>int hashCode()A hash code for this time.<\/td><\/tr><tr><td>15<\/td><td>boolean isAfter(OffsetTime other)Checks if the instant of this OffsetTime is after that of the specified time applying both times to a common date.<\/td><\/tr><tr><td>16<\/td><td>boolean isBefore(OffsetTime other)Checks if the instant of this OffsetTime is before that of the specified time applying both times to a common date.<\/td><\/tr><tr><td>17<\/td><td>boolean isEqual(OffsetTime other)Checks if the instant of this OffsetTime is equal to that of the specified time applying both times to a common date.<\/td><\/tr><tr><td>18<\/td><td>boolean isSupported(TemporalField field)Checks if the specified field is supported.<\/td><\/tr><tr><td>19<\/td><td>boolean isSupported(TemporalUnit unit)Checks if the specified unit is supported.<\/td><\/tr><tr><td>20<\/td><td>OffsetTime minus(long amountToSubtract, TemporalUnit unit)Returns a copy of this time with the specified amount subtracted.<\/td><\/tr><tr><td>21<\/td><td>OffsetTime minus(TemporalAmount amountToSubtract)Returns a copy of this time with the specified amount subtracted.<\/td><\/tr><tr><td>22<\/td><td>OffsetTime minusHours(long hoursToSubtract)Returns a copy of this OffsetTime with the specified number of hours subtracted.<\/td><\/tr><tr><td>23<\/td><td>OffsetTime minusMinutes(long minutesToSubtract)Returns a copy of this OffsetTime with the specified number of minutes subtracted.<\/td><\/tr><tr><td>24<\/td><td>OffsetTime minusNanos(long nanos)Returns a copy of this OffsetTime with the specified number of nanoseconds subtracted.<\/td><\/tr><tr><td>25<\/td><td>OffsetTime minusSeconds(long seconds)Returns a copy of this OffsetTime with the specified number of seconds subtracted.<\/td><\/tr><tr><td>26<\/td><td>static OffsetTime now()Obtains the current time from the system clock in the default time-zone.<\/td><\/tr><tr><td>27<\/td><td>static OffsetTime now(Clock clock)Obtains the current time from the specified clock.<\/td><\/tr><tr><td>28<\/td><td>static OffsetTime now(ZoneId zone)Obtains the current time from the system clock in the specified time-zone.<\/td><\/tr><tr><td>29<\/td><td>static OffsetTime of(int hour, int minute, int second, int nanoOfSecond, ZoneOffset offset)Obtains an instance of OffsetTime from an hour, minute, second, nanosecond and an offset.<\/td><\/tr><tr><td>30<\/td><td>static OffsetTime of(LocalTime time, ZoneOffset offset)Obtains an instance of OffsetTime from a local time and an offset.<\/td><\/tr><tr><td>31<\/td><td>static OffsetTime ofInstant(Instant instant, ZoneId zone)Obtains an instance of OffsetTime from an Instant and zone ID.<\/td><\/tr><tr><td>32<\/td><td>static OffsetTime parse(CharSequence text)Obtains an instance of OffsetTime from a text string such as 10:15:30+01:00.<\/td><\/tr><tr><td>33<\/td><td>static OffsetTime parse(CharSequence text, DateTimeFormatter formatter)Obtains an instance of OffsetTime from a text string using a specific formatter.<\/td><\/tr><tr><td>34<\/td><td>OffsetTime plus(long amountToAdd, TemporalUnit unit)Returns a copy of this time with the specified amount added.<\/td><\/tr><tr><td>35<\/td><td>OffsetTime plus(TemporalAmount amountToAdd)Returns a copy of this time with the specified amount added.<\/td><\/tr><tr><td>36<\/td><td>OffsetTime plusHours(long hoursToAdd)Returns a copy of this OffsetTime with the specified number of hours added.<\/td><\/tr><tr><td>37<\/td><td>OffsetTime plusMinutes(long minutesToAdd)Returns a copy of this OffsetTime with the specified number of minutes added.<\/td><\/tr><tr><td>38<\/td><td>OffsetTime plusNanos(long nanos)Returns a copy of this OffsetTime with the specified number of nanoseconds added.<\/td><\/tr><tr><td>39<\/td><td>OffsetTime plusSeconds(long seconds)Returns a copy of this OffsetTime with the specified number of seconds added.<\/td><\/tr><tr><td>40<\/td><td>&lt;R&gt; R query(TemporalQuery&lt;R&gt; query)Queries this time using the specified query.<\/td><\/tr><tr><td>41<\/td><td>ValueRange range(TemporalField field)Gets the range of valid values for the specified field.<\/td><\/tr><tr><td>42<\/td><td>LocalTime toLocalTime()Gets the LocalTime part of this date-time.<\/td><\/tr><tr><td>43<\/td><td>String toString()Outputs this date as a String, such as 10:15.<\/td><\/tr><tr><td>44<\/td><td>OffsetTime truncatedTo(TemporalUnit unit)Returns a copy of this OffsetTime with the time truncated.<\/td><\/tr><tr><td>45<\/td><td>long until(Temporal endExclusive, TemporalUnit unit)Calculates the amount of time until another time in terms of the specified unit.<\/td><\/tr><tr><td>46<\/td><td>OffsetTime with(TemporalAdjuster adjuster)Returns an adjusted copy of this time.<\/td><\/tr><tr><td>47<\/td><td>OffsetTime with(TemporalField field, long newValue)Returns a copy of this time with the specified field set to a new value.<\/td><\/tr><tr><td>48<\/td><td>OffsetTime with our(int hour)Returns a copy of this OffsetTime with the hour-of-day altered.<\/td><\/tr><tr><td>49<\/td><td>OffsetTime with minute(int minute)Returns a copy of this OffsetTime with the minute-of-hour altered.<\/td><\/tr><tr><td>50<\/td><td>OffsetTime withNano(int nanoseconds)Returns a copy of this OffsetTime with the nano-of-second altered.<\/td><\/tr><tr><td>51<\/td><td>OffsetTime withOffsetSameInstant(ZoneOffset offset)Returns a copy of this OffsetTime with the specified offset ensuring that the result is at the same instant on an implied day.<\/td><\/tr><tr><td>52<\/td><td>OffsetTime withOffsetSameLocal(ZoneOffset offset)Returns a copy of this OffsetTime with the specified offset ensuring that the result has the same local time.<\/td><\/tr><tr><td>53<\/td><td>OffsetTime with second(int second)Returns a copy of this OffsetTime with the second-of-minute altered.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.time.OffsetTime&nbsp;class represents a time with an offset from UTC\/Greenwich in the ISO-8601 calendar system, such as 10:15:30+01:00. Class declaration Following is the declaration for&nbsp;java.time.OffsetTime&nbsp;class \u2212 Field Following are the fields for&nbsp;java.time.OffsetTime&nbsp;class \u2212 static OffsetTime MAX&nbsp;\u2212 The maximum supported OffsetTime, &#8217;23:59:59.999999999-18:00&#8242;. static OffsetTime MIN&nbsp;\u2212 The minimum supported OffsetTime, &#8217;00:00:00+18:00&#8242;. Class methods Sr.No. Method &amp; Description [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            78
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1985"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=1985"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1985\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1986,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1985\/revisions\/1986"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=1985"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=1985"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=1985"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 1987,
        "date": "2021-04-12T05:25:01",
        "date_gmt": "2021-04-12T05:25:01",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=1987"
        },
        "modified": "2021-04-12T05:25:01",
        "modified_gmt": "2021-04-12T05:25:01",
        "slug": "period-class-2",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/period-class-2\/",
        "title": {
            "rendered": "Period Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.time.Period<\/strong>&nbsp;class models a quantity or amount of time in terms of years, months and days.<\/p>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.time.Period<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class Period\n   extends Object\n      implements ChronoPeriod, Serializable\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>Java.time.Period<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static Period ZERO<\/strong>&nbsp;\u2212 Constant for a Period of zero.<\/li><\/ul>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>Temporal addTo(Temporal temporal)Adds this Period to the specified temporal object.<\/td><\/tr><tr><td>2<\/td><td>static Period between(LocalDate startInclusive, LocalDate endExclusive)Obtains a Period consisting of the number of years, months, and days between two dates.<\/td><\/tr><tr><td>3<\/td><td>boolean equals(Object otherPeriod)Checks if this Period is equal to the specified Period.<\/td><\/tr><tr><td>4<\/td><td>static Duratio from(TemporalAmount amount)Obtains an instance of Period from a temporal amount.<\/td><\/tr><tr><td>5<\/td><td>long get(TemporalUnit unit)Gets the value of the requested unit.<\/td><\/tr><tr><td>6<\/td><td>IsoChronology getChronology()Gets the chronology of this period, which is the ISO calendar system.<\/td><\/tr><tr><td>7<\/td><td>int getDays()Gets the amount of days of this period.<\/td><\/tr><tr><td>8<\/td><td>int getMonths()Gets the amount of months of this period.<\/td><\/tr><tr><td>9<\/td><td>List&lt;TemporalUnit> getUnits()Gets the set of units supported by this Period.<\/td><\/tr><tr><td>10<\/td><td>int hashCode()A hash code for this Period.<\/td><\/tr><tr><td>11<\/td><td>boolean isNegative()Checks if this Period is negative, excluding zero.<\/td><\/tr><tr><td>12<\/td><td>boolean isZero()Checks if this Period is zero length.<\/td><\/tr><tr><td>13<\/td><td>Period minus(TemporalAmount amountToSubtract)Returns a copy of this Period with the specified Period subtracted.<\/td><\/tr><tr><td>14<\/td><td>Period minusDays(long daysToSubtract)Returns a copy of this period with the specified days subtracted.<\/td><\/tr><tr><td>15<\/td><td>Period minusMonths(long months)Returns a copy of this period with the specified months subtracted.<\/td><\/tr><tr><td>16<\/td><td>Period minus years(long years)Returns a copy of this period with the specified years subtracted.<\/td><\/tr><tr><td>17<\/td><td>Period multiplied by(long multiplicand)Returns a copy of this Period multiplied by the scalar.<\/td><\/tr><tr><td>18<\/td><td>Period negated()Returns a copy of this Period with the length negated.<\/td><\/tr><tr><td>19<\/td><td>Period normalized()Returns a copy of this period with the years and months normalized.<\/td><\/tr><tr><td>20<\/td><td>static Period of(int years, int months, int days)Obtains a Period representing a number of years, months, and days.<\/td><\/tr><tr><td>21<\/td><td>static Period of days(int days)Obtains a Period representing a number of days.<\/td><\/tr><tr><td>22<\/td><td>static Period of months(int months)Obtains a Period representing a number of months.<\/td><\/tr><tr><td>23<\/td><td>static Period of weeks(int weeks)Obtains a Period representing a number of weeks.<\/td><\/tr><tr><td>24<\/td><td>static Period of years(int years)Obtains a Period representing a number of weeks.<\/td><\/tr><tr><td>25<\/td><td>static Period parse(CharSequence text)Obtains a Period from a text string such as PnYnMnD.<\/td><\/tr><tr><td>26<\/td><td>Period plus(TemporalAmount amount to add)Returns a copy of this Period with the specified Period added.<\/td><\/tr><tr><td>27<\/td><td>Period plus days(long day to add)Returns a copy of this period with the specified days added.<\/td><\/tr><tr><td>28<\/td><td>Period plus months(long monthsToAdd)Returns a copy of this period with the specified months added.<\/td><\/tr><tr><td>29<\/td><td>Period plus years(long yearsToAdd)Returns a copy of this period with the specified years added.<\/td><\/tr><tr><td>30<\/td><td>Temporal subtract from(Temporal temporal)Subtracts this Period from the specified temporal object.<\/td><\/tr><tr><td>31<\/td><td>String toString()A string representation of this Period using ISO-8601 seconds based representation, such as PT8H6M12.345S.<\/td><\/tr><tr><td>32<\/td><td>long to total months()Gets the total number of months in this period.<\/td><\/tr><tr><td>33<\/td><td>Period with days(int days)Returns a copy of this period with the specified amount of days.<\/td><\/tr><tr><td>34<\/td><td>Period with months(int months)Returns a copy of this period with the specified amount of months.<\/td><\/tr><tr><td>35<\/td><td>Period with years(int years)Returns a copy of this period with the specified amount of Years.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.time.Period&nbsp;class models a quantity or amount of time in terms of years, months and days. Class declaration Following is the declaration for&nbsp;java.time.Period&nbsp;class \u2212 Field Following are the fields for&nbsp;Java.time.Period&nbsp;class \u2212 static Period ZERO&nbsp;\u2212 Constant for a Period of zero. Class methods Sr.No. Method &amp; Description 1 Temporal addTo(Temporal temporal)Adds this Period to the specified [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            78
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1987"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=1987"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1987\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1988,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1987\/revisions\/1988"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=1987"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=1987"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=1987"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 1989,
        "date": "2021-04-12T05:28:53",
        "date_gmt": "2021-04-12T05:28:53",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=1989"
        },
        "modified": "2021-04-12T05:28:53",
        "modified_gmt": "2021-04-12T05:28:53",
        "slug": "year-class-2",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/year-class-2\/",
        "title": {
            "rendered": "Year Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.time.Year<\/strong>&nbsp;class represents a year in the ISO-8601 calendar system, such as 2007.<\/p>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.time.Year<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class Year\n   extends Object\n      implements Temporal, TemporalAdjuster, Comparable&lt;Year&gt;, Serializable\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>Java.time.Period<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static int MAX_VALUE<\/strong>&nbsp;\u2212 The maximum supported year, &#8216;+999,999,999&#8217;.<\/li><li><strong>static int MIN_VALUE<\/strong>&nbsp;\u2212 The minimum supported year, &#8216;-999,999,999&#8217;.<\/li><\/ul>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>Temporal adjustInto(Temporal temporal)Adjusts the specified temporal object to have this year.<\/td><\/tr><tr><td>2<\/td><td>LocalDate atDay(int dayOfYear)Combines this year with a day-of-year to create a LocalDate.<\/td><\/tr><tr><td>3<\/td><td><strong>YearMonth atMonth(int month)<\/strong>Combines this year with a month to create a YearMonth.<\/td><\/tr><tr><td>4<\/td><td><strong>YearMonth atMonth(Month month)<\/strong>Combines this year with a month to create a YearMonth.<\/td><\/tr><tr><td>5<\/td><td><strong>LocalDate atMonthDay(MonthDay monthDay)<\/strong>Combines this year with a month-day to create a LocalDate.<\/td><\/tr><tr><td>6<\/td><td>int compareTo(Year other)Compares this year to another year.<\/td><\/tr><tr><td>7<\/td><td>boolean equals(Object otherYear)Checks if this Year is equal to the specified Year.<\/td><\/tr><tr><td>8<\/td><td>String format(DateTimeFormatter formatter)Formats this year using the specified formatter.<\/td><\/tr><tr><td>9<\/td><td>static Year from(TemporalAmount amount)Obtains an instance of Year from a temporal amount.<\/td><\/tr><tr><td>10<\/td><td>int get(TemporalField field)Gets the value of the specified field from this year as an int.<\/td><\/tr><tr><td>11<\/td><td>long getLong(TemporalField field)Gets the value of the requested unit as long.<\/td><\/tr><tr><td>12<\/td><td>int getValue()Gets the year value.<\/td><\/tr><tr><td>13<\/td><td>int hashCode()A hash code for this Year.<\/td><\/tr><tr><td>14<\/td><td>boolean isAfter(Year other)Checks if this year is after the specified year.<\/td><\/tr><tr><td>15<\/td><td>boolean isBefore(Year other)Checks if this year is before the specified year.<\/td><\/tr><tr><td>16<\/td><td>boolean isLeap()Checks if the year is a leap year, according to the ISO proleptic calendar system rules.<\/td><\/tr><tr><td>17<\/td><td>boolean isLeap(long year)Checks if the year is a leap year, according to the ISO proleptic calendar system rules.<\/td><\/tr><tr><td>18<\/td><td>boolean isSupported(TemporalField field)Checks if the specified field is supported.<\/td><\/tr><tr><td>19<\/td><td>boolean supported(TemporalUnit unit)Checks if the specified unit is supported.<\/td><\/tr><tr><td>20<\/td><td>boolean isValidMonthDay(MonthDay monthDay)Checks if the month-day is valid for this year.<\/td><\/tr><tr><td>21<\/td><td>int length()Gets the length of this year in days.<\/td><\/tr><tr><td>22<\/td><td>Year minus(long amount to subtract, TemporalUnit unit)Returns a copy of this year with the specified amount subtracted.<\/td><\/tr><tr><td>23<\/td><td>Year minus(TemporalAmount amount to subtract)Returns a copy of this Year with the specified Year subtracted.<\/td><\/tr><tr><td>24<\/td><td>Year minus years(long yearsToSubtract)Returns a copy of this Year with the specified years subtracted.<\/td><\/tr><tr><td>25<\/td><td>static Year now()Obtains the current year from the system clock in the default time-zone.<\/td><\/tr><tr><td>26<\/td><td>static Year now(Clock clock)Obtains the current year from the specified clock.<\/td><\/tr><tr><td>27<\/td><td>static Year now(ZoneId zone)Obtains the current year from the system clock in the specified time-zone.<\/td><\/tr><tr><td>28<\/td><td>static Year of(int years)Obtains an instance of Year.<\/td><\/tr><tr><td>29<\/td><td>static Year parse(CharSequence text)Obtains a Year from a text string such as 2007.<\/td><\/tr><tr><td>30<\/td><td>static Year parse(CharSequence text, DateTimeFormatter formatter)Obtains an instance of Year from a text string using a specific formatter.<\/td><\/tr><tr><td>31<\/td><td>Year plus(long amount to add, TemporalUnit unit)Returns a copy of this Year with the specified Year added.<\/td><\/tr><tr><td>32<\/td><td>Year plus(TemporalAmount amount to add)Returns a copy of this Year with the specified Year added.<\/td><\/tr><tr><td>33<\/td><td><strong>Year plusMonths(long monthsToAdd)<\/strong>Returns a copy of this Year with the specified months added.<\/td><\/tr><tr><td>34<\/td><td>Year plus years(long yearsToAdd)Returns a copy of this Year with the specified years added.<\/td><\/tr><tr><td>35<\/td><td>&lt;R> R query(TemporalQuery&lt;R> query)Queries this year using the specified query.<\/td><\/tr><tr><td>36<\/td><td>ValueRange range(TemporalField field)Gets the range of valid values for the specified field.<\/td><\/tr><tr><td>37<\/td><td>String toString()Outputs this year as a String.<\/td><\/tr><tr><td>38<\/td><td>long until(Temporal endExclusive, TemporalUnit unit)Calculates the amount of time until another year in terms of the specified unit.<\/td><\/tr><tr><td>39<\/td><td>The year with(TemporalAdjuster adjuster)Returns an adjusted copy of this year.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.time.Year&nbsp;class represents a year in the ISO-8601 calendar system, such as 2007. Class declaration Following is the declaration for&nbsp;java.time.Year&nbsp;class \u2212 Field Following are the fields for&nbsp;Java.time.Period&nbsp;class \u2212 static int MAX_VALUE&nbsp;\u2212 The maximum supported year, &#8216;+999,999,999&#8217;. static int MIN_VALUE&nbsp;\u2212 The minimum supported year, &#8216;-999,999,999&#8217;. Class methods Sr.No. Method &amp; Description 1 Temporal adjustInto(Temporal temporal)Adjusts the [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            78
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1989"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=1989"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1989\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1990,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1989\/revisions\/1990"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=1989"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=1989"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=1989"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 1991,
        "date": "2021-04-12T05:31:48",
        "date_gmt": "2021-04-12T05:31:48",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=1991"
        },
        "modified": "2021-04-12T05:31:48",
        "modified_gmt": "2021-04-12T05:31:48",
        "slug": "yearmonth-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/yearmonth-class\/",
        "title": {
            "rendered": "YearMonth Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.time.YearMonth<\/strong>&nbsp;class represents a year-month in the ISO-8601 calendar system, such as 2007-12.<\/p>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.time.YearMonth<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class YearMonth\n   extends Object\n      implements Temporal, TemporalAdjuster, Comparable&lt;YearMonth&gt;, Serializable\n<\/code><\/pre>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>Temporal adjustInto(Temporal temporal)Adjusts the specified temporal object to have this year-month.<\/td><\/tr><tr><td>2<\/td><td>LocalDate atDay(int dayOfMonth)Combines this year-month with a day-of-month to create a LocalDate.<\/td><\/tr><tr><td>3<\/td><td>LocalDate atEndOfMonth()Returns a LocalDate at the end of the month..<\/td><\/tr><tr><td>4<\/td><td>int compareTo(YearMonth other)Compares this year-month to another year-month.<\/td><\/tr><tr><td>5<\/td><td>boolean equals(Object otherYearMonth)Checks if this YearMonth is equal to the specified YearMonth.<\/td><\/tr><tr><td>6<\/td><td>String format(DateTimeFormatter formatter)Formats this year-month using the specified formatter.<\/td><\/tr><tr><td>7<\/td><td>static YearMonth from(TemporalAmount amount)Obtains an instance of YearMonth from a temporal amount.<\/td><\/tr><tr><td>8<\/td><td>int get(TemporalField field)Gets the value of the specified field from this year-month as an int.<\/td><\/tr><tr><td>9<\/td><td>long getLong(TemporalField field)Gets the value of the requested unit as long.<\/td><\/tr><tr><td>10<\/td><td>Month getMonth()Gets the month-of-year field using the Month enum.<\/td><\/tr><tr><td>11<\/td><td>int getMonthValue()Gets the month-of-year field from 1 to 12.<\/td><\/tr><tr><td>12<\/td><td>int getYear()Gets the year field.<\/td><\/tr><tr><td>13<\/td><td>int hashCode()A hash code for this YearMonth.<\/td><\/tr><tr><td>14<\/td><td>boolean isAfter(YearMonth other)Checks if this year-month is after the specified year-month.<\/td><\/tr><tr><td>15<\/td><td>boolean isBefore(YearMonth other)Checks if this year-month is before the specified year-month.<\/td><\/tr><tr><td>16<\/td><td>boolean isLeapYear()Checks if the year is a leap year, according to the ISO proleptic calendar system rules.<\/td><\/tr><tr><td>17<\/td><td>boolean isLeap(long year)Checks if the year is a leap year, according to the ISO proleptic calendar system rules.<\/td><\/tr><tr><td>18<\/td><td>boolean isSupported(TemporalField field)Checks if the specified field is supported.<\/td><\/tr><tr><td>19<\/td><td>boolean isSupported(TemporalUnit unit)Checks if the specified unit is supported.<\/td><\/tr><tr><td>20<\/td><td>boolean isValidDay(int dayOfMonth)Checks if the day-of-month is valid for this year-month.<\/td><\/tr><tr><td>21<\/td><td>int lengthOfMonth()Returns the length of the month, taking account of the year.<\/td><\/tr><tr><td>22<\/td><td>int lengthOfYear()Returns the length of the year.<\/td><\/tr><tr><td>23<\/td><td>YearMonth minus(long amountToSubtract, TemporalUnit unit)Returns a copy of this year with the specified amount subtracted.<\/td><\/tr><tr><td>24<\/td><td>YearMonth minus(TemporalAmount amountToSubtract)Returns a copy of this YearMonth with the specified YearMonth subtracted.<\/td><\/tr><tr><td>25<\/td><td>YearMonth minusMonths(long monthsToSubtract)Returns a copy of this YearMonth with the specified month subtracted.<\/td><\/tr><tr><td>26<\/td><td>YearMonth minusYears(long yearsToSubtract)Returns a copy of this YearMonth with the specified years subtracted.<\/td><\/tr><tr><td>27<\/td><td>static YearMonth now()Obtains the current year-month from the system clock in the default time-zone.<\/td><\/tr><tr><td>28<\/td><td>static YearMonth now(Clock clock)Obtains the current year-month from the specified clock.<\/td><\/tr><tr><td>29<\/td><td>static YearMonth now(ZoneId zone)Obtains the current year-month from the system clock in the specified time-zone.<\/td><\/tr><tr><td>30<\/td><td>static YearMonth of(int years, int month)Obtains an instance of YearMonth from a year and month.<\/td><\/tr><tr><td>31<\/td><td>static YearMonth of(int years, Month month)Obtains an instance of YearMonth from a year and month.<\/td><\/tr><tr><td>32<\/td><td>static YearMonth parse(CharSequence text)Obtains a YearMonth from a text string such as 2007-12.<\/td><\/tr><tr><td>33<\/td><td>static YearMonth parse(CharSequence text, DateTimeFormatter formatter)Obtains an instance of YearMonth from a text string using a specific formatter.<\/td><\/tr><tr><td>34<\/td><td>YearMonth plus(long amountToAdd, TemporalUnit unit)Returns a copy of this YearMonth with the specified YearMonth added.<\/td><\/tr><tr><td>35<\/td><td>YearMonth plus(TemporalAmount amountToAdd)Returns a copy of this YearMonth with the specified YearMonth added.<\/td><\/tr><tr><td>36<\/td><td>YearMonth plusMonths(long monthsToAdd)Returns a copy of this YearMonth with the specified months added.<\/td><\/tr><tr><td>37<\/td><td>YearMonth plusYears(long yearsToAdd)Returns a copy of this YearMonth with the specified years added.<\/td><\/tr><tr><td>38<\/td><td>&lt;R> R query(TemporalQuery&lt;R> query)Queries this year-month using the specified query.<\/td><\/tr><tr><td>39<\/td><td>ValueRange range(TemporalField field)Gets the range of valid values for the specified field.<\/td><\/tr><tr><td>40<\/td><td>String toString()Outputs this year-month as a String.<\/td><\/tr><tr><td>41<\/td><td>long until(Temporal endExclusive, TemporalUnit unit)Calculates the amount of time until another year-month in terms of the specified unit.<\/td><\/tr><tr><td>42<\/td><td>YearMonth with(TemporalAdjuster adjuster)Returns an adjusted copy of this year-month.<\/td><\/tr><tr><td>43<\/td><td>YearMonth with(TemporalField field, long newValue)Returns a copy of this year-month with the specified field set to a new value.<\/td><\/tr><tr><td>44<\/td><td>YearMonth withMonth(int month)Returns a copy of this YearMonth with the month-of-year altered.<\/td><\/tr><tr><td>45<\/td><td>YearMonth withYear(int year)Returns a copy of this YearMonth with the year altered.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.time.YearMonth&nbsp;class represents a year-month in the ISO-8601 calendar system, such as 2007-12. Class declaration Following is the declaration for&nbsp;java.time.YearMonth&nbsp;class \u2212 Class methods Sr.No. Method &amp; Description 1 Temporal adjustInto(Temporal temporal)Adjusts the specified temporal object to have this year-month. 2 LocalDate atDay(int dayOfMonth)Combines this year-month with a day-of-month to create a LocalDate. 3 LocalDate atEndOfMonth()Returns [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            78
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1991"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=1991"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1991\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1992,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1991\/revisions\/1992"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=1991"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=1991"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=1991"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 1993,
        "date": "2021-04-12T05:35:51",
        "date_gmt": "2021-04-12T05:35:51",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=1993"
        },
        "modified": "2021-04-12T05:35:51",
        "modified_gmt": "2021-04-12T05:35:51",
        "slug": "zoneddatetime-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/zoneddatetime-class\/",
        "title": {
            "rendered": "ZonedDateTime Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.time.ZonedDateTime<\/strong>&nbsp;class represents a date-time with a time-zone in the ISO-8601 calendar system, such as 2007-12-03T10:15:30+01:00 Europe\/Paris.<\/p>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.time.ZonedDateTime<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class ZonedDateTime\n   extends Object\n      implements Temporal, ChronoZonedDateTime&lt;LocalDate&gt;, Serializable\n<\/code><\/pre>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>boolean equals(Object obj)Checks if this date-time is equal to another date-time.<\/td><\/tr><tr><td>2<\/td><td>String format(DateTimeFormatter formatter)Formats this date-time using the specified formatter.<\/td><\/tr><tr><td>3<\/td><td>static ZonedDateTime from(TemporalAccessor temporal)Obtains an instance of ZonedDateTime from a temporal object.<\/td><\/tr><tr><td>4<\/td><td>int get(TemporalField field)Gets the value of the specified field from this date-time as an int.<\/td><\/tr><tr><td>5<\/td><td>int getDayOfMonth()Gets the day-of-month field.<\/td><\/tr><tr><td>6<\/td><td>DayOfWeek getDayOfWeek()Gets the day-of-week field, which is an enum DayOfWeek.<\/td><\/tr><tr><td>7<\/td><td>int getDayOfYear()Gets the day-of-year field.<\/td><\/tr><tr><td>8<\/td><td>int getHour()Gets the hour-of-day field.<\/td><\/tr><tr><td>9<\/td><td>long getLong(TemporalField field)Gets the value of the specified field from this date-time as a long.<\/td><\/tr><tr><td>10<\/td><td>Month getMinute()Gets the minute-of-hour field.<\/td><\/tr><tr><td>11<\/td><td>Month getMonth()Gets the month-of-year field using the Month enum.<\/td><\/tr><tr><td>12<\/td><td>int getMonthValue()Gets the month-of-year field from 1 to 12.<\/td><\/tr><tr><td>13<\/td><td>int getNano()Gets the nano-of-second field.<\/td><\/tr><tr><td>14<\/td><td>ZoneOffset getOffset()Gets the zone offset, such as &#8216;+01:00&#8217;.<\/td><\/tr><tr><td>15<\/td><td>int getSecond()Gets the second-of-minute field.<\/td><\/tr><tr><td>16<\/td><td>int getYear()Gets the year field.<\/td><\/tr><tr><td>17<\/td><td>ZoneId getZone()Gets the time-zone, such as &#8216;Europe\/Paris&#8217;.<\/td><\/tr><tr><td>18<\/td><td>int hashCode()A hash code for this date-time.<\/td><\/tr><tr><td>19<\/td><td>boolean isSupported(TemporalField field)Checks if the specified field is supported.<\/td><\/tr><tr><td>20<\/td><td>boolean isSupported(TemporalUnit unit)Checks if the specified unit is supported.<\/td><\/tr><tr><td>21<\/td><td>ZonedDateTime minus(long amountToSubtract, TemporalUnit unit)Returns a copy of this date-time with the specified amount subtracted.<\/td><\/tr><tr><td>22<\/td><td>ZonedDateTime minus(TemporalAmount amountToSubtract)Returns a copy of this date-time with the specified amount subtracted.<\/td><\/tr><tr><td>23<\/td><td>ZonedDateTime minusDays(long daysToSubtract)Returns a copy of this ZonedDateTime with the specified number of days subtracted.<\/td><\/tr><tr><td>24<\/td><td>ZonedDateTime minusHours(long hoursToSubtract)Returns a copy of this ZonedDateTime with the specified number of hours subtracted.<\/td><\/tr><tr><td>25<\/td><td>ZonedDateTime minusMinutes(long minutesToSubtract)Returns a copy of this ZonedDateTime with the specified number of minutes subtracted.<\/td><\/tr><tr><td>26<\/td><td>ZonedDateTime minusMonths(long monthsToSubtract)Returns a copy of this ZonedDateTime with the specified number of months subtracted.<\/td><\/tr><tr><td>27<\/td><td>ZonedDateTime minusNanos(long nanos)Returns a copy of this ZonedDateTime with the specified number of nanoseconds subtracted.<\/td><\/tr><tr><td>28<\/td><td>ZonedDateTime minusSeconds(long seconds)Returns a copy of this ZonedDateTime with the specified number of seconds subtracted.<\/td><\/tr><tr><td>29<\/td><td>ZonedDateTime minusWeeks(long weeksToSubtract)Returns a copy of this ZonedDateTime with the specified number of weeks subtracted.<\/td><\/tr><tr><td>30<\/td><td>ZonedDateTime minusYears(long yearsToSubtract)Returns a copy of this ZonedDateTime with the specified number of years subtracted.<\/td><\/tr><tr><td>31<\/td><td>static ZonedDateTime now()Obtains the current date-time from the system clock in the default time-zone.<\/td><\/tr><tr><td>32<\/td><td>static ZonedDateTime now(Clock clock)Obtains the current date-time from the specified clock.<\/td><\/tr><tr><td>33<\/td><td>static ZonedDateTime now(ZoneId zone)Obtains the current date-time from the system clock in the specified time-zone.<\/td><\/tr><tr><td>34<\/td><td>static ZonedDateTime of(int year, int month, int dayOfMonth, int hour, int minute, int second, int nanoOfSecond, ZoneId zone)Obtains an instance of ZonedDateTime from year, month, day, hour, minute, second, nanosecond and time-zone.<\/td><\/tr><tr><td>35<\/td><td>static ZonedDateTime of(LocalDate date, LocalTime time, ZoneId zone)Obtains an instance of ZonedDateTime from a date and time.<\/td><\/tr><tr><td>36<\/td><td>static ZonedDateTime of(LocalDateTime date, ZoneId zone)Obtains an instance of ZonedDateTime from a local date-time.<\/td><\/tr><tr><td>37<\/td><td>static ZonedDateTime ofInstant(Instant instant, ZoneId zone)Obtains an instance of ZonedDateTime from an Instant and zone ID.<\/td><\/tr><tr><td>38<\/td><td>static ZonedDateTime ofInstant(LocalDateTime localDateTime, ZoneOffset offset, ZoneId zone)Obtains an instance of ZonedDateTime from the instant formed by combining the local date-time and offset.<\/td><\/tr><tr><td>39<\/td><td>static ZonedDateTime ofLocal(LocalDateTime localDateTime, ZoneId zone, ZoneOffset preferredOffset)Obtains an instance of ZonedDateTime from a local date-time using the preferred offset if possible.<\/td><\/tr><tr><td>40<\/td><td>static ZonedDateTime ofStrict(LocalDateTime localDateTime, ZoneOffset offset, ZoneId zone)Obtains an instance of ZonedDateTime strictly validating the combination of local date-time, offset and zone ID.<\/td><\/tr><tr><td>41<\/td><td>static ZonedDateTime parse(CharSequence text)Obtains an instance of ZonedDateTime from a text string such as 2007-12-03T10:15:30+01:00[Europe\/Paris].<\/td><\/tr><tr><td>42<\/td><td>static ZonedDateTime parse(CharSequence text, DateTimeFormatter formatter)Obtains an instance of ZonedDateTime from a text string using a specific formatter.<\/td><\/tr><tr><td>43<\/td><td>ZonedDateTime plus(long amountToAdd, TemporalUnit unit)Returns a copy of this date-time with the specified amount added.<\/td><\/tr><tr><td>44<\/td><td>ZonedDateTime plus(TemporalAmount amountToAdd)Returns a copy of this date-time with the specified amount added.<\/td><\/tr><tr><td>45<\/td><td>ZonedDateTime plusDays(long daysToAdd)Returns a copy of this ZonedDateTime with the specified number of days added.<\/td><\/tr><tr><td>46<\/td><td>ZonedDateTime plusHours(long hoursToAdd)Returns a copy of this ZonedDateTime with the specified number of hours added.<\/td><\/tr><tr><td>47<\/td><td>ZonedDateTime plusMinutes(long minutesToAdd)Returns a copy of this ZonedDateTime with the specified number of minutes added.<\/td><\/tr><tr><td>48<\/td><td>ZonedDateTime plusMonths(long monthsToAdd)Returns a copy of this ZonedDateTime with the specified number of months added.<\/td><\/tr><tr><td>49<\/td><td>ZonedDateTime plusNanos(long nanos)Returns a copy of this ZonedDateTime with the specified number of nanoseconds added.<\/td><\/tr><tr><td>50<\/td><td>ZonedDateTime plusSeconds(long seconds)Returns a copy of this ZonedDateTime with the specified number of seconds added.<\/td><\/tr><tr><td>51<\/td><td>ZonedDateTime plusWeeks(long weeksToAdd)Returns a copy of this ZonedDateTime with the specified number of weeks added.<\/td><\/tr><tr><td>52<\/td><td>ZonedDateTime plusYears(long yearsToAdd)Returns a copy of this ZonedDateTime with the specified number of years added.<\/td><\/tr><tr><td>53<\/td><td>&lt;R> R query(TemporalQuery&lt;R> query)Queries this date-time using the specified query.<\/td><\/tr><tr><td>54<\/td><td>ValueRange range(TemporalField field)Gets the range of valid values for the specified field.<\/td><\/tr><tr><td>55<\/td><td>LocalDate toLocalDate()Gets the LocalDate part of this date-time.<\/td><\/tr><tr><td>56<\/td><td>LocalTime toLocalTime()Gets the LocalTime part of this date-time.<\/td><\/tr><tr><td>57<\/td><td>OffsetDateTime toOffsetDateTime()Converts this date-time to an OffsetDateTime.<\/td><\/tr><tr><td>58<\/td><td>String toString()Outputs this date as a String, such as 2007-12-03T10:15:30+01:00[Europe\/Paris].<\/td><\/tr><tr><td>59<\/td><td>ZonedDateTime truncatedTo(TemporalUnit unit)Returns a copy of this ZonedDateTime with the time truncated.<\/td><\/tr><tr><td>60<\/td><td>long until(Temporal endExclusive, TemporalUnit unit)Calculates the amount of time until another date-time in terms of the specified unit.<\/td><\/tr><tr><td>61<\/td><td>ZonedDateTime with(TemporalAdjuster adjuster)Returns an adjusted copy of this date-time.<\/td><\/tr><tr><td>62<\/td><td>ZonedDateTime with(TemporalField field, long newValue)Returns a copy of this date-time with the specified field set to a new value.<\/td><\/tr><tr><td>63<\/td><td>ZonedDateTime withDayOfMonth(int dayOfMonth)Returns a copy of this ZonedDateTime with the day-of-month altered.<\/td><\/tr><tr><td>64<\/td><td>ZonedDateTime withDayOfYear(int dayOfYear)Returns a copy of this ZonedDateTime with the day-of-year altered.<\/td><\/tr><tr><td>65<\/td><td>ZonedDateTime withEarlierOffsetAtOverlap()Returns a copy of this date-time changing the zone offset to the earlier of the two valid offsets at a local time-line overlap.<\/td><\/tr><tr><td>66<\/td><td>ZonedDateTime withFixedOffsetZone()Returns a copy of this date-time with the zone ID set to the offset.<\/td><\/tr><tr><td>67<\/td><td>ZonedDateTime withHour(int hour)Returns a copy of this ZonedDateTime with the hour-of-day altered.<\/td><\/tr><tr><td>68<\/td><td>ZonedDateTime withLaterOffsetAtOverlap()Returns a copy of this date-time changing the zone offset to the later of the two valid offsets at a local time-line overlap.<\/td><\/tr><tr><td>69<\/td><td>ZonedDateTime withMinute(int minute)Returns a copy of this ZonedDateTime with the minute-of-hour altered.<\/td><\/tr><tr><td>70<\/td><td>ZonedDateTime withMonth(int month)Returns a copy of this ZonedDateTime with the month-of-year altered.<\/td><\/tr><tr><td>71<\/td><td>ZonedDateTime withNano(int nanoOfSecond)Returns a copy of this ZonedDateTime with the nano-of-second altered.<\/td><\/tr><tr><td>72<\/td><td>ZonedDateTime withSecond(int second)Returns a copy of this ZonedDateTime with the second-of-minute altered.<\/td><\/tr><tr><td>73<\/td><td>ZonedDateTime withYear(int year)Returns a copy of this ZonedDateTime with the year altered.<\/td><\/tr><tr><td>74<\/td><td>ZonedDateTime withZoneSameInstant(ZoneId zone)Returns a copy of this date-time with a different time-zone, retaining the instant.<\/td><\/tr><tr><td>75<\/td><td>ZonedDateTime withZoneSameLocal(ZoneId zone)Returns a copy of this date-time with a different time-zone, retaining the local date-time if possible.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<p><\/p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.time.ZonedDateTime&nbsp;class represents a date-time with a time-zone in the ISO-8601 calendar system, such as 2007-12-03T10:15:30+01:00 Europe\/Paris. Class declaration Following is the declaration for&nbsp;java.time.ZonedDateTime&nbsp;class \u2212 Class methods Sr.No. Method &amp; Description 1 boolean equals(Object obj)Checks if this date-time is equal to another date-time. 2 String format(DateTimeFormatter formatter)Formats this date-time using the specified formatter. 3 static [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            78
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1993"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=1993"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1993\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1994,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1993\/revisions\/1994"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=1993"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=1993"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=1993"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 1995,
        "date": "2021-04-12T05:39:14",
        "date_gmt": "2021-04-12T05:39:14",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=1995"
        },
        "modified": "2021-04-12T05:39:14",
        "modified_gmt": "2021-04-12T05:39:14",
        "slug": "zoneid-class-2",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/zoneid-class-2\/",
        "title": {
            "rendered": "ZoneId Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The\u00a0<strong>java. time.ZoneId<\/strong>\u00a0class represents a time-zone ID, such as Europe\/Paris.<\/p>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.time.ZoneId<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public abstract class ZoneId\n   extends Object\n      implements Serializable\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>Java.time.ZoneId<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static Map&lt;String,String&gt; SHORT_IDS<\/strong>&nbsp;\u2212 A map of zone overrides to enable the short time-zone names to be used.<\/li><\/ul>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>boolean equals(Object obj)Checks if this time-zone ID is equal to another time-zone ID.<\/td><\/tr><tr><td>2<\/td><td>static ZoneId from(TemporalAccessor temporal)Obtains an instance of ZoneId from a temporal object.<\/td><\/tr><tr><td>3<\/td><td>static Set&lt;String> getAvailableZoneIds()Gets the set of available zone IDs.<\/td><\/tr><tr><td>4<\/td><td>String getDisplayName(TextStyle style, Locale locale)Gets the textual representation of the zone, such as &#8216;British Time&#8217; or &#8216;+02:00&#8217;.<\/td><\/tr><tr><td>5<\/td><td>abstract String getId()Gets the unique time-zone ID.<\/td><\/tr><tr><td>6<\/td><td>abstract ZoneRules getRules()Gets the time-zone rules for this ID allowing calculations to be performed.<\/td><\/tr><tr><td>7<\/td><td>int hashCode()A hash code for this time-zone ID.<\/td><\/tr><tr><td>8<\/td><td>ZoneId normalized()Normalizes the time-zone ID, returning a ZoneOffset where possible.<\/td><\/tr><tr><td>9<\/td><td>static ZoneId of(String zoneId)Obtains an instance of ZoneId from an ID ensuring that the ID is valid and available for use.<\/td><\/tr><tr><td>10<\/td><td>static ZoneId of(String zoneId, Map&lt;String, String> aliasMap)Obtains an instance of ZoneId using its ID using a map of aliases to supplement the standard zone IDs.<\/td><\/tr><tr><td>11<\/td><td>static ZoneId offset(String prefix, ZoneOffset offset)Obtains an instance of ZoneId wrapping an offset.<\/td><\/tr><tr><td>12<\/td><td>static ZoneId systemDefault()Gets the system default time-zone.<\/td><\/tr><tr><td>13<\/td><td>String toString()Outputs this zone as a String, using the ID.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The\u00a0java. time.ZoneId\u00a0class represents a time-zone ID, such as Europe\/Paris. Class declaration Following is the declaration for&nbsp;java.time.ZoneId&nbsp;class \u2212 Field Following are the fields for&nbsp;Java.time.ZoneId&nbsp;class \u2212 static Map&lt;String,String&gt; SHORT_IDS&nbsp;\u2212 A map of zone overrides to enable the short time-zone names to be used. Class methods Sr.No. Method &amp; Description 1 boolean equals(Object obj)Checks if this time-zone [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            78
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1995"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=1995"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1995\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1996,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1995\/revisions\/1996"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=1995"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=1995"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=1995"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 1997,
        "date": "2021-04-12T05:41:42",
        "date_gmt": "2021-04-12T05:41:42",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=1997"
        },
        "modified": "2021-04-12T05:41:42",
        "modified_gmt": "2021-04-12T05:41:42",
        "slug": "zoneoffset-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/zoneoffset-class\/",
        "title": {
            "rendered": "ZoneOffset Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.time.ZoneOffset<\/strong>&nbsp;class represents a time-zone offset from Greenwich\/UTC, such as +02:00.<\/p>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.time.ZoneOffset<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class ZoneOffset\n   extends ZoneId\n      implements TemporalAccessor, TemporalAdjuster, Comparable&lt;ZoneOffset&gt;, Serializable\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>Java.time.ZoneOffset<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static ZoneOffset MAX<\/strong>&nbsp;\u2212 Constant for the maximum supported offset.<\/li><li><strong>static ZoneOffset MIN<\/strong>&nbsp;\u2212 Constant for the minimum supported offset.<\/li><li><strong>static ZoneOffset UTC<\/strong>&nbsp;\u2212 The time-zone offset for UTC, with an ID of &#8216;Z&#8217;.<\/li><\/ul>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>Temporal adjustments(Temporal temporal)Adjusts the specified temporal object to have the same offset as this object.<\/td><\/tr><tr><td>2<\/td><td>int compareTo(ZoneOffset other)Compares this offset to another offset in descending order.<\/td><\/tr><tr><td>3<\/td><td>boolean equals(Object obj)Checks if this offset is equal to another offset.<\/td><\/tr><tr><td>4<\/td><td>static ZoneOffset from(TemporalAccessor temporal)Obtains an instance of ZoneOffset from a temporal object.<\/td><\/tr><tr><td>5<\/td><td>int get(TemporalField field)Gets the value of the specified field from this offset as an int.<\/td><\/tr><tr><td>6<\/td><td>String getId()Gets the normalized zone offset ID.<\/td><\/tr><tr><td>7<\/td><td>long getLong(TemporalField field)Gets the value of the specified field from this offset as along.<\/td><\/tr><tr><td>8<\/td><td>ZoneRules getRules()Gets the associated time-zone rules.<\/td><\/tr><tr><td>9<\/td><td>int getTotalSeconds()Gets the total zone offset in seconds.<\/td><\/tr><tr><td>10<\/td><td>int hashCode()A hash code for this offset.<\/td><\/tr><tr><td>11<\/td><td>boolean supported(TemporalField field)Checks if the specified field is supported.<\/td><\/tr><tr><td>12<\/td><td>static ZoneOffset of(String offset)Obtains an instance of ZoneOffset using the ID.<\/td><\/tr><tr><td>13<\/td><td>static ZoneOffset of hours(int hours)Obtains an instance of ZoneOffset using an offset in hours.<\/td><\/tr><tr><td>14<\/td><td>static ZoneOffset ofHoursMinutes(int hours, int minutes)Obtains an instance of ZoneOffset using an offset in hours and minutes.<\/td><\/tr><tr><td>15<\/td><td>static ZoneOffset ofHoursMinutesSeconds(int hours, int minutes, int seconds)Obtains an instance of ZoneOffset using an offset in hours, minutes, and seconds.<\/td><\/tr><tr><td>16<\/td><td>static ZoneOffset of total seconds(int total seconds)Obtains an instance of ZoneOffset specifying the total offset in seconds.<\/td><\/tr><tr><td>17<\/td><td>&lt;R> R query(TemporalQuery&lt;R> query)Queries this offset using the specified query.<\/td><\/tr><tr><td>18<\/td><td>ValueRange range(TemporalField field)Gets the range of valid values for the specified field.<\/td><\/tr><tr><td>19<\/td><td>String toString()Outputs this offset as a String, using the normalized ID.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.time.ZoneOffset&nbsp;class represents a time-zone offset from Greenwich\/UTC, such as +02:00. Class declaration Following is the declaration for&nbsp;java.time.ZoneOffset&nbsp;class \u2212 Field Following are the fields for&nbsp;Java.time.ZoneOffset&nbsp;class \u2212 static ZoneOffset MAX&nbsp;\u2212 Constant for the maximum supported offset. static ZoneOffset MIN&nbsp;\u2212 Constant for the minimum supported offset. static ZoneOffset UTC&nbsp;\u2212 The time-zone offset for UTC, with an ID [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            78
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1997"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=1997"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1997\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1998,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1997\/revisions\/1998"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=1997"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=1997"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=1997"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 1999,
        "date": "2021-04-12T05:44:06",
        "date_gmt": "2021-04-12T05:44:06",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=1999"
        },
        "modified": "2021-04-12T05:44:06",
        "modified_gmt": "2021-04-12T05:44:06",
        "slug": "month-enum-2",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/month-enum-2\/",
        "title": {
            "rendered": "Month Enum"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.time.Month<\/strong>&nbsp;Enum represents a month-of-year, such as &#8216;July&#8217;.<\/p>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.time.Month<\/strong>&nbsp;Enum \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public enum Month\n   extends Enum&lt;Month&gt;\n      implements TemporalAccessor, TemporalAdjuster\n<\/code><\/pre>\n\n\n\n<h2>Enum Constants<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>Java.time.Month<\/strong>&nbsp;Enum \u2212<\/p>\n\n\n\n<ul><li><strong>JANUARY<\/strong>&nbsp;\u2212 The singleton instance for the month of January with 31 days.<\/li><li><strong>FEBRUARY<\/strong>&nbsp;\u2212 The singleton instance for the month of February with 28 days, or 29 in a leap year.<\/li><li><strong>MARCH<\/strong>&nbsp;\u2212 The singleton instance for the month of March with 31 days.<\/li><li><strong>APRIL<\/strong>&nbsp;\u2212 The singleton instance for the month of April with 30 days.<\/li><li><strong>MAY<\/strong>&nbsp;\u2212 The singleton instance for the month of May with 31 days.<\/li><li><strong>JUNE<\/strong>&nbsp;\u2212 The singleton instance for the month of June with 30 days.<\/li><li><strong>JULY<\/strong>&nbsp;\u2212 The singleton instance for the month of July with 31 days.<\/li><li><strong>AUGUST<\/strong>&nbsp;\u2212 The singleton instance for the month of August with 31 days.<\/li><li><strong>SEPTEMBER<\/strong>&nbsp;\u2212 The singleton instance for the month of September with 30 days.<\/li><li><strong>OCTOBER<\/strong>&nbsp;\u2212 The singleton instance for the month of October with 31 days.<\/li><li><strong>NOVEMBER<\/strong>&nbsp;\u2212 The singleton instance for the month of November with 30 days.<\/li><li><strong>DECEMBER<\/strong>&nbsp;\u2212 The singleton instance for the month of December with 31 days.<\/li><\/ul>\n\n\n\n<h2>Enum methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>Temporal adjustments(Temporal temporal)Adjusts the specified temporal object to have the same month-of-year as this object.<\/td><\/tr><tr><td>2<\/td><td>int firstDayOfYear(boolean leap year)Gets the day-of-year corresponding to the first day of this month.<\/td><\/tr><tr><td>3<\/td><td>Month firstMonthOfQuarter()Gets the month corresponding to the first month of this quarter.<\/td><\/tr><tr><td>4<\/td><td>static Month from(TemporalAccessor temporal)Obtains an instance of Month from a temporal object.<\/td><\/tr><tr><td>5<\/td><td>int get(TemporalField field)Gets the value of the specified field from this month-of-year as an int.<\/td><\/tr><tr><td>6<\/td><td>String getDisplayName(TextStyle style, Locale locale)Gets the textual representation, such as &#8216;Jan&#8217; or &#8216;December&#8217;.<\/td><\/tr><tr><td>7<\/td><td>long getLong(TemporalField field)Gets the value of the specified field from this month-of-year as along.<\/td><\/tr><tr><td>8<\/td><td>int getValue()Gets the month-of-year int value.<\/td><\/tr><tr><td>9<\/td><td>boolean supported(TemporalField field)Checks if the specified field is supported.<\/td><\/tr><tr><td>10<\/td><td>int length(boolean leap year)Gets the length of this month in days.<\/td><\/tr><tr><td>11<\/td><td>int maxLength()Gets the maximum length of this month in days.<\/td><\/tr><tr><td>12<\/td><td>int minLength()Gets the minimum length of this month in days.<\/td><\/tr><tr><td>13<\/td><td>Month minus(long months)Returns the month-of-year that is the specified number of months before this one.<\/td><\/tr><tr><td>14<\/td><td>static Month of(int month)Obtains an instance of Month from an int value.<\/td><\/tr><tr><td>15<\/td><td>Month plus(long months)Returns the month-of-year that is the specified number of quarters after this one.<\/td><\/tr><tr><td>16<\/td><td>&lt;R> R query(TemporalQuery&lt;R> query)Queries this offset using the specified query.<\/td><\/tr><tr><td>17<\/td><td>ValueRange range(TemporalField field)Gets the range of valid values for the specified field.<\/td><\/tr><tr><td>18<\/td><td>static Month valueOf(String name)Returns the enum constant of this type with the specified name.<\/td><\/tr><tr><td>19<\/td><td>static Month[] values()Returns an array containing the constants of this enum type, in the order, they are declared.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<p><\/p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.time.Month&nbsp;Enum represents a month-of-year, such as &#8216;July&#8217;. Class declaration Following is the declaration for&nbsp;java.time.Month&nbsp;Enum \u2212 Enum Constants Following are the fields for&nbsp;Java.time.Month&nbsp;Enum \u2212 JANUARY&nbsp;\u2212 The singleton instance for the month of January with 31 days. FEBRUARY&nbsp;\u2212 The singleton instance for the month of February with 28 days, or 29 in a leap year. MARCH&nbsp;\u2212 [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            78
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1999"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=1999"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1999\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2000,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/1999\/revisions\/2000"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=1999"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=1999"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=1999"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    }
]