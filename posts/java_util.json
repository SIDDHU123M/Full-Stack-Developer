[
    {
        "id": 2010,
        "date": "2021-04-12T06:11:00",
        "date_gmt": "2021-04-12T06:11:00",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2010"
        },
        "modified": "2021-04-12T06:11:00",
        "modified_gmt": "2021-04-12T06:11:00",
        "slug": "arraydeque-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/arraydeque-class\/",
        "title": {
            "rendered": "ArrayDeque Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.ArrayDeque<\/strong>&nbsp;class provides resizable-array and implements the&nbsp;<strong>Deque<\/strong>&nbsp;interface. Following are the important points about Array Deques \u2212<\/p>\n\n\n\n<ul><li>Array deques have no capacity restrictions so they grow as necessary to support usage.<\/li><li>They are not thread-safe; in the absence of external synchronization.<\/li><li>They do not support concurrent access by multiple threads.<\/li><li>Null elements are prohibited in the array deques.<\/li><li>They are faster than Stack and LinkedList.<\/li><\/ul>\n\n\n\n<p>This class and its iterator implement all of the optional methods of the&nbsp;<strong>Collection<\/strong>&nbsp;and&nbsp;<strong>Iterator<\/strong>&nbsp;interfaces.<\/p>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.ArrayDeque<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class ArrayDeque&lt;E&gt;\n   extends AbstractCollection&lt;E&gt;\n   implements Deque&lt;E&gt;, Cloneable, Serializable\n<\/code><\/pre>\n\n\n\n<p>Here&nbsp;<strong>&lt;E&gt;<\/strong>&nbsp;represents an Element, which could be any class. For example, if you&#8217;re building an array list of Integers then you&#8217;d initialize it as \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>ArrayList&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();  <\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>ArrayDeque()<\/strong>This constructor is used to create an empty array deque with an initial capacity sufficient to hold 16 elements.<\/td><\/tr><tr><td>2<\/td><td><strong>ArrayDeque(Collection&lt;? extends E&gt; c)<\/strong>This constructor is used to create a deque containing the elements of the specified collection.<\/td><\/tr><tr><td>3<\/td><td><strong>ArrayDeque(int numElements)<\/strong>This constructor is used to create an empty array deque with an initial capacity sufficient to hold the specified number of elements.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>boolean add(E e)This method inserts the specified element at the end of this deque.<\/td><\/tr><tr><td>2<\/td><td>void addFirst(E e)This method inserts the specified element at the front of this deque.<\/td><\/tr><tr><td>3<\/td><td>void addLast(E e)This method inserts the specified element at the end of this deque.<\/td><\/tr><tr><td>4<\/td><td>void clear()This method removes all of the elements from this deque.<\/td><\/tr><tr><td>5<\/td><td>ArrayDeque&lt;E> clone()This method returns a copy of this deque.<\/td><\/tr><tr><td>6<\/td><td>boolean contains(Object o)This method returns true if this deque contains the specified element.<\/td><\/tr><tr><td>7<\/td><td>Iterator&lt;E> descendingIterator()This method returns an iterator over the elements in this deque in reverse sequential order.<\/td><\/tr><tr><td>8<\/td><td>E element()This method retrieves, but does not remove, the head of the queue represented by this deque.<\/td><\/tr><tr><td>9<\/td><td>E getFirst()This method retrieves, but does not remove, the first element of this deque.<\/td><\/tr><tr><td>10<\/td><td>E getLast()This method retrieves, but does not remove, the last element of this deque.<\/td><\/tr><tr><td>11<\/td><td>boolean isEmpty()This method returns true if this deque contains no elements.<\/td><\/tr><tr><td>12<\/td><td>Iterator&lt;E> iterator()This method returns an iterator over the elements in this deque.<\/td><\/tr><tr><td>13<\/td><td>boolean offer(E e)This method inserts the specified element at the end of this deque.<\/td><\/tr><tr><td>14<\/td><td>boolean offer first(E e)This method inserts the specified element at the front of this deque.<\/td><\/tr><tr><td>15<\/td><td>boolean offerLast(E e)This method inserts the specified element at the end of this deque.<\/td><\/tr><tr><td>16<\/td><td>E peek()This method retrieves, but does not remove, the head of the queue represented by this deque, or returns null if this deque is empty.<\/td><\/tr><tr><td>17<\/td><td>E peekFirst()This method retrieves, but does not remove, the first element of this deque, or returns null if this deque is empty.<\/td><\/tr><tr><td>18<\/td><td>E peekLast()This method retrieves, but does not remove, the last element of this deque, or returns null if this deque is empty.<\/td><\/tr><tr><td>19<\/td><td>E poll()This method retrieves and removes the head of the queue represented by this deque, or returns null if this deque is empty.<\/td><\/tr><tr><td>20<\/td><td>E pollFirst()This method retrieves and removes the first element of this deque, or returns null if this deque is empty.<\/td><\/tr><tr><td>21<\/td><td>E poll last()This method retrieves and removes the last element of this deque, or returns null if this deque is empty.<\/td><\/tr><tr><td>22<\/td><td>E pop()This method pops an element from the stack represented by this deque.<\/td><\/tr><tr><td>23<\/td><td>void push(E e)This method pushes an element onto the stack represented by this deque.<\/td><\/tr><tr><td>24<\/td><td>E remove()This method retrieves and removes the head of the queue represented by this deque.<\/td><\/tr><tr><td>25<\/td><td>boolean remove(Object o)This method removes a single instance of the specified element from this deque.<\/td><\/tr><tr><td>26<\/td><td>E removeFirst()This method retrieves and removes the first element of this deque.<\/td><\/tr><tr><td>27<\/td><td>boolean remove first occurrence(Object o)This method removes the first occurrence of the specified element in this deque.<\/td><\/tr><tr><td>28<\/td><td>E removeLast()This method retrieves and removes the last element of this deque.<\/td><\/tr><tr><td>29<\/td><td>boolean remove last occurrence(Object o)This method removes the last occurrence of the specified element in this deque.<\/td><\/tr><tr><td>30<\/td><td>int size()This method returns the number of elements in this deque.<\/td><\/tr><tr><td>31<\/td><td>object[] toArray()This method returns an array containing all of the elements in this deque in proper sequence.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.ArrayDeque&nbsp;class provides resizable-array and implements the&nbsp;Deque&nbsp;interface. Following are the important points about Array Deques \u2212 Array deques have no capacity restrictions so they grow as necessary to support usage. They are not thread-safe; in the absence of external synchronization. They do not support concurrent access by multiple threads. Null elements are prohibited in the [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2010"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2010"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2010\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2011,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2010\/revisions\/2011"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2010"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2010"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2010"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2012,
        "date": "2021-04-12T06:14:10",
        "date_gmt": "2021-04-12T06:14:10",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2012"
        },
        "modified": "2021-04-12T06:14:10",
        "modified_gmt": "2021-04-12T06:14:10",
        "slug": "arraylist-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/arraylist-class\/",
        "title": {
            "rendered": "ArrayList Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.ArrayList<\/strong>&nbsp;class provides resizable-array and implements the&nbsp;<strong>List<\/strong>&nbsp;interface.Following are the important points about ArrayList \u2212<\/p>\n\n\n\n<ul><li>It implements all optional list operations and it also permits all elements, includes null.<\/li><li>It provides methods to manipulate the size of the array that is used internally to store the list.<\/li><li>The constant factor is low compared to that for the LinkedList implementation.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.ArrayList<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class ArrayList&lt;E&gt;\n   extends AbstractList&lt;E&gt;\n   implements List&lt;E&gt;, RandomAccess, Cloneable, Serializable\n<\/code><\/pre>\n\n\n\n<p>Here&nbsp;<strong>&lt;E&gt;<\/strong>&nbsp;represents an Element. For example, if you&#8217;re building an array list of Integers then you&#8217;d initialize it as<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>ArrayList&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();  \n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>ArrayList()<\/strong>This constructor is used to create an empty list with an initial capacity sufficient to hold 10 elements.<\/td><\/tr><tr><td>2<\/td><td><strong>ArrayList(Collection&lt;? extends E&gt; c)<\/strong>This constructor is used to create a list containing the elements of the specified collection.<\/td><\/tr><tr><td>3<\/td><td><strong>ArrayList(int initialCapacity)<\/strong>This constructor is used to create an empty list with an initial capacity.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>boolean add(E e)This method appends the specified element to the end of this list.<\/td><\/tr><tr><td>2<\/td><td>void add(int index, E element)This method inserts the specified element at the specified position in this list.<\/td><\/tr><tr><td>3<\/td><td>boolean addAll(Collection&lt;? extends E> c)This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection&#8217;s Iterator<\/td><\/tr><tr><td>4<\/td><td>boolean addAll(int index, Collection&lt;? extends E> c)This method inserts all of the elements in the specified collection into this list, starting at the specified position.<\/td><\/tr><tr><td>5<\/td><td>void clear()This method removes all of the elements from this list.<\/td><\/tr><tr><td>6<\/td><td>Object clone()This method returns a shallow copy of this ArrayList instance.<\/td><\/tr><tr><td>7<\/td><td>boolean contains(Object o)This method returns true if this list contains the specified element.<\/td><\/tr><tr><td>8<\/td><td>void ensure capacity(int incapacity)This increases the capacity of this ArrayList.<\/td><\/tr><tr><td>9<\/td><td>E get(int index)This method returns the element at the specified position in this list.<\/td><\/tr><tr><td>10<\/td><td>int indexOf(Object o)This method returns the index of the first occurrence of the specified element in this list, or -1 if this list does not contain the element.<\/td><\/tr><tr><td>11<\/td><td>boolean isEmpty()This method returns true if this list contains no elements.<\/td><\/tr><tr><td>12<\/td><td>int lastIndexOf(Object o)This method returns the index of the last occurrence of the specified element in this list, or -1 if this list does not contain the element.<\/td><\/tr><tr><td>13<\/td><td>E remove(int index)This method removes the element at the specified position in this list.<\/td><\/tr><tr><td>14<\/td><td>boolean remove(Object o)This method removes the first occurrence of the specified element from this list if it is present.<\/td><\/tr><tr><td>15<\/td><td>protected void removeRange(int fromIndex, int toIndex)This method removes from this list all of the elements whose index is between fromIndex(inclusive) and toIndex(exclusive).<\/td><\/tr><tr><td>16<\/td><td>E set(int index, E element)This method replaces the element at the specified position in this list with the specified element.<\/td><\/tr><tr><td>17<\/td><td>int size()This method returns the number of elements in this list.<\/td><\/tr><tr><td>18<\/td><td>Object[] toArray()This method returns an array containing all of the elements in this list in proper sequence (from first to the last element).<\/td><\/tr><tr><td>19<\/td><td>&lt;T> T[] toArray(T[] a)This method returns an array containing all of the elements in this list in proper sequence (from first to the last element); the runtime type of the returned array is that of the specified array.<\/td><\/tr><tr><td>20<\/td><td>void trim to size()This method trims the capacity of this ArrayList instance to be the list&#8217;s current size.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.AbstractList<\/li><li>java.lang.AbstractCollection<\/li><li>java.util.Object<\/li><li>java.util.List<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.ArrayList&nbsp;class provides resizable-array and implements the&nbsp;List&nbsp;interface.Following are the important points about ArrayList \u2212 It implements all optional list operations and it also permits all elements, includes null. It provides methods to manipulate the size of the array that is used internally to store the list. The constant factor is low compared to that for [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2012"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2012"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2012\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2013,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2012\/revisions\/2013"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2012"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2012"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2012"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2014,
        "date": "2021-04-12T06:20:37",
        "date_gmt": "2021-04-12T06:20:37",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2014"
        },
        "modified": "2021-04-12T06:20:37",
        "modified_gmt": "2021-04-12T06:20:37",
        "slug": "arrays-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/arrays-class\/",
        "title": {
            "rendered": "Arrays Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.Arrays<\/strong>&nbsp;class contains a static factory that allows arrays to be viewed as lists.Following are the important points about Arrays \u2212<\/p>\n\n\n\n<ul><li>This class contains various methods for manipulating arrays (such as sorting and searching).<\/li><li>The methods in this class throw a NullPointerException if the specified array reference is null.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.Arrays<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-preformatted\">public class Arrays\n   extends Object\n<\/pre>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>static &lt;T> List&lt;T> asList(T&#8230; a)This method returns a fixed-size list backed by the specified array.<\/td><\/tr><tr><td>2<\/td><td>static int binarySearch(byte[] a, byte key)This method searches the specified array of bytes for the specified value using the binary search algorithm.<\/td><\/tr><tr><td>3<\/td><td>static int binarySearch(byte[] a, int fromIndex, int toIndex, byte key)This method searches a range of the specified array of bytes for the specified value using the binary search algorithm.<\/td><\/tr><tr><td>4<\/td><td>static int binarySearch(char[] a, char key)This method searches the specified array of chars for the specified value using the binary search algorithm.<\/td><\/tr><tr><td>5<\/td><td>static int binarySearch(char[] a, int fromIndex, int toIndex, char key)This method searches a range of the specified array of chars for the specified value using the binary search algorithm.<\/td><\/tr><tr><td>6<\/td><td>static int binarySearch(double[] a, double key)This method searches the specified array of doubles for the specified value using the binary search algorithm.<\/td><\/tr><tr><td>7<\/td><td>static int binarySearch(double[] a, int fromIndex, int toIndex, double key)This method searches a range of the specified array of doubles for the specified value using the binary search algorithm.<\/td><\/tr><tr><td>8<\/td><td>static int binarySearch(float[] a, float key)This method searches the specified array of floats for the specified value using the binary search algorithm.<\/td><\/tr><tr><td>9<\/td><td>static int binarySearch(float[] a, int fromIndex, int toIndex, float key)This method searches a range of the specified array of floats for the specified value using the binary search algorithm.<\/td><\/tr><tr><td>10<\/td><td>static int binarySearch(int[] a, int key)This method searches the specified array of ints for the specified value using the binary search algorithm.<\/td><\/tr><tr><td>11<\/td><td>static int binarySearch(int[] a, int fromIndex, int toIndex, int key)This method searches a range of the specified array of ints for the specified value using the binary search algorithm.<\/td><\/tr><tr><td>12<\/td><td>static int binarySearch(long[] a, int fromIndex, int toIndex, long key)This method searches a range of the specified array of longs for the specified value using the binary search algorithm.<\/td><\/tr><tr><td>13<\/td><td>static int binarySearch(long[] a, long key)This method searches the specified array of longs for the specified value using the binary search algorithm.<\/td><\/tr><tr><td>14<\/td><td>static int binarySearch(Object[] a, int fromIndex, int toIndex, Object key)This method searches a range of the specified array for the specified object using the binary search algorithm.<\/td><\/tr><tr><td>15<\/td><td>static int binarySearch(Object[] a, Object key)This method searches the specified array for the specified object using the binary search algorithm.<\/td><\/tr><tr><td>16<\/td><td>static int binarySearch(short[] a, int fromIndex, int toIndex, short key)This method searches a range of the specified array of shorts for the specified value using the binary search algorithm.<\/td><\/tr><tr><td>17<\/td><td>static int binarySearch(short[] a, short key)This method searches the specified array of shorts for the specified value using the binary search algorithm.<\/td><\/tr><tr><td>18<\/td><td>static &lt;T> int binarySearch(T[] a, int fromIndex, int toIndex, T key, Comparator&lt;? super T> c)This method searches a range of the specified array for the specified object using the binary search algorithm.<\/td><\/tr><tr><td>19<\/td><td>static &lt;T> int binarySearch(T[] a, T key, Comparator&lt;? super T> c)This method searches the specified array for the specified object using the binary search algorithm.<\/td><\/tr><tr><td>20<\/td><td>static boolean[] copyOf(boolean[] original, int newLength)This method copies the specified array, truncating or padding with false (if necessary) so the copy has the specified length.<\/td><\/tr><tr><td>21<\/td><td>static byte[] copyOf(byte[] original, int newLength)This method copies the specified array, truncating or padding with zeros (if necessary) so the copy has the specified length.<\/td><\/tr><tr><td>22<\/td><td>static char[] copyOf(char[] original, int newLength)This method copies the specified array, truncating or padding with null characters (if necessary) so the copy has the specified length.<\/td><\/tr><tr><td>23<\/td><td>static double[] copyOf(double[] original, int newLength)This method copies the specified array, truncating or padding with zeros (if necessary) so the copy has the specified length.<\/td><\/tr><tr><td>24<\/td><td>static float[] copyOf(float[] original, int newLength)This method copies the specified array, truncating or padding with zeros (if necessary) so the copy has the specified length.<\/td><\/tr><tr><td>25<\/td><td>static int[] copyOf(int[] original, int newLength)This method copies the specified array, truncating or padding with zeros (if necessary) so the copy has the specified length.<\/td><\/tr><tr><td>26<\/td><td>static long[] copyOf(long[] original, int newLength)This method copies the specified array, truncating or padding with zeros (if necessary) so the copy has the specified length.<\/td><\/tr><tr><td>27<\/td><td>static short[] copyOf(short[] original, int newLength)This method copies the specified array, truncating or padding with zeros (if necessary) so the copy has the specified length.<\/td><\/tr><tr><td>28<\/td><td>static &lt;T> T[] copyOf(T[] original, int newLength)This method copies the specified array, truncating or padding with nulls (if necessary) so the copy has the specified length.<\/td><\/tr><tr><td>29<\/td><td>static &lt;T,U> T[] copyOf(U[] original, int newLength, Class&lt;? extends T[]> newType)This method copies the specified array, truncating or padding with nulls (if necessary) so the copy has the specified length.<\/td><\/tr><tr><td>30<\/td><td>static boolean[] copyOfRange(boolean[] original, int from, int to)This method copies the specified range of the specified array into a new array.<\/td><\/tr><tr><td>31<\/td><td>static byte[] copyOfRange(byte[] original, int from, int to)This method copies the specified range of the specified array into a new array.<\/td><\/tr><tr><td>32<\/td><td>static char[] copyOfRange(char[] original, int from, int to)This method copies the specified range of the specified array into a new array.<\/td><\/tr><tr><td>33<\/td><td>static double[] copyOfRange(double[] original, int from, int to)This method copies the specified range of the specified array into a new array.<\/td><\/tr><tr><td>34<\/td><td>static float[] copyOfRange(float[] original, int from, int to)This method copies the specified range of the specified array into a new array.<\/td><\/tr><tr><td>35<\/td><td>static int[] copyOfRange(int[] original, int from, int to)This method copies the specified range of the specified array into a new array.<\/td><\/tr><tr><td>36<\/td><td>static long[] copyOfRange(long[] original, int from, int to)This method copies the specified range of the specified array into a new array.<\/td><\/tr><tr><td>37<\/td><td>static short[] copyOfRange(short[] original, int from, int to)This method copies the specified range of the specified array into a new array.<\/td><\/tr><tr><td>38<\/td><td>static &lt;T> T[] copyOfRange(T[] original, int from, int to)This method copies the specified range of the specified array into a new array.<\/td><\/tr><tr><td>39<\/td><td>static &lt;T,U> T[] copyOfRange(U[] original, int from, int to, Class&lt;? extends T[]> newType)This method copies the specified range of the specified array into a new array.<\/td><\/tr><tr><td>40<\/td><td>static boolean deepEquals(Object[] a1, Object[] a2)This method returns true if the two specified arrays are deeply equal to one another.<\/td><\/tr><tr><td>41<\/td><td>static int deepHashCode(Object[] a)This method returns a hash code based on the &#8220;deep contents&#8221; of the specified array.<\/td><\/tr><tr><td>42<\/td><td>static String deepToString(Object[] a)This method returns a string representation of the &#8220;deep contents&#8221; of the specified array.<\/td><\/tr><tr><td>43<\/td><td>static boolean equals(boolean[] a, boolean[] a2)This method returns true if the two specified arrays of booleans are equal to one another.<\/td><\/tr><tr><td>44<\/td><td>static boolean equals(byte[] a, byte[] a2)This method returns true if the two specified arrays of bytes are equal to one another.<\/td><\/tr><tr><td>45<\/td><td>static boolean equals(char[] a, char[] a2)This method returns true if the two specified arrays of chars are equal to one another.<\/td><\/tr><tr><td>46<\/td><td>static boolean equals(double[] a, double[] a2)This method returns true if the two specified arrays of doubles are equal to one another.<\/td><\/tr><tr><td>47<\/td><td>static boolean equals(float[] a, float[] a2)This method returns true if the two specified arrays of floats are equal to one another.<\/td><\/tr><tr><td>48<\/td><td>static boolean equals(int[] a, int[] a2)This method returns true if the two specified arrays of ints are equal to one another.<\/td><\/tr><tr><td>49<\/td><td>static boolean equals(long[] a, long[] a2)This method returns true if the two specified arrays of longs are equal to one another.<\/td><\/tr><tr><td>50<\/td><td>static boolean equals(Object[] a, Object[] a2)This method returns true if the two specified arrays of Objects are equal to one another.<\/td><\/tr><tr><td>51<\/td><td>static boolean equals(short[] a, short[] a2)This method returns true if the two specified arrays of shorts are equal to one another.<\/td><\/tr><tr><td>52<\/td><td>static void fill(boolean[] a, boolean val)This method assigns the specified boolean value to each element of the specified array of booleans.<\/td><\/tr><tr><td>53<\/td><td>static void fill(boolean[] a, int fromIndex, int toIndex, boolean val)This method assigns the specified boolean value to each element of the specified range of the specified array of booleans.<\/td><\/tr><tr><td>54<\/td><td>static void fill(byte[] a, byte val)This method assigns the specified byte value to each element of the specified array of bytes.<\/td><\/tr><tr><td>55<\/td><td>static void fill(byte[] a, int fromIndex, int toIndex, byte val)This method assigns the specified byte value to each element of the specified range of the specified array of bytes.<\/td><\/tr><tr><td>56<\/td><td>static void fill(char[] a, char val)This method assigns the specified char value to each element of the specified array of chars.<\/td><\/tr><tr><td>57<\/td><td>static void fill(char[] a, int fromIndex, int toIndex, char val)This method assigns the specified char value to each element of the specified range of the specified array of chars.<\/td><\/tr><tr><td>58<\/td><td>static void fill(double[] a, double val)This method assigns the specified double value to each element of the specified array of doubles.<\/td><\/tr><tr><td>59<\/td><td>static void fill(double[] a, int fromIndex, int toIndex, double val)This method assigns the specified double value to each element of the specified range of the specified array of doubles.<\/td><\/tr><tr><td>60<\/td><td>static void fill(float[] a, float val)This method assigns the specified float value to each element of the specified array of floats.<\/td><\/tr><tr><td>61<\/td><td>static void fill(float[] a, int fromIndex, int toIndex, float val)This method assigns the specified float value to each element of the specified range of the specified array of floats.<\/td><\/tr><tr><td>62<\/td><td>static void fill(int[] a, int val)This method assigns the specified int value to each element of the specified array of ints.<\/td><\/tr><tr><td>63<\/td><td>static void fill(int[] a, int fromIndex, int toIndex, int val)This method assigns the specified int value to each element of the specified range of the specified array of ints.<\/td><\/tr><tr><td>64<\/td><td>static void fill(long[] a, int fromIndex, int toIndex, long val)This method assigns the specified long value to each element of the specified range of the specified array of longs.<\/td><\/tr><tr><td>65<\/td><td>static void fill(long[] a, long val)This method assigns the specified long value to each element of the specified array of longs.<\/td><\/tr><tr><td>66<\/td><td>static void fill(Object[] a, int fromIndex, int toIndex, Object val)This method assigns the specified Object reference to each element of the specified range of the specified array of Objects.<\/td><\/tr><tr><td>67<\/td><td>static void fill(Object[] a, Object val)This method assigns the specified Object reference to each element of the specified array of Objects.<\/td><\/tr><tr><td>68<\/td><td>static void fill(short[] a, int fromIndex, int toIndex, short val)This method assigns the specified short value to each element of the specified range of the specified array of shorts.<\/td><\/tr><tr><td>69<\/td><td>static void fill(short[] a, short val)This method assigns the specified short value to each element of the specified array of shorts.<\/td><\/tr><tr><td>70<\/td><td>static int hashCode(boolean[] a)This method returns a hash code based on the contents of the specified array.<\/td><\/tr><tr><td>71<\/td><td>static int hashCode(byte[] a)This method returns a hash code based on the contents of the specified array.<\/td><\/tr><tr><td>72<\/td><td>static int hashCode(char[] a)This method returns a hash code based on the contents of the specified array.<\/td><\/tr><tr><td>73<\/td><td>static int hashCode(double[] a)This method returns a hash code based on the contents of the specified array.<\/td><\/tr><tr><td>74<\/td><td>static int hashCode(float[] a)This method returns a hash code based on the contents of the specified array.<\/td><\/tr><tr><td>75<\/td><td>static int hashCode(int[] a)This method returns a hash code based on the contents of the specified array.<\/td><\/tr><tr><td>76<\/td><td>static int hashCode(long[] a)This method returns a hash code based on the contents of the specified array.<\/td><\/tr><tr><td>77<\/td><td>static int hashCode(Object[] a)This method returns a hash code based on the contents of the specified array.<\/td><\/tr><tr><td>78<\/td><td>static int hashCode(short[] a)This method returns a hash code based on the contents of the specified array.<\/td><\/tr><tr><td>79<\/td><td>static void sort(byte[] a)This method sorts the specified array of bytes into ascending numerical order.<\/td><\/tr><tr><td>80<\/td><td>static void sort(byte[] a, int fromIndex, int toIndex)This method sorts the specified range of the specified array of bytes into ascending numerical order.<\/td><\/tr><tr><td>81<\/td><td>static void sort(char[] a)This method sorts the specified array of chars into ascending numerical order.<\/td><\/tr><tr><td>82<\/td><td>static void sort(char[] a, int fromIndex, int toIndex)This method sorts the specified range of the specified array of chars into ascending numerical order.<\/td><\/tr><tr><td>83<\/td><td>static void sort(double[] a)This method sorts the specified array of doubles into ascending numerical order.<\/td><\/tr><tr><td>84<\/td><td>static void sort(double[] a, int fromIndex, int toIndex)This method sorts the specified range of the specified array of doubles into ascending numerical order.<\/td><\/tr><tr><td>85<\/td><td>static void sort(float[] a)This method sorts the specified array of floats into ascending numerical order.<\/td><\/tr><tr><td>86<\/td><td>static void sort(float[] an int fromIndex, int toIndex)This method sorts the specified range of the specified array of floats into ascending numerical order.<\/td><\/tr><tr><td>87<\/td><td>static void sort(int[] a)This method sorts the specified array of ints into ascending numerical order.<\/td><\/tr><tr><td>88<\/td><td>static void sort(int[] an int fromIndex, int toIndex)This method sorts the specified range of the specified array of ints into ascending numerical order.<\/td><\/tr><tr><td>89<\/td><td>static void sort(long[] a)This method sorts the specified array of longs into ascending numerical order.<\/td><\/tr><tr><td>90<\/td><td>static void sort(long[] an int fromIndex, int toIndex)This method sorts the specified range of the specified array of longs into ascending numerical order.<\/td><\/tr><tr><td>91<\/td><td>static void sort(Object[] a)This method sorts the specified array of objects into ascending order, according to the natural ordering of its elements.<\/td><\/tr><tr><td>92<\/td><td>static void sort(Object[] an int fromIndex, int toIndex)This method sorts the specified range of the specified array of objects into ascending order, according to the natural ordering of its elements.<\/td><\/tr><tr><td>93<\/td><td>static void sort(short[] a)This method sorts the specified array of shorts into ascending numerical order.<\/td><\/tr><tr><td>94<\/td><td>static void sort(short[] an int fromIndex, int toIndex)This method sorts the specified range of the specified array of shorts into ascending numerical order.<\/td><\/tr><tr><td>95<\/td><td>static &lt;T> void sort(T[] a Comparator&lt;? super T> c)This method sorts the specified array of objects according to the order induced by the specified comparator.<\/td><\/tr><tr><td>96<\/td><td>static &lt;T> void sort(T[] an int fromIndex, int toIndex, Comparator&lt;? super T> c)This method sorts the specified range of the specified array of objects according to the order induced by the specified comparator.<\/td><\/tr><tr><td>97<\/td><td>static String toString(boolean[] a)This method returns a string representation of the contents of the specified array of boolean.<\/td><\/tr><tr><td>98<\/td><td>static String toString(byte[] a)This method returns a string representation of the contents of the specified array of bytes.<\/td><\/tr><tr><td>99<\/td><td>static String toString(char[] a)This method returns a string representation of the contents of the specified array of chars.<\/td><\/tr><tr><td>100<\/td><td>static String toString(double[] a)This method returns a string representation of the contents of the specified array of doubles.<\/td><\/tr><tr><td>101<\/td><td>static String toString(float[] a)This method returns a string representation of the contents of the specified array of floats.<\/td><\/tr><tr><td>102<\/td><td>static String toString(int[] a)This method returns a string representation of the contents of the specified array of ints.<\/td><\/tr><tr><td>103<\/td><td>static String toString(long[] a)This method returns a string representation of the contents of the specified array of longs.<\/td><\/tr><tr><td>104<\/td><td>static String toString(Object[] a)This method returns a string representation of the contents of the specified array of ints.<\/td><\/tr><tr><td>105<\/td><td>static String toString(short[] a)This method returns a string representation of the contents of the specified array of shorts.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.Arrays&nbsp;class contains a static factory that allows arrays to be viewed as lists.Following are the important points about Arrays \u2212 This class contains various methods for manipulating arrays (such as sorting and searching). The methods in this class throw a NullPointerException if the specified array reference is null. Class declaration Following is the declaration [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2014"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2014"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2014\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2015,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2014\/revisions\/2015"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2014"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2014"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2014"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2016,
        "date": "2021-04-12T06:26:01",
        "date_gmt": "2021-04-12T06:26:01",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2016"
        },
        "modified": "2021-04-12T06:26:01",
        "modified_gmt": "2021-04-12T06:26:01",
        "slug": "bitset-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/bitset-class\/",
        "title": {
            "rendered": "BitSet Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.BitSet<\/strong>&nbsp;class implements a vector of bits that grows as needed.Following are the important points about BitSet \u2212<\/p>\n\n\n\n<ul><li>A BitSet is not safe for multithreaded use without external synchronization.<\/li><li>All bits in the set initially have the value false.<\/li><li>Passing a null parameter to any of the methods in a BitSet will result in a NullPointerException.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.BitSet<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class BitSet\n   extends Object\n   implements Cloneable, Serializable\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>BitSet()<\/strong>This constructor creates a new bit set.<\/td><\/tr><tr><td>2<\/td><td><strong>BitSet(int nbits)<\/strong>This constructor creates a bit set whose initial size is large enough to explicitly represent bits with indices in the range 0 through nbits-1.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>void and(BitSet set)This method performs a logical AND of this target bit set with the argument bit set.<\/td><\/tr><tr><td>2<\/td><td>void andNot(BitSet set)This method clears all of the bits in this BitSet whose corresponding bit is set in the specified BitSet.<\/td><\/tr><tr><td>3<\/td><td>int cardinality()This method returns the number of bits set to true in this BitSet.<\/td><\/tr><tr><td>4<\/td><td>void clear()This method sets all of the bits in this BitSet to false.<\/td><\/tr><tr><td>5<\/td><td>void clear(int bitIndex)This method sets the bit specified by the index to false.<\/td><\/tr><tr><td>6<\/td><td>void clear(int fromIndex, int toIndex)This method sets the bits from the specified fromIndex (inclusive) to the specified toIndex (exclusive) to false.<\/td><\/tr><tr><td>7<\/td><td>Object clone()This method clones this BitSet and produces a new BitSet that is equal to it.<\/td><\/tr><tr><td>8<\/td><td>boolean equals(Object obj)This method compares this object against the specified object.<\/td><\/tr><tr><td>9<\/td><td>void flip(int index)This method sets the bit at the specified index to the complement of its current value.<\/td><\/tr><tr><td>10<\/td><td>void flip(int fromIndex, int toIndex)This method sets each bit from the specified fromIndex (inclusive) to the specified toIndex (exclusive) to the complement of its current value.<\/td><\/tr><tr><td>11<\/td><td>boolean get(int index)This method returns the value of the bit with the specified index.<\/td><\/tr><tr><td>12<\/td><td>BitSet get(int fromIndex, int toIndex)This method returns a new BitSet composed of bits from this BitSet from fromIndex (inclusive) to toIndex (exclusive).<\/td><\/tr><tr><td>13<\/td><td>int hashCode()This method returns the value of the bit with the specified index.<\/td><\/tr><tr><td>14<\/td><td>boolean intersects(BitSet set)This method returns true if the specified BitSet has any bits set to true that are also set to true in this BitSet.<\/td><\/tr><tr><td>15<\/td><td>boolean isEmpty()This method returns true if this BitSet contains no bits that are set to true.<\/td><\/tr><tr><td>16<\/td><td>int length()This method returns the &#8220;logical size&#8221; of this BitSet: the index of the highest set bit in the BitSet plus one.<\/td><\/tr><tr><td>17<\/td><td>int nextClearBit(int fromIndex)This method returns the index of the first bit that is set to false that occurs on or after the specified starting index.<\/td><\/tr><tr><td>18<\/td><td>int next set it(int fromIndex)This method returns the index of the first bit that is set to true that occurs on or after the specified starting index.<\/td><\/tr><tr><td>19<\/td><td>void or(BitSet set)This method performs a logical OR of this bit set with the bit set argument.<\/td><\/tr><tr><td>20<\/td><td>void set(int index)This method sets the bit at the specified index to true.<\/td><\/tr><tr><td>21<\/td><td>void set(int index, boolean value)This method sets the bit at the specified index to the specified value.<\/td><\/tr><tr><td>22<\/td><td>void set(int fromIndex, int toIndex)This method sets the bits from the specified fromIndex (inclusive) to the specified toIndex (exclusive) to true.<\/td><\/tr><tr><td>23<\/td><td>void set(int fromIndex, int toIndex, boolean value)This method sets the bits from the specified fromIndex (inclusive) to the specified toIndex (exclusive) to the specified value.<\/td><\/tr><tr><td>24<\/td><td>int size()This method returns the number of bits of space actually in use by this BitSet to represent bit values.<\/td><\/tr><tr><td>25<\/td><td>String toString()This method returns a string representation of this bit set.<\/td><\/tr><tr><td>26<\/td><td>void xor(BitSet set)This method performs a logical XOR of this bit set with the bit set argument.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.BitSet&nbsp;class implements a vector of bits that grows as needed.Following are the important points about BitSet \u2212 A BitSet is not safe for multithreaded use without external synchronization. All bits in the set initially have the value false. Passing a null parameter to any of the methods in a BitSet will result in a [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2016"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2016"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2016\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2017,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2016\/revisions\/2017"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2016"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2016"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2016"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2018,
        "date": "2021-04-12T06:29:12",
        "date_gmt": "2021-04-12T06:29:12",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2018"
        },
        "modified": "2021-04-12T06:29:12",
        "modified_gmt": "2021-04-12T06:29:12",
        "slug": "calendar-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/calendar-class\/",
        "title": {
            "rendered": "Calendar Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.calendar<\/strong>&nbsp;class is an abstract class that provides methods for converting between a specific instant in time and a set of calendar fields such as YEAR, MONTH, DAY_OF_MONTH, HOUR, and so on, and for manipulating the calendar fields, such as getting the date of the next week.Following are the important points about Calendar \u2212<\/p>\n\n\n\n<ul><li>This class also provides additional fields and methods for implementing a concrete calendar system outside the package.<\/li><li>Calendar defines the range of values returned by certain calendar fields.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.Calendar<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public abstract class Calendar\n   extends Object\n   implements Serializable, Cloneable, Comparable&lt;Calendar&gt;\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.util.Calendar<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static int ALL_STYLES<\/strong>&nbsp;\u2212 This is the style specifier for getDisplayNames indicating names in all styles, such as &#8220;January&#8221; and &#8220;Jan&#8221;.<\/li><li><strong>static int AM<\/strong>&nbsp;\u2212 This is the value of the AM_PM field indicating the period of the day from midnight to just before noon.<\/li><li><strong>static int AM_PM<\/strong>&nbsp;\u2212 This is the field number for get and set indicating whether the HOUR is before or after noon.<\/li><li><strong>static int APRIL<\/strong>&nbsp;\u2212 This is the value of the MONTH field indicating the fourth month of the year in the Gregorian and Julian calendars.<\/li><li><strong>protected boolean areFieldsSet<\/strong>&nbsp;\u2212 This is true if fields[] are in sync with the currently set time.<\/li><li><strong>static int AUGUST<\/strong>&nbsp;\u2212 This is the value of the MONTH field indicating the eighth month of the year in the Gregorian and Julian calendars.<\/li><li><strong>static int DATE<\/strong>&nbsp;\u2212 This is the field number for get and set indicating the day of the month.<\/li><li><strong>static int DAY_OF_MONTH<\/strong>&nbsp;\u2212 This is the field number for get and set indicating the day of the month.<\/li><li><strong>static int DAY_OF_WEEK<\/strong>&nbsp;\u2212 This is the field number for get and set indicating the day of the week.<\/li><li><strong>static int DAY_OF_WEEK_IN_MONTH<\/strong>&nbsp;\u2212 This is the field number for get and set indicating the ordinal number of the day of the week within the current month.<\/li><li><strong>static int DAY_OF_YEAR<\/strong>&nbsp;\u2212 This is the field number for get and set indicating the day number within the current year.<\/li><li><strong>static int DECEMBER<\/strong>&nbsp;\u2212 This is the value of the MONTH field indicating the twelfth month of the year in the Gregorian and Julian calendars.<\/li><li><strong>static int DST_OFFSET<\/strong>&nbsp;\u2212 This is the field number for get and set indicating the daylight savings offset in milliseconds.<\/li><li><strong>static int ERA<\/strong>&nbsp;\u2212 This is the field number for get and set indicating the era, e.g., AD or BC in the Julian calendar.<\/li><li><strong>static int FEBRUARY<\/strong>&nbsp;\u2212 This is the value of the MONTH field indicating the second month of the year in the Gregorian and Julian calendars.<\/li><li><strong>static int FIELD_COUNT<\/strong>&nbsp;\u2212 This is the number of distinct fields recognized by get and set.<\/li><li><strong>protected int[] fields<\/strong>&nbsp;\u2212 This is the calendar field values for the currently set time for this calendar.<\/li><li><strong>static int FRIDAY<\/strong>&nbsp;\u2212 This is the value of the DAY_OF_WEEK field indicating Friday.<\/li><li><strong>static int HOUR<\/strong>&nbsp;\u2212 This is the field number for get and set indicating the hour of the morning or afternoon.<\/li><li><strong>static int HOUR_OF_DAY<\/strong>&nbsp;\u2212 This is the field number for get and set indicating the hour of the day.<\/li><li><strong>protected boolean[] isSet<\/strong>&nbsp;\u2212 This is the flags which tell if a specified calendar field for the calendar is set.<\/li><li><strong>protected boolean isTimeSet<\/strong>&nbsp;\u2212 This is true if then the value of time is valid.<\/li><li><strong>static int JANUARY<\/strong>&nbsp;\u2212 This is the value of the MONTH field indicating the first month of the year in the Gregorian and Julian calendars.<\/li><li><strong>static int JULY<\/strong>&nbsp;\u2212 This is the value of the MONTH field indicating the seventh month of the year in the Gregorian and Julian calendars.<\/li><li><strong>static int JUNE<\/strong>&nbsp;\u2212 This is the value of the MONTH field indicating the sixth month of the year in the Gregorian and Julian calendars.<\/li><li><strong>static int LONG<\/strong>&nbsp;\u2212 This is the style specifier for getDisplayName and getDisplayNames indicating a long name, such as &#8220;January&#8221;.<\/li><li><strong>static int MARCH<\/strong>&nbsp;\u2212 This is the value of the MONTH field indicating the third month of the year in the Gregorian and Julian calendars.<\/li><li>static int MAY \u2212 This is the value of the MONTH field indicating the fifth month of the year in the Gregorian and Julian calendars.<\/li><li><strong>static int MILLISECOND<\/strong>&nbsp;\u2212 This is the field number for get and set indicating the millisecond within the second.<\/li><li><strong>static int MINUTE<\/strong>&nbsp;\u2212 This is the field number for get and set indicating the minute within the hour.<\/li><li><strong>static int MONDAY<\/strong>&nbsp;\u2212 This is the value of the DAY_OF_WEEK field indicating Monday.<\/li><li><strong>static int MONTH<\/strong>&nbsp;\u2212 This is the field number for get and set indicating the month.<\/li><li><strong>static int NOVEMBER<\/strong>&nbsp;\u2212 This is the value of the MONTH field indicating the eleventh month of the year in the Gregorian and Julian calendars.<\/li><li><strong>static int OCTOBER<\/strong>&nbsp;\u2212 This is the value of the MONTH field indicating the tenth month of the year in the Gregorian and Julian calendars.<\/li><li><strong>static int PM<\/strong>&nbsp;\u2212 This is the value of the AM_PM field indicating the period of the day from noon to just before midnight.<\/li><li><strong>static int SATURDAY<\/strong>&nbsp;\u2212 This is the value of the DAY_OF_WEEK field indicating Saturday.<\/li><li><strong>static int SECOND<\/strong>&nbsp;\u2212 This is the field number for get and set indicating the second within the minute.<\/li><li><strong>static int SEPTEMBER<\/strong>&nbsp;\u2212 This is the value of the MONTH field indicating the ninth month of the year in the Gregorian and Julian calendars.<\/li><li><strong>static int SHORT<\/strong>&nbsp;\u2212 This is the style specifier for getDisplayName and getDisplayNames indicating a short name, such as &#8220;Jan&#8221;.<\/li><li><strong>static int SUNDAY<\/strong>&nbsp;\u2212 This is the value of the DAY_OF_WEEK field indicating Sunday.<\/li><li><strong>static int THURSDAY<\/strong>&nbsp;\u2212 This is the value of the DAY_OF_WEEK field indicating Thursday.<\/li><li><strong>protected long time<\/strong>&nbsp;\u2212 This is the the currently set time for this calendar, expressed in milliseconds after January 1, 1970, 0:00:00 GMT.<\/li><li><strong>static int TUESDAY<\/strong>&nbsp;\u2212 This is the value of the DAY_OF_WEEK field indicating Tuesday.<\/li><li><strong>static int UNDECIMBER<\/strong>&nbsp;\u2212 This is the value of the MONTH field indicating the thirteenth month of the year.<\/li><li><strong>static int WEDNESDAY<\/strong>&nbsp;\u2212 This is the value of the DAY_OF_WEEK field indicating Wednesday.<\/li><li><strong>static int WEEK_OF_MONTH<\/strong>&nbsp;\u2212 This is the field number for get and set indicating the week number within the current month.<\/li><li><strong>static int WEEK_OF_YEAR<\/strong>&nbsp;\u2212 This is the Field number for get and set indicating the week number within the current year. .<\/li><li><strong>static int YEAR<\/strong>&nbsp;\u2212 This is the field number for get and set indicating the year.<\/li><li><strong>static int ZONE_OFFSET<\/strong>&nbsp;\u2212 This is the field number for get and set indicating the raw offset from GMT in milliseconds.<\/li><\/ul>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>protected Calendar()<\/strong>This constructor constructs a Calendar with the default time zone and locale.<\/td><\/tr><tr><td>2<\/td><td><strong>protected Calendar(TimeZone zone, Locale aLocale)<\/strong>This constructor constructs a calendar with the specified time zone and locale.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>abstract void add(int field, int amount)This method adds or subtracts the specified amount of time to the given calendar field, based on the calendar&#8217;s rules.<\/td><\/tr><tr><td>2<\/td><td>boolean after(Object when)This method returns whether this Calendar represents a time after the time represented by the specified Object.<\/td><\/tr><tr><td>3<\/td><td>boolean before(Object when)This method returns whether this Calendar represents a time before the time represented by the specified Object.<\/td><\/tr><tr><td>4<\/td><td>void clear()This method sets all the calendar field values and the time value (millisecond offset from the Epoch) of this Calendar undefined.<\/td><\/tr><tr><td>5<\/td><td>void clear(int field)This method sets the given calendar field value and the time value (millisecond offset from the Epoch) of this Calendar undefined.<\/td><\/tr><tr><td>6<\/td><td>Object clone()This method creates and returns a copy of this object.<\/td><\/tr><tr><td>7<\/td><td>int compareTo(Calendar anotherCalendar)This method compares the time values (millisecond offsets from the Epoch) represented by two Calendar objects.<\/td><\/tr><tr><td>8<\/td><td>protected void complete()This method fills in any unset fields in the calendar fields.<\/td><\/tr><tr><td>9<\/td><td>protected abstract void computeFields()This method converts the current millisecond time value time to calendar field values in fields[].<\/td><\/tr><tr><td>10<\/td><td>protected abstract void computeTime()This method converts the current calendar field values in fields[] to the millisecond time value time.<\/td><\/tr><tr><td>11<\/td><td>boolean equals(Object obj)This method compares this Calendar to the specified Object.<\/td><\/tr><tr><td>12<\/td><td>int get(int field)This method returns the value of the given calendar field.<\/td><\/tr><tr><td>13<\/td><td>int getActualMaximum(int field)This method returns the maximum value that the specified calendar field could have, given the time value of this Calendar.<\/td><\/tr><tr><td>14<\/td><td>int getActualMinimum(int field)This method returns the minimum value that the specified calendar field could have, given the time value of this Calendar.<\/td><\/tr><tr><td>15<\/td><td>static Locale[] getAvailableLocales()This method returns an array of all locales for which the getInstance methods of this class can return localized instances.<\/td><\/tr><tr><td>16<\/td><td>String getDisplayName(int field, int style, Locale locale)This method returns the string representation of the calendar field value in the given style and locale.<\/td><\/tr><tr><td>17<\/td><td>Map&lt;String,Integer> getDisplayNames(int field, int style, Locale locale)This method returns a Map containing all names of the calendar field in the given style and locale and their corresponding field values.<\/td><\/tr><tr><td>18<\/td><td>int getFirstDayOfWeek()This method gets what the first day of the week is; e.g., SUNDAY in the U.S., MONDAY in France.<\/td><\/tr><tr><td>19<\/td><td>abstract int getGreatestMinimum(int field)This method returns the highest minimum value for the given calendar field of this Calendar instance.<\/td><\/tr><tr><td>20<\/td><td>static Calendar getInstance()This method gets a calendar using the default time zone and locale.<\/td><\/tr><tr><td>21<\/td><td>static Calendar getInstance(Locale aLocale)This method gets a calendar using the default time zone and specified locale.<\/td><\/tr><tr><td>22<\/td><td>static Calendar getInstance(TimeZone zone)This method gets a calendar using the specified time zone and default locale.<\/td><\/tr><tr><td>23<\/td><td>static Calendar getInstance(TimeZone zone, Locale aLocale)This method gets a calendar with the specified time zone and locale.<\/td><\/tr><tr><td>24<\/td><td>abstract int getLeastMaximum(int field)This method returns the lowest maximum value for the given calendar field of this Calendar instance.<\/td><\/tr><tr><td>25<\/td><td>abstract int getMaximum(int field)This method returns the maximum value for the given calendar field of this Calendar instance.<\/td><\/tr><tr><td>26<\/td><td>int getMinimalDaysInFirstWeek()This method gets what the minimal days required in the first week of the year are; e.g., if the first week is defined as one that contains the first day of the first month of a year, this method returns 1.<\/td><\/tr><tr><td>27<\/td><td>abstract int getMinimum(int field)This method returns the minimum value for the given calendar field of this Calendar instance.<\/td><\/tr><tr><td>28<\/td><td>Date getTime()This method returns a Date object representing this Calendar&#8217;s time value (millisecond offset from the Epoch&#8221;).<\/td><\/tr><tr><td>29<\/td><td>long getTimeInMillis()This method returns this Calendar&#8217;s time value in milliseconds.<\/td><\/tr><tr><td>30<\/td><td>TimeZone getTimeZone()This method gets the time zone.<\/td><\/tr><tr><td>31<\/td><td>int hashCode()This method returns a hash code for this calendar.<\/td><\/tr><tr><td>32<\/td><td>protected int internet(int field)This method returns the value of the given calendar field.<\/td><\/tr><tr><td>33<\/td><td>boolean is lenient()This method tells whether date\/time interpretation is to be lenient.<\/td><\/tr><tr><td>34<\/td><td>boolean set(int field)This method determines if the given calendar field has a value set, including cases that the value has been set by internal fields calculations triggered by a get method call.<\/td><\/tr><tr><td>35<\/td><td>abstract void roll(int field, boolean up)This method adds or subtracts (up\/down) a single unit of time on the given time field without changing larger fields.<\/td><\/tr><tr><td>36<\/td><td>void roll(int field, int amount)This method adds the specified (signed) amount to the specified calendar field without changing larger fields.<\/td><\/tr><tr><td>37<\/td><td>void set(int field, int value)This method sets the given calendar field to the given value.<\/td><\/tr><tr><td>38<\/td><td>void set(int year, int month, int date)This method sets the values for the calendar fields YEAR, MONTH, and DAY_OF_MONTH.<\/td><\/tr><tr><td>39<\/td><td>void set(int year, int month, int date, int hour of day, int minute)This method sets the values for the calendar fields YEAR, MONTH, DAY_OF_MONTH, HOUR_OF_DAY, and MINUTE.<\/td><\/tr><tr><td>40<\/td><td>void set(int year, int month, int date, int hour of day, int minute, int second)This method sets the values for the fields YEAR, MONTH, DAY_OF_MONTH, HOUR, MINUTE, and SECOND.<\/td><\/tr><tr><td>41<\/td><td>void setFirstDayOfWeek(int value)This method sets what the first day of the week is; e.g., SUNDAY in the U.S., MONDAY in France.<\/td><\/tr><tr><td>42<\/td><td>void set lenient(boolean lenient)This method specifies whether or not date\/time interpretation is to be lenient.<\/td><\/tr><tr><td>43<\/td><td>void setMinimalDaysInFirstWeek(int value)This method sets what the minimal days required in the first week of the year are; For Example, if the first week is defined as one that contains the first day of the first month of a year, call this method with value.<\/td><\/tr><tr><td>44<\/td><td>void setTime(Date date)This method sets this Calendar&#8217;s time with the given Date.<\/td><\/tr><tr><td>45<\/td><td>void setTimeInMillis(long millis)This method sets this Calendar&#8217;s current time from the given long value.<\/td><\/tr><tr><td>46<\/td><td>void set timezone(TimeZone value)This method sets the time zone with the given time zone value.<\/td><\/tr><tr><td>47<\/td><td>String toString()This method returns a string representation of this calendar.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.calendar&nbsp;class is an abstract class that provides methods for converting between a specific instant in time and a set of calendar fields such as YEAR, MONTH, DAY_OF_MONTH, HOUR, and so on, and for manipulating the calendar fields, such as getting the date of the next week.Following are the important points about Calendar \u2212 This [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2018"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2018"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2018\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2019,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2018\/revisions\/2019"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2018"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2018"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2018"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2020,
        "date": "2021-04-12T06:33:23",
        "date_gmt": "2021-04-12T06:33:23",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2020"
        },
        "modified": "2021-04-12T06:33:23",
        "modified_gmt": "2021-04-12T06:33:23",
        "slug": "collections-class-2",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/collections-class-2\/",
        "title": {
            "rendered": "Collections Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.Collections<\/strong>&nbsp;class consists exclusively of static methods that operate on or return collections.Following are the important points about Collections \u2212<\/p>\n\n\n\n<ul><li>It contains polymorphic algorithms that operate on collections, &#8220;wrappers&#8221;, which return a new collection backed by a specified collection.<\/li><li>The methods of this class all throw a NullPointerException if the collections or class objects provided to them are null.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.Collections<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class Collections\n   extends Object\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.util.Collections<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static List EMPTY_LIST<\/strong>&nbsp;\u2212 This is the empty list (immutable).<\/li><li><strong>static Map EMPTY_MAP<\/strong>&nbsp;\u2212 This is the empty map (immutable).<\/li><li><strong>static Set EMPTY_SET<\/strong>&nbsp;\u2212 This is the empty set (immutable).<\/li><\/ul>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>static &lt;T> boolean addAll(Collection&lt;? super T> c, T&#8230; elements)This method adds all of the specified elements to the specified collection.<\/td><\/tr><tr><td>2<\/td><td>static &lt;T> Queue&lt;T> asLifoQueue(Deque&lt;T> deque)This method returns a view of a Deque as a Last-in-first-out (Lifo) Queue.<\/td><\/tr><tr><td>3<\/td><td>static &lt;T> int binarySearch(List&lt;? extends Comparable&lt;? super T>> list, T key)This method searches the specified list for the specified object using the binary search algorithm.<\/td><\/tr><tr><td>4<\/td><td>static &lt;T> int binarySearch(List&lt;? extends T> list, T key, Comparator&lt;? super T&lt; c)This method searches the specified list for the specified object using the binary search algorithm.<\/td><\/tr><tr><td>5<\/td><td>static &lt;E> Collection&lt;E> checkedCollection(Collection&lt;E> c, Class&lt;E> type)This method returns a dynamically typesafe view of the specified collection.<\/td><\/tr><tr><td>6<\/td><td>static &lt;E> List&lt;E> checkedList(List&lt;E> list, Class&lt;E> type)This method returns a dynamically typesafe view of the specified list.<\/td><\/tr><tr><td>7<\/td><td>static &lt;K,V> Map&lt;K,V> checkedMap(Map&lt;K,V> m, Class&lt;K> keyType, Class&lt;V> valueType)This method returns a dynamically typesafe view of the specified map.<\/td><\/tr><tr><td>8<\/td><td>static &lt;E> Set&lt;E> checkedSet(Set&lt;E> s, Class&lt;E> type)This method returns a dynamically typesafe view of the specified set.<\/td><\/tr><tr><td>9<\/td><td>static &lt;K,V> SortedMap&lt;K,V> checkedSortedMap(SortedMap&lt;K,V> m, Class&lt;K> keyType, Class&lt;V> valueType)This method returns a dynamically typesafe view of the specified sorted map.<\/td><\/tr><tr><td>10<\/td><td>static &lt;E> SortedSet&lt;E>checkedSortedSet(SortedSet&lt;E> s, Class&lt;E> type)This method returns a dynamically typesafe view of the specified sorted set.<\/td><\/tr><tr><td>11<\/td><td>static &lt;T> void copy(List&lt;? super T> dest, List&lt;? extends T> src)This method copies all of the elements from one list into another.<\/td><\/tr><tr><td>12<\/td><td>static boolean disjoint(Collection&lt;?> c1, Collection&lt;?> c2)This method returns true if the two specified collections have no elements in common.<\/td><\/tr><tr><td>13<\/td><td>static &lt;T> List&lt;T> emptyList()This method returns the empty list (immutable).<\/td><\/tr><tr><td>14<\/td><td>static &lt;K,V> Map&lt;K,V> emptyMap()This method returns the empty map (immutable).<\/td><\/tr><tr><td>15<\/td><td>static &lt;T> Set&lt;T> emptySet()This method returns the empty set (immutable).<\/td><\/tr><tr><td>16<\/td><td>static &lt;T> Enumeration&lt;T> enumeration(Collection&lt;T> c)This method returns an enumeration over the specified collection.<\/td><\/tr><tr><td>17<\/td><td>static &lt;T> void fill(List&lt;? super T> list, T obj)This method replaces all of the elements of the specified list with the specified element.<\/td><\/tr><tr><td>18<\/td><td>static int frequency(Collection&lt;?> c, Object o)This method returns the number of elements in the specified collection equal to the specified object.<\/td><\/tr><tr><td>19<\/td><td>static int indexOfSubList(List&lt;?> source, List&lt;?> target)This method returns the starting position of the first occurrence of the specified target list within the specified source list, or -1 if there is no such occurrence.<\/td><\/tr><tr><td>20<\/td><td>static int lastIndexOfSubList(List&lt;?> source, List&lt;?> target)This method returns the starting position of the last occurrence of the specified target list within the specified source list, or -1 if there is no such occurrence.<\/td><\/tr><tr><td>21<\/td><td>static &lt;T> ArrayList&lt;T> list(Enumeration&lt;T> e)This method returns an array list containing the elements returned by the specified enumeration in the order they are returned by the enumeration.<\/td><\/tr><tr><td>22<\/td><td>static &lt;T extends Object &amp; Comparable&lt;? super T> >T max(Collection&lt;? extends T> coll)This method returns the maximum element of the given collection, according to the natural ordering of its elements.<\/td><\/tr><tr><td>23<\/td><td>static &lt;T> T max(Collection&lt;? extends T> coll, Comparator&lt;? super T> comp)This method returns the maximum element of the given collection, according to the order induced by the specified comparator.<\/td><\/tr><tr><td>24<\/td><td>static &lt;T extends Object &amp; Comparable&lt;? super T>>T min(Collection&lt;? extends T> coll)This method Returns the minimum element of the given collection, according to the natural ordering of its elements.<\/td><\/tr><tr><td>25<\/td><td>static &lt;T> T min(Collection&lt;? extends T> coll, Comparator&lt;? super T> comp)This method returns the minimum element of the given collection, according to the order induced by the specified comparator.<\/td><\/tr><tr><td>26<\/td><td>static &lt;T> List&lt;T> nCopies(int n, T o)This method returns an immutable list consisting of n copies of the specified object.<\/td><\/tr><tr><td>27<\/td><td>static &lt;E> Set&lt;E> newSetFromMap(Map&lt;E,Boolean> map)This method returns a set backed by the specified map.<\/td><\/tr><tr><td>28<\/td><td>static &lt;T> boolean replaceAll(List&lt;T> list, T oldVal, T newVal)This method replaces all occurrences of one specified value in a list with another.<\/td><\/tr><tr><td>29<\/td><td>static void reverse(List&lt;?> list)This method reverses the order of the elements in the specified list.<\/td><\/tr><tr><td>30<\/td><td>static &lt;T> Comparator&lt;T> reverseOrder()This method returns a comparator that imposes the reverse of the natural ordering on a collection of objects that implement the Comparable interface.<\/td><\/tr><tr><td>31<\/td><td>static &lt;T> Comparator&lt;T> reverseOrder(Comparator&lt;T> cmp)This method returns a comparator that imposes the reverse ordering of the specified comparator.<\/td><\/tr><tr><td>32<\/td><td>static void rotate(List&lt;?> list, int distance)This method rotates the elements in the specified list by the specified distance.<\/td><\/tr><tr><td>33<\/td><td>static void shuffle(List&lt;?> list)This method randomly permutes the specified list using a default source of randomness.<\/td><\/tr><tr><td>34<\/td><td>static void shuffle(List&lt;?> list, Random and)This method randomly permutes the specified list using the specified source of randomness.<\/td><\/tr><tr><td>35<\/td><td>static &lt;T> Set&lt;T> singleton(To)This method returns an immutable set containing only the specified object.<\/td><\/tr><tr><td>36<\/td><td>static &lt;T> List&lt;T> singleton list(To)This method returns an immutable list containing only the specified object.<\/td><\/tr><tr><td>37<\/td><td>static &lt;K, V> Map&lt;K, V> singleton map(K key, V value)This method returns an immutable map, mapping only the specified key to the specified value.<\/td><\/tr><tr><td>38<\/td><td>static &lt;T extends Comparable&lt;? super T>> void sort(List&lt;T> list)This method sorts the specified list into ascending order, according to the natural ordering of its elements.<\/td><\/tr><tr><td>39<\/td><td>static &lt;T> void sort(List&lt;T> list, Comparator&lt;? super T> c)This method sorts the specified list according to the order induced by the specified comparator.<\/td><\/tr><tr><td>40<\/td><td>static void swap(List&lt;?> list, int i, int j)This method swaps the elements at the specified positions in the specified list.<\/td><\/tr><tr><td>41<\/td><td>static &lt;T> Collection&lt;T> synchronizedCollection(Collection&lt;T> c)This method returns a synchronized (thread-safe) collection backed by the specified collection.<\/td><\/tr><tr><td>42<\/td><td>static &lt;T> List&lt;T> synchronizedList(List&lt;T> list)This method returns a synchronized (thread-safe) list backed by the specified list.<\/td><\/tr><tr><td>43<\/td><td>static &lt;K,V> Map&lt;K,V> synchronizedMap(Map&lt;K,V> m)This method returns a synchronized (thread-safe) map backed by the specified map.<\/td><\/tr><tr><td>44<\/td><td>static &lt;T> Set&lt;T> synchronizedSet(Set&lt;T> s)This method returns a synchronized (thread-safe) set backed by the specified set.<\/td><\/tr><tr><td>45<\/td><td>static &lt;K,V> SortedMap&lt;K,V> synchronizedSortedMap(SortedMap&lt;K,V> m)This method returns a synchronized (thread-safe) sorted map backed by the specified sorted map.<\/td><\/tr><tr><td>46<\/td><td>static &lt;T> SortedSet&lt;T> synchronizedSortedSet(SortedSet&lt;T> s)This method returns a synchronized (thread-safe) sorted set backed by the specified sorted set.<\/td><\/tr><tr><td>47<\/td><td>static &lt;T> Collection&lt;T> unmodifiableCollection(Collection&lt;? extends T> c)This method returns an unmodifiable view of the specified collection.<\/td><\/tr><tr><td>48<\/td><td>static &lt;T> List&lt;T> unmodifiableList(List&lt;? extends T> list)This method returns an unmodifiable view of the specified list.<\/td><\/tr><tr><td>49<\/td><td>static &lt;K,V> Map&lt;K,V> unmodifiableMap(Map&lt;? extends K,? extends V> m)This method returns an unmodifiable view of the specified map.<\/td><\/tr><tr><td>50<\/td><td>static &lt;T> Set&lt;T> unmodifiableSet(Set&lt;? extends T> s)This method returns an unmodifiable view of the specified set.<\/td><\/tr><tr><td>51<\/td><td>static &lt;K,V> SortedMap&lt;K,V> unmodifiableSortedMap(SortedMap&lt;K,? extends V> m)This method returns an unmodifiable view of the specified sorted map.<\/td><\/tr><tr><td>52<\/td><td>static &lt;T> SortedSet&lt;T> unmodifiableSortedSet(SortedSet&lt;T> s)This method returns an unmodifiable view of the specified sorted set.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.Collections&nbsp;class consists exclusively of static methods that operate on or return collections.Following are the important points about Collections \u2212 It contains polymorphic algorithms that operate on collections, &#8220;wrappers&#8221;, which return a new collection backed by a specified collection. The methods of this class all throw a NullPointerException if the collections or class objects provided [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2020"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2020"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2020\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2021,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2020\/revisions\/2021"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2020"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2020"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2020"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2022,
        "date": "2021-04-12T06:37:50",
        "date_gmt": "2021-04-12T06:37:50",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2022"
        },
        "modified": "2021-04-12T06:37:50",
        "modified_gmt": "2021-04-12T06:37:50",
        "slug": "currency-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/currency-class\/",
        "title": {
            "rendered": "Currency Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.Currency<\/strong>&nbsp;class represents a currency.Following are the important points about Currency \u2212<\/p>\n\n\n\n<ul><li>Currencies are identified by their ISO 4217 currency codes.<\/li><li>The class is designed so that there&#8217;s never more than one Currency instance for any given currency, this is the reason behind no public constructor.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.Currency<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class Currency\n   extends Object\n   implements Serializable\n<\/code><\/pre>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>String getCurrencyCode()This method gets the ISO 4217 currency code of this currency.<\/td><\/tr><tr><td>2<\/td><td>int getDefaultFractionDigits()This method gets the default number of fraction digits used with this currency.<\/td><\/tr><tr><td>3<\/td><td>static Currency getInstance(Locale locale)This method returns the Currency instance for the country of the given locale.<\/td><\/tr><tr><td>4<\/td><td>static Currency getInstance(String currency code)This method returns the Currency instance for the given currency code.<\/td><\/tr><tr><td>5<\/td><td>String getSymbol()This method gets the symbol of this currency for the default locale.<\/td><\/tr><tr><td>6<\/td><td>String getSymbol(Locale locale)This method gets the symbol of this currency for the specified locale.<\/td><\/tr><tr><td>7<\/td><td>String toString()This method returns the ISO 4217 currency code of this currency.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.Currency&nbsp;class represents a currency.Following are the important points about Currency \u2212 Currencies are identified by their ISO 4217 currency codes. The class is designed so that there&#8217;s never more than one Currency instance for any given currency, this is the reason behind no public constructor. Class declaration Following is the declaration for&nbsp;java.util.Currency&nbsp;class \u2212 Class [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2022"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2022"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2022\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2023,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2022\/revisions\/2023"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2022"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2022"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2022"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2024,
        "date": "2021-04-12T06:39:39",
        "date_gmt": "2021-04-12T06:39:39",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2024"
        },
        "modified": "2021-04-12T06:39:39",
        "modified_gmt": "2021-04-12T06:39:39",
        "slug": "date-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/date-class\/",
        "title": {
            "rendered": "Date Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.Date<\/strong>&nbsp;class represents a specific instant in time, with millisecond precision.<\/p>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for\u00a0<strong>java. util.Date<\/strong>\u00a0class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class Date\n   extends Object\n   implements Serializable, Cloneable, Comparable&lt;Date&gt;\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>Date()<\/strong>This constructor allocates a Date object and initializes it so that it represents the time at which it was allocated, measured to the nearest millisecond.<\/td><\/tr><tr><td>2<\/td><td><strong>Date(long date)<\/strong>This constructor allocates a Date object and initializes it to represent the specified number of milliseconds since the standard base time known as &#8220;the epoch&#8221;, namely January 1, 1970, 00:00:00 GMT.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>boolean after(Date when)This method tests if this date is after the specified date.<\/td><\/tr><tr><td>2<\/td><td>boolean before(Date when)This method tests if this date is before the specified date.<\/td><\/tr><tr><td>3<\/td><td>Object clone()This method returns a copy of this object.<\/td><\/tr><tr><td>4<\/td><td>int compareTo(Date another date)This method compares two Dates for ordering.<\/td><\/tr><tr><td>5<\/td><td>boolean equals(Object obj)This method compares two dates for equality.<\/td><\/tr><tr><td>6<\/td><td>long getTime()This method returns the number of milliseconds since January 1, 1970, 00:00:00 GMT represented by this Date object.<\/td><\/tr><tr><td>7<\/td><td>int hashCode()This method returns a hash code value for this object.<\/td><\/tr><tr><td>8<\/td><td>void setTime(long time)This method sets this Date object to represent a point in time that is time milliseconds after January 1, 1970, 00:00:00 GMT.<\/td><\/tr><tr><td>9<\/td><td>String toString()This method converts this Date object to a string of the form.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.Date&nbsp;class represents a specific instant in time, with millisecond precision. Class declaration Following is the declaration for\u00a0java. util.Date\u00a0class \u2212 Class constructors Sr.No. Constructor &amp; Description 1 Date()This constructor allocates a Date object and initializes it so that it represents the time at which it was allocated, measured to the nearest millisecond. 2 Date(long date)This [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2024"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2024"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2024\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2025,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2024\/revisions\/2025"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2024"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2024"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2024"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2026,
        "date": "2021-04-12T06:41:18",
        "date_gmt": "2021-04-12T06:41:18",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2026"
        },
        "modified": "2021-04-12T06:41:18",
        "modified_gmt": "2021-04-12T06:41:18",
        "slug": "dictionary-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/dictionary-class\/",
        "title": {
            "rendered": "Dictionary Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.Dictionary<\/strong>&nbsp;class is the abstract parent of any class, such as Hashtable, which maps keys to values.Following are the important points about Dictionary \u2212<\/p>\n\n\n\n<ul><li>In this class every key and every value is an object.<\/li><li>In his class object every key is associated with at most one value.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.Dictionary<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public abstract class Dictionary&lt;K,V&gt;\n   extends Object\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>Dictionary()<\/strong>This is the single constructor.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>abstract Enumeration&lt;V> elements()This method returns an enumeration of the values in this dictionary.<\/td><\/tr><tr><td>2<\/td><td>abstract V get(Object key)This method returns the value to which the key is mapped in this dictionary.<\/td><\/tr><tr><td>3<\/td><td>abstract boolean isEmpty()This method tests if this dictionary maps no keys to value.<\/td><\/tr><tr><td>4<\/td><td>abstract Enumeration&lt;K> keys()This method returns an enumeration of the keys in this dictionary.<\/td><\/tr><tr><td>5<\/td><td>abstract V put(K key, V value)This method maps the specified key to the specified value in this dictionary.<\/td><\/tr><tr><td>6<\/td><td>abstract V remove(Object key)This method removes the key (and its corresponding value) from this dictionary.<\/td><\/tr><tr><td>7<\/td><td>abstract int size()This method returns the number of entries (distinct keys) in this dictionary.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.Dictionary&nbsp;class is the abstract parent of any class, such as Hashtable, which maps keys to values.Following are the important points about Dictionary \u2212 In this class every key and every value is an object. In his class object every key is associated with at most one value. Class declaration Following is the declaration for&nbsp;java.util.Dictionary&nbsp;class [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2026"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2026"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2026\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2027,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2026\/revisions\/2027"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2026"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2026"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2026"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2028,
        "date": "2021-04-12T06:42:49",
        "date_gmt": "2021-04-12T06:42:49",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2028"
        },
        "modified": "2021-04-12T06:42:49",
        "modified_gmt": "2021-04-12T06:42:49",
        "slug": "enummap-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/enummap-class\/",
        "title": {
            "rendered": "EnumMap Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.EnumMap<\/strong>&nbsp;class is a specialized Map implementation for use with enum keys.Following are the important points about EnumMap \u2212<\/p>\n\n\n\n<ul><li>All of the keys in an enum map must come from a single enum type that is specified, explicitly or implicitly, when the map is created.<\/li><li>Enum maps are maintained in the natural order of their keys.<\/li><li>EnumMap is not synchronized.If multiple threads access an enum map concurrently, and at least one of the threads modifies the map, it should be synchronized externally.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.EnumMap<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class EnumMap&lt;K extends Enum&lt;K&gt;,V&gt;\n   extends AbstractMap&lt;K,V&gt;\n   implements Serializable, Cloneable\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>EnumMap(Class&lt;K&gt; keyType)<\/strong>This constructor creates an empty enum map with the specified key type.<\/td><\/tr><tr><td>2<\/td><td><strong>EnumMap(EnumMap&lt;K,? extends V&gt; m)<\/strong>This constructor creates an enum map with the same key type as the specified enum map, initially containing the same mappings (if any).<\/td><\/tr><tr><td>3<\/td><td><strong>EnumMap(Map&lt;K,? extends V&gt; m)<\/strong>This constructor creates an enum map initialized from the specified map.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>void clear()This method removes all mappings from this map.<\/td><\/tr><tr><td>2<\/td><td>EnumMap&lt;K, V> clone()This method returns a shallow copy of this enum map.<\/td><\/tr><tr><td>3<\/td><td>boolean containsKey(Object key)This method returns true if this map contains a mapping for the specified key.<\/td><\/tr><tr><td>4<\/td><td>boolean contains a value(Object value)This method returns true if this map maps one or more keys to the specified value.<\/td><\/tr><tr><td>5<\/td><td>Set&lt;Map.Entry&lt;K, V>> entrySet()This method returns a Set view of the mappings contained in this map.<\/td><\/tr><tr><td>6<\/td><td>boolean equals(Object o)This method compares the specified object with this map for equality.<\/td><\/tr><tr><td>7<\/td><td>V get(Object key)This method returns the value to which the specified key is mapped, or null if this map contains no mapping for the key.<\/td><\/tr><tr><td>8<\/td><td>Set&lt;K> keySet()This method returns a Set view of the keys contained in this map.<\/td><\/tr><tr><td>9<\/td><td>V put(K key, V value)This method associates the specified value with the specified key in this map.<\/td><\/tr><tr><td>10<\/td><td>void putAll(Map&lt;? extends K,? extends V> m)This method Copies all of the mappings from the specified map to this map.<\/td><\/tr><tr><td>11<\/td><td>V remove(Object key)This method removes the mapping for this key from this map if present.<\/td><\/tr><tr><td>12<\/td><td>int size()This method returns the number of key-value mappings in this map.<\/td><\/tr><tr><td>13<\/td><td>Collection&lt;V> values()This method returns a Collection view of the values contained in this map.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.EnumMap&nbsp;class is a specialized Map implementation for use with enum keys.Following are the important points about EnumMap \u2212 All of the keys in an enum map must come from a single enum type that is specified, explicitly or implicitly, when the map is created. Enum maps are maintained in the natural order of their [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2028"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2028"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2028\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2029,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2028\/revisions\/2029"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2028"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2028"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2028"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2030,
        "date": "2021-04-12T06:44:20",
        "date_gmt": "2021-04-12T06:44:20",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2030"
        },
        "modified": "2021-04-12T06:44:20",
        "modified_gmt": "2021-04-12T06:44:20",
        "slug": "enumset-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/enumset-class\/",
        "title": {
            "rendered": "EnumSet Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.EnumSet<\/strong>&nbsp;class is a specialized Set implementation for use with enum types.Following are the important points about EnumSet \u2212<\/p>\n\n\n\n<ul><li>All of the elements in an enum set must come from a single enum type that is specified, explicitly or implicitly, when the set is created.<\/li><li>Enum sets are represented internally as bit vectors.<\/li><li>EnumSet is not synchronized.If multiple threads access an enum set concurrently, and at least one of the threads modifies the set, it should be synchronized externally.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.EnumSet<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public abstract class EnumSet&lt;E extends Enum&lt;E&gt;&gt;\n   extends AbstractSet&lt;E&gt;\n   implements Cloneable, Serializable\n<\/code><\/pre>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>static &lt;E extends Enum&lt;E>> EnumSet&lt;E> allOf(Class&lt;E> elementType)This method creates an enum set containing all of the elements in the specified element type.<\/td><\/tr><tr><td>2<\/td><td>EnumSet&lt;E> clone()This method returns a copy of this set.<\/td><\/tr><tr><td>3<\/td><td>static &lt;E extends Enum&lt;E>> EnumSet&lt;E> complement(EnumSet&lt;E> s)This method creates an enum set with the same element type as the specified enum set, initially containing all the elements of this type that are not contained in the specified set.<\/td><\/tr><tr><td>4<\/td><td>static &lt;E extends Enum&lt;E>> EnumSet&lt;E> copyOf(Collection&lt;E> c)This method creates an enum set initialized from the specified collection.<\/td><\/tr><tr><td>5<\/td><td>static &lt;E extends Enum&lt;E>> EnumSet&lt;E> copyOf(EnumSet&lt;E> s)This method creates an enum set with the same element type as the specified enum set, initially containing the same elements (if any).<\/td><\/tr><tr><td>6<\/td><td>static &lt;E extends Enum&lt;E>> EnumSet&lt;E> noneOf(Class&lt;E> elementType)This method creates an empty enum set with the specified element type.<\/td><\/tr><tr><td>7<\/td><td>static &lt;E extends Enum&lt;E>> EnumSet&lt;E> of(E e)This method creates an enum set initially containing the specified element.<\/td><\/tr><tr><td>8<\/td><td>static &lt;E extends Enum&lt;E>> EnumSet&lt;E> of(E first, E&#8230; rest)This method creates an enum set initially containing the specified elements.<\/td><\/tr><tr><td>9<\/td><td>static &lt;E extends Enum&lt;E>> EnumSet&lt;E> of(E e1, E e2)This method creates an enum set initially containing the specified elements.<\/td><\/tr><tr><td>10<\/td><td>static &lt;E extends Enum&lt;E>> EnumSet&lt;E> of(E e1, E e2, E e3)This method creates an enum set initially containing the specified elements.<\/td><\/tr><tr><td>11<\/td><td>static &lt;E extends Enum&lt;E>> EnumSet&lt;E> of(E e1, E e2, E e3, E e4)This method creates an enum set initially containing the specified elements.<\/td><\/tr><tr><td>12<\/td><td>static &lt;E extends Enum&lt;E>> EnumSet&lt;E> of(E e1, E e2, E e3, E e4, E e5)This method creates an enum set initially containing the specified elements.<\/td><\/tr><tr><td>13<\/td><td>static &lt;E extends Enum&lt;E>> EnumSet&lt;E> range(E from, E to)This method creates an enum set initially containing all of the elements in the range defined by the two specified endpoints.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.EnumSet&nbsp;class is a specialized Set implementation for use with enum types.Following are the important points about EnumSet \u2212 All of the elements in an enum set must come from a single enum type that is specified, explicitly or implicitly, when the set is created. Enum sets are represented internally as bit vectors. EnumSet is [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2030"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2030"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2030\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2031,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2030\/revisions\/2031"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2030"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2030"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2030"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2032,
        "date": "2021-04-12T06:46:07",
        "date_gmt": "2021-04-12T06:46:07",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2032"
        },
        "modified": "2021-04-12T06:46:07",
        "modified_gmt": "2021-04-12T06:46:07",
        "slug": "formatter-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/formatter-class\/",
        "title": {
            "rendered": "Formatter Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.Formatter<\/strong>&nbsp;class provides support for layout justification and alignment, common formats for numeric, string, and date\/time data, and locale-specific output.Following are the important points about Formatter \u2212<\/p>\n\n\n\n<ul><li>Formatters are not necessarily safe for multithreaded access.Thread safety is optional and is the responsibility of users of methods in this class.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.Formatter<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class Formatter\n   extends Object\n   implements Closeable, Flushable\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>Formatter()<\/strong>This constructor constructs a new formatter.<\/td><\/tr><tr><td>2<\/td><td><strong>Formatter(Appendable a)<\/strong>This constructor constructs a new formatter with the specified destination.<\/td><\/tr><tr><td>3<\/td><td><strong>Formatter(Appendable a, Locale l)<\/strong>This constructor constructs a new formatter with the specified destination and locale.<\/td><\/tr><tr><td>4<\/td><td><strong>Formatter(File file)<\/strong>This constructor constructs a new formatter with the specified file.<\/td><\/tr><tr><td>5<\/td><td><strong>Formatter(File file, String csn)<\/strong>This constructor constructs a new formatter with the specified file and charset.<\/td><\/tr><tr><td>6<\/td><td><strong>Formatter(File file, String csn, Locale l)<\/strong>This constructor constructs a new formatter with the specified file, charset, and locale.<\/td><\/tr><tr><td>7<\/td><td><strong>Formatter(Locale l)<\/strong>This constructor constructs a new formatter with the specified locale.<\/td><\/tr><tr><td>8<\/td><td><strong>Formatter(OutputStream os)<\/strong>This constructor constructs a new formatter with the specified output stream.<\/td><\/tr><tr><td>9<\/td><td><strong>Formatter(OutputStream os, String csn)<\/strong>This constructor constructs a new formatter with the specified output stream and charset.<\/td><\/tr><tr><td>10<\/td><td><strong>Formatter(OutputStream os, String csn, Locale l)<\/strong>This constructor constructs a new formatter with the specified output stream, charset, and locale.<\/td><\/tr><tr><td>11<\/td><td><strong>Formatter(PrintStream ps)<\/strong>This constructor constructs a new formatter with the specified print stream.<\/td><\/tr><tr><td>12<\/td><td><strong>Formatter(String fileName)<\/strong>This constructor constructs a new formatter with the specified file name.<\/td><\/tr><tr><td>13<\/td><td><strong>Formatter(String fileName, String csn)<\/strong>This constructor constructs a new formatter with the specified file name and charset.<\/td><\/tr><tr><td>14<\/td><td><strong>Formatter(String fileName, String csn, Locale l)<\/strong>This constructor constructs a new formatter with the specified file name, charset, and locale.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>void close()This method closes this formatter.<\/td><\/tr><tr><td>2<\/td><td>void flush()This method flushes this formatter.<\/td><\/tr><tr><td>3<\/td><td>Formatter format(Locale l, String format, Object&#8230; args)This method writes a formatted string to this object&#8217;s destination using the specified locale, format string, and arguments.<\/td><\/tr><tr><td>4<\/td><td>Formatter format(String format, Object&#8230; args)This method writes a formatted string to this object&#8217;s destination using the specified format string and arguments.<\/td><\/tr><tr><td>5<\/td><td>IOException exception()This method returns the IOException last thrown by this for matters Appendable.<\/td><\/tr><tr><td>6<\/td><td>Locale ()This method returns the locale set by the construction of this formatter.<\/td><\/tr><tr><td>7<\/td><td>Appendable out()This method returns the destination for the output.<\/td><\/tr><tr><td>8<\/td><td>String toString()This method returns the result of invoking toString() on the destination for the output.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.Formatter&nbsp;class provides support for layout justification and alignment, common formats for numeric, string, and date\/time data, and locale-specific output.Following are the important points about Formatter \u2212 Formatters are not necessarily safe for multithreaded access.Thread safety is optional and is the responsibility of users of methods in this class. Class declaration Following is the declaration [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2032"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2032"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2032\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2033,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2032\/revisions\/2033"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2032"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2032"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2032"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2034,
        "date": "2021-04-12T06:48:06",
        "date_gmt": "2021-04-12T06:48:06",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2034"
        },
        "modified": "2021-04-12T06:48:06",
        "modified_gmt": "2021-04-12T06:48:06",
        "slug": "gregorian-calendar-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/gregorian-calendar-class\/",
        "title": {
            "rendered": "Gregorian Calendar Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.GregorianCalendar<\/strong>&nbsp;class is a concrete subclass of Calendar and provides the standard calendar system used by most of the world.Following are the important points about GregorianCalendar \u2212<\/p>\n\n\n\n<ul><li>It is a hybrid calendar that supports both the Julian and Gregorian calendar systems with the support of a single discontinuity, which corresponds by default to the Gregorian date when the Gregorian calendar was instituted.<\/li><li>The Julian calendar specifies leap years every four years, whereas the Gregorian calendar omits century years which are not divisible by 400.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.GregorianCalendar<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-preformatted\">public class GregorianCalendar\n   extends Calendar\n<\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.util.GregorianCalendar<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static int AD<\/strong>&nbsp;\u2212 This is the value of the ERA field indicating the common era (Anno Domini), also known as CE.<\/li><li><strong>static int BC<\/strong>&nbsp;\u2212 This is the value of the ERA field indicating the period before the common era (before Christ), also known as BCE.<\/li><\/ul>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>GregorianCalendar()<\/strong>This constructs a default GregorianCalendar using the current time in the default time zone with the default locale.<\/td><\/tr><tr><td>2<\/td><td><strong>GregorianCalendar(int year, int month, int dayOfMonth)<\/strong>This constructs a GregorianCalendar with the given date set in the default time zone with the default locale.<\/td><\/tr><tr><td>3<\/td><td><strong>GregorianCalendar(int year, int month, int dayOfMonth, int hourOfDay, int minute)<\/strong>This constructs a GregorianCalendar with the given date and time set for the default time zone with the default locale.<\/td><\/tr><tr><td>4<\/td><td><strong>GregorianCalendar(int year, int month, int dayOfMonth, int hourOfDay, int minute, int second)<\/strong>This constructs a GregorianCalendar with the given date and time set for the default time zone with the default locale.<\/td><\/tr><tr><td>5<\/td><td><strong>GregorianCalendar(Locale aLocale)<\/strong>This constructs a GregorianCalendar based on the current time in the default time zone with the given locale.<\/td><\/tr><tr><td>6<\/td><td><strong>GregorianCalendar(TimeZone zone)<\/strong>This constructs a GregorianCalendar based on the current time in the given time zone with the default locale.<\/td><\/tr><tr><td>7<\/td><td><strong>GregorianCalendar(TimeZone zone, Locale aLocale)<\/strong>This constructs a GregorianCalendar based on the current time in the given time zone with the given locale.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>void add(int field, int amount)This method adds the specified (signed) amount of time to the given calendar field, based on the calendar&#8217;s rules.<\/td><\/tr><tr><td>2<\/td><td>Object clone()This method creates and returns a copy of this object.<\/td><\/tr><tr><td>3<\/td><td>protected void computeFields()This method converts the time value (millisecond offset from the Epoch) to calendar field values.<\/td><\/tr><tr><td>4<\/td><td>protected void compute time()This method converts calendar field values to the time value (millisecond offset from the Epoch).<\/td><\/tr><tr><td>5<\/td><td>boolean equals(Object obj)This method compares this GregorianCalendar to the specified Object.<\/td><\/tr><tr><td>6<\/td><td>int getActualMaximum(int field)This method returns the maximum value that this calendar field could have, taking into consideration the given time value and the current values of the getFirstDayOfWeek, getMinimalDaysInFirstWeek, getGregorianChange, and getTimeZone methods.<\/td><\/tr><tr><td>7<\/td><td>int getActualMinimum(int field)This method returns the minimum value that this calendar field could have, taking into consideration the given time value and the current values of the getFirstDayOfWeek, getMinimalDaysInFirstWeek, getGregorianChange, and getTimeZone methods.<\/td><\/tr><tr><td>8<\/td><td>int getGreatestMinimum(int field)This method returns the highest minimum value for the given calendar field of this GregorianCalendar instance.<\/td><\/tr><tr><td>9<\/td><td>Date getGregorianChange()This method gets the Gregorian Calendar change date.<\/td><\/tr><tr><td>10<\/td><td>int getLeastMaximum(int field)This method returns the lowest maximum value for the given calendar field of this GregorianCalendar instance.<\/td><\/tr><tr><td>11<\/td><td>int get maximum(int field)This method returns the maximum value for the given calendar field of this GregorianCalendar instance.<\/td><\/tr><tr><td>12<\/td><td>int get minimum(int field)This method returns the minimum value for the given calendar field of this GregorianCalendar instance.<\/td><\/tr><tr><td>13<\/td><td>TimeZone getTimeZone()This method gets the time zone.<\/td><\/tr><tr><td>14<\/td><td>int hashCode()This method generates the hash code for this GregorianCalendar object.<\/td><\/tr><tr><td>15<\/td><td>boolean isLeapYear(int year)This method determines if the given year is a leap year.<\/td><\/tr><tr><td>16<\/td><td>void roll(int field, boolean up)This method adds or subtracts (up\/down) a single unit of time on the given time field without changing larger fields.<\/td><\/tr><tr><td>17<\/td><td>void roll(int field, int amount)This method adds a signed amount to the specified calendar field without changing larger fields.<\/td><\/tr><tr><td>18<\/td><td>void setGregorianChange(Date date)This method sets the GregorianCalendar change date.<\/td><\/tr><tr><td>19<\/td><td>set timezone(TimeZone zone)This method sets the time zone with the given time zone value.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.GregorianCalendar&nbsp;class is a concrete subclass of Calendar and provides the standard calendar system used by most of the world.Following are the important points about GregorianCalendar \u2212 It is a hybrid calendar that supports both the Julian and Gregorian calendar systems with the support of a single discontinuity, which corresponds by default to the Gregorian [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2034"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2034"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2034\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2035,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2034\/revisions\/2035"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2034"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2034"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2034"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2036,
        "date": "2021-04-12T06:49:41",
        "date_gmt": "2021-04-12T06:49:41",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2036"
        },
        "modified": "2021-04-12T06:49:41",
        "modified_gmt": "2021-04-12T06:49:41",
        "slug": "hashmap-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/hashmap-class\/",
        "title": {
            "rendered": "HashMap Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.HashMap<\/strong>&nbsp;class is the Hash table based implementation of the Map interface.Following are the important points about HashMap \u2212<\/p>\n\n\n\n<ul><li>This class makes no guarantees as to the iteration order of the map; in particular, it does not guarantee that the order will remain constant over time.<\/li><li>This class permits null values and the null key.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.HashMap<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class HashMap&lt;K,V&gt;\n   extends AbstractMap&lt;K,V&gt;\n   implements Map&lt;K,V&gt;, Cloneable, Serializable\n<\/code><\/pre>\n\n\n\n<h2>Parameters<\/h2>\n\n\n\n<p>Following is the parameter for&nbsp;<strong>java.util.HashMap<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>K<\/strong>&nbsp;\u2212 This is the type of keys maintained by this map.<\/li><li><strong>V<\/strong>&nbsp;\u2212 This is the type of mapped values.<\/li><\/ul>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>HashMap()<\/strong>This constructs an empty HashMap with the default initial capacity (16) and the default load factor (0.75).<\/td><\/tr><tr><td>2<\/td><td><strong>HashMap(Collection&lt;? extends E&gt; c)<\/strong>This constructs an empty HashMap with the specified initial capacity and the default load factor (0.75).<\/td><\/tr><tr><td>3<\/td><td><strong>HashMap(int initialCapacity, float loadFactor)<\/strong>This constructs an empty HashMap with the specified initial capacity and load factor.<\/td><\/tr><tr><td>4<\/td><td><strong>HashMap(Map&lt;? extends K,? extends V&gt; m)<\/strong>This constructs a new HashMap with the same mappings as the specified Map.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>void clear()This method removes all of the mappings from this map.<\/td><\/tr><tr><td>2<\/td><td>Object clone()This method returns a shallow copy of this HashMap instance, the keys and values themselves are not cloned.<\/td><\/tr><tr><td>3<\/td><td>boolean containsKey(Object key)This method returns true if this map contains a mapping for the specified key.<\/td><\/tr><tr><td>4<\/td><td>boolean contains a value(Object value)This method returns true if this map maps one or more keys to the specified value.<\/td><\/tr><tr><td>5<\/td><td>Set&lt;Map.Entry&lt;K, V>> entrySet()This method returns a Set view of the mappings contained in this map.<\/td><\/tr><tr><td>6<\/td><td>V get(Object key)This method returns the value to which the specified key is mapped, or null if this map contains no mapping for the key.<\/td><\/tr><tr><td>7<\/td><td>boolean isEmpty()This method returns true if this map contains no key-value mapping.<\/td><\/tr><tr><td>8<\/td><td>Set&lt;K> keySet()This method returns a Set view of the keys contained in this map.<\/td><\/tr><tr><td>9<\/td><td>V put(K key, V value)This method associates the specified value with the specified key in this map.<\/td><\/tr><tr><td>10<\/td><td>void putAll(Map&lt;? extends K,? extends V> m)This method copies all of the mappings from the specified map to this map.<\/td><\/tr><tr><td>11<\/td><td>V remove(Object key)This method removes the mapping for the specified key from this map if present.<\/td><\/tr><tr><td>12<\/td><td>int size()This method returns the number of key-value mappings in this map.<\/td><\/tr><tr><td>13<\/td><td>Collection&lt;V> values()This method returns a Collection view of the values contained in this map.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.AbstractMap<\/li><li>java.util.Object<\/li><li>java.util.Map<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.HashMap&nbsp;class is the Hash table based implementation of the Map interface.Following are the important points about HashMap \u2212 This class makes no guarantees as to the iteration order of the map; in particular, it does not guarantee that the order will remain constant over time. This class permits null values and the null key. [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2036"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2036"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2036\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2037,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2036\/revisions\/2037"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2036"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2036"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2036"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2038,
        "date": "2021-04-12T06:50:55",
        "date_gmt": "2021-04-12T06:50:55",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2038"
        },
        "modified": "2021-04-12T06:50:55",
        "modified_gmt": "2021-04-12T06:50:55",
        "slug": "hashset-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/hashset-class\/",
        "title": {
            "rendered": "HashSet Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.HashSet<\/strong>&nbsp;class implements the Set interface, backed by a hash table.Following are the important points about HashSet \u2212<\/p>\n\n\n\n<ul><li>This class makes no guarantees as to the iteration order of the set; in particular, it does not guarantee that the order will remain constant over time.<\/li><li>This class permits the null element.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.HashSet<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class HashSet&lt;E&gt;\n   extends AbstractSet&lt;E&gt;\n   implements Set&lt;E&gt;, Cloneable, Serializable\n<\/code><\/pre>\n\n\n\n<h2>Parameters<\/h2>\n\n\n\n<p>Following is the parameter for&nbsp;<strong>java.util.HashSet<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<p><strong>E<\/strong>&nbsp;\u2212 This is the type of elements maintained by this set.<\/p>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>HashSet()<\/strong>This constructs a new, empty set; the backing HashMap instance has default initial capacity (16) and load factor (0.75).<\/td><\/tr><tr><td>2<\/td><td><strong>HashSet(Collection&lt;? extends E&gt; c)<\/strong>This constructs a new set containing the elements in the specified collection.<\/td><\/tr><tr><td>3<\/td><td><strong>HashSet(int initialCapacity)<\/strong>This constructs a new, empty set; the backing HashMap instance has the specified initial capacity and default load factor (0.75).<\/td><\/tr><tr><td>4<\/td><td><strong>HashSet(int initialCapacity, float loadFactor)<\/strong>This constructs a new, empty set; the backing HashMap instance has the specified initial capacity and the specified load factor.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>boolean add(E e)This method adds the specified element to this set if it is not already present.<\/td><\/tr><tr><td>2<\/td><td>void clear()This method removes all of the elements from this set.<\/td><\/tr><tr><td>3<\/td><td>Object clone()This method returns a shallow copy of this HashSet instance, the elements themselves are not cloned.<\/td><\/tr><tr><td>4<\/td><td>boolean contains(Object o)This method returns true if this set contains the specified element.<\/td><\/tr><tr><td>5<\/td><td>boolean isEmpty()This method returns true if this set contains no elements.<\/td><\/tr><tr><td>6<\/td><td>Iterator&lt;E> iterator()This method returns an iterator over the elements in this set.<\/td><\/tr><tr><td>7<\/td><td>boolean remove(Object o)This method removes the specified element from this set if it is present.<\/td><\/tr><tr><td>8<\/td><td>int size()This method returns returns the number of elements in this set(its cardinality).<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.AbstractSet<\/li><li>java.util.AbstractCollection<\/li><li>java.util.Object<\/li><li>java.util.Set<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.HashSet&nbsp;class implements the Set interface, backed by a hash table.Following are the important points about HashSet \u2212 This class makes no guarantees as to the iteration order of the set; in particular, it does not guarantee that the order will remain constant over time. This class permits the null element. Class declaration Following is [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2038"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2038"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2038\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2039,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2038\/revisions\/2039"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2038"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2038"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2038"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2041,
        "date": "2021-04-12T06:57:31",
        "date_gmt": "2021-04-12T06:57:31",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2041"
        },
        "modified": "2021-04-12T06:57:31",
        "modified_gmt": "2021-04-12T06:57:31",
        "slug": "hashtable-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/hashtable-class\/",
        "title": {
            "rendered": "Hashtable Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.Hashtable<\/strong>&nbsp;class implements a hashtable, which maps keys to values.Following are the important points about Hashtable \u2212<\/p>\n\n\n\n<ul><li>In this any non-null object can be used as a key or as a value.<\/li><li>If many entries are to be made into a Hashtable, creating it with a sufficiently large capacity may allow the entries to be inserted more efficiently than letting it perform automatic rehashing as needed to grow the table.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.Hashtable<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class Hashtable&lt;K,V&gt;\n   extends Dictionary&lt;K,V&gt;\n   implements Map&lt;K,V&gt;, Cloneable, Serializable\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>Hashtable()<\/strong>This constructs a new, empty hashtable with a default initial capacity (11) and load factor (0.75).<\/td><\/tr><tr><td>2<\/td><td><strong>Hashtable(int initialCapacity)<\/strong>This constructs a new, empty hashtable with the specified initial capacity and default load factor (0.75).<\/td><\/tr><tr><td>3<\/td><td><strong>Hashtable(int initialCapacity, float loadFactor)<\/strong>This constructs a new, empty hashtable with the specified initial capacity and the specified load factor.<\/td><\/tr><tr><td>4<\/td><td><strong>Hashtable(Map&lt;? extends K,? extends V&gt; t)<\/strong>This constructs a new hashtable with the same mappings as the given Map.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>void clear()This method clears this hashtable so that it contains no keys.<\/td><\/tr><tr><td>2<\/td><td>Object clone()This method creates a shallow copy of this hashtable.<\/td><\/tr><tr><td>3<\/td><td>boolean contains(Object value)This method tests if some keymaps into the specified value in this hashtable.<\/td><\/tr><tr><td>4<\/td><td>boolean containsKey(Object key)This method tests if the specified object is a key in this hashtable.<\/td><\/tr><tr><td>5<\/td><td>boolean contains a value(Object value)This method returns true if this hashtable maps one or more keys to this value.<\/td><\/tr><tr><td>6<\/td><td>Enumeration&lt;V> elements()This method returns an enumeration of the values in this hashtable.<\/td><\/tr><tr><td>7<\/td><td>Set&lt;Map.Entry&lt;K, V>> entrySet()This method returns a Set view of the mappings contained in this map.<\/td><\/tr><tr><td>8<\/td><td>boolean equals(Object o)This method compares the specified Object with this Map for equality, as per the definition in the Map interface.<\/td><\/tr><tr><td>9<\/td><td>V get(Object key)This method returns the value to which the specified key is mapped, or null if this map contains no mapping for the key.<\/td><\/tr><tr><td>10<\/td><td>int hashCode()This method returns the hash code value for this Map as per the definition in the Map interface.<\/td><\/tr><tr><td>11<\/td><td>boolean isEmpty()This method tests if this hashtable maps no keys to values.<\/td><\/tr><tr><td>12<\/td><td>Enumeration&lt;K> keys()This method returns an enumeration of the keys in this hashtable.<\/td><\/tr><tr><td>13<\/td><td>Set&lt;K> keySet()This method returns a Set view of the keys contained in this map.<\/td><\/tr><tr><td>14<\/td><td>V put(K key, V value)This method maps the specified key to the specified value in this hashtable.<\/td><\/tr><tr><td>15<\/td><td>void putAll(Map&lt;? extends K,? extends V> t)This method copies all of the mappings from the specified map to this hashtable.<\/td><\/tr><tr><td>16<\/td><td>protected void rehash()This method increases the capacity of and internally reorganizes this hashtable, in order to accommodate and access its entries more efficiently.<\/td><\/tr><tr><td>17<\/td><td>V remove(Object key)This method removes the key (and its corresponding value) from this hashtable.<\/td><\/tr><tr><td>18<\/td><td>int size()This method returns the number of keys in this hashtable.<\/td><\/tr><tr><td>19<\/td><td>String toString()This method returns a string representation of this Hashtable object in the form of a set of entries, enclosed in braces and separated by the ASCII characters &#8220;, &#8221; (comma and space).<\/td><\/tr><tr><td>20<\/td><td>Collection&lt;V> values()This method returns a Collection view of the values contained in this map.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.Object<\/li><\/ul>\n\n\n\n<p><\/p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.Hashtable&nbsp;class implements a hashtable, which maps keys to values.Following are the important points about Hashtable \u2212 In this any non-null object can be used as a key or as a value. If many entries are to be made into a Hashtable, creating it with a sufficiently large capacity may allow the entries to be [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2041"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2041"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2041\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2042,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2041\/revisions\/2042"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2041"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2041"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2041"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2043,
        "date": "2021-04-12T07:02:10",
        "date_gmt": "2021-04-12T07:02:10",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2043"
        },
        "modified": "2021-04-12T07:02:10",
        "modified_gmt": "2021-04-12T07:02:10",
        "slug": "identityhashmap-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/identityhashmap-class\/",
        "title": {
            "rendered": "IdentityHashMap Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.IdentityHashMap<\/strong>&nbsp;class implements the Map interface with a hash table, using reference-equality in place of object-equality when comparing keys (and values).Following are the important points about IdentityHashMap \u2212<\/p>\n\n\n\n<ul><li>This class provides all of the optional map operations, and permits null values and the null key.<\/li><li>This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time.<\/li><li>In an IdentityHashMap, two keys k1 and k2 are considered equal if and only if (k1==k2), while in Map implementations (like HashMap) two keys k1 and k2 are considered equal if and only if (k1==null ? k2==null : k1.equals(k2)).<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.IdentityHashMap<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class IdentityHashMap&lt;K,V&gt;\n   extends AbstractMap&lt;K,V&gt;\n   implements Map&lt;K,V&gt;, Serializable, Cloneable\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>IdentityHashMap()<\/strong>This constructs a new, empty identity hash map with a default expected maximum size (21).<\/td><\/tr><tr><td>2<\/td><td><strong>IdentityHashMap(int expectedMaxSize)<\/strong>This constructs a new, empty map with the specified expected maximum size.<\/td><\/tr><tr><td>3<\/td><td><strong>IdentityHashMap(Map&lt;? extends K,? extends V&gt; m)<\/strong>This constructs a new identity hash map containing the keys-value mappings in the specified map.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>void clear()This method removes all of the mappings from this map.<\/td><\/tr><tr><td>2<\/td><td>Object clone()This method returns a shallow copy of this identity hash map: the keys and values themselves are not cloned.<\/td><\/tr><tr><td>3<\/td><td>boolean containsKey(Object key)This method tests whether the specified object reference is a key in this identity hash map.<\/td><\/tr><tr><td>4<\/td><td>boolean contains a value(Object value)This method tests whether the specified object reference is a value in this identity hash map.<\/td><\/tr><tr><td>5<\/td><td>Set&lt;Map.Entry&lt;K, V>> entrySet()This method returns a Set view of the mappings contained in this map.<\/td><\/tr><tr><td>6<\/td><td>boolean equals(Object o)This method compares the specified object with this map for equality.<\/td><\/tr><tr><td>7<\/td><td>V get(Object key)This method returns the value to which the specified key is mapped, or null if this map contains no mapping for the key.<\/td><\/tr><tr><td>8<\/td><td>int hashCode()This method returns the hash code value for this map.<\/td><\/tr><tr><td>9<\/td><td>boolean isEmpty()This method returns true if this identity hash map contains no key-value mappings.<\/td><\/tr><tr><td>10<\/td><td>Set&lt;K>keySet()This method returns an identity-based set view of the keys contained in this map.<\/td><\/tr><tr><td>11<\/td><td>V put(K key, V value)This method associates the specified value with the specified key in this identity hash map.<\/td><\/tr><tr><td>12<\/td><td>void putAll(Map&lt;? extends K,? extends V> m)This method copies all of the mappings from the specified map to this map.<\/td><\/tr><tr><td>13<\/td><td>V remove(Object key)This method removes the mapping for this key from this map if present.<\/td><\/tr><tr><td>14<\/td><td>int size()This method returns the number of key-value mappings in this identity hash map.<\/td><\/tr><tr><td>15<\/td><td>Collection&lt;V> values()This method returns a Collection view of the values contained in this map.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.AbstractMap<\/li><li>java.util.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.IdentityHashMap&nbsp;class implements the Map interface with a hash table, using reference-equality in place of object-equality when comparing keys (and values).Following are the important points about IdentityHashMap \u2212 This class provides all of the optional map operations, and permits null values and the null key. This class makes no guarantees as to the order of [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2043"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2043"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2043\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2044,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2043\/revisions\/2044"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2043"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2043"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2043"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2045,
        "date": "2021-04-12T07:04:52",
        "date_gmt": "2021-04-12T07:04:52",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2045"
        },
        "modified": "2021-04-12T07:04:52",
        "modified_gmt": "2021-04-12T07:04:52",
        "slug": "linkedhashmap-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/linkedhashmap-class\/",
        "title": {
            "rendered": "LinkedHashMap Class"
        },
        "content": {
            "rendered": "\n<h2>ntroduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.LinkedHashMap<\/strong>&nbsp;class is Hash table and Linked list implementation of the Map interface, with predictable iteration order.Following are the important points about LinkedHashMap \u2212<\/p>\n\n\n\n<ul><li>The class provides all of the optional Map operations, and permits null elements.<\/li><li>The Iteration over a HashMap is likely to be more expensive.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.LinkedHashMap<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class LinkedHashMap&lt;K,V&gt;\n   extends HashMap&lt;K,V&gt;\n   implements Map&lt;K,V&gt;\n<\/code><\/pre>\n\n\n\n<h2>Parameters<\/h2>\n\n\n\n<p>Following is the parameter for&nbsp;<strong>java.util.LinkedHashMap<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>K<\/strong>&nbsp;\u2212 This is the type of keys maintained by this map.<\/li><li><strong>V<\/strong>&nbsp;\u2212 This is the the type of mapped values.<\/li><\/ul>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>LinkedHashMap()<\/strong>This constructs an empty insertion-ordered LinkedHashMap instance with the default initial capacity (16) and load factor (0.75).<\/td><\/tr><tr><td>2<\/td><td><strong>LinkedHashMap(int initialCapacity)<\/strong>This constructs an empty insertion-ordered LinkedHashMap instance with the specified initial capacity and a default load factor (0.75).<\/td><\/tr><tr><td>3<\/td><td><strong>LinkedHashMap(int initialCapacity, float loadFactor)<\/strong>This constructs an empty insertion-ordered LinkedHashMap instance with the specified initial capacity and load factor.<\/td><\/tr><tr><td>4<\/td><td><strong>LinkedHashMap(int initialCapacity, float loadFactor, boolean accessOrder)<\/strong>This constructs an empty LinkedHashMap instance with the specified initial capacity, load factor and ordering mode.<\/td><\/tr><tr><td>5<\/td><td><strong>LinkedHashMap(Map&lt;? extends K,? extends V&gt; m)<\/strong>This constructs an insertion-ordered LinkedHashMap instance with the same mappings as the specified map.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>void clear()This method removes all of the mappings from this map.<\/td><\/tr><tr><td>2<\/td><td>boolean containsValue(Object value)This method returns true if this map maps one or more keys to the specified value.<\/td><\/tr><tr><td>3<\/td><td>V get(Object key)This method returns the value to which the specified key is mapped, or null if this map contains no mapping for the key.<\/td><\/tr><tr><td>4<\/td><td>protected boolean removeEldestEntry(Map.Entry&lt;K,V> eldest)This method returns true if this map should remove its eldest entry.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.HashMap<\/li><li>java.util.AbstarctMap<\/li><li>java.util.Object<\/li><li>java.util.Map<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>ntroduction The&nbsp;java.util.LinkedHashMap&nbsp;class is Hash table and Linked list implementation of the Map interface, with predictable iteration order.Following are the important points about LinkedHashMap \u2212 The class provides all of the optional Map operations, and permits null elements. The Iteration over a HashMap is likely to be more expensive. Class declaration Following is the declaration for&nbsp;java.util.LinkedHashMap&nbsp;class [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2045"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2045"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2045\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2046,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2045\/revisions\/2046"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2045"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2045"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2045"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2047,
        "date": "2021-04-12T07:05:57",
        "date_gmt": "2021-04-12T07:05:57",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2047"
        },
        "modified": "2021-04-12T07:05:57",
        "modified_gmt": "2021-04-12T07:05:57",
        "slug": "linkedhashset-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/linkedhashset-class\/",
        "title": {
            "rendered": "LinkedHashSet Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.LinkedHashSet<\/strong>&nbsp;class is a Hash table and Linked list implementation of the Set interface, with predictable iteration order.Following are the important points about LinkedHashSet \u2212<\/p>\n\n\n\n<ul><li>This class provides all of the optional Set operations, and permits null elements.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.LinkedHashSet<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class LinkedHashSet&lt;E&gt;\n   extends HashSet&lt;E&gt;\n   implements Set&lt;E&gt;, Cloneable, Serializable\n<\/code><\/pre>\n\n\n\n<h2>Parameters<\/h2>\n\n\n\n<p>Following is the parameter for&nbsp;<strong>java.util.LinkedHashSet<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<p><strong>E<\/strong>&nbsp;\u2212 This is the type of elements maintained by this set.<\/p>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>LinkedHashSet()<\/strong>This constructs a new, empty linked hash set with the default initial capacity (16) and load factor (0.75).<\/td><\/tr><tr><td>2<\/td><td><strong>LinkedHashSet(Collection&lt;? extends E&gt; c)<\/strong>This constructs a new linked hash set with the same elements as the specified collection.<\/td><\/tr><tr><td>3<\/td><td><strong>LinkedHashSet(int initialCapacity)<\/strong>This constructs a new, empty linked hash set with the specified initial capacity and the default load factor (0.75).<\/td><\/tr><tr><td>4<\/td><td><strong>LinkedHashSet(int initialCapacity, float loadFactor)<\/strong>This constructs a new, empty linked hash set with the specified initial capacity and load factor.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.HashSet<\/li><li>java.util.AbstractSet<\/li><li>java.util.AbstractCollection<\/li><li>java.util.Object<\/li><li>java.util.Set<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.LinkedHashSet&nbsp;class is a Hash table and Linked list implementation of the Set interface, with predictable iteration order.Following are the important points about LinkedHashSet \u2212 This class provides all of the optional Set operations, and permits null elements. Class declaration Following is the declaration for&nbsp;java.util.LinkedHashSet&nbsp;class \u2212 Parameters Following is the parameter for&nbsp;java.util.LinkedHashSet&nbsp;class \u2212 E&nbsp;\u2212 This [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2047"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2047"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2047\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2048,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2047\/revisions\/2048"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2047"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2047"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2047"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2049,
        "date": "2021-04-12T07:10:08",
        "date_gmt": "2021-04-12T07:10:08",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2049"
        },
        "modified": "2021-04-12T07:10:08",
        "modified_gmt": "2021-04-12T07:10:08",
        "slug": "linkedlist-class-2",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/linkedlist-class-2\/",
        "title": {
            "rendered": "LinkedList Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.LinkedList<\/strong>&nbsp;class operations perform we can expect for a doubly-linked list. Operations that index into the list will traverse the list from the beginning or the end, whichever is closer to the specified index.<\/p>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.LinkedList<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class LinkedList&lt;E&gt;\n   extends AbstractSequentialList&lt;E&gt;\n   implements List&lt;E&gt;, Deque&lt;E&gt;, Cloneable, Serializable\n<\/code><\/pre>\n\n\n\n<h2>Parameters<\/h2>\n\n\n\n<p>Following is the parameter for&nbsp;<strong>java.util.LinkedList<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<p><strong>E<\/strong>&nbsp;\u2212 This is the type of elements held in this collection.<\/p>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Fields inherited from class java.util.AbstractList.<\/p>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>LinkedList()<\/strong>This constructs constructs an empty list.<\/td><\/tr><tr><td>2<\/td><td><strong>LinkedList(Collection&lt;? extends E&gt; c)<\/strong>This constructs a list containing the elements of the specified collection, in the order they are returned by the collection&#8217;s iterator.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>boolean add(E e)This method appends the specified element to the end of this list.<\/td><\/tr><tr><td>2<\/td><td>void add(int index, E element)This method inserts the specified element at the specified position in this list.<\/td><\/tr><tr><td>3<\/td><td>boolean addAll(Collection&lt;? extends E> c)This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection&#8217;s iterator.<\/td><\/tr><tr><td>4<\/td><td>boolean addAll(int index, Collection&lt;? extends E> c)This method inserts all of the elements in the specified collection into this list, starting at the specified position.<\/td><\/tr><tr><td>5<\/td><td>void and first(E e)This method returns inserts the specified element at the beginning of this list.<\/td><\/tr><tr><td>6<\/td><td>void addLast(E e)This method returns appends the specified element to the end of this list.<\/td><\/tr><tr><td>7<\/td><td>void clear()This method removes all of the elements from this list.<\/td><\/tr><tr><td>8<\/td><td>Object clone()This method returns a shallow copy of this LinkedList.<\/td><\/tr><tr><td>9<\/td><td>boolean contains(Object o)This method returns true if this list contains the specified element.<\/td><\/tr><tr><td>10<\/td><td>Iterator&lt;E> descendingIterator()This method returns an iterator over the elements in this deque in reverse sequential order.<\/td><\/tr><tr><td>11<\/td><td>E element()This method retrieves but does not remove, the head (first element) of this list.<\/td><\/tr><tr><td>12<\/td><td>E get(int index)This method returns the element at the specified position in this list.<\/td><\/tr><tr><td>13<\/td><td>E getFirst()This method returns the first element in this list.<\/td><\/tr><tr><td>14<\/td><td>E getLast()This method returns the last element in this list.<\/td><\/tr><tr><td>15<\/td><td>int indexOf(Object o)This method returns the index of the first occurrence of the specified element in this list, or -1 if this list does not contain the element.<\/td><\/tr><tr><td>16<\/td><td>int lastIndexOf(Object o)This method returns the index of the last occurrence of the specified element in this list, or -1 if this list does not contain the element.<\/td><\/tr><tr><td>17<\/td><td>ListIterator&lt;E> list iterator(int index)This method returns a list-iterator of the elements in this list (in proper sequence), starting at the specified position in the list.<\/td><\/tr><tr><td>18<\/td><td>boolean offer(E e)This method adds the specified element as the tail (last element) of this list.<\/td><\/tr><tr><td>19<\/td><td>boolean offer first(E e)This method inserts the specified element at the front of this list.<\/td><\/tr><tr><td>20<\/td><td>boolean offerLast(E e)This method inserts the specified element at the end of this list.<\/td><\/tr><tr><td>21<\/td><td>E peek()This method retrieves but does not remove, the head (first element) of this list.<\/td><\/tr><tr><td>22<\/td><td>E peekFirst()This method retrieves, but does not remove, the first element of this list, or returns null if this list is empty.<\/td><\/tr><tr><td>23<\/td><td>E peekLast()This method retrieves, but does not remove, the last element of this list, or returns null if this list is empty.<\/td><\/tr><tr><td>24<\/td><td>E poll()This method retrieves and removes the head (first element) of this list.<\/td><\/tr><tr><td>26<\/td><td>E pollFirst()This method retrieves and removes the first element of this list, or returns null if this list is empty.<\/td><\/tr><tr><td>27<\/td><td>E poll last()This method retrieves and removes the last element of this list, or returns null if this list is empty.<\/td><\/tr><tr><td>28<\/td><td>E pop()This method pops an element from the stack represented by this list.<\/td><\/tr><tr><td>29<\/td><td>void push(E e)This method pushes an element onto the stack represented by this list.<\/td><\/tr><tr><td>30<\/td><td>E remove()This method retrieves and removes the head (first element) of this list.<\/td><\/tr><tr><td>31<\/td><td>E remove(int index)This method removes the element at the specified position in this list.<\/td><\/tr><tr><td>32<\/td><td>boolean remove(Object o)This method removes the first occurrence of the specified element from this list if it is present.<\/td><\/tr><tr><td>33<\/td><td>E removeFirst()This method removes and returns the first element from this list.<\/td><\/tr><tr><td>34<\/td><td>boolean remove first occurrence(Object o)This method removes the first occurrence of the specified element in this list (when traversing the list from head to tail).<\/td><\/tr><tr><td>35<\/td><td>E removeLast()This method removes and returns the last element from this list.<\/td><\/tr><tr><td>36<\/td><td>boolean remove last occurrence(Object o)This method removes the last occurrence of the specified element in this list (when traversing the list from head to tail).<\/td><\/tr><tr><td>37<\/td><td>E set(int index, E element)This method replaces the element at the specified position in this list with the specified element.<\/td><\/tr><tr><td>38<\/td><td>int size()This method returns the number of elements in this list.<\/td><\/tr><tr><td>39<\/td><td>Object[] toArray()This method returns an array containing all of the elements in this list in proper sequence (from first to the last element).<\/td><\/tr><tr><td>40<\/td><td>&lt;T> T[] toArray(T[] a)This method returns an array containing all of the elements in this list in proper sequence (from first to last element), the runtime type of the returned array is that of the specified array.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.AbstractSequentialList<\/li><li>java.util.AbstractList<\/li><li>java.util.AbstractCollection<\/li><li>java.util.Object<\/li><li>java.util.List<\/li><li>java.util.Deque<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.LinkedList&nbsp;class operations perform we can expect for a doubly-linked list. Operations that index into the list will traverse the list from the beginning or the end, whichever is closer to the specified index. Class declaration Following is the declaration for&nbsp;java.util.LinkedList&nbsp;class \u2212 Parameters Following is the parameter for&nbsp;java.util.LinkedList&nbsp;class \u2212 E&nbsp;\u2212 This is the type of [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2049"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2049"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2049\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2050,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2049\/revisions\/2050"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2049"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2049"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2049"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2051,
        "date": "2021-04-12T07:11:41",
        "date_gmt": "2021-04-12T07:11:41",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2051"
        },
        "modified": "2021-04-12T07:11:41",
        "modified_gmt": "2021-04-12T07:11:41",
        "slug": "listresourcebundle-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/listresourcebundle-class\/",
        "title": {
            "rendered": "ListResourceBundle Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.ListResourceBundle<\/strong>&nbsp;class is an abstract subclass of ResourceBundle that manages resources for a locale in a convenient and easy to use list.<\/p>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.ListResourceBundle<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-preformatted\">public abstract class ListResourceBundle\n   extends ResourceBundle\n<\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Fields inherited from class\u00a0java. util.ResourceBundle.<\/p>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>ListResourceBundle()<\/strong>This is the only constructor.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>protected abstract Object[][] getContents()This method returns an array in which each item is a pair of objects in an Object array.<\/td><\/tr><tr><td>2<\/td><td>Enumeration&lt;String> get keys()This method returns an Enumeration of the keys contained in this ResourceBundle and its parent bundles.<\/td><\/tr><tr><td>3<\/td><td>Object handleGetObject(String key)This method gets an object for the given key from this resource bundle.<\/td><\/tr><tr><td>4<\/td><td>protected Set&lt;String> handles keyset()This method returns a Set of the keys contained only in this ResourceBundle.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.ResourceBundle<\/li><li>java.util.Object<\/li><\/ul>\n\n\n\n<p><\/p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.ListResourceBundle&nbsp;class is an abstract subclass of ResourceBundle that manages resources for a locale in a convenient and easy to use list. Class declaration Following is the declaration for&nbsp;java.util.ListResourceBundle&nbsp;class \u2212 public abstract class ListResourceBundle extends ResourceBundle Field Fields inherited from class\u00a0java. util.ResourceBundle. Class constructors Sr.No. Constructor &amp; Description 1 ListResourceBundle()This is the only constructor. Class [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2051"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2051"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2051\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2052,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2051\/revisions\/2052"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2051"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2051"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2051"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2053,
        "date": "2021-04-12T07:14:00",
        "date_gmt": "2021-04-12T07:14:00",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2053"
        },
        "modified": "2021-04-12T07:14:00",
        "modified_gmt": "2021-04-12T07:14:00",
        "slug": "locale-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/locale-class\/",
        "title": {
            "rendered": "Locale Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.Locale<\/strong>&nbsp;class object represents a specific geographical, political, or cultural region. .Following are the important points about Locale \u2212<\/p>\n\n\n\n<ul><li>An operation that requires a Locale to perform its task is called locale-sensitive and uses the Locale to form information for the user.<\/li><li>Locale is a mechanism for identifying objects, not a container for the objects themselves.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.Locale<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class Locale\n   extends Object\n   implements Cloneable, Serializable\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.util.Locale<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static Locale CANADA<\/strong>&nbsp;\u2212 This is the constant for country.<\/li><li><strong>static Locale CANADA FRENCH<\/strong>&nbsp;\u2212 This is the constant for country.<\/li><li><strong>static Locale CHINA<\/strong>&nbsp;\u2212 This is the constant for country.<\/li><li><strong>static Locale CHINESE<\/strong>&nbsp;\u2212 This is the constant for language.<\/li><li><strong>static Locale ENGLISH<\/strong>&nbsp;\u2212 This is the constant for language.<\/li><li><strong>static Locale FRANCE<\/strong>&nbsp;\u2212 This is the constant for country.<\/li><li><strong>static Locale FRENCH<\/strong>&nbsp;\u2212 This is the constant for language.<\/li><li><strong>static Locale GERMAN<\/strong>&nbsp;\u2212 This is the constant for language.<\/li><li><strong>static Locale GERMANY<\/strong>&nbsp;\u2212 This is the constant for country.<\/li><li><strong>static Locale ITALIAN<\/strong>&nbsp;\u2212 This is the constant for language.<\/li><li><strong>static Locale ITALY<\/strong>&nbsp;\u2212 This is the constant for country.<\/li><li><strong>static Locale JAPAN<\/strong>&nbsp;\u2212 This is the constant for country.<\/li><li><strong>static Locale JAPANESE<\/strong>&nbsp;\u2212 This is the constant for language.<\/li><li><strong>static Locale KOREA<\/strong>&nbsp;\u2212 This is the constant for country.<\/li><li><strong>static Locale KOREAN<\/strong>&nbsp;\u2212 This is the constant for language.<\/li><li><strong>static Locale PRC<\/strong>&nbsp;\u2212 This is the constant for country.<\/li><li><strong>static Locale ROOT<\/strong>&nbsp;\u2212 This is the constant for root locale.<\/li><li><strong>static Locale SIMPLIFIED CHINESE<\/strong>&nbsp;\u2212 This is the constant for language.<\/li><li><strong>static Locale TAIWAN<\/strong>&nbsp;\u2212 This is the constant for country.<\/li><li><strong>static Locale TRADITIONAL CHINESE<\/strong>&nbsp;\u2212 This is the constant for language.<\/li><li><strong>static Locale UK<\/strong>&nbsp;\u2212 This is the constant for country.<\/li><li><strong>static Locale US<\/strong>&nbsp;\u2212 This is the constant for country.<\/li><\/ul>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>Locale(String language)<\/strong>This constructs a locale from a language code.<\/td><\/tr><tr><td>2<\/td><td><strong>Locale(String language, String country)<\/strong>This constructs a locale from a language code.<\/td><\/tr><tr><td>3<\/td><td><strong>Locale(String language, String country, String variant)<\/strong>This constructs a locale from language, country, variant.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>Object clone()This method overrides Cloneable<\/td><\/tr><tr><td>2<\/td><td>boolean equals(Object obj)This method returns true if this Locale is equal to another object.<\/td><\/tr><tr><td>3<\/td><td>static Locale[] getAvailableLocales()This method returns an array of all installed locales.<\/td><\/tr><tr><td>4<\/td><td>String get the country()This method returns the country\/region code for this locale, which will either be the empty string or an uppercase ISO 3166 2-letter code.<\/td><\/tr><tr><td>5<\/td><td>static Locale getDefault()This method gets the current value of the default locale for this instance of the Java Virtual Machine.<\/td><\/tr><tr><td>6<\/td><td>String getDisplayCountry()This method returns a name for the locale&#8217;s country that is appropriate for display to the user.<\/td><\/tr><tr><td>7<\/td><td>S String getDisplayCountry(Locale locale)This method returns a name for the locale&#8217;s country that is appropriate for display to the user.<\/td><\/tr><tr><td>8<\/td><td>String getDisplayLanguage()This method returns a name for the locale&#8217;s language that is appropriate for display to the user.<\/td><\/tr><tr><td>9<\/td><td>String getDisplayLanguage(Locale locale)This method returns a name for the locale&#8217;s language that is appropriate for display to the user.<\/td><\/tr><tr><td>10<\/td><td>String get display name()This method returns a name for the locale that is appropriate for display to the user.<\/td><\/tr><tr><td>11<\/td><td>String get display name(Locale locale)This method returns a name for the locale that is appropriate for display to the user.<\/td><\/tr><tr><td>12<\/td><td>String getDisplayVariant()This method returns a name for the locale&#8217;s variant code that is appropriate for display to the user.<\/td><\/tr><tr><td>13<\/td><td>String getDisplayVariant(Locale locale)This method returns a name for the locale&#8217;s variant code that is appropriate for display to the user.<\/td><\/tr><tr><td>14<\/td><td>String getISO3Country()This method returns a three-letter abbreviation for this locale&#8217;s country.<\/td><\/tr><tr><td>15<\/td><td>String getISO3Language()This method returns a three-letter abbreviation for this locale&#8217;s language.<\/td><\/tr><tr><td>16<\/td><td>static String[] gets countries()This method returns a list of all 2-letter country codes defined in ISO 3166.<\/td><\/tr><tr><td>17<\/td><td>static String[] gets languages()This method returns a list of all 2-letter language codes defined in ISO 639.<\/td><\/tr><tr><td>18<\/td><td>String get language()This method returns the language code for this locale, which will either be the empty string or a lowercase ISO 639 code.<\/td><\/tr><tr><td>19<\/td><td>String getVariant()This method returns the variant code for this locale.<\/td><\/tr><tr><td>20<\/td><td>int hashCode()This method override hashCode.<\/td><\/tr><tr><td>21<\/td><td>static void setDefault(Locale new locale)This method sets the default locale for this instance of the Java Virtual Machine.<\/td><\/tr><tr><td>22<\/td><td>String toString()This method is the getter for the programmatic name of the entire locale, with the language, country, and variant separated by underbars.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.Locale&nbsp;class object represents a specific geographical, political, or cultural region. .Following are the important points about Locale \u2212 An operation that requires a Locale to perform its task is called locale-sensitive and uses the Locale to form information for the user. Locale is a mechanism for identifying objects, not a container for the objects [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2053"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2053"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2053\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2054,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2053\/revisions\/2054"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2053"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2053"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2053"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2055,
        "date": "2021-04-12T07:15:58",
        "date_gmt": "2021-04-12T07:15:58",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2055"
        },
        "modified": "2021-04-12T07:15:58",
        "modified_gmt": "2021-04-12T07:15:58",
        "slug": "observable-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/observable-class\/",
        "title": {
            "rendered": "Observable Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The\u00a0<strong>java. <\/strong>util. The observable\u00a0class represents an observable object or &#8220;data&#8221; in the model-view paradigm. Following are the important points about Observable \u2212<\/p>\n\n\n\n<ul><li>The class can be subclassed to represent an object that the application wants to have observed.<\/li><li>An observable object can have one or more observers.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.Observable<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class Observable\n   extends Object\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>Observable()<\/strong>This constructs an Observable with zero Observers.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>void addObserver(Observer o)This method adds an observer to the set of observers for this object, provided that it is not the same as some observer already in the set.<\/td><\/tr><tr><td>2<\/td><td>protected void clearChanged()This method indicates that this object has no longer changed, or that it has already notified all of the observers of its most recent change so that the changed method will now return false.<\/td><\/tr><tr><td>3<\/td><td>int countObservers()This method returns the number of observers of this Observable object.<\/td><\/tr><tr><td>4<\/td><td>void deleteObserver(Observer o)This method deletes an observer from the set of observers of this object.<\/td><\/tr><tr><td>5<\/td><td>void delete servers()This method clears the observer list so that this object no longer has any observers.<\/td><\/tr><tr><td>6<\/td><td>boolean has changed()This method tests if this object has changed.<\/td><\/tr><tr><td>7<\/td><td>void notify observers()If this object has changed, as indicated by the changed method, then notify all of its observers and then call the clearChanged method to indicate that this object has no longer changed.<\/td><\/tr><tr><td>8<\/td><td>void notify observers(Object arg)If this object has changed, as indicated by the changed method, then notify all of its observers and then call the clearChanged method to indicate that this object has no longer changed.<\/td><\/tr><tr><td>9<\/td><td>the protected void set changed()This method returns marks this Observable object as having been changed; the changed method will now return true.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The\u00a0java. util. The observable\u00a0class represents an observable object or &#8220;data&#8221; in the model-view paradigm. Following are the important points about Observable \u2212 The class can be subclassed to represent an object that the application wants to have observed. An observable object can have one or more observers. Class declaration Following is the declaration for&nbsp;java.util.Observable&nbsp;class [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2055"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2055"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2055\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2056,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2055\/revisions\/2056"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2055"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2055"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2055"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2057,
        "date": "2021-04-12T07:17:34",
        "date_gmt": "2021-04-12T07:17:34",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2057"
        },
        "modified": "2021-04-12T07:17:34",
        "modified_gmt": "2021-04-12T07:17:34",
        "slug": "priorityqueue-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/priorityqueue-class\/",
        "title": {
            "rendered": "PriorityQueue Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.PriorityQueue<\/strong>&nbsp;class is an unbounded priority queue based on a priority heap.Following are the important points about PriorityQueue \u2212<\/p>\n\n\n\n<ul><li>The elements of the priority queue are ordered according to their natural ordering, or by a Comparator provided at queue construction time, depending on which constructor is used.<\/li><li>A priority queue does not permit null elements.<\/li><li>A priority queue relying on natural ordering also does not permit insertion of non-comparable objects.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.PriorityQueue<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class PriorityQueue&lt;E&gt;\n   extends AbstractQueue&lt;E&gt;\n   implements Serializable\n<\/code><\/pre>\n\n\n\n<h2>Parameters<\/h2>\n\n\n\n<p>Following is the parameter for&nbsp;<strong>java.util.PriorityQueue<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<p><strong>E<\/strong>&nbsp;\u2212 This is the type of elements held in this collection.<\/p>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>PriorityQueue()<\/strong>This creates a PriorityQueue with the default initial capacity (11) that orders its elements according to their natural ordering.<\/td><\/tr><tr><td>2<\/td><td><strong>PriorityQueue(Collection&lt;? extends E&gt; c)<\/strong>This creates a PriorityQueue containing the elements in the specified collection.<\/td><\/tr><tr><td>3<\/td><td><strong>PriorityQueue(int initialCapacity)<\/strong>This creates a PriorityQueue with the specified initial capacity that orders its elements according to their natural ordering.<\/td><\/tr><tr><td>4<\/td><td><strong>PriorityQueue(int initialCapacity, Comparator&lt;? super E&gt; comparator)<\/strong>This creates a PriorityQueue with the specified initial capacity that orders its elements according to the specified comparator.<\/td><\/tr><tr><td>5<\/td><td><strong>PriorityQueue(PriorityQueue&lt;? extends E&gt; c)<\/strong>This creates a PriorityQueue containing the elements in the specified priority queue.<\/td><\/tr><tr><td>6<\/td><td><strong>PriorityQueue(SortedSet&lt;? extends E&gt; c)<\/strong>This creates a PriorityQueue containing the elements in the specified sorted set.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>boolean add(E e)This method inserts the specified element into this priority queue.<\/td><\/tr><tr><td>2<\/td><td>void clear()This method removes all of the elements from this priority queue.<\/td><\/tr><tr><td>3<\/td><td>Comparator&lt;? super E> comparator()This method returns the comparator used to order the elements in this queue, or null if this queue is sorted according to the natural ordering of its elements.<\/td><\/tr><tr><td>4<\/td><td>boolean contains(Object o)This method returns true if this queue contains the specified element.<\/td><\/tr><tr><td>5<\/td><td>Iterator&lt;E> iterator()This method returns an iterator over the elements in this queue.<\/td><\/tr><tr><td>6<\/td><td>boolean offer(E e)This method inserts the specified element into this priority queue.<\/td><\/tr><tr><td>7<\/td><td>E peek()This method retrieves, but does not remove, the head of this queue, or returns null if this queue is empty.<\/td><\/tr><tr><td>8<\/td><td>E poll()This method retrieves and removes the head of this queue, or returns null if this queue is empty.<\/td><\/tr><tr><td>9<\/td><td>boolean remove(Object o)This method removes a single instance of the specified element from this queue if it is present.<\/td><\/tr><tr><td>10<\/td><td>int size()This method returns the number of elements in this collection.<\/td><\/tr><tr><td>11<\/td><td>Object[] toArray()This method returns an array containing all of the elements in this queue.<\/td><\/tr><tr><td>12<\/td><td>&lt;T> T[] toArray(T[] a)This method returns an array containing all of the elements in this queue; the runtime type of the returned array is that of the specified array.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.AbstractQueue<\/li><li>java.util.AbstractCollection<\/li><li>java.util.Object<\/li><li>java.util.Collection<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.PriorityQueue&nbsp;class is an unbounded priority queue based on a priority heap.Following are the important points about PriorityQueue \u2212 The elements of the priority queue are ordered according to their natural ordering, or by a Comparator provided at queue construction time, depending on which constructor is used. A priority queue does not permit null elements. [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2057"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2057"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2057\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2058,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2057\/revisions\/2058"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2057"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2057"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2057"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2059,
        "date": "2021-04-12T07:19:14",
        "date_gmt": "2021-04-12T07:19:14",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2059"
        },
        "modified": "2021-04-12T07:19:14",
        "modified_gmt": "2021-04-12T07:19:14",
        "slug": "properties-class-2",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/properties-class-2\/",
        "title": {
            "rendered": "Properties Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.Properties<\/strong>&nbsp;class is a class which represents a persistent set of properties.The Properties can be saved to a stream or loaded from a stream.Following are the important points about Properties \u2212<\/p>\n\n\n\n<ul><li>Each key and its corresponding value in the property list is a string.<\/li><li>A property list can contain another property list as its &#8216;defaults&#8217;, this second property list is searched if the property key is not found in the original property list.<\/li><li>This class is thread-safe; multiple threads can share a single Properties object without the need for external synchronization.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.Properties<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class Properties\n   extends Hashtable&lt;Object,Object&gt;\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.util.Properties<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<p><strong>protected Properties defaults<\/strong>&nbsp;\u2212 This is the property list that contains default values for any keys not found in this property list.<\/p>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>Properties()<\/strong>This constructs creates an empty property list with no default values.<\/td><\/tr><tr><td>2<\/td><td><strong>Properties(Properties defaults)<\/strong>This constructs creates an empty property list with the specified defaults.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>String getProperty(String key)This method searches for the property with the specified key in this property list.<\/td><\/tr><tr><td>2<\/td><td>String getProperty(String key, String defaultValue)This method searches for the property with the specified key in this property list.<\/td><\/tr><tr><td>3<\/td><td>void list(PrintStream out)This method prints this property list out to the specified output stream.<\/td><\/tr><tr><td>4<\/td><td>void list(PrintWriter out)This method prints this property list out to the specified output stream.<\/td><\/tr><tr><td>5<\/td><td>void load(InputStream inStream)This method reads a property list (key and element pairs) from the input byte stream.<\/td><\/tr><tr><td>6<\/td><td>void load(Reader reader)This method reads a property list (key and element pairs) from the input character stream in a simple line-oriented format.<\/td><\/tr><tr><td>7<\/td><td>void load from XML(InputStream in)This method loads all of the properties represented by the XML document on the specified input stream into this properties table.<\/td><\/tr><tr><td>8<\/td><td>Enumeration&lt;?> property names()This method returns an enumeration of all the keys in this property list, including distinct keys in the default property list if a key of the same name has not already been found from the main properties list.<\/td><\/tr><tr><td>9<\/td><td>void save(OutputStream out, String comments)This method reads a.<\/td><\/tr><tr><td>10<\/td><td>Object setProperty(String key, String value)This method calls the Hashtable method put.<\/td><\/tr><tr><td>11<\/td><td>void store(OutputStream out, String comments)The method writes this property list (key and element pairs) in this Properties table to the output stream in a format suitable for loading into a Properties table using the load(InputStream) method.<\/td><\/tr><tr><td>12<\/td><td>void store(Writer writer, String comments)The method writes this property list (key and element pairs) in this Properties table to the output character stream in a format suitable for using the load(Reader) method.<\/td><\/tr><tr><td>13<\/td><td>void storeToXML(OutputStream os, String comment)This method emits an XML document representing all of the properties contained in this table.<\/td><\/tr><tr><td>14<\/td><td>void storeToXML(OutputStream os, String comment, String encoding)This method emits an XML document representing all of the properties contained in this table, using the specified encoding.<\/td><\/tr><tr><td>15<\/td><td>Set&lt;String> string property names()This method returns a set of keys in this property list where the key and its corresponding value are strings, including distinct keys in the default property list if a key of the same name has not already been found from the main properties list.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.Hashtable<\/li><li>java.util.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.Properties&nbsp;class is a class which represents a persistent set of properties.The Properties can be saved to a stream or loaded from a stream.Following are the important points about Properties \u2212 Each key and its corresponding value in the property list is a string. A property list can contain another property list as its &#8216;defaults&#8217;, [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2059"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2059"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2059\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2060,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2059\/revisions\/2060"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2059"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2059"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2059"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2061,
        "date": "2021-04-12T07:20:24",
        "date_gmt": "2021-04-12T07:20:24",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2061"
        },
        "modified": "2021-04-12T07:20:24",
        "modified_gmt": "2021-04-12T07:20:24",
        "slug": "propertypermission-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/propertypermission-class\/",
        "title": {
            "rendered": "PropertyPermission Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.PropertyPermission<\/strong>&nbsp;class is a class for property permissions.Following are the important points about PropertyPermission \u2212<\/p>\n\n\n\n<ul><li>The name is the name of the property (&#8220;java.home&#8221;, &#8220;os.name&#8221;, etc).<\/li><li>The naming convention follows the hierarchical property naming convention.An asterisk may appear at the end of the name, following a &#8220;.&#8221;, or by itself, to signify a wildcard match.For example: &#8220;java.*&#8221; or &#8220;*&#8221; is valid, &#8220;*java&#8221; or &#8220;a*b&#8221; is not valid.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.PropertyPermission<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class PropertyPermission\n   extends BasicPermission\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>PropertyPermission(String name, String actions)<\/strong>This creates a new PropertyPermission object with the specified name.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>boolean equals(Object obj)This method checks two PropertyPermission objects for equality.<\/td><\/tr><tr><td>2<\/td><td>String detections()This method returns the &#8220;canonical string representation&#8221; of the actions.<\/td><\/tr><tr><td>3<\/td><td>int hashCode()This method returns the hash code value for this object.<\/td><\/tr><tr><td>4<\/td><td>boolean implies(Permission p)This method checks if this PropertyPermission object &#8220;implies&#8221; the specified permission.<\/td><\/tr><tr><td>5<\/td><td>PermissionCollection newPermissionCollection()This method returns a returns a new PermissionCollection object for storing PropertyPermission objects.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.Permission<\/li><li>java.util.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.PropertyPermission&nbsp;class is a class for property permissions.Following are the important points about PropertyPermission \u2212 The name is the name of the property (&#8220;java.home&#8221;, &#8220;os.name&#8221;, etc). The naming convention follows the hierarchical property naming convention.An asterisk may appear at the end of the name, following a &#8220;.&#8221;, or by itself, to signify a wildcard match.For [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2061"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2061"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2061\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2062,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2061\/revisions\/2062"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2061"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2061"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2061"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2063,
        "date": "2021-04-12T07:21:33",
        "date_gmt": "2021-04-12T07:21:33",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2063"
        },
        "modified": "2021-04-12T07:21:33",
        "modified_gmt": "2021-04-12T07:21:33",
        "slug": "propertyresourcebundle-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/propertyresourcebundle-class\/",
        "title": {
            "rendered": "PropertyResourceBundle Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.PropertyResourceBundle<\/strong>&nbsp;class is a concrete subclass of ResourceBundle that manages resources for a locale using a set of static strings from a property file.Following are the important points about PropertyResourceBundle \u2212<\/p>\n\n\n\n<ul><li>The class can be constructed either from an InputStream or a Reader, which represents a property file.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.PropertyResourceBundle<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-preformatted\">public class PropertyResourceBundle\n   extends ResourceBundle\n<\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Fields inherited from class\u00a0java. util.ResourceBundle.<\/p>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>PropertyResourceBundle(InputStream stream)<\/strong>This creates a property resource bundle from an InputStream.<\/td><\/tr><tr><td>2<\/td><td><strong>PropertyResourceBundle(Reader reader)<\/strong>This creates a property resource bundle from a Reader.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>Enumeration&lt;String> get keys()This method returns an Enumeration of the keys contained in this ResourceBundle and its parent bundles.<\/td><\/tr><tr><td>2<\/td><td>Object handleGetObject(String key)This method gets an object for the given key from this resource bundle.<\/td><\/tr><tr><td>3<\/td><td>protected Set&lt;String> handles keyset()This method returns a Set of the keys contained only in this ResourceBundle.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.ResourceBundle<\/li><li>java.util.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.PropertyResourceBundle&nbsp;class is a concrete subclass of ResourceBundle that manages resources for a locale using a set of static strings from a property file.Following are the important points about PropertyResourceBundle \u2212 The class can be constructed either from an InputStream or a Reader, which represents a property file. Class declaration Following is the declaration for&nbsp;java.util.PropertyResourceBundle&nbsp;class [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2063"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2063"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2063\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2064,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2063\/revisions\/2064"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2063"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2063"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2063"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2065,
        "date": "2021-04-12T07:23:21",
        "date_gmt": "2021-04-12T07:23:21",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2065"
        },
        "modified": "2021-04-12T07:23:21",
        "modified_gmt": "2021-04-12T07:23:21",
        "slug": "random-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/random-class\/",
        "title": {
            "rendered": "Random Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.Random<\/strong>&nbsp;class instance is used to generate a stream of pseudorandom numbers.Following are the important points about Random \u2212<\/p>\n\n\n\n<ul><li>The class uses a 48-bit seed, which is modified using a linear congruential formula.<\/li><li>The algorithms implemented by class Random use a protected utility method that on each invocation can supply up to 32 pseudorandomly generated bits.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.Random<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class Random\n   extends Object\n   implements Serializable\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>Random()<\/strong>This creates a new random number generator.<\/td><\/tr><tr><td>2<\/td><td><strong>Random(long seed)<\/strong>This creates a new random number generator using a single long seed.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>protected int next(int bits)This method generates the next pseudorandom number.<\/td><\/tr><tr><td>2<\/td><td>boolean nextBoolean()This method returns the next pseudorandom, uniformly distributed boolean value from this random number generator&#8217;s sequence.<\/td><\/tr><tr><td>3<\/td><td>void nextBytes(byte[] bytes)This method generates random bytes and places them into a user-supplied byte array.<\/td><\/tr><tr><td>4<\/td><td>double nextDouble()This method returns the next pseudorandom, uniformly distributed double value between 0.0 and 1.0 from this random number generator&#8217;s sequence.<\/td><\/tr><tr><td>5<\/td><td>float nextFloat()This method returns the next pseudorandom, uniformly distributed float value between 0.0 and 1.0 from this random number generator&#8217;s sequence.<\/td><\/tr><tr><td>6<\/td><td>double next Russian()This method returns the next pseudorandom, Gaussian (&#8220;normally&#8221;) distributed double value with mean 0.0 and standard deviation 1.0 from this random number generator&#8217;s sequence.<\/td><\/tr><tr><td>7<\/td><td>int nextInt()This method returns the next pseudorandom, uniformly distributed int value from this random number generator&#8217;s sequence.<\/td><\/tr><tr><td>8<\/td><td>int nextInt(int n)This method returns a pseudorandom, uniformly distributed int value between 0 (inclusive) and the specified value (exclusive), drawn from this random number generator&#8217;s sequence.<\/td><\/tr><tr><td>9<\/td><td>long next long()This method returns the next pseudorandom, uniformly distributed long value from this random number generator&#8217;s sequence.<\/td><\/tr><tr><td>10<\/td><td>void settled(long seed)This method sets the seed of this random number generator using a single long seed.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.Random&nbsp;class instance is used to generate a stream of pseudorandom numbers.Following are the important points about Random \u2212 The class uses a 48-bit seed, which is modified using a linear congruential formula. The algorithms implemented by class Random use a protected utility method that on each invocation can supply up to 32 pseudorandomly generated [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2065"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2065"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2065\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2066,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2065\/revisions\/2066"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2065"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2065"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2065"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2067,
        "date": "2021-04-12T07:25:10",
        "date_gmt": "2021-04-12T07:25:10",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2067"
        },
        "modified": "2021-04-12T07:25:10",
        "modified_gmt": "2021-04-12T07:25:10",
        "slug": "resourcebundle-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/resourcebundle-class\/",
        "title": {
            "rendered": "ResourceBundle Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.ResourceBundle<\/strong>&nbsp;class contain locale-specific objects.Following are the important points about ResourceBundle \u2212<\/p>\n\n\n\n<ul><li>The class allows you to write programs that can be easily localized, or translated, into different languages.<\/li><li>This class programs handle multiple locales at once be easily modified later to support even more locales.<\/li><li>The Java Platform provides two subclasses of ResourceBundle, ListResourceBundle and PropertyResourceBundle.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.ResourceBundle<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public abstract class ResourceBundle\n   extends Object\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.util.ResourceBundle<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<p><strong>protected ResourceBundle parent<\/strong>&nbsp;\u2212 This is the parent bundle of this bundle.<\/p>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>ResourceBundle()<\/strong>This is the single constructor.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>static void clearance()This method removes all resource bundles from the cache that have been loaded using the caller&#8217;s class loader.<\/td><\/tr><tr><td>2<\/td><td>static void clearance(ClassLoader loader)This method removes all resource bundles from the cache that have been loaded using the given class loader.<\/td><\/tr><tr><td>3<\/td><td>boolean containsKey(String key)This method determines whether the given key is contained in this ResourceBundle or its parent bundles.<\/td><\/tr><tr><td>4<\/td><td>static ResourceBundle getBundle(String baseName)This method gets a resource bundle using the specified base name, the default locale, and the caller&#8217;s class loader.<\/td><\/tr><tr><td>5<\/td><td>static ResourceBundle getBundle(String baseName, Locale locale)This method gets a resource bundle using the specified base name and locale, and the caller&#8217;s class loader.<\/td><\/tr><tr><td>6<\/td><td>static ResourceBundle getBundle(String baseName, Locale locale, ClassLoader loader)This method gets a resource bundle using the specified base name, locale, and class loader.<\/td><\/tr><tr><td>7<\/td><td>static ResourceBundle getBundle(String baseName, Locale target locale, ClassLoader loader, ResourceBundle.Control control)This method Returns a resource bundle using the specified base name, target locale, class loader, and control.<\/td><\/tr><tr><td>8<\/td><td>static ResourceBundle getBundle(String baseName, Locale target locale, ResourceBundle.Control control)This method returns a resource bundle using the specified base name, target locale and control, and the caller&#8217;s class loader.<\/td><\/tr><tr><td>9<\/td><td>static ResourceBundle getBundle(String baseName, ResourceBundle.Control control)This method returns a resource bundle using the specified base name, the default locale, and the specified control.<\/td><\/tr><tr><td>10<\/td><td>abstract Enumeration&lt;String> getKeys()This method returns an enumeration of the keys.<\/td><\/tr><tr><td>11<\/td><td>Locale getLocale()This method returns the locale of this resource bundle.<\/td><\/tr><tr><td>12<\/td><td>Object getObject(String key)This method gets an object for the given key from this resource bundle or one of its parents.<\/td><\/tr><tr><td>13<\/td><td>String getString(String key)This method gets a string for the given key from this resource bundle or one of its parents.<\/td><\/tr><tr><td>14<\/td><td>String[] getStringArray(String key)This method gets a string array for the given key from this resource bundle or one of its parents.<\/td><\/tr><tr><td>15<\/td><td>protected abstract Object handleGetObject(String key)This method gets an object for the given key from this resource bundle.<\/td><\/tr><tr><td>16<\/td><td>protected Set&lt;String> handles keyset()This method queries if the given date is in daylight savings time in this time zone.<\/td><\/tr><tr><td>17<\/td><td>Set&lt;String> keySet()This method returns a Set of all keys contained in this ResourceBundle and its parent bundles.<\/td><\/tr><tr><td>18<\/td><td>protected void setParent(ResourceBundle parent)This method sets the parent bundle of this bundle.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.ResourceBundle&nbsp;class contain locale-specific objects.Following are the important points about ResourceBundle \u2212 The class allows you to write programs that can be easily localized, or translated, into different languages. This class programs handle multiple locales at once be easily modified later to support even more locales. The Java Platform provides two subclasses of ResourceBundle, ListResourceBundle [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2067"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2067"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2067\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2068,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2067\/revisions\/2068"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2067"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2067"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2067"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2069,
        "date": "2021-04-12T07:27:11",
        "date_gmt": "2021-04-12T07:27:11",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2069"
        },
        "modified": "2021-04-12T07:27:11",
        "modified_gmt": "2021-04-12T07:27:11",
        "slug": "resourcebundle-control-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/resourcebundle-control-class\/",
        "title": {
            "rendered": "ResourceBundle.Control Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.ResourceBundle.Control<\/strong>&nbsp;class collaborates with the factory methods for loading resource bundles.Following are the important points about ResourceBundle.Control \u2212<\/p>\n\n\n\n<ul><li>The class instance must be thread-safe if it&#8217;s simultaneously used by multiple threads.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.ResourceBundle.Control<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public static class ResourceBundle.Control\n   extends Object\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.util.ResourceBundle.Control<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static int STANDARD_TIME<\/strong>&nbsp;\u2212 This is the constant for a mode of start or end time specified as standard time.<\/li><li><strong>static List&lt;String&gt; FORMAT_CLASS<\/strong>&nbsp;\u2212 This is the format List containing &#8220;java.class&#8221;.<\/li><li><strong>static List&lt;String&gt; FORMAT_DEFAULT<\/strong>&nbsp;\u2212 This is the default format List, which contains the strings &#8220;java.class&#8221; and &#8220;java.properties&#8221;, in this order.<\/li><li><strong>static List&lt;String&gt; FORMAT_PROPERTIES<\/strong>&nbsp;\u2212 This is the properties-only format List containing &#8220;java.properties&#8221;.<\/li><li><strong>static long TTL_DONT_CACHE<\/strong>&nbsp;\u2212 This is the time-to-live constant for not caching loaded resource bundle instances.<\/li><li><strong>static long TTL_NO_EXPIRATION_CONTROL<\/strong>&nbsp;\u2212 This is the time-to-live constant for disabling the expiration control for loaded resource bundle instances in the cache.<\/li><\/ul>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>List&lt;Locale&gt; getCandidateLocales(String baseName, Locale locale)<\/strong>This is the single constructor.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>List&lt;Locale>getCandidateLocales(String baseName, Locale locale)This method returns a List of Locales as candidate locales for baseName and locale.<\/td><\/tr><tr><td>2<\/td><td>static ResourceBundle.Control get control(List&lt;String> formats)This method returns a ResourceBundle.Control in which the net formats method returns the specified formats.<\/td><\/tr><tr><td>3<\/td><td>Locale getFallbackLocale(String baseName, Locale locale)This method returns a Locale to be used as a fallback locale for further resource bundle searches by the ResourceBundle.getBundle factory method.<\/td><\/tr><tr><td>4<\/td><td>List&lt;String> getFormats(String baseName)This method returns a list of strings containing formats to be used to load resource bundles for the given baseName.<\/td><\/tr><tr><td>5<\/td><td>static ResourceBundle.Control getNoFallbackControl(List&lt;String> formats)This method returns a ResourceBundle.Control in which the net formats method returns the specified formats and the getFallbackLocale method returns null.<\/td><\/tr><tr><td>6<\/td><td>long getTimeToLive(String baseName, Locale locale)This method returns the time-to-live (TTL) value for resource bundles that are loaded under this ResourceBundle.Control.<\/td><\/tr><tr><td>7<\/td><td>boolean needsReload(String baseName, Locale locale, String format, ClassLoader loader, ResourceBundle bundle, long load time)This method determines if the expired bundle in the cache needs to be reloaded based on the loading time given by load time or some other criteria.<\/td><\/tr><tr><td>8<\/td><td>ResourceBundle new bundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload)This method instantiates a resource bundle for the given bundle name of the given format and locale, using the given class loader if necessary.<\/td><\/tr><tr><td>9<\/td><td>String toBundleName(String baseName, Locale locale)This method converts the given baseName and locale to the bundle name.<\/td><\/tr><tr><td>10<\/td><td>String to resource name(String bundle name, String suffix)This method converts the given bundleName to the form required by the ClassLoader.getResource method by replacing all occurrences of &#8216;.&#8217; in bundle name with &#8216;\/&#8217; and appending a &#8216;.&#8217; and the given file suffix.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.ResourceBundle.Control&nbsp;class collaborates with the factory methods for loading resource bundles.Following are the important points about ResourceBundle.Control \u2212 The class instance must be thread-safe if it&#8217;s simultaneously used by multiple threads. Class declaration Following is the declaration for&nbsp;java.util.ResourceBundle.Control&nbsp;class \u2212 Field Following are the fields for&nbsp;java.util.ResourceBundle.Control&nbsp;class \u2212 static int STANDARD_TIME&nbsp;\u2212 This is the constant for a [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2069"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2069"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2069\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2070,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2069\/revisions\/2070"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2069"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2069"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2069"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2071,
        "date": "2021-04-12T07:30:37",
        "date_gmt": "2021-04-12T07:30:37",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2071"
        },
        "modified": "2021-04-12T07:33:23",
        "modified_gmt": "2021-04-12T07:33:23",
        "slug": "scanner-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/scanner-class\/",
        "title": {
            "rendered": "Scanner Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.Scanner<\/strong>&nbsp;class is a simple text scanner which can parse primitive types and strings using regular expressions.Following are the important points about Scanner \u2212<\/p>\n\n\n\n<ul><li>A Scanner breaks its input into tokens using a delimiter pattern, which by default matches whitespace.<\/li><li>A scanning operation may block waiting for input.<\/li><li>A Scanner is not safe for multithreaded use without external synchronization.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.Scanner<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class Scanner\n   extends Object\n   implements Iterator&lt;String&gt;\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>Scanner(File source)<\/strong>This constructs a new Scanner that produces values scanned from the specified file.<\/td><\/tr><tr><td>2<\/td><td><strong>Scanner(File source, String charsetName)<\/strong>This constructs a new Scanner that produces values scanned from the specified file.<\/td><\/tr><tr><td>3<\/td><td><strong>Scanner(InputStream source)<\/strong>This constructs a new Scanner that produces values scanned from the specified input stream.<\/td><\/tr><tr><td>4<\/td><td><strong>Scanner(InputStream source, String charsetName)<\/strong>This constructs a new Scanner that produces values scanned from the specified input stream.<\/td><\/tr><tr><td>5<\/td><td><strong>Scanner(Readable source)<\/strong>This constructs a new Scanner that produces values scanned from the specified source.<\/td><\/tr><tr><td>6<\/td><td><strong>Scanner(ReadableByteChannel source)<\/strong>This constructs a new Scanner that produces values scanned from the specified channel.<\/td><\/tr><tr><td>7<\/td><td><strong>Scanner(ReadableByteChannel source, String charsetName)<\/strong>This constructs a new Scanner that produces values scanned from the specified channel.<\/td><\/tr><tr><td>8<\/td><td><strong>Scanner(String source)<\/strong>This constructs a new Scanner that produces values scanned from the specified string.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>void close()This method closes this scanner.<\/td><\/tr><tr><td>2<\/td><td>Pattern delimiter()This method returns the Pattern this Scanner is currently using to match delimiters.<\/td><\/tr><tr><td>3<\/td><td>String find online(Pattern pattern)This method attempts to find the next occurrence of the specified pattern ignoring delimiters.<\/td><\/tr><tr><td>4<\/td><td>String find online(String pattern)This method attempts to find the next occurrence of a pattern constructed from the specified string, ignoring delimiters.<\/td><\/tr><tr><td>5<\/td><td>String findWithinHorizon(Pattern pattern, int horizon)This method attempts to find the next occurrence of the specified pattern.<\/td><\/tr><tr><td>6<\/td><td>String findWithinHorizon(String pattern, int horizon)This method attempts to find the next occurrence of a pattern constructed from the specified string, ignoring delimiters.<\/td><\/tr><tr><td>7<\/td><td>boolean next()This method returns true if this scanner has another token in its input.<\/td><\/tr><tr><td>8<\/td><td>boolean hasNext(Pattern pattern)This method returns true if the next complete token matches the specified pattern.<\/td><\/tr><tr><td>9<\/td><td>boolean hasNext(String pattern)This method returns true if the next token matches the pattern constructed from the specified string.<\/td><\/tr><tr><td>10<\/td><td>boolean hasNextBigDecimal()This method returns true if the next token in this scanner&#8217;s input can be interpreted as a BigDecimal using the nextBigDecimal() method.<\/td><\/tr><tr><td>11<\/td><td>boolean hasNextBigInteger()This method returns true if the next token in this scanner&#8217;s input can be interpreted as a BigInteger in the default radix using the nextBigInteger() method.<\/td><\/tr><tr><td>12<\/td><td>boolean hasNextBigInteger(int radix)This method returns true if the next token in this scanner&#8217;s input can be interpreted as a BigInteger in the specified radix using the nextBigInteger() method.<\/td><\/tr><tr><td>13<\/td><td>boolean hasNextBoolean()This method returns true if the next token in this scanner&#8217;s input can be interpreted as a boolean value using a case insensitive pattern created from the string &#8220;true|false&#8221;.<\/td><\/tr><tr><td>14<\/td><td>boolean hasNextByte()This method returns true if the next token in this scanner&#8217;s input can be interpreted as a byte value in the default radix using the next byte() method.<\/td><\/tr><tr><td>15<\/td><td>boolean hasNextByte(int radix)This method returns true if the next token in this scanner&#8217;s input can be interpreted as a byte value in the specified radix using the next byte() method.<\/td><\/tr><tr><td>16<\/td><td>boolean hasNextDouble()This method returns true if the next token in this scanner&#8217;s input can be interpreted as a double value using the nextDouble() method.<\/td><\/tr><tr><td>17<\/td><td>boolean hasNextFloat()This method returns true if the next token in this scanner&#8217;s input can be interpreted as a float value using the next float() method.<\/td><\/tr><tr><td>18<\/td><td>boolean hasNextInt()This method returns true if the next token in this scanner&#8217;s input can be interpreted as an int value in the default radix using the next() method.<\/td><\/tr><tr><td>19<\/td><td>boolean hasNextInt(int radix)This method returns true if the next token in this scanner&#8217;s input can be interpreted as an int value in the specified radix using the next() method.<\/td><\/tr><tr><td>20<\/td><td>boolean hasNextLine()This method returns true if there is another line in the input of this scanner.<\/td><\/tr><tr><td>21<\/td><td>boolean hasNextLong()This method returns true if the next token in this scanner&#8217;s input can be interpreted as a long value in the default radix using the next long() method.<\/td><\/tr><tr><td>22<\/td><td>boolean hasNextLong(int radix)This method returns true if the next token in this scanner&#8217;s input can be interpreted as a long value in the specified radix using the next long() method.<\/td><\/tr><tr><td>23<\/td><td>boolean hasNextShort()This method returns true if the next token in this scanner&#8217;s input can be interpreted as a short value in the default radix using the next short() method.<\/td><\/tr><tr><td>24<\/td><td>boolean hasNextShort(int radix)This method returns true if the next token in this scanner&#8217;s input can be interpreted as a short value in the specified radix using the next short() method.<\/td><\/tr><tr><td>25<\/td><td>IOException exception()This method returns the IOException last thrown by this Scanner&#8217;s underlying Readable.<\/td><\/tr><tr><td>26<\/td><td>Locale ()This method returns this scanner&#8217;s locale.<\/td><\/tr><tr><td>27<\/td><td>MatchResult match()This method returns the match result of the last scanning operation performed by this scanner.<\/td><\/tr><tr><td>28<\/td><td>String next()This method finds and returns the next complete token from this scanner.<\/td><\/tr><tr><td>29<\/td><td>String next(Pattern pattern)This method returns the next token if it matches the specified pattern.<\/td><\/tr><tr><td>30<\/td><td>String next(String pattern)This method returns the next token if it matches the pattern constructed from the specified string.<\/td><\/tr><tr><td>31<\/td><td>BigDecimal nextBigDecimal()This method scans the next token of the input as a BigDecimal.<\/td><\/tr><tr><td>32<\/td><td>BigInteger nextBigInteger()This method Scans the next token of the input as a BigInteger.<\/td><\/tr><tr><td>33<\/td><td>BigInteger nextBigInteger(int radix)This method scans the next token of the input as a BigInteger.<\/td><\/tr><tr><td>34<\/td><td>boolean nextBoolean()This method scans the next token of the input into a boolean value and returns that value.<\/td><\/tr><tr><td>35<\/td><td>byte next byte()This method scans the next token of the input as a byte.<\/td><\/tr><tr><td>36<\/td><td>byte next byte(int radix)This method scans the next token of the input as a byte.<\/td><\/tr><tr><td>37<\/td><td>double nextDouble()This method scans the next token of the input as a double.<\/td><\/tr><tr><td>38<\/td><td>float nextFloat()This method scans the next token of the input as afloat.<\/td><\/tr><tr><td>39<\/td><td>int nextInt()This method scans the next token of the input as an int.<\/td><\/tr><tr><td>40<\/td><td>int nextInt(int radix)This method scans the next token of the input as an int.<\/td><\/tr><tr><td>41<\/td><td>String next line()This method advances this scanner past the current line and returns the input that was skipped.<\/td><\/tr><tr><td>42<\/td><td>long next long()This method scans the next token of the input as along.<\/td><\/tr><tr><td>43<\/td><td>long next long(int radix)This method scans the next token of the input as along.<\/td><\/tr><tr><td>44<\/td><td>short next short()This method scans the next token of the input as a short.<\/td><\/tr><tr><td>45<\/td><td>short next short(int radix)This method scans the next token of the input as a short.<\/td><\/tr><tr><td>46<\/td><td>int radix()This method returns this scanner&#8217;s default radix.<\/td><\/tr><tr><td>47<\/td><td>void remove()The remove operation is not supported by this implementation of the Iterator.<\/td><\/tr><tr><td>48<\/td><td>Scanner reset()This method resets this scanner.<\/td><\/tr><tr><td>49<\/td><td>Scanner skip(Pattern pattern)This method skips input that matches the specified pattern, ignoring delimiters.<\/td><\/tr><tr><td>50<\/td><td>Scanner skip(String pattern)This method skips input that matches a pattern constructed from the specified string.<\/td><\/tr><tr><td>51<\/td><td>String toString()This method returns the string representation of this Scanner.<\/td><\/tr><tr><td>52<\/td><td>Scanner useDelimiter(Pattern pattern)This method sets this scanner&#8217;s delimiting pattern to the specified pattern.<\/td><\/tr><tr><td>53<\/td><td>Scanner useDelimiter(String pattern)This method sets this scanner&#8217;s delimiting pattern to a pattern constructed from the specified String.<\/td><\/tr><tr><td>54<\/td><td>Scanner user locale(Locale locale)This method sets this scanner&#8217;s locale to the specified locale.<\/td><\/tr><tr><td>55<\/td><td>Scanner useRadix(int radix)This method Sets this scanner&#8217;s default radix to the specified radix.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.Object<\/li><\/ul>\n\n\n\n<p><\/p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.Scanner&nbsp;class is a simple text scanner which can parse primitive types and strings using regular expressions.Following are the important points about Scanner \u2212 A Scanner breaks its input into tokens using a delimiter pattern, which by default matches whitespace. A scanning operation may block waiting for input. A Scanner is not safe for multithreaded [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2071"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2071"
                }
            ],
            "version-history": [
                {
                    "count": 2,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2071\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2073,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2071\/revisions\/2073"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2071"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2071"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2071"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2074,
        "date": "2021-04-12T07:35:09",
        "date_gmt": "2021-04-12T07:35:09",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2074"
        },
        "modified": "2021-04-12T07:35:09",
        "modified_gmt": "2021-04-12T07:35:09",
        "slug": "serviceloader-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/serviceloader-class\/",
        "title": {
            "rendered": "ServiceLoader Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.ServiceLoader<\/strong>&nbsp;class is a simple service-provider loading facility.Following are the important points about ServiceLoader \u2212<\/p>\n\n\n\n<ul><li>Service loaders always execute in the security context of the caller.Trusted system code should typically invoke the methods in this class, and the methods of the iterators which they return, from within a privileged security context.<\/li><li>This class Instances are not safe for use by multiple concurrent threads.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.ServiceLoader<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class ServiceLoader&lt;S&gt;\n   extends Object\n   implements Iterable&lt;S&gt;\n<\/code><\/pre>\n\n\n\n<h2>Parameters<\/h2>\n\n\n\n<p>Following is the parameter for&nbsp;<strong>java.util.ServiceLoader<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<p><strong>S<\/strong>&nbsp;\u2212 This is the type of service to be loaded by this loader.<\/p>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>Iterator&lt;S> iterator()This method loads the available providers of this loader&#8217;s service.<\/td><\/tr><tr><td>2<\/td><td>public static &lt;S> ServiceLoader&lt;S> load(Class&lt;S> service)This method creates a new service loader for the given service type, using the current thread&#8217;s context class loader.<\/td><\/tr><tr><td>3<\/td><td>public static &lt;S> ServiceLoader&lt;S> load(Class&lt;S> service, ClassLoader loader)This method creates a new service loader for the given service type and the class loader.<\/td><\/tr><tr><td>4<\/td><td>public static &lt;S> ServiceLoader&lt;S> loadInstalled(Class&lt;S> service)This method creates a new service loader for the given service type, using the extension class loader.<\/td><\/tr><tr><td>5<\/td><td>void reload()This method clears this loader&#8217;s provider cache so that all providers will be reloaded.<\/td><\/tr><tr><td>6<\/td><td>String toString()This method returns a string describing this service.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.ServiceLoader&nbsp;class is a simple service-provider loading facility.Following are the important points about ServiceLoader \u2212 Service loaders always execute in the security context of the caller.Trusted system code should typically invoke the methods in this class, and the methods of the iterators which they return, from within a privileged security context. This class Instances are [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2074"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2074"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2074\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2075,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2074\/revisions\/2075"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2074"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2074"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2074"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2076,
        "date": "2021-04-12T07:37:29",
        "date_gmt": "2021-04-12T07:37:29",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2076"
        },
        "modified": "2021-04-12T07:37:29",
        "modified_gmt": "2021-04-12T07:37:29",
        "slug": "simpletimezone-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/simpletimezone-class\/",
        "title": {
            "rendered": "SimpleTimeZone Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.SimpleTimeZone<\/strong>&nbsp;class is a concrete subclass of TimeZone that represents a time zone for use with a Gregorian calendar.Following are the important points about SimpleTimeZone \u2212<\/p>\n\n\n\n<ul><li>The class holds an offset from GMT, called raw offset.<\/li><li>This class also holds start and end rules for a daylight saving time schedule.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.SimpleTimeZone<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class SimpleTimeZone\n   extends TimeZone\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.util.SimpleTimeZone<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static int STANDARD_TIME<\/strong>&nbsp;\u2212 This is the constant for a mode of start or end time specified as standard time.<\/li><li><strong>static int UTC_TIME<\/strong>&nbsp;\u2212 This is the constant for a mode of start or end time specified as UTC.<\/li><li><strong>static int WALL_TIME<\/strong>&nbsp;\u2212 This is the constant for a mode of start or end time specified as wall clock time.<\/li><\/ul>\n\n\n\n<p>It also consists of fields inherited from class\u00a0TimeZone.<\/p>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>SimpleTimeZone(int rawOffset, String ID)<\/strong>This constructs a SimpleTimeZone with the given base time zone offset from GMT and time zone ID with no daylight saving time schedule.<\/td><\/tr><tr><td>2<\/td><td><strong>SimpleTimeZone(int rawOffset, String ID, int startMonth, int startDay, int startDayOfWeek, int startTime, int endMonth, int endDay, int endDayOfWeek, int endTime)<\/strong>This constructs a SimpleTimeZone with the given base time zone offset from GMT, time zone ID, and rules for starting and ending the daylight time.<\/td><\/tr><tr><td>3<\/td><td><strong>SimpleTimeZone(int rawOffset, String ID, int startMonth, int startDay, int startDayOfWeek, int startTime, int endMonth, int endDay, int endDayOfWeek, int endTime, int dstSavings)<\/strong>This constructs a SimpleTimeZone with the given base time zone offset from GMT, time zone ID, and rules for starting and ending the daylight time.<\/td><\/tr><tr><td>4<\/td><td><strong>SimpleTimeZone(int rawOffset, String ID, int startMonth, int startDay, int startDayOfWeek, int startTime, int startTimeMode, int endMonth, int endDay, int endDayOfWeek, int endTime, int endTimeMode, int dstSavings)<\/strong>This constructs a SimpleTimeZone with the given base time zone offset from GMT, time zone ID, and rules for starting and ending the daylight time.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>Object clone()This method returns a clone of this SimpleTimeZone instance.<\/td><\/tr><tr><td>2<\/td><td>boolean equals(Object obj)This method compares the equality of two SimpleTimeZone objects.<\/td><\/tr><tr><td>3<\/td><td>int gets savings()This method returns the amount of time in milliseconds that the clock is advanced during daylight saving time.<\/td><\/tr><tr><td>4<\/td><td>int GMT offset(int era, int year, int month, int day, int dayOfWeek, int millis)This method returns the difference in milliseconds between local time and UTC, taking into account both the raw offset and the effect of daylight saving, for the specified date and time.<\/td><\/tr><tr><td>5<\/td><td>int GMT offset(long date)This method returns the offset of this time zone from UTC at the given time.<\/td><\/tr><tr><td>6<\/td><td>int getRawOffset()This method gets the GMT to offset for this time zone.<\/td><\/tr><tr><td>7<\/td><td>int hashCode()This method generates the hash code for the SimpleDateFormat object.<\/td><\/tr><tr><td>8<\/td><td>boolean has the same rules(TimeZone other)This method returns true if this zone has the same rules and offset as another zone.<\/td><\/tr><tr><td>9<\/td><td>boolean in daylight time(Date date)This method queries if the given date is in daylight saving time.<\/td><\/tr><tr><td>10<\/td><td>void setDSTSavings(int millisSavedDuringDST)This method sets the amount of time in milliseconds that the clock is advanced during daylight saving time.<\/td><\/tr><tr><td>11<\/td><td>void setEndRule(int and month, int day, int endTime)This method sets the daylight saving time end rule to a fixed date within a month.<\/td><\/tr><tr><td>12<\/td><td>void setEndRule(int and month, int day, int endDayOfWeek, int endTime)This method sets the daylight saving time end rule.<\/td><\/tr><tr><td>13<\/td><td>void setEndRule(int and month, int day, int endDayOfWeek, int endTime, boolean after)This method sets the daylight saving time end rule to a weekday before or after the given date within a month, e.g., the first Monday on or after the 8th.<\/td><\/tr><tr><td>14<\/td><td>void setRawOffset(int offset Ellis)This method sets the base time zone offset to GMT.<\/td><\/tr><tr><td>15<\/td><td>void Jetstar rule(int start month, int start day, int startTime)This method Sets the daylight saving time start rule to a fixed date within a month.<\/td><\/tr><tr><td>16<\/td><td>void setStartRule(int startMonth, int startDay, int startDayOfWeek, int startTime)This method sets the daylight saving time start rule.<\/td><\/tr><tr><td>17<\/td><td>void Jetstar rule(int start month, int start the day, int startDayOfWeek, int startTime, boolean after)This method Sets the daylight saving time start rule to a weekday before or after the given date within a month, e.g., the first Monday on or after the 8th.<\/td><\/tr><tr><td>18<\/td><td>void setStartYear(int year)This method sets the daylight saving time starting year.<\/td><\/tr><tr><td>19<\/td><td>String toString()This method returns a string representation of this time zone.<\/td><\/tr><tr><td>20<\/td><td>boolean useDaylightTime()This method queries if this time zone uses daylight saving time.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.TimeZone<\/li><li>java.util.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.SimpleTimeZone&nbsp;class is a concrete subclass of TimeZone that represents a time zone for use with a Gregorian calendar.Following are the important points about SimpleTimeZone \u2212 The class holds an offset from GMT, called raw offset. This class also holds start and end rules for a daylight saving time schedule. Class declaration Following is the [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2076"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2076"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2076\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2077,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2076\/revisions\/2077"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2076"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2076"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2076"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2078,
        "date": "2021-04-12T07:38:32",
        "date_gmt": "2021-04-12T07:38:32",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2078"
        },
        "modified": "2021-04-12T07:38:32",
        "modified_gmt": "2021-04-12T07:38:32",
        "slug": "stack-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/stack-class\/",
        "title": {
            "rendered": "Stack Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.Stack<\/strong>&nbsp;class represents a last-in-first-out (LIFO) stack of objects.<\/p>\n\n\n\n<ul><li>When a stack is first created, it contains no items.<\/li><li>In this class, the last element inserted is accessed first.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.Stack<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class Stack&lt;E&gt;\n   extends Vector&lt;E&gt;\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>Stack()<\/strong>This constructor creates an empty stack.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>boolean empty()This method tests if this stack is empty.<\/td><\/tr><tr><td>2<\/td><td>E peek()This method looks at the object at the top of this stack without removing it from the stack.<\/td><\/tr><tr><td>3<\/td><td>E pop()This method removes the object at the top of this stack and returns that object as the value of this function.<\/td><\/tr><tr><td>4<\/td><td>E push(E item)This method pushes an item onto the top of this stack.<\/td><\/tr><tr><td>5<\/td><td>int search(Object o)This method returns the 1-based position where an object is on this stack.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.Vector<\/li><li>java.util.AbstractList<\/li><li>java.util.Object<\/li><li>java.util.List<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.Stack&nbsp;class represents a last-in-first-out (LIFO) stack of objects. When a stack is first created, it contains no items. In this class, the last element inserted is accessed first. Class declaration Following is the declaration for&nbsp;java.util.Stack&nbsp;class \u2212 Class constructors Sr.No. Constructor &amp; Description 1 Stack()This constructor creates an empty stack. Class methods Sr.No. Method &amp; [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2078"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2078"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2078\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2079,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2078\/revisions\/2079"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2078"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2078"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2078"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2080,
        "date": "2021-04-12T07:39:51",
        "date_gmt": "2021-04-12T07:39:51",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2080"
        },
        "modified": "2021-04-12T07:39:51",
        "modified_gmt": "2021-04-12T07:39:51",
        "slug": "stringtokenizer-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/stringtokenizer-class\/",
        "title": {
            "rendered": "StringTokenizer Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.StringTokenizer<\/strong>&nbsp;class allows an application to break a string into tokens.<\/p>\n\n\n\n<ul><li>This class is a legacy class that is retained for compatibility reasons although its use is discouraged in new code.<\/li><li>Its methods do not distinguish among identifiers, numbers, and quoted strings.<\/li><li>This class methods do not even recognize and skip comments.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.StringTokenizer<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class StringTokenizer\n   extends Object\n   implements Enumeration&lt;Object&gt;\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>StringTokenizer(String str)<\/strong>This constructor a string tokenizer for the specified string.<\/td><\/tr><tr><td>2<\/td><td><strong>StringTokenizer(String str, String delim)<\/strong>This constructor constructs string tokenizer for the specified string.<\/td><\/tr><tr><td>3<\/td><td><strong>StringTokenizer(String str, String delim, boolean returnDelims)<\/strong>This constructor constructs a string tokenizer for the specified string.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>int countTokens()This method calculates the number of times that this tokenizer&#8217;s nextToken method can be called before it generates an exception.<\/td><\/tr><tr><td>2<\/td><td>boolean hasMoreElements()This method returns the same value as the hasMoreTokens method.<\/td><\/tr><tr><td>3<\/td><td>boolean has more tokens()This method tests if there are more tokens available from this tokenizer&#8217;s string.<\/td><\/tr><tr><td>4<\/td><td>Object next element()This method returns the same value as the nextToken method, except that its declared return value is Object rather than String.<\/td><\/tr><tr><td>5<\/td><td>String nextToken()This method returns the next token from this string tokenizer.<\/td><\/tr><tr><td>6<\/td><td>String nextToken(String delim)This method returns the next token in this string tokenizer&#8217;s string.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.Object<\/li><\/ul>\n\n\n\n<p><\/p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.StringTokenizer&nbsp;class allows an application to break a string into tokens. This class is a legacy class that is retained for compatibility reasons although its use is discouraged in new code. Its methods do not distinguish among identifiers, numbers, and quoted strings. This class methods do not even recognize and skip comments. Class declaration Following [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2080"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2080"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2080\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2081,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2080\/revisions\/2081"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2080"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2080"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2080"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2082,
        "date": "2021-04-12T07:41:15",
        "date_gmt": "2021-04-12T07:41:15",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2082"
        },
        "modified": "2021-04-12T07:41:15",
        "modified_gmt": "2021-04-12T07:41:15",
        "slug": "timer-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/timer-class\/",
        "title": {
            "rendered": "Timer Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.Timer<\/strong>&nbsp;class provides facility for threads to schedule tasks for future execution in a background thread.<\/p>\n\n\n\n<ul><li>This class is thread-safe i.e multiple threads can share a single Timer object without the need for external synchronization.<\/li><li>This class schedules tasks for one-time execution, or for repeated execution at regular intervals.<\/li><li>All constructors start a timer thread.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.Timer<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class Timer\n   extends Object\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>Timer()<\/strong>This constructor creates a new timer.<\/td><\/tr><tr><td>2<\/td><td><strong>Timer(boolean isDaemon)<\/strong>This constructor creates a new timer whose associated thread may be specified to run as a daemon.<\/td><\/tr><tr><td>3<\/td><td><strong>Timer(String name)<\/strong>This constructor creates a new timer whose associated thread has the specified name.<\/td><\/tr><tr><td>4<\/td><td><strong>Timer(String name, boolean isDaemon)<\/strong>This constructor creates a new timer whose associated thread has the specified name, and may be specified to run as a daemon.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>void cancel()This method terminates this timer, discarding any currently scheduled tasks.<\/td><\/tr><tr><td>2<\/td><td>int purge()This method removes all canceled tasks from this timer&#8217;s task queue.<\/td><\/tr><tr><td>3<\/td><td>void schedule(TimerTask task, Date time)This method schedules the specified task for execution at the specified time.<\/td><\/tr><tr><td>4<\/td><td>void schedule(TimerTask task, Date firstTime, long period)This method schedules the specified task for repeated fixed-delay execution, beginning at the specified time.<\/td><\/tr><tr><td>5<\/td><td>void schedule(TimerTask task, long delay)This method schedules the specified task for execution after the specified delay.<\/td><\/tr><tr><td>6<\/td><td>void schedule(TimerTask task, long delay, long period)This method schedules the specified task for repeated fixed-delay execution, beginning after the specified delay.<\/td><\/tr><tr><td>7<\/td><td>void scheduleAtFixedRate(TimerTask task, Date firstTime, long period)This method schedules the specified task for repeated fixed-rate execution, beginning at the specified time.<\/td><\/tr><tr><td>8<\/td><td>void scheduleAtFixedRate(TimerTask task, long delay, long period)This method Schedules the specified task for repeated fixed-rate execution, beginning after the specified delay.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.Timer&nbsp;class provides facility for threads to schedule tasks for future execution in a background thread. This class is thread-safe i.e multiple threads can share a single Timer object without the need for external synchronization. This class schedules tasks for one-time execution, or for repeated execution at regular intervals. All constructors start a timer thread. [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2082"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2082"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2082\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2083,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2082\/revisions\/2083"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2082"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2082"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2082"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2084,
        "date": "2021-04-12T07:42:23",
        "date_gmt": "2021-04-12T07:42:23",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2084"
        },
        "modified": "2021-04-12T07:42:23",
        "modified_gmt": "2021-04-12T07:42:23",
        "slug": "timertask-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/timertask-class\/",
        "title": {
            "rendered": "TimerTask Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.TimerTask<\/strong>&nbsp;class represents a task that can be scheduled for one-time or repeated execution by a Timer.<\/p>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.TimerTask<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public abstract class TimerTask\n   extends Object\n   implements Runnable\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>protected TimerTask()<\/strong>This constructor creates a new timer task.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>boolean cancel()This method cancels this timer task.<\/td><\/tr><tr><td>2<\/td><td>abstract void run()This method represents the action to be performed by this timer task.<\/td><\/tr><tr><td>3<\/td><td>long scheduledExecutionTime()This method returns the scheduled execution time of the most recent actual execution of this task.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.Object<\/li><\/ul>\n\n\n\n<p><\/p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.TimerTask&nbsp;class represents a task that can be scheduled for one-time or repeated execution by a Timer. Class declaration Following is the declaration for&nbsp;java.util.TimerTask&nbsp;class \u2212 Class constructors Sr.No. Constructor &amp; Description 1 protected TimerTask()This constructor creates a new timer task. Class methods Sr.No. Method &amp; Description 1 boolean cancel()This method cancels this timer task. 2 [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2084"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2084"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2084\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2085,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2084\/revisions\/2085"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2084"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2084"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2084"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2086,
        "date": "2021-04-12T07:44:18",
        "date_gmt": "2021-04-12T07:44:18",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2086"
        },
        "modified": "2021-04-12T07:44:18",
        "modified_gmt": "2021-04-12T07:44:18",
        "slug": "timezone-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/timezone-class\/",
        "title": {
            "rendered": "TimeZone Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.TimeZone<\/strong>&nbsp;class represents a time zone offset, and also figures out daylight savings.Following are the important points about TimeZone \u2212<\/p>\n\n\n\n<ul><li>It takes into consideration various time zone.<\/li><li>Through the method used under this class a program running in any country, gets a TimeZone object based on that particular country&#8217;s time zone.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.TimeZone<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public abstract class TimeZone\n   extends Object\n   implements Serializable, Cloneable\n<\/code><\/pre>\n\n\n\n<h2>Field<\/h2>\n\n\n\n<p>Following are the fields for&nbsp;<strong>java.util.TimeZone<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>static int LONG<\/strong>&nbsp;\u2212 This is the style specifier for getDisplayName() indicating a long name, such as &#8220;Pacific Standard Time.&#8221;<\/li><li><strong>static int SHORT<\/strong>&nbsp;\u2212 This is the style specifier for getDisplayName() indicating a short name, such as &#8220;Pacific.Standard Time&#8221;.<\/li><\/ul>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>TimeZone()<\/strong>This constructor is the single constructor for invocation by subclass constructors.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>Object clone()This method creates a copy of this timezone<\/td><\/tr><tr><td>2<\/td><td>static String[] getAvailableIDs()This method gets all the available IDs supported.<\/td><\/tr><tr><td>3<\/td><td>static String[] getAvailableIDs(int rawOffset)This method gets the available IDs according to the given time zone offset in milliseconds.<\/td><\/tr><tr><td>4<\/td><td>static TimeZone getDefault()This method gets the default TimeZone for this host.<\/td><\/tr><tr><td>5<\/td><td>String get display name()This method returns a name of this time zone suitable for presentation to the user in the default locale.<\/td><\/tr><tr><td>6<\/td><td>String get display name(boolean daylight, int style)This method returns a name of this time zone suitable for presentation to the user in the default locale.<\/td><\/tr><tr><td>7<\/td><td>String get display name(boolean daylight, int style, Locale locale)This method returns a name of this time zone suitable for presentation to the user in the specified locale.<\/td><\/tr><tr><td>8<\/td><td>String get display name(Locale locale)This method returns a name of this time zone suitable for presentation to the user in the specified locale.<\/td><\/tr><tr><td>9<\/td><td>int gets savings()This method returns the amount of time to be added to local standard time to get local wall clock time.<\/td><\/tr><tr><td>10<\/td><td>String getID()This method gets the ID of this time zone<\/td><\/tr><tr><td>11<\/td><td>abstract int GMT offset(int era, int year, int month, int day, int dayOfWeek, int milliseconds)This method gets the time zone offset, for the current date, modified in case of daylight savings.<\/td><\/tr><tr><td>12<\/td><td>int GMT offset(long date)This method returns the offset of this time zone from UTC at the specified date.<\/td><\/tr><tr><td>13<\/td><td>abstract int getRawOffset()This method returns the amount of time in milliseconds to add to UTC to get standard time in this time zone.<\/td><\/tr><tr><td>14<\/td><td>static TimeZone getTimeZone(String ID)This method gets the TimeZone for the given ID.<\/td><\/tr><tr><td>15<\/td><td>boolean has the same rules(TimeZone other)This method returns true if this zone has the same rule and offset as another zone.<\/td><\/tr><tr><td>16<\/td><td>abstract boolean in daylight time(Date date)This method queries if the given date is in daylight savings time in this time zone.<\/td><\/tr><tr><td>17<\/td><td>static void setDefault(TimeZone zone)This method sets the TimeZone that is returned by the getDefault method.<\/td><\/tr><tr><td>18<\/td><td>void setID(String ID)This method sets the time zone ID<\/td><\/tr><tr><td>19<\/td><td>abstract void setRawOffset(int offset Ellis)This method sets the base time zone offset to GMT.<\/td><\/tr><tr><td>20<\/td><td>abstract boolean use daylight time()This method queries if this time zone uses daylight savings time.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.TimeZone&nbsp;class represents a time zone offset, and also figures out daylight savings.Following are the important points about TimeZone \u2212 It takes into consideration various time zone. Through the method used under this class a program running in any country, gets a TimeZone object based on that particular country&#8217;s time zone. Class declaration Following is [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2086"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2086"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2086\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2087,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2086\/revisions\/2087"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2086"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2086"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2086"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2088,
        "date": "2021-04-12T07:47:50",
        "date_gmt": "2021-04-12T07:47:50",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2088"
        },
        "modified": "2021-04-12T07:47:50",
        "modified_gmt": "2021-04-12T07:47:50",
        "slug": "treemap-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/treemap-class\/",
        "title": {
            "rendered": "TreeMap Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.TreeMap<\/strong>&nbsp;class is the Red-Black tree based implementation of the Map interface.Following are the important points about TreeMap \u2212<\/p>\n\n\n\n<ul><li>The TreeMap class guarantees that the Map will be in ascending key order.<\/li><li>The Map is sorted according to the natural sort method for the key Class, or by the Comparator provided at map creation time, that will depend on which constructor used.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.TreeMap<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class TreeMap&lt;K,V&gt;\n   extends AbstractMap&lt;K,V&gt;\n   implements NavigableMap&lt;K,V&gt;, Cloneable, Serializable\n<\/code><\/pre>\n\n\n\n<h2>Parameters<\/h2>\n\n\n\n<p>Following is the parameter for&nbsp;<strong>java.util.TreeMap<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<ul><li><strong>K<\/strong>&nbsp;\u2212 This is the type of keys maintained by this map.<\/li><li><strong>V<\/strong>&nbsp;\u2212 This is the type of mapped values.<\/li><\/ul>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>TreeMap()<\/strong>This constructor constructs a new, empty tree map, using the natural ordering of its keys.<\/td><\/tr><tr><td>2<\/td><td><strong>TreeMap(Comparator&lt;? super K&gt; comparator)<\/strong>This constructor constructs a new, empty tree map, ordered according to the given comparator.<\/td><\/tr><tr><td>3<\/td><td><strong>TreeMap(Map&lt;? extends K,? extends V&gt; m)<\/strong>This constructor constructs a new tree map containing the same mappings as the given map, ordered according to the natural ordering of its keys.<\/td><\/tr><tr><td>4<\/td><td><strong>TreeMap(SortedMap&lt;K,? extends V&gt; m)<\/strong>This constructor constructs a new tree map containing the same mappings and using the same ordering as the specified sorted map.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>Map.Entry&lt;K, V> ceiling entry(K key)This method returns a key-value mapping associated with the least key greater than or equal to the given key, or null if there is no such key.<\/td><\/tr><tr><td>2<\/td><td>K ceilingKey(K key)This method returns the least key greater than or equal to the given key, or null if there is no such key.<\/td><\/tr><tr><td>3<\/td><td>void clear()This method removes all of the mappings from this map.<\/td><\/tr><tr><td>4<\/td><td>Object clone()This method returns a shallow copy of this TreeMap instance.<\/td><\/tr><tr><td>5<\/td><td>Comparator&lt;? super K> comparator()This method Returns the comparator used to order the keys in this map, or null if this map uses the natural ordering of its keys.<\/td><\/tr><tr><td>6<\/td><td>boolean containsKey(Object key)This method returns true if this map contains a mapping for the specified key.<\/td><\/tr><tr><td>7<\/td><td>boolean containsValue(Object value)This method returns true if this map maps one or more keys to the specified value.<\/td><\/tr><tr><td>8<\/td><td>NavigableSet&lt;K> descendingKeySet()This method returns a reverse order NavigableSet view of the keys contained in this map.<\/td><\/tr><tr><td>9<\/td><td>NavigableMap&lt;K,V> descendingMap()This method returns a reverse order view of the mappings contained in this map.<\/td><\/tr><tr><td>10<\/td><td>Set&lt;Map.Entry&lt;K,V>> entrySet()This method returns a Set view of the mappings contained in this map.<\/td><\/tr><tr><td>11<\/td><td>Map.Entry&lt;K,V> firstEntry()This method returns a key-value mapping associated with the least key in this map, or null if the map is empty.<\/td><\/tr><tr><td>12<\/td><td>K firstKey()This method returns the first (lowest) key currently in this map.<\/td><\/tr><tr><td>13<\/td><td>Map.Entry&lt;K,V> floorEntry(K key)This method returns a key-value mapping associated with the greatest key less than or equal to the given key, or null if there is no such key.<\/td><\/tr><tr><td>14<\/td><td>K floorKey(K key)This method returns the greatest key less than or equal to the given key, or null if there is no such key.<\/td><\/tr><tr><td>15<\/td><td>V get(Object key)This method returns the value to which the specified key is mapped, or null if this map contains no mapping for the key.<\/td><\/tr><tr><td>16<\/td><td>SortedMap&lt;K,V> headMap(K toKey)This method returns a view of the portion of this map whose keys are strictly less than toKey.<\/td><\/tr><tr><td>17<\/td><td>NavigableMap&lt;K, V> heatmap(K toKey, boolean inclusive)This method returns a view of the portion of this map whose keys are less than (or equal to, if inclusive is true) toKey.<\/td><\/tr><tr><td>18<\/td><td>Map.Entry&lt;K, V> higher entry(K key)This method returns the returns a key-value mapping associated with the least key strictly greater than the given key, or null if there is no such key.<\/td><\/tr><tr><td>19<\/td><td>K higher key(K key)This method returns the least key strictly greater than the given key, or null if there is no such key.<\/td><\/tr><tr><td>20<\/td><td>Set&lt;K> keySet()This method returns a Set view of the keys contained in this map.<\/td><\/tr><tr><td>21<\/td><td>Map.Entry&lt;K, V> last entry()This method returns a key-value mapping associated with the greatest key in this map, or null if the map is empty.<\/td><\/tr><tr><td>22<\/td><td>K Laskey()This method returns the last (highest) key currently in this map.<\/td><\/tr><tr><td>23<\/td><td>Map.Entry&lt;K, V> lower entry(K key)This method returns a key-value mapping associated with the greatest key strictly less than the given key, or null if there is no such key.<\/td><\/tr><tr><td>24<\/td><td>K lower key(K key)This method returns the greatest key strictly less than the given key, or null if there is no such key.<\/td><\/tr><tr><td>25<\/td><td>NavigableSet&lt;K> navigableKeySet()This method returns a NavigableSet view of the keys contained in this map.<\/td><\/tr><tr><td>26<\/td><td>Map.Entry&lt;K, V> pollFirstEntry()This method removes and returns a key-value mapping associated with the least key in this map, or null if the map is empty.<\/td><\/tr><tr><td>27<\/td><td>Map.Entry&lt;K, V> pollLastEntry()This method removes and returns a key-value mapping associated with the greatest key in this map, or null if the map is empty.<\/td><\/tr><tr><td>28<\/td><td>V put(K key, V value)This method associates the specified value with the specified key in this map.<\/td><\/tr><tr><td>29<\/td><td>void putAll(Map&lt;? extends K,? extends V> map)This method copies all of the mappings from the specified map to this map.<\/td><\/tr><tr><td>30<\/td><td>V remove(Object key)This method removes the mapping for this key from this TreeMap if present.<\/td><\/tr><tr><td>31<\/td><td>int size()This method returns the number of key-value mappings in this map.<\/td><\/tr><tr><td>32<\/td><td>NavigableMap&lt;K, V> subMap(K from the key, boolean from inclusive, K toKey, boolean inclusive)This method returns a view of the portion of this map whose keys range from key to key<\/td><\/tr><tr><td>33<\/td><td>SortedMap&lt;K, V> subMap(K from the key, K toKey)This method returns a view of the portion of this map whose keys range from fromKey, inclusive, to toKey, exclusive<\/td><\/tr><tr><td>34<\/td><td>SortedMap&lt;K, V> trail map(K from the key)This method returns a view of the portion of this map whose keys are greater than or equal to from.<\/td><\/tr><tr><td>35<\/td><td>NavigableMap&lt;K, V> trail map(K from the key, boolean inclusive)This method returns a view of the portion of this map whose keys are greater than (or equal to, if inclusive is true) from the key.<\/td><\/tr><tr><td>36<\/td><td>Collection&lt;V> values()This method returns a Collection view of the values contained in this map.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.AbstractMap<\/li><li>java.util.Object<\/li><li>java.util.Map<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.TreeMap&nbsp;class is the Red-Black tree based implementation of the Map interface.Following are the important points about TreeMap \u2212 The TreeMap class guarantees that the Map will be in ascending key order. The Map is sorted according to the natural sort method for the key Class, or by the Comparator provided at map creation time, [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2088"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2088"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2088\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2089,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2088\/revisions\/2089"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2088"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2088"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2088"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2090,
        "date": "2021-04-12T07:50:28",
        "date_gmt": "2021-04-12T07:50:28",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2090"
        },
        "modified": "2021-04-12T07:50:28",
        "modified_gmt": "2021-04-12T07:50:28",
        "slug": "treeset-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/treeset-class\/",
        "title": {
            "rendered": "TreeSet Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.TreeSet<\/strong>&nbsp;class implements the&nbsp;<strong>Set<\/strong>&nbsp;interface.Following are the important points about TreeSet \u2212<\/p>\n\n\n\n<ul><li>The TreeSet class guarantees that the Map will be in ascending key order and backed by a TreeMap.<\/li><li>The Map is sorted according to the natural sort method for the key Class, or by the Comparator provided at set creation time, that will depend on which constructor used.<\/li><li>The ordering must be total in order for the Tree to function properly.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.TreeSet<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class TreeSet&lt;E&gt;\n   extends AbstractSet&lt;E&gt;\n   implements NavigableSet&lt;E&gt;, Cloneable, Serializable\n<\/code><\/pre>\n\n\n\n<h2>Parameters<\/h2>\n\n\n\n<p>Following is the parameter for&nbsp;<strong>java.util.TreeSet<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<p><strong>E<\/strong>&nbsp;\u2212 This is the type of elements maintained by this set.<\/p>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>TreeSet()<\/strong>This constructor constructs a new, empty tree set, sorted according to the natural ordering of its elements.<\/td><\/tr><tr><td>2<\/td><td><strong>TreeSet(Collection&lt;? extends E&gt; c)<\/strong>This constructor constructs a new tree set containing the elements in the specified collection, sorted according to the natural ordering of its elements.<\/td><\/tr><tr><td>3<\/td><td><strong>TreeSet(Comparator&lt;? super E&gt; comparator)<\/strong>This constructor constructs a new, empty tree set, sorted according to the specified comparator.<\/td><\/tr><tr><td>4<\/td><td><strong>TreeSet(SortedSet&lt;E&gt; s)<\/strong>This constructor constructs a new tree set containing the same elements and using the same ordering as the specified sorted set.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>boolean add(E e)This method adds the specified element to this set if it is not already present.<\/td><\/tr><tr><td>2<\/td><td>boolean addAll(Collection&lt;? extends E> c)This method adds all of the elements in the specified collection to this set.<\/td><\/tr><tr><td>3<\/td><td>E ceiling(E e)This method returns the least element in this set greater than or equal to the given element, or null if there is no such element.<\/td><\/tr><tr><td>4<\/td><td>void clear()This method removes all of the elements from this set.<\/td><\/tr><tr><td>5<\/td><td>Object clone()This method returns a shallow copy of this TreeSet instance.<\/td><\/tr><tr><td>6<\/td><td>Comparator&lt;? super E> comparator()This method returns the comparator used to order the elements in this set, or null if this set uses the natural ordering of its elements.<\/td><\/tr><tr><td>7<\/td><td>boolean contains(Object o)This method returns true if this set contains the specified element.<\/td><\/tr><tr><td>8<\/td><td>Iterator&lt;E> descendingIterator()This method returns an iterator over the elements in this set in descending order.<\/td><\/tr><tr><td>9<\/td><td>NavigableSet&lt;E> descending set()This method returns a reverse order view of the elements contained in this set.<\/td><\/tr><tr><td>10<\/td><td>E first()This method returns the first (lowest) element currently in this set.<\/td><\/tr><tr><td>11<\/td><td>E floor(E e)This method returns the greatest element in this set less than or equal to the given element, or null if there is no such element.<\/td><\/tr><tr><td>12<\/td><td>SortedSet&lt;E> headSet(E element)This method returns a view of the portion of this set whose elements are strictly less than toElement.<\/td><\/tr><tr><td>13<\/td><td>NavigableSet&lt;E> headSet(E element, boolean inclusive)This method returns a view of the portion of this set whose elements are less than (or equal to, if inclusive is true) toElement.<\/td><\/tr><tr><td>14<\/td><td>E higher(E e)This method returns the least element in this set strictly greater than the given element, or null if there is no such element.<\/td><\/tr><tr><td>15<\/td><td>boolean isEmpty()This method returns true if this set contains no elements.<\/td><\/tr><tr><td>16<\/td><td>Iterator&lt;E> iterator()This method returns an iterator over the elements in this set in ascending order.<\/td><\/tr><tr><td>17<\/td><td>E last()This method returns the last (highest) element currently in this set.<\/td><\/tr><tr><td>18<\/td><td>E lower(E e)This method returns the greatest element in this set strictly less than the given element, or null if there is no such element.<\/td><\/tr><tr><td>19<\/td><td>E pollFirst()This method retrieves and removes the first (lowest) element, or returns null if this set is empty.<\/td><\/tr><tr><td>20<\/td><td>E poll last()This method retrieves and removes the last (highest) element, or returns null if this set is empty.<\/td><\/tr><tr><td>21<\/td><td>boolean remove(Object o)This method removes the specified element from this set if it is present.<\/td><\/tr><tr><td>22<\/td><td>int size()This method returns the number of elements in this set (its cardinality).<\/td><\/tr><tr><td>23<\/td><td>NavigableSet&lt;E> subSet(E fromElement, boolean from inclusive, E element, boolean inclusive)This method returns a view of the portion of this set whose elements range from element to element.<\/td><\/tr><tr><td>24<\/td><td>SortedSet&lt;E> subSet(E fromElement, E element)This method returns a view of the portion of this set whose elements range from the element, inclusive, to toElement, exclusive.<\/td><\/tr><tr><td>25<\/td><td>SortedSet&lt;E> tailSet(E from element)This method returns a view of the portion of this set whose elements are greater than or equal to from element.<\/td><\/tr><tr><td>26<\/td><td>NavigableSet&lt;E> tailSet(E fromElement, boolean inclusive)This method returns a view of the portion of this set whose elements are greater than (or equal to, if inclusive is true) from element.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.AbstractSet<\/li><li>java.util.AbstractCollection<\/li><li>java.util.Object<\/li><li>java.util.Set<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.TreeSet&nbsp;class implements the&nbsp;Set&nbsp;interface.Following are the important points about TreeSet \u2212 The TreeSet class guarantees that the Map will be in ascending key order and backed by a TreeMap. The Map is sorted according to the natural sort method for the key Class, or by the Comparator provided at set creation time, that will depend [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2090"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2090"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2090\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2091,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2090\/revisions\/2091"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2090"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2090"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2090"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2092,
        "date": "2021-04-12T07:51:57",
        "date_gmt": "2021-04-12T07:51:57",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2092"
        },
        "modified": "2021-04-12T07:51:57",
        "modified_gmt": "2021-04-12T07:51:57",
        "slug": "uuid-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/uuid-class\/",
        "title": {
            "rendered": "UUID Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.UUID<\/strong>&nbsp;class represents an immutable&nbsp;<strong>universally unique identifier (UUID)<\/strong>.Following are the important points about UUID \u2212<\/p>\n\n\n\n<ul><li>A UUID represents a 128-bit value.<\/li><li>It is used for for creating random file names, session id in web application, transaction id etc.<\/li><li>There are four different basic types of UUIDs: time-based, DCE security, name-based, and randomly generated UUIDs.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.UUID<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public final class UUID\n   extends Object\n   implements Serializable, Comparable&lt;UUID&gt;\n<\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>UUID(long mostSigBits, long leastSigBits)<\/strong>This constructor constructs a new UUID using the specified data.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>int clock sequence()This method shows the clock sequence value associated with this UUID.<\/td><\/tr><tr><td>2<\/td><td>int compareTo(UUID value)This method compares this UUID with the specified UUID.<\/td><\/tr><tr><td>3<\/td><td>boolean equals(Object obj)This method compares this object to the specified object.<\/td><\/tr><tr><td>4<\/td><td>static UUID fromString(String name)This method creates a UUID from the string standard representation.<\/td><\/tr><tr><td>5<\/td><td>long getLeastSignificantBits()This method returns the least significant 64 bits of this UUID&#8217;s 128-bit value.<\/td><\/tr><tr><td>6<\/td><td>long getMostSignificantBits()This method returns the most significant 64 bits of this UUID&#8217;s 128-bit value.<\/td><\/tr><tr><td>7<\/td><td>int hashCode()This method returns a hash code for this UUID.<\/td><\/tr><tr><td>8<\/td><td>static UUID nameUUIDFromBytes(byte[] name)Static factory to retrieve a type 3(name-based) UUID based on the specified byte array.<\/td><\/tr><tr><td>9<\/td><td>long node()This method returns the node value associated with this UUID.<\/td><\/tr><tr><td>10<\/td><td>static UUID random UUID()Static factory to retrieve a type 4(pseudo-randomly generated) UUID.<\/td><\/tr><tr><td>11<\/td><td>long timestamp()This method returns the timestamp value associated with this UUID.<\/td><\/tr><tr><td>12<\/td><td>String toString()This method returns the String object representing this UUID.<\/td><\/tr><tr><td>13<\/td><td>int variant()This method returns the variant number associated with this UUID.<\/td><\/tr><tr><td>14<\/td><td>int version()This method removes the version number associated with this UUID.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.Object<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.UUID&nbsp;class represents an immutable&nbsp;universally unique identifier (UUID).Following are the important points about UUID \u2212 A UUID represents a 128-bit value. It is used for for creating random file names, session id in web application, transaction id etc. There are four different basic types of UUIDs: time-based, DCE security, name-based, and randomly generated UUIDs. Class [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2092"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2092"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2092\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2093,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2092\/revisions\/2093"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2092"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2092"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2092"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2094,
        "date": "2021-04-12T07:55:59",
        "date_gmt": "2021-04-12T07:55:59",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2094"
        },
        "modified": "2021-04-12T07:55:59",
        "modified_gmt": "2021-04-12T07:55:59",
        "slug": "vector-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/vector-class\/",
        "title": {
            "rendered": "Vector Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.Vector<\/strong>&nbsp;class implements a growable array of objects. Similar to an Array, it contains components that can be accessed using an integer index. Following are the important points about Vector \u2212<\/p>\n\n\n\n<ul><li>The size of a Vector can grow or shrink as needed to accommodate adding and removing items.<\/li><li>Each vector tries to optimize storage management by maintaining a&nbsp;<em>capacity<\/em>&nbsp;and a&nbsp;<em>capacityIncrement<\/em>.<\/li><li>As of the Java 2 platform v1.2, this class was retrofitted to implement the List interface.<\/li><li>Unlike the new collection implementations,&nbsp;<em>Vector<\/em>&nbsp;is synchronized.<\/li><li>This class is a member of the Java Collections Framework.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.Vector<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class Vector&lt;E&gt;\n   extends AbstractList&lt;E&gt;\n   implements List&lt;E&gt;, RandomAccess, Cloneable, Serializable\n<\/code><\/pre>\n\n\n\n<p>Here &lt;E&gt; represents an Element, which could be any class. For example, if you&#8217;re building an array list of Integers then you&#8217;d initialize it as follows \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>ArrayList&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();  <\/code><\/pre>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>Vector()<\/strong>This constructor is used to create an empty vector so that its internal data array has size 10 and its standard capacity increment is zero.<\/td><\/tr><tr><td>2<\/td><td><strong>Vector(Collection&lt;? extends E&gt; c)<\/strong>This constructor is used to create a vector containing the elements of the specified collection, in the order they are returned by the collection&#8217;s iterator.<\/td><\/tr><tr><td>3<\/td><td><strong>Vector(int initialCapacity)<\/strong>This constructor is used to create an empty vector with the specified initial capacity and with its capacity increment equal to zero.<\/td><\/tr><tr><td>4<\/td><td><strong>Vector(int initialCapacity, int capacityIncrement)<\/strong>This constructor is used to create an empty vector with the specified initial capacity and capacity increment.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>boolean add(E e)This method appends the specified element to the end of this Vector.<\/td><\/tr><tr><td>2<\/td><td>void add(int index, E element)This method inserts the specified element at the specified position in this Vector.<\/td><\/tr><tr><td>3<\/td><td>boolean addAll(Collection&lt;? extends E> c)This method appends all of the elements in the specified Collection to the end of this Vector.<\/td><\/tr><tr><td>4<\/td><td>boolean addAll(int index, Collection&lt;? extends E> c)This method inserts all of the elements in the specified Collection into this Vector at the specified position.<\/td><\/tr><tr><td>5<\/td><td>void addElement(E obj)This method adds the specified component to the end of this vector, increasing its size by one.<\/td><\/tr><tr><td>6<\/td><td>int capacity()This method returns the current capacity of this vector.<\/td><\/tr><tr><td>7<\/td><td>void clear()This method removes all of the elements from this vector.<\/td><\/tr><tr><td>8<\/td><td>clone ()This method returns a clone of this vector.<\/td><\/tr><tr><td>9<\/td><td>boolean contains(Object o)This method returns true if this vector contains the specified element.<\/td><\/tr><tr><td>10<\/td><td>boolean contains(Collection&lt;?> c)This method returns true if this Vector contains all of the elements in the specified Collection.<\/td><\/tr><tr><td>11<\/td><td>void copy into(Object[ ] anArray)This method copies the components of this vector into the specified array.<\/td><\/tr><tr><td>12<\/td><td>E element(int index)This method returns the component at the specified index.<\/td><\/tr><tr><td>13<\/td><td>Enumeration&lt;E> elements()This method returns an enumeration of the components of this vector.<\/td><\/tr><tr><td>14<\/td><td>void ensure capacity(int incapacity)This method increases the capacity of this vector, if necessary, to ensure that it can hold at least the number of components specified by the minimum capacity argument.<\/td><\/tr><tr><td>15<\/td><td>boolean equals(Object o)This method compares the specified Object with this Vector for equality.<\/td><\/tr><tr><td>16<\/td><td>E first element()This method returns the first component (the item at index 0) of this vector.<\/td><\/tr><tr><td>17<\/td><td>E get(int index)This method returns the element at the specified position in this Vector.<\/td><\/tr><tr><td>18<\/td><td>int hashCode()This method returns the hash code value for this Vector.<\/td><\/tr><tr><td>19<\/td><td>int indexOf(Object o)This method returns the index of the first occurrence of the specified element in this vector, or -1 if this vector does not contain the element.<\/td><\/tr><tr><td>20<\/td><td>int indexOf(Object o, int index)This method returns the index of the first occurrence of the specified element in this vector, searching forwards from the index, or returns -1 if the element is not found.<\/td><\/tr><tr><td>21<\/td><td>void insert element at(E obj, int index)This method inserts the specified object as a component in this vector at the specified index.<\/td><\/tr><tr><td>22<\/td><td>boolean isEmpty()This method tests if this vector has no components.<\/td><\/tr><tr><td>23<\/td><td>E last element()This method returns the last component of the vector.<\/td><\/tr><tr><td>24<\/td><td>int lastIndexOf(Object o)This method returns the index of the last occurrence of the specified element in this vector, or -1 if this vector does not contain the element.<\/td><\/tr><tr><td>25<\/td><td>int lastIndexOf(Object o, int index)This method returns the index of the last occurrence of the specified element in this vector, searching backward from the index, or returns -1 if the element is not found.<\/td><\/tr><tr><td>26<\/td><td>E remove(int index)This method removes the element at the specified position in this Vector.<\/td><\/tr><tr><td>27<\/td><td>boolean remove(Object o)This method removes the first occurrence of the specified element in this Vector If the Vector does not contain the element, it is unchanged.<\/td><\/tr><tr><td>28<\/td><td>boolean removeAll(Collection&lt;?> c)This method removes from this Vector all of its elements that are contained in the specified Collection.<\/td><\/tr><tr><td>29<\/td><td>void removal elements()This method removes all components from this vector and sets its size to zero.<\/td><\/tr><tr><td>30<\/td><td>boolean remove element(Object obj)This method removes the first occurrence of the argument from this vector.<\/td><\/tr><tr><td>31<\/td><td>void remove elemental(int index)This method deletes the component at the specified index.<\/td><\/tr><tr><td>32<\/td><td>protected void removeRange(int fromIndex, int toIndex)This method removes from this list all of the elements whose index is between fromIndex, inclusive and toIndex, exclusive.<\/td><\/tr><tr><td>33<\/td><td>boolean retainAll(Collection&lt;?> c)This method retains only the elements in this Vector that are contained in the specified Collection.<\/td><\/tr><tr><td>34<\/td><td>E set(int index, E element)This method replaces the element at the specified position in this Vector with the specified element.<\/td><\/tr><tr><td>35<\/td><td>void settlement(E obj, int index)This method sets the component at the specified index of this vector to be the specified object.<\/td><\/tr><tr><td>36<\/td><td>void setSize(int newSize)This method sets the size of this vector.<\/td><\/tr><tr><td>37<\/td><td>int size()This method returns the number of components in this vector.<\/td><\/tr><tr><td>38<\/td><td>List &lt;E> subList(int fromIndex, int toIndex)This method returns a view of the portion of this List between fromIndex, inclusive, and toIndex, exclusive.<\/td><\/tr><tr><td>39<\/td><td>object[ ] toArray()This method returns an array containing all of the elements in this Vector in the correct order.<\/td><\/tr><tr><td>40<\/td><td>&lt;T> T[ ] toArray(T[ ] a)This method returns an array containing all of the elements in this Vector in the correct order; the runtime type of the returned array is that of the specified array.<\/td><\/tr><tr><td>41<\/td><td>String toString()This method returns a string representation of this Vector, containing the String representation of each element.<\/td><\/tr><tr><td>42<\/td><td>void trim to size()This method trims the capacity of this vector to be the vector&#8217;s current size.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.AbstractMap<\/li><li>java.lang.Object<\/li><li>java.util.List<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.Vector&nbsp;class implements a growable array of objects. Similar to an Array, it contains components that can be accessed using an integer index. Following are the important points about Vector \u2212 The size of a Vector can grow or shrink as needed to accommodate adding and removing items. Each vector tries to optimize storage management [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2094"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2094"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2094\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2095,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2094\/revisions\/2095"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2094"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2094"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2094"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2096,
        "date": "2021-04-12T07:57:26",
        "date_gmt": "2021-04-12T07:57:26",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2096"
        },
        "modified": "2021-04-12T07:57:26",
        "modified_gmt": "2021-04-12T07:57:26",
        "slug": "weakhashmap-class",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/weakhashmap-class\/",
        "title": {
            "rendered": "WeakHashMap Class"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.WeakHashMap<\/strong>&nbsp;class is a hashtable-based&nbsp;<strong>Map<\/strong>&nbsp;implementation with weak keys. An entry in a WeakHashMap will automatically be removed by the garbage collector, when its key is no longer in use. Following are the important points about WeakHashMap \u2212<\/p>\n\n\n\n<ul><li>Both null values and the null key are supported.<\/li><li>Like most collection classes, this class is also not synchronized.<\/li><li>This class is intended primarily for use with key objects whose equals methods test for object identity using the&nbsp;<strong>==<\/strong>&nbsp;operator.<\/li><li>Each key object in a WeakHashMap is stored indirectly as the referent of a weak reference.<\/li><li>This class is a member of the Java Collections Framework.<\/li><\/ul>\n\n\n\n<h2>Class declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.WeakHashMap<\/strong>&nbsp;class \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public class WeakHashMap&lt;K,V&gt; \n   extends AbstractMap&lt;K,V&gt;\n   implements Map&lt;K,V&gt;\n<\/code><\/pre>\n\n\n\n<p>Here&nbsp;<strong>&lt;K&gt;<\/strong>&nbsp;is the type of keys maintained by this map and&nbsp;<strong>&lt;V&gt;<\/strong>&nbsp;is the type of mapped values.<\/p>\n\n\n\n<h2>Class constructors<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Constructor &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>WeakHashMap()<\/strong>This constructor is used to create an empty WeakHashMap with the default initial capacity (16) and load factor (0.75).<\/td><\/tr><tr><td>2<\/td><td><strong>WeakHashMap(int initialCapacity)<\/strong>This constructor is used to create an empty WeakHashMap with the given initial capacity and the default load factor (0.75).<\/td><\/tr><tr><td>3<\/td><td><strong>WeakHashMap(int initialCapacity, float loadFactor)<\/strong>This constructor is used to create an empty WeakHashMap with the given initial capacity and the given load factor.<\/td><\/tr><tr><td>4<\/td><td><strong>WeakHashMap(Map&lt;? extends K,? extends V&gt; m)<\/strong>This constructor is used to create a new WeakHashMap with the same mappings as the specified map.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Class methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td>void clear()This method removes all of the mappings from this map.<\/td><\/tr><tr><td>2<\/td><td>boolean containsKey(Object key)This method returns true if this map contains a mapping for the specified key.<\/td><\/tr><tr><td>3<\/td><td>boolean contains a value(Object value)This method returns true if this map maps one or more keys to the specified value.<\/td><\/tr><tr><td>4<\/td><td>Set&lt;Map.Entry>K, V>> entrySet()This method returns a Set view of the mappings contained in this map.<\/td><\/tr><tr><td>5<\/td><td>v get(Object key)This method returns the value to which the specified key is mapped, or null if this map contains no mapping for the key.<\/td><\/tr><tr><td>6<\/td><td>boolean isEmpty()This method returns true if this map contains no key-value mappings.<\/td><\/tr><tr><td>7<\/td><td>Set&lt;K> keySet()This method returns a Set view of the keys contained in this map.<\/td><\/tr><tr><td>8<\/td><td>v put(K key, V value)This method associates the specified value with the specified key in this map.<\/td><\/tr><tr><td>9<\/td><td>void putAll(Map&lt;? extends K,? extends V> m)This method copies all of the mappings from the specified map to this map.<\/td><\/tr><tr><td>10<\/td><td>v remove(Object key)This method removes the mapping for a key from this weak hash map if it is present.<\/td><\/tr><tr><td>11<\/td><td>int size()This method returns the number of key-value mappings in this map.<\/td><\/tr><tr><td>12<\/td><td>Collection&lt;V> values()This method returns a Collection view of the values contained in this map.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>Methods inherited<\/h2>\n\n\n\n<p>This class inherits methods from the following classes \u2212<\/p>\n\n\n\n<ul><li>java.util.AbstractMap<\/li><li>java.lang.Object<\/li><li>java.util.Map<\/li><\/ul>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.WeakHashMap&nbsp;class is a hashtable-based&nbsp;Map&nbsp;implementation with weak keys. An entry in a WeakHashMap will automatically be removed by the garbage collector, when its key is no longer in use. Following are the important points about WeakHashMap \u2212 Both null values and the null key are supported. Like most collection classes, this class is also not [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2096"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2096"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2096\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2097,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2096\/revisions\/2097"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2096"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2096"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2096"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2098,
        "date": "2021-04-12T07:58:36",
        "date_gmt": "2021-04-12T07:58:36",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2098"
        },
        "modified": "2021-04-12T07:58:36",
        "modified_gmt": "2021-04-12T07:58:36",
        "slug": "interfaces",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/interfaces\/",
        "title": {
            "rendered": "Interfaces"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.Interfaces<\/strong>&nbsp;contains the collections framework, legacy collection classes, event model, date and time facilities, internationalization, and miscellaneous utility classes (a string tokenizer, a random-number generator, and a bit array).<\/p>\n\n\n\n<h2>Interface Summary<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Intreface &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>Collection&lt;E&gt;<\/strong>This is the root interface in the collection hierarchy.<\/td><\/tr><tr><td>2<\/td><td><strong>Comparator&lt;T&gt;<\/strong>This is a comparison function, which imposes a total ordering on some collection of objects.<\/td><\/tr><tr><td>3<\/td><td><strong>Deque&lt;E&gt;<\/strong>This is a linear collection that supports element insertion and removal at both ends.<\/td><\/tr><tr><td>4<\/td><td><strong>Enumeration&lt;E&gt;<\/strong>This is an object that implements the Enumeration interface generates a series of elements, one at a time.<\/td><\/tr><tr><td>5<\/td><td><strong>EventListener<\/strong>This is a tagging interface that all event listener interfaces must extend.<\/td><\/tr><tr><td>6<\/td><td><strong>Formattable<\/strong>This is the Formattable interface must be implemented by any class that needs to perform custom formatting using the &#8216;s&#8217; conversion specifier of Formatter.<\/td><\/tr><tr><td>7<\/td><td><strong>Iterator&lt;E&gt;<\/strong>This is an iterator over a collection.<\/td><\/tr><tr><td>8<\/td><td><strong>List&lt;E&gt;<\/strong>This is an ordered collection (also known as a sequence).<\/td><\/tr><tr><td>9<\/td><td><strong>ListIterator&lt;E&gt;<\/strong>This is an iterator for lists that allows the programmer to traverse the list in either direction, modify the list during iteration, and obtain the iterator&#8217;s current position in the list.<\/td><\/tr><tr><td>10<\/td><td><strong>Map&lt;K,V&gt;<\/strong>This is an object that maps keys to values.<\/td><\/tr><tr><td>11<\/td><td><strong>Map.Entry&lt;K,V&gt;<\/strong>This is a map entry (key-value pair).<\/td><\/tr><tr><td>12<\/td><td><strong>NavigableMap&lt;K,V&gt;<\/strong>This is a SortedMap extended with navigation methods returning the closest matches for given search targets.<\/td><\/tr><tr><td>13<\/td><td><strong>NavigableSet&lt;E&gt;<\/strong>This is a SortedSet extended with navigation methods reporting closest matches for given search targets.<\/td><\/tr><tr><td>14<\/td><td><strong>Observer<\/strong>This is a class can implement the Observer interface when it wants to be informed of changes in observable objects.<\/td><\/tr><tr><td>15<\/td><td><strong>Queue&lt;E&gt;<\/strong>This is a collection designed for holding elements prior to processing.<\/td><\/tr><tr><td>16<\/td><td><strong>RandomAccess()<\/strong>This is the Marker interface used by List implementations to indicate that they support fast (generally constant time) random access.<\/td><\/tr><tr><td>17<\/td><td><strong>Set&lt;E&gt;<\/strong>This is a collection that contains no duplicate elements.<\/td><\/tr><tr><td>18<\/td><td><strong>SortedMap&lt;K,V&gt;<\/strong>This is a Map that further provides a total ordering on its keys.<\/td><\/tr><tr><td>19<\/td><td><strong>SortedSet&lt;E&gt;<\/strong>This is a Set that further provides a total ordering on its elements.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.Interfaces&nbsp;contains the collections framework, legacy collection classes, event model, date and time facilities, internationalization, and miscellaneous utility classes (a string tokenizer, a random-number generator, and a bit array). Interface Summary Sr.No. Intreface &amp; Description 1 Collection&lt;E&gt;This is the root interface in the collection hierarchy. 2 Comparator&lt;T&gt;This is a comparison function, which imposes a total [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2098"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2098"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2098\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2099,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2098\/revisions\/2099"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2098"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2098"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2098"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2100,
        "date": "2021-04-12T07:59:27",
        "date_gmt": "2021-04-12T07:59:27",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2100"
        },
        "modified": "2021-04-12T07:59:27",
        "modified_gmt": "2021-04-12T07:59:27",
        "slug": "exceptions",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/exceptions\/",
        "title": {
            "rendered": "Exceptions"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.Exceptions<\/strong>&nbsp;contains the collections framework, legacy collection classes, event model, date and time facilities, internationalization, and miscellaneous utility classes (a string tokenizer, a random-number generator, and a bit array).<\/p>\n\n\n\n<h2>Interface Summary<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Intreface &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>ConcurrentModificationException<\/strong>This exception may be thrown by methods that have detected concurrent modification of an object when such modification is not permissible.<\/td><\/tr><tr><td>2<\/td><td><strong>DuplicateFormatFlagsException<\/strong>This is the Unchecked exception thrown when duplicate flags are provided in the format specifier.<\/td><\/tr><tr><td>3<\/td><td><strong>EmptyStackException<\/strong>This is thrown by methods in the Stack class to indicate that the stack is empty.<\/td><\/tr><tr><td>4<\/td><td><strong>FormatFlagsConversionMismatchException<\/strong>This is the Unchecked exception thrown when a conversion and flag are incompatible.<\/td><\/tr><tr><td>5<\/td><td><strong>FormatterClosedException<\/strong>This is the Unchecked exception thrown when the formatter has been closed.<\/td><\/tr><tr><td>6<\/td><td><strong>IllegalFormatCodePointException<\/strong>This is the Unchecked exception thrown when a character with an invalid Unicode code point as defined by Character.isValidCodePoint(int) is passed to the Formatter.<\/td><\/tr><tr><td>7<\/td><td><strong>IllegalFormatConversionException<\/strong>This is the Unchecked exception thrown when the argument corresponding to the format specifier is of an incompatible type.<\/td><\/tr><tr><td>8<\/td><td><strong>IllegalFormatException<\/strong>This is the Unchecked exception thrown when a format string contains an illegal syntax or a format specifier that is incompatible with the given arguments.<\/td><\/tr><tr><td>9<\/td><td><strong>IllegalFormatFlagsException<\/strong>This is the Unchecked exception thrown when an illegal combination flags is given.<\/td><\/tr><tr><td>10<\/td><td><strong>IllegalFormatPrecisionException<\/strong>This is the Unchecked exception thrown when the precision is a negative value other than -1, the conversion does not support a precision, or the value is otherwise unsupported.<\/td><\/tr><tr><td>11<\/td><td><strong>IllegalFormatWidthException<\/strong>This is the Unchecked exception thrown when the format width is a negative value other than -1 or is otherwise unsupported.<\/td><\/tr><tr><td>12<\/td><td><strong>InputMismatchException<\/strong>This is thrown by a Scanner to indicate that the token retrieved does not match the pattern for the expected type, or that the token is out of range for the expected type.<\/td><\/tr><tr><td>13<\/td><td><strong>InvalidPropertiesFormatException<\/strong>This is thrown to indicate that an operation could not complete because the input did not conform to the appropriate XML document type for a collection of properties, as per the Properties specification.<\/td><\/tr><tr><td>14<\/td><td><strong>MissingFormatArgumentException<\/strong>This is the Unchecked exception thrown when there is a format specifier which does not have a corresponding argument or if an argument index refers to an argument that does not exist.<\/td><\/tr><tr><td>15<\/td><td><strong>MissingFormatWidthException<\/strong>This is the Unchecked exception thrown when the format width is required.<\/td><\/tr><tr><td>16<\/td><td><strong>MissingResourceException<\/strong>This signals that a resource is missing.<\/td><\/tr><tr><td>17<\/td><td><strong>NoSuchElementException<\/strong>This is thrown by the nextElement method of an Enumeration to indicate that there are no more elements in the enumeration.<\/td><\/tr><tr><td>18<\/td><td><strong>TooManyListenersException<\/strong>This is used as part of the Java Event model to annotate and implement a unicast special case of a multicast Event Source.<\/td><\/tr><tr><td>19<\/td><td><strong>UnknownFormatConversionException<\/strong>This is the Unchecked exception thrown when an unknown conversion is given.<\/td><\/tr><tr><td>20<\/td><td><strong>UnknownFormatFlagsException<\/strong>This is the Unchecked exception thrown when an unknown flag is given.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.Exceptions&nbsp;contains the collections framework, legacy collection classes, event model, date and time facilities, internationalization, and miscellaneous utility classes (a string tokenizer, a random-number generator, and a bit array). Interface Summary Sr.No. Intreface &amp; Description 1 ConcurrentModificationExceptionThis exception may be thrown by methods that have detected concurrent modification of an object when such modification is [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2100"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2100"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2100\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2101,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2100\/revisions\/2101"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2100"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2100"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2100"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 2102,
        "date": "2021-04-12T08:00:29",
        "date_gmt": "2021-04-12T08:00:29",
        "guid": {
            "rendered": "https:\/\/java.foobrdigital.com\/?p=2102"
        },
        "modified": "2021-04-12T08:00:29",
        "modified_gmt": "2021-04-12T08:00:29",
        "slug": "formatter-bigdecimallayoutform-enumeration",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/java.foobrdigital.com\/formatter-bigdecimallayoutform-enumeration\/",
        "title": {
            "rendered": "Formatter.BigDecimalLayoutForm Enumeration"
        },
        "content": {
            "rendered": "\n<h2>Introduction<\/h2>\n\n\n\n<p>The&nbsp;<strong>java.util.Formatter.BigDecimalLayoutForm<\/strong>&nbsp;enumeration gives the available styles for formatting very large decimal numbers.<\/p>\n\n\n\n<h2>Enum declaration<\/h2>\n\n\n\n<p>Following is the declaration for&nbsp;<strong>java.util.Formatter.BigDecimalLayoutForm<\/strong>&nbsp;enum \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>public static enum Formatter.BigDecimalLayoutForm\n   extends Enum&lt;Formatter.BigDecimalLayoutForm&gt;\n<\/code><\/pre>\n\n\n\n<h2>Constants<\/h2>\n\n\n\n<p>Following are the constants for&nbsp;<strong>java.util.Formatter.BigDecimalLayoutForm<\/strong>&nbsp;enum \u2212<\/p>\n\n\n\n<ul><li><strong>DECIMAL_FLOAT<\/strong>&nbsp;\u2212 Use normal decimal\/float style for BigDecimals.<\/li><li><strong>SCIENTIFIC<\/strong>&nbsp;\u2212 Use scientific style for BigDecimals.<\/li><\/ul>\n\n\n\n<h2>Enum methods<\/h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Method &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>static Formatter.BigDecimalLayoutForm valueOf(String name)<\/strong>This method returns the enum constant of this type with the specified name.<\/td><\/tr><tr><td>2<\/td><td><strong>static Formatter.BigDecimalLayoutForm[] values()<\/strong>This method returns an array containing the constants of this enum type, in the order they are declared.<\/td><\/tr><\/tbody><\/table><\/figure>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Introduction The&nbsp;java.util.Formatter.BigDecimalLayoutForm&nbsp;enumeration gives the available styles for formatting very large decimal numbers. Enum declaration Following is the declaration for&nbsp;java.util.Formatter.BigDecimalLayoutForm&nbsp;enum \u2212 Constants Following are the constants for&nbsp;java.util.Formatter.BigDecimalLayoutForm&nbsp;enum \u2212 DECIMAL_FLOAT&nbsp;\u2212 Use normal decimal\/float style for BigDecimals. SCIENTIFIC&nbsp;\u2212 Use scientific style for BigDecimals. Enum methods Sr.No. Method &amp; Description 1 static Formatter.BigDecimalLayoutForm valueOf(String name)This method returns the enum [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 0,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            81
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2102"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=2102"
                }
            ],
            "version-history": [
                {
                    "count": 1,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2102\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2103,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/posts\/2102\/revisions\/2103"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=2102"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=2102"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/java.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=2102"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    }
]