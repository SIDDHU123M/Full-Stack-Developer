[
    {
        "id": 732,
        "date": "2020-05-13T06:26:02",
        "date_gmt": "2020-05-13T06:26:02",
        "guid": {
            "rendered": "http:\/\/angular.foobrdigital.com\/?p=732"
        },
        "modified": "2020-12-25T19:03:41",
        "modified_gmt": "2020-12-25T19:03:41",
        "slug": "overview-4",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/overview-4\/",
        "title": {
            "rendered": "Overview"
        },
        "content": {
            "rendered": "\n<p><strong>Google Charts<\/strong>&nbsp;is a pure JavaScript based charting library meant to enhance web applications by adding interactive charting capability. It supports a wide range of charts. Charts are drawn using SVG in standard browsers like Chrome, Firefox, Safari, Internet Explorer(IE). In legacy IE 6, VML is used to draw the graphics.<\/p>\n\n\n\n<h2>Features<\/h2>\n\n\n\n<p>Following are the salient features of Google Charts library.<\/p>\n\n\n\n<ul><li><strong>Compatability<\/strong>\u00a0\u2212 Works seemlessly on all major browsers and mobile platforms like android and iOS.<\/li><li><strong>Multitouch Support<\/strong>\u00a0\u2212 Supports multitouch on touch screen based platforms like android and iOS. Ideal for iPhone\/iPad and android based smart phones\/ tablets.<\/li><li><strong>Free to Use<\/strong>\u00a0\u2212 Open source and is free to use for non-commercial purpose.<\/li><li><strong>Lightweight<\/strong>\u00a0\u2212 loader.js core library, is extremely lightweight library.<\/li><li><strong>Simple Configurations<\/strong>\u00a0\u2212 Uses json to define various configuration of the charts and very easy to learn and use.<\/li><li><strong>Dynamic<\/strong>\u00a0\u2212 Allows to modify chart even after chart generation.<\/li><li><strong>Multiple axes<\/strong>\u00a0\u2212 Not restricted to x, y axis. Supports multiple axis on the charts.<\/li><li><strong>Configurable tooltips<\/strong>\u00a0\u2212 Tooltip comes when a user hover over any point on a charts. google charts provides tooltip inbuilt formatter or callback formatter to control the tooltip programmatically.<\/li><li><strong>DateTime support<\/strong>\u00a0\u2212 Handle date time specially. Provides numerous inbuilt controls over date wise categories.<\/li><li><strong>Print<\/strong>\u00a0\u2212 Print chart using web page.<\/li><li><strong>External data<\/strong>\u00a0\u2212 Supports loading data dynamically from server. Provides control over data using callback functions.<\/li><li><strong>Text Rotation<\/strong>\u00a0\u2212 Supports rotation of labels in any direction.<\/li><\/ul>\n\n\n\n<h2>Supported Chart Types<\/h2>\n\n\n\n<p>Google Charts library provides following types of charts \u2212<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Chart Type &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>Line Charts<\/strong> Used to draw line\/spline based charts.<\/td><\/tr><tr><td>2<\/td><td><strong>Area Charts<\/strong> Used to draw area wise charts.<\/td><\/tr><tr><td>3<\/td><td><strong>Pie Charts<\/strong> Used to draw pie charts.<\/td><\/tr><tr><td>4<\/td><td><strong>Sankey Charts, Scatter Charts, Stepped area charts, Table, Timelines, TreeMap, Trendlines<\/strong>Used to draw scattered charts.<\/td><\/tr><tr><td>5<\/td><td><strong>Bubble Charts<\/strong> Used to draw bubble based charts.<\/td><\/tr><tr><td>6<\/td><td><strong>Dynamic Charts<\/strong> Used to draw dynamic charts where user can modify charts.<\/td><\/tr><tr><td>7<\/td><td><strong>Combinations<\/strong> Used to draw combinations of variety of charts.<\/td><\/tr><tr><td>8<\/td><td><strong>3D Charts<\/strong> Used to draw 3D charts.<\/td><\/tr><tr><td>9<\/td><td><strong>Angular Gauges<\/strong> Used to draw speedometer type charts.<\/td><\/tr><tr><td>10<\/td><td><strong>Heat Maps<\/strong> Used to draw heat maps.<\/td><\/tr><tr><td>11<\/td><td><strong>Tree Maps<\/strong> Used to draw tree maps.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<p>In next chapters, we&#8217;re going to discuss each type of above mentioned charts in details with examples.<\/p>\n\n\n\n<h2>Licence<\/h2>\n\n\n\n<p>Google Charts is open source and is free to use. Follow the link:&nbsp;Terms of Service.<\/p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Google Charts&nbsp;is a pure JavaScript based charting library meant to enhance web applications by adding interactive charting capability. It supports a wide range of charts. Charts are drawn using SVG in standard browsers like Chrome, Firefox, Safari, Internet Explorer(IE). In legacy IE 6, VML is used to draw the graphics. Features Following are the salient [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 1862,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            18,
            85,
            166
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/732"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=732"
                }
            ],
            "version-history": [
                {
                    "count": 3,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/732\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2002,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/732\/revisions\/2002"
                }
            ],
            "wp:featuredmedia": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media\/1862"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=732"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=732"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=732"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 739,
        "date": "2020-05-13T06:34:54",
        "date_gmt": "2020-05-13T06:34:54",
        "guid": {
            "rendered": "http:\/\/angular.foobrdigital.com\/?p=739"
        },
        "modified": "2020-12-25T19:03:41",
        "modified_gmt": "2020-12-25T19:03:41",
        "slug": "environment-setup-4",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/environment-setup-4\/",
        "title": {
            "rendered": "Environment Setup"
        },
        "content": {
            "rendered": "\n<p>In this chapter we will discuss about how to set up Google Charts library to be used in web application development.<\/p>\n\n\n\n<h2>Install Google Charts<\/h2>\n\n\n\n<p>There are two ways to use Google Charts.<\/p>\n\n\n\n<ul><li><strong>Download<\/strong>&nbsp;\u2212 Download it locally from&nbsp;https:\/\/developers.google.com\/chart&nbsp;and use it.<\/li><li><strong>CDN access<\/strong>&nbsp;\u2212 You also have access to a CDN. The CDN will give you access around the world to regional data centers that in this case, Google Chart host&nbsp;<strong>https:\/\/www.gstatic.com\/charts<\/strong>.<\/li><\/ul>\n\n\n\n<h3>Using Downloaded Google Chart<\/h3>\n\n\n\n<p>Include the google charts JavaScript file in the HTML page using following script \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;head>\n   &lt;script src = \"\/googlecharts\/loader.js\">&lt;\/script>\n&lt;\/head><\/code><\/pre>\n\n\n\n<h3>Using CDN<\/h3>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>We are using the CDN versions of the Google Chart library throughout this tutorial.<\/p><\/blockquote>\n\n\n\n<p>Include the Google Chart JavaScript file in the HTML page using following script \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;head>\n   &lt;script src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">&lt;\/script>\n&lt;\/head><\/code><\/pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>In this chapter we will discuss about how to set up Google Charts library to be used in web application development. Install Google Charts There are two ways to use Google Charts. Download&nbsp;\u2212 Download it locally from&nbsp;https:\/\/developers.google.com\/chart&nbsp;and use it. CDN access&nbsp;\u2212 You also have access to a CDN. The CDN will give you access around [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 1861,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            18,
            85,
            166
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/739"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=739"
                }
            ],
            "version-history": [
                {
                    "count": 3,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/739\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2003,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/739\/revisions\/2003"
                }
            ],
            "wp:featuredmedia": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media\/1861"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=739"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=739"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=739"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 740,
        "date": "2020-05-13T06:35:06",
        "date_gmt": "2020-05-13T06:35:06",
        "guid": {
            "rendered": "http:\/\/angular.foobrdigital.com\/?p=740"
        },
        "modified": "2020-12-25T19:03:40",
        "modified_gmt": "2020-12-25T19:03:40",
        "slug": "configuration-syntax",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/configuration-syntax\/",
        "title": {
            "rendered": "Configuration Syntax"
        },
        "content": {
            "rendered": "\n<p>In this chapter we&#8217;ll showcase the configuration required to draw a chart using Google Chart API.<\/p>\n\n\n\n<h2>Step 1: Create HTML Page<\/h2>\n\n\n\n<p>Create an HTML page with the Google Chart libraries.<\/p>\n\n\n\n<p><em><em>googlecharts_configuration.htm<\/em><\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'corechart']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n\n\n\n<p>Here\u00a0<strong>container<\/strong>\u00a0div is used to contain the chart drawn using Google Chart library. Here we are loading the latest version of core charts API using google.charts.load method.<\/p>\n\n\n\n<h2>Step 2: Create configurations<\/h2>\n\n\n\n<p>Google Chart library uses very simple configurations using json syntax.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/ Instantiate and draw the chart.\nvar chart = new google.visualization.PieChart(document.getElementById('container'));\nchart.draw(data, options);<\/code><\/pre>\n\n\n\n<p>Here data represents the json data and options represents the configuration which Google Chart library uses to draw a chart withing container div using draw() method. Now we&#8217;ll configure the various parameter to create the required json string.<\/p>\n\n\n\n<h3>title<\/h3>\n\n\n\n<p>Configure the options of the chart.<\/p>\n\n\n\n<pre class=\"wp-block-preformatted\">\/\/ Set chart options\nvar options = {'title':'Browser market shares at a specific website, 2014',\n   'width':550,\n   'height':400};<\/pre>\n\n\n\n<h3>DataTable<\/h3>\n\n\n\n<p>Configure the data to be displayed on the chart. DataTable is a special table structured collection which contains the data of the chart. Columns of data table represents the legends and rows represents the corresponding data. addColumn() method is used to add a column where first parameter represents the data type and second parameter represents the legend. addRows() method is used to add rows accordingly.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/ Define the chart to be drawn.\nvar data = new google.visualization.DataTable();\ndata.addColumn('string', 'Browser');\ndata.addColumn('number', 'Percentage');\ndata.addRows(&#91;\n   &#91;'Firefox', 45.0],\n   &#91;'IE', 26.8],\n   &#91;'Chrome', 12.8],\n   &#91;'Safari', 8.5],\n   &#91;'Opera', 6.2],\n   &#91;'Others', 0.7]\n]);<\/code><\/pre>\n\n\n\n<h2>Step 3: Draw the chart<\/h2>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/ Instantiate and draw the chart.\nvar chart = new google.visualization.PieChart(document.getElementById('container'));\nchart.draw(data, options);<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p>Following is the complete example \u2212<\/p>\n\n\n\n<p><em>googlecharts_configuration.htm<\/em>Live Demo<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'corechart']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = new google.visualization.DataTable();\n            data.addColumn('string', 'Browser');\n            data.addColumn('number', 'Percentage');\n            data.addRows(&#91;\n               &#91;'Firefox', 45.0],\n               &#91;'IE', 26.8],\n               &#91;'Chrome', 12.8],\n               &#91;'Safari', 8.5],\n               &#91;'Opera', 6.2],\n               &#91;'Others', 0.7]\n            ]);\n               \n            \/\/ Set chart options\n            var options = {'title':'Browser market shares at a specific website, 2014', 'width':550, 'height':400};\n\n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.PieChart(document.getElementById ('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n\n\n\n<p>Following code call drawChart function to draws chart when Google Chart library get loaded completely.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>google.charts.setOnLoadCallback(drawChart);<\/code><\/pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>In this chapter we&#8217;ll showcase the configuration required to draw a chart using Google Chart API. Step 1: Create HTML Page Create an HTML page with the Google Chart libraries. googlecharts_configuration.htm Here\u00a0container\u00a0div is used to contain the chart drawn using Google Chart library. Here we are loading the latest version of core charts API using [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 1868,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            18,
            85,
            166
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/740"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=740"
                }
            ],
            "version-history": [
                {
                    "count": 2,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/740\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2004,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/740\/revisions\/2004"
                }
            ],
            "wp:featuredmedia": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media\/1868"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=740"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=740"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=740"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 741,
        "date": "2020-05-13T06:36:19",
        "date_gmt": "2020-05-13T06:36:19",
        "guid": {
            "rendered": "http:\/\/angular.foobrdigital.com\/?p=741"
        },
        "modified": "2020-12-25T19:03:40",
        "modified_gmt": "2020-12-25T19:03:40",
        "slug": "area-charts",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/area-charts\/",
        "title": {
            "rendered": "Area Charts"
        },
        "content": {
            "rendered": "\n<p>Area charts are used to draw area based charts. In this section we&#8217;re going to discuss following types of area based charts.<\/p>\n\n\n\n<h2>Basic Area<\/h2>\n\n\n\n<p>Following is an example of a basic area chart. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>AreaChart<\/strong>&nbsp;class to show area based chart.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/area chart\nvar chart = new google.visualization.AreaChart(document.getElementById('container'));\n\ufeff<\/code><\/pre>\n\n\n\n<h2>Demo<\/h2>\n\n\n\n<p><em>googlecharts_area_basic.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      \n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'corechart']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = google.visualization.arrayToDataTable(&#91;\n               &#91;'Year', 'Sales', 'Expenses'],\n               &#91;'2013',  1000,      400],\n               &#91;'2014',  1170,      460],\n               &#91;'2015',  660,       1120],\n               &#91;'2016',  1030,      540]\n            ]);\n\n            var options = {title: 'Company Performance',\n               hAxis: {title: 'Year', titleTextStyle: {color: '#333'}},\n               vAxis: {minValue: 0}\n            };  \n\n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.AreaChart(document.getElementById ('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n\n\n\n<h2>Stacked Area<\/h2>\n\n\n\n<p>Following is an example of a stacked area chart. <\/p>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>isStacked<\/strong>&nbsp;configuration to show stacked chart.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/ Set chart options\nvar options = {\n   isStacked: true\n};<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_area_stacked.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'corechart']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = google.visualization.arrayToDataTable(&#91;\n               &#91;'Year', 'Asia', 'Europe'],\n               &#91;'2013',  1000,      400],\n               &#91;'2014',  1170,      460],\n               &#91;'2015',  1300,       480],\n               &#91;'2016',  1530,      540]\n            ]);\n\n            var options = {title: 'Population (in millions)',\n               hAxis: {title: 'Year', titleTextStyle: {color: '#333'}},\n               vAxis: {minValue: 0},\n               isStacked: true\n            };  \n\n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.AreaChart(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Area charts are used to draw area based charts. In this section we&#8217;re going to discuss following types of area based charts. Basic Area Following is an example of a basic area chart. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example. We&#8217;ve used&nbsp;AreaChart&nbsp;class [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 1808,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            18,
            85,
            166
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/741"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=741"
                }
            ],
            "version-history": [
                {
                    "count": 4,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/741\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 959,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/741\/revisions\/959"
                }
            ],
            "wp:featuredmedia": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media\/1808"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=741"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=741"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=741"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 742,
        "date": "2020-05-13T06:37:51",
        "date_gmt": "2020-05-13T06:37:51",
        "guid": {
            "rendered": "http:\/\/angular.foobrdigital.com\/?p=742"
        },
        "modified": "2020-12-25T19:03:40",
        "modified_gmt": "2020-12-25T19:03:40",
        "slug": "bar-charts",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/bar-charts\/",
        "title": {
            "rendered": "Bar Charts"
        },
        "content": {
            "rendered": "\n<p>Bar charts are used to draw bar based charts. In this section we&#8217;re going to discuss following types of bar based charts.<\/p>\n\n\n\n<h2>Basic Bar<\/h2>\n\n\n\n<p>Following is an example of a basic bar chart. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So let&#8217;s see the complete example.<\/p>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>BarChart<\/strong>&nbsp;class to show area based chart.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/bar chart\nvar chart = new google.visualization.BarChart(document.getElementById('container'));<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_bar_basic.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'corechart']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = google.visualization.arrayToDataTable(&#91;\n               &#91;'Year', 'Asia'],\n               &#91;'2012',  900],\n               &#91;'2013',  1000],\n               &#91;'2014',  1170],\n               &#91;'2015',  1250],\n               &#91;'2016',  1530]\n            ]);\n\n            var options = {title: 'Population (in millions)'}; \n\n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.BarChart(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n\n\n\n<h2>Grouped bar&nbsp;<\/h2>\n\n\n\n<p>Following is an example of a grouped bar chart. <\/p>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_bar_grouped.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'corechart']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = google.visualization.arrayToDataTable(&#91;\n               &#91;'Year', 'Asia', 'Europe'],\n               &#91;'2012',  900,      390],\n               &#91;'2013',  1000,      400],\n               &#91;'2014',  1170,      440],\n               &#91;'2015',  1250,       480],\n               &#91;'2016',  1530,      540]\n            ]);\n\n            var options = {title: 'Population (in millions)'};  \n\n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.BarChart(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Bar charts are used to draw bar based charts. In this section we&#8217;re going to discuss following types of bar based charts. Basic Bar Following is an example of a basic bar chart. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So let&#8217;s see the complete example. We&#8217;ve used&nbsp;BarChart&nbsp;class [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 1809,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            18,
            85,
            166
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/742"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=742"
                }
            ],
            "version-history": [
                {
                    "count": 4,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/742\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 956,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/742\/revisions\/956"
                }
            ],
            "wp:featuredmedia": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media\/1809"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=742"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=742"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=742"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 743,
        "date": "2020-05-13T06:38:43",
        "date_gmt": "2020-05-13T06:38:43",
        "guid": {
            "rendered": "http:\/\/angular.foobrdigital.com\/?p=743"
        },
        "modified": "2020-12-25T19:03:40",
        "modified_gmt": "2020-12-25T19:03:40",
        "slug": "bubble-charts",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/bubble-charts\/",
        "title": {
            "rendered": "Bubble Charts"
        },
        "content": {
            "rendered": "\n<p>Bubble charts are used to draw bubble based charts. In this section we&#8217;re going to discuss following types of bubble based charts.<\/p>\n\n\n\n<h2>Basic Bubble<\/h2>\n\n\n\n<p>Following is an example of a basic bubble chart. A bubble chart is used to visualize a data set having two to four dimensions. The first two dimensions are visualized as coordinates, the third as color and the fourth as size. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>BubbleChart<\/strong>&nbsp;class to show bubble based chart.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/bubble chart\nvar chart = new google.visualization.BubbleChart(document.getElementById('container'));<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_bubble_basic.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'corechart']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = new google.visualization.DataTable();\n            data.addColumn('string', 'Id');\n            data.addColumn('number', 'Age');\n            data.addColumn('number', 'Weight');\n            data.addRows(&#91;\n               &#91; '', 8,      12],\n               &#91; '', 4,      5.5],\n               &#91; '', 11,     14],\n               &#91; '', 4,      5],\n               &#91; '', 3,      3.5],\n               &#91; '', 6.5,    7]\n            ]);\n               \n            \/\/ Set chart options\n            var options = {'title':'Age vs Weight', 'width':550, 'height':400};\n\n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.BubbleChart(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n\n\n\n<h2>Bubble Chart with labels<\/h2>\n\n\n\n<p>Following is an example of a bubble chart with data labels. A bubble chart is used to visualize a data set having two to four dimensions. The first two dimensions are visualized as coordinates, the third as color and the fourth as size. <\/p>\n\n\n\n<h2>Configurations<\/h2>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>BubbleChart<\/strong>&nbsp;class to show bubble based chart.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/area chart\nvar chart = new google.visualization.BubbleChart(document.getElementById('container'));\n\ufeff<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_bubble_labels.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'corechart']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = new google.visualization.DataTable();\n            data.addColumn('string', 'Id');\n            data.addColumn('number', 'Age');\n            data.addColumn('number', 'Weight');\n            data.addRows(&#91;\n               &#91; 'Robert', 8,      12],\n               &#91; 'Mohan', 4,      5.5],\n               &#91; 'Ramesh', 11,     14],\n               &#91; 'Julie', 4,      5],\n               &#91; 'Sohan', 3,      3.5],\n               &#91; 'Karim', 6.5,    7]\n            ]);\n               \n            \/\/ Set chart options\n            var options = {'title':'Age vs Weight', 'width':550, 'height':400};\n\n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.BubbleChart(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Bubble charts are used to draw bubble based charts. In this section we&#8217;re going to discuss following types of bubble based charts. Basic Bubble Following is an example of a basic bubble chart. A bubble chart is used to visualize a data set having two to four dimensions. The first two dimensions are visualized as [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 1810,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            18,
            85,
            166
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/743"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=743"
                }
            ],
            "version-history": [
                {
                    "count": 5,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/743\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1828,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/743\/revisions\/1828"
                }
            ],
            "wp:featuredmedia": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media\/1810"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=743"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=743"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=743"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 744,
        "date": "2020-05-13T06:39:29",
        "date_gmt": "2020-05-13T06:39:29",
        "guid": {
            "rendered": "http:\/\/angular.foobrdigital.com\/?p=744"
        },
        "modified": "2020-12-25T19:03:40",
        "modified_gmt": "2020-12-25T19:03:40",
        "slug": "calendar-charts",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/calendar-charts\/",
        "title": {
            "rendered": "Calendar Charts"
        },
        "content": {
            "rendered": "\n<p>Calendar charts are used to draw activities over the course of long span of time like months or years. In this section we&#8217;re going to discuss following types of calendar based charts.<\/p>\n\n\n\n<h2>Basic Calendar<\/h2>\n\n\n\n<p>Following is an example of a basic calendar chart. A calendar chart is used to visualize a data over period of time. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>Calendar<\/strong>&nbsp;class to show calendar based chart.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/Calendar chart\nvar chart = new google.visualization.Calendar(document.getElementById('container'));\n\ufeff<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_calendar_basic.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'corechart','calendar']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = new google.visualization.DataTable();\n            data.addColumn({ type: 'date', id: 'Date' });\n            data.addColumn({ type: 'number', id: 'Students' });\n            data.addRows(&#91;\n               &#91; new Date(2012, 3, 13), 50 ],\n               &#91; new Date(2012, 3, 14), 50 ],\n               &#91; new Date(2012, 3, 15), 49 ],\n               &#91; new Date(2012, 3, 16), 48 ],\n               &#91; new Date(2012, 3, 17), 50 ],\n               \n               &#91; new Date(2012, 4, 1), 50 ],\n               &#91; new Date(2012, 4, 2), 50 ],\n               &#91; new Date(2012, 4, 3), 49 ],\n               &#91; new Date(2012, 4, 4), 48 ],\n               &#91; new Date(2012, 4, 5), 50 ],\n               \n               &#91; new Date(2012, 5, 4), 40 ],\n               &#91; new Date(2012, 5, 5), 50 ],\n               &#91; new Date(2012, 5, 10), 48 ],\n               &#91; new Date(2012, 5, 11), 50 ],\n               &#91; new Date(2012, 5, 12), 42 ],\n               &#91; new Date(2012, 5, 20), 45 ],\n               &#91; new Date(2012, 5, 21), 46 ],\n               &#91; new Date(2012, 5, 29), 45 ],\n               \n               &#91; new Date(2013, 3, 13), 40 ],\n               &#91; new Date(2013, 3, 14), 40 ],\n               &#91; new Date(2013, 3, 15), 39 ],\n               &#91; new Date(2013, 3, 16), 38 ],\n               &#91; new Date(2013, 3, 17), 40 ],\n               \n               &#91; new Date(2013, 4, 1), 40 ],\n               &#91; new Date(2013, 4, 2), 40 ],\n               &#91; new Date(2013, 4, 3), 49 ],\n               &#91; new Date(2013, 4, 4), 48 ],\n               &#91; new Date(2013, 4, 5), 40 ],\n               \n               &#91; new Date(2013, 5, 4), 40 ],\n               &#91; new Date(2013, 5, 5), 50 ],\n               &#91; new Date(2013, 5, 12), 48 ],\n               &#91; new Date(2013, 5, 13), 40 ],\n               &#91; new Date(2013, 5, 19), 32 ],\n               &#91; new Date(2013, 5, 23), 45 ],\n               &#91; new Date(2013, 5, 24), 36 ],\n               &#91; new Date(2013, 5, 30), 45 ]\n            ]);\n\n               \n            \/\/ Set chart options\n            var options = {'title':'Attendence', 'width':550, 'height':400};\n\n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.Calendar(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n\n\n\n<h2>&nbsp;Customized Calendar<\/h2>\n\n\n\n<p>Following is an example of a customized calendar chart. A calendar chart is used to visualize a data over period of time. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>calendar<\/strong>&nbsp;configuration to customize the calendar.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/ Set chart options\nvar options = {\n   calendar: {\n      yearLabel: {\n         fontName: 'Times-Roman',\n         fontSize: 32,\n         color: '#1A8763',\n         bold: true,\n         italic: true\n      },\n      \n      monthOutlineColor: {\n         stroke: '#981b48',\n         strokeOpacity: 0.8,\n         strokeWidth: 2\n      },\n      \n      unusedMonthOutlineColor: {\n         stroke: '#bc5679',\n         strokeOpacity: 0.8,\n         strokeWidth: 1\n      }\t\t \n   }\n};<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_calendar_customized.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'corechart','calendar']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = new google.visualization.DataTable();\n            data.addColumn({ type: 'date', id: 'Date' });\n            data.addColumn({ type: 'number', id: 'Students' });\n            data.addRows(&#91;\n               &#91; new Date(2012, 3, 13), 50 ],\n               &#91; new Date(2012, 3, 14), 50 ],\n               &#91; new Date(2012, 3, 15), 49 ],\n               &#91; new Date(2012, 3, 16), 48 ],\n               &#91; new Date(2012, 3, 17), 50 ],\n            \n               &#91; new Date(2012, 4, 1), 50 ],\n               &#91; new Date(2012, 4, 2), 50 ],\n               &#91; new Date(2012, 4, 3), 49 ],\n               &#91; new Date(2012, 4, 4), 48 ],\n               &#91; new Date(2012, 4, 5), 50 ], \n            \n               &#91; new Date(2012, 5, 4), 40 ],\n               &#91; new Date(2012, 5, 5), 50 ],\n               &#91; new Date(2012, 5, 10), 48 ],\n               &#91; new Date(2012, 5, 11), 50 ],\n               &#91; new Date(2012, 5, 12), 42 ],\n               &#91; new Date(2012, 5, 20), 45 ],\n               &#91; new Date(2012, 5, 21), 46 ],\n               &#91; new Date(2012, 5, 29), 45 ],\n            \n               &#91; new Date(2013, 3, 13), 40 ],\n               &#91; new Date(2013, 3, 14), 40 ],\n               &#91; new Date(2013, 3, 15), 39 ],\n               &#91; new Date(2013, 3, 16), 38 ],\n               &#91; new Date(2013, 3, 17), 40 ], \n            \n               &#91; new Date(2013, 4, 1), 40 ],\n               &#91; new Date(2013, 4, 2), 40 ],\n               &#91; new Date(2013, 4, 3), 49 ],\n               &#91; new Date(2013, 4, 4), 48 ],\n               &#91; new Date(2013, 4, 5), 40 ],\n            \n               &#91; new Date(2013, 5, 4), 40 ],\n               &#91; new Date(2013, 5, 5), 50 ],\n               &#91; new Date(2013, 5, 12), 48 ],\n               &#91; new Date(2013, 5, 13), 40 ],\n               &#91; new Date(2013, 5, 19), 32 ],\n               &#91; new Date(2013, 5, 23), 45 ],\n               &#91; new Date(2013, 5, 24), 36 ],\n               &#91; new Date(2013, 5, 30), 45 ]\n            ]);\n\n            \n            \/\/ Set chart options\n            var options = {\n               'title':'Attendence',\n               'width':550,\n               'height':400,\n               calendar: {\n               \n                  yearLabel: {\n                     fontName: 'Times-Roman',\n                     fontSize: 32,\n                     color: '#1A8763',\n                     bold: true,\n                     italic: true\n                  },\n               \n                  monthOutlineColor: {\n                     stroke: '#981b48',\n                     strokeOpacity: 0.8,\n                     strokeWidth: 2\n                  },\n               \n                  unusedMonthOutlineColor: {\n                     stroke: '#bc5679',\n                     strokeOpacity: 0.8,\n                     strokeWidth: 1\n                  }\t\t \n               }\n            };\n\n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.Calendar(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Calendar charts are used to draw activities over the course of long span of time like months or years. In this section we&#8217;re going to discuss following types of calendar based charts. Basic Calendar Following is an example of a basic calendar chart. A calendar chart is used to visualize a data over period of [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 1811,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            18,
            85,
            166
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/744"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=744"
                }
            ],
            "version-history": [
                {
                    "count": 3,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/744\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1856,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/744\/revisions\/1856"
                }
            ],
            "wp:featuredmedia": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media\/1811"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=744"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=744"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=744"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 746,
        "date": "2020-05-13T06:40:23",
        "date_gmt": "2020-05-13T06:40:23",
        "guid": {
            "rendered": "http:\/\/angular.foobrdigital.com\/?p=746"
        },
        "modified": "2020-12-25T19:03:40",
        "modified_gmt": "2020-12-25T19:03:40",
        "slug": "candlestick-charts",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/candlestick-charts\/",
        "title": {
            "rendered": "Candlestick Charts"
        },
        "content": {
            "rendered": "\n<p>Candlestick charts are used to show opening and closing value over a value variance and are normally used to represent stocks. In this section we&#8217;re going to discuss following types of candlestick based charts.<\/p>\n\n\n\n<h2>Basic Candlestick<\/h2>\n\n\n\n<p>Following is an example of a basic candlestick chart. A candlestick chart is generally used to show an opening and closing value which are overlaid on top of a total variance. Candlestick charts are often used to show stocks value behavior. In this chart, filled boxes are drawn for items where the opening value is less than the closing value (a gain) and , and hollow boxes are drawn where the opening value of item is more than the closing value (a loss). We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>CandlestickChart<\/strong>&nbsp;class to show candlestick based chart.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/candlestick chart\nvar chart = new google.visualization.CandlestickChart\n(document.getElementById('container'));<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_candlestick_basic.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'corechart']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = google.visualization.arrayToDataTable(&#91;\n               &#91;'Mon', 20, 28, 38, 45],\n               &#91;'Tue', 31, 38, 55, 66],\n               &#91;'Wed', 50, 55, 77, 80],\n               &#91;'Thu', 77, 77, 66, 50],\n               &#91;'Fri', 68, 66, 22, 15]\n               \/\/ Treat first row as data as well.\n            ], true);\n              \n            \/\/ Set chart options\n            var options = {legend: 'none'};\n\n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.CandlestickChart(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n\n\n\n<h2>Customized Candlestick<\/h2>\n\n\n\n<p>Following is an example of a customized candlestick chart. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>candlestick<\/strong>&nbsp;configuration to customize the calendar.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/ Set chart options\nvar options = {\n   legend: 'none',\n   bar: { groupWidth: '100%' },     \/\/ Remove space between bars.\n   candlestick: {\n      fallingColor: { strokeWidth: 0, fill: '#a52714' }, \/\/ red\n      risingColor: { strokeWidth: 0, fill: '#0f9d58' }   \/\/ green\n   }\n};<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_candlestick_customized.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'corechart']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = google.visualization.arrayToDataTable(&#91;\n               &#91;'Mon', 20, 28, 38, 45],\n               &#91;'Tue', 31, 38, 55, 66],\n               &#91;'Wed', 50, 55, 77, 80],\n               &#91;'Thu', 77, 77, 66, 50],\n               &#91;'Fri', 68, 66, 22, 15]\n               \/\/ Treat first row as data as well.\n            ], true);\n              \n            \/\/ Set chart options\n            var options = {\n               legend: 'none',\n               bar: { groupWidth: '100%' },   \/\/ Remove space between bars.\n               candlestick: {\n                  fallingColor: { strokeWidth: 0, fill: '#a52714' }, \/\/ red\n                  risingColor: { strokeWidth: 0, fill: '#0f9d58' }   \/\/ green\n               }\n            };\n\n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.CandlestickChart(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Candlestick charts are used to show opening and closing value over a value variance and are normally used to represent stocks. In this section we&#8217;re going to discuss following types of candlestick based charts. Basic Candlestick Following is an example of a basic candlestick chart. A candlestick chart is generally used to show an opening [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 1857,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            18,
            85,
            166
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/746"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=746"
                }
            ],
            "version-history": [
                {
                    "count": 3,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/746\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1863,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/746\/revisions\/1863"
                }
            ],
            "wp:featuredmedia": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media\/1857"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=746"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=746"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=746"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 745,
        "date": "2020-05-13T06:41:24",
        "date_gmt": "2020-05-13T06:41:24",
        "guid": {
            "rendered": "http:\/\/angular.foobrdigital.com\/?p=745"
        },
        "modified": "2020-12-25T19:03:39",
        "modified_gmt": "2020-12-25T19:03:39",
        "slug": "column-charts",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/column-charts\/",
        "title": {
            "rendered": "Column Charts"
        },
        "content": {
            "rendered": "\n<p>Column charts are used to draw column based charts. In this section we&#8217;re going to discuss following types of column based charts.<\/p>\n\n\n\n<h2>Basic Column<\/h2>\n\n\n\n<p>Following is an example of a basic column chart. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>BarChart<\/strong>&nbsp;class to show area based chart.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/column chart\nvar chart = new google.visualization.ColumnChart(document.getElementById('container'));<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_column_basic.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'corechart']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = google.visualization.arrayToDataTable(&#91;\n               &#91;'Year', 'Asia'],\n               &#91;'2012',  900],\n               &#91;'2013',  1000],\n               &#91;'2014',  1170],\n               &#91;'2015',  1250],\n               &#91;'2016',  1530]\n            ]);\n\n            var options = {title: 'Population (in millions)'}; \n\n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.ColumnChart(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n\n\n\n<h2>&nbsp;Stacked Column<\/h2>\n\n\n\n<p>Following is an example of a stacked column chart. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>isStacked<\/strong>&nbsp;configuration to show stacked chart.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/ Set chart options\nvar options = {\n   isStacked: true\n};<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_column_stacked.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'corechart']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = google.visualization.arrayToDataTable(&#91;\n               &#91;'Year', 'Asia', 'Europe'],\n               &#91;'2012',  900,      390],\n               &#91;'2013',  1000,      400],\n               &#91;'2014',  1170,      440],\n               &#91;'2015',  1250,       480],\n               &#91;'2016',  1530,      540]\n            ]);\n\n            var options = {title: 'Population (in millions)', isStacked:true};  \n\n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.ColumnChart(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Column charts are used to draw column based charts. In this section we&#8217;re going to discuss following types of column based charts. Basic Column Following is an example of a basic column chart. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example. We&#8217;ve used&nbsp;BarChart&nbsp;class [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 1813,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            18,
            85,
            166
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/745"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=745"
                }
            ],
            "version-history": [
                {
                    "count": 3,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/745\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1833,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/745\/revisions\/1833"
                }
            ],
            "wp:featuredmedia": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media\/1813"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=745"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=745"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=745"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 747,
        "date": "2020-05-13T06:45:00",
        "date_gmt": "2020-05-13T06:45:00",
        "guid": {
            "rendered": "http:\/\/angular.foobrdigital.com\/?p=747"
        },
        "modified": "2020-12-25T19:03:39",
        "modified_gmt": "2020-12-25T19:03:39",
        "slug": "combination-chart",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/combination-chart\/",
        "title": {
            "rendered": "Combination Chart"
        },
        "content": {
            "rendered": "\n<p>Combination chart helps in rendering each series as a different marker type from the following list: line, area, bars, candlesticks, and stepped area. To assign a default marker type for series, use the seriesType property. Series property is to be used to specify properties of each series individually. We&#8217;ve already seen the configuration used to draw this chart in\u00a0Google Charts Configuration Syntax\u00a0chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>ComboChart<\/strong>&nbsp;class to show combination based chart.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/combination chart\nvar chart = new google.visualization.ComboChart(document.getElementById('container'));<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_combination_chart.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'corechart']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = google.visualization.arrayToDataTable(&#91;\n               &#91;'Fruit', 'Jane', 'John', 'Average'],\n               &#91;'Apples', 3, 2, 2.5],\n               &#91;'Oranges', 2, 3, 2.5],\n               &#91;'Pears', 1, 5, 3],\n               &#91;'Bananas', 3, 9, 6],\n               &#91;'Plums', 4, 2, 3]      \n            ]);\n              \n            \/\/ Set chart options\n            var options = {\n               title : 'Fruits distribution',\n               vAxis: {title: 'Fruits'},\n               hAxis: {title: 'Person'},\n               seriesType: 'bars',\n               series: {2: {type: 'line'}}\n            };\n\n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.ComboChart(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Combination chart helps in rendering each series as a different marker type from the following list: line, area, bars, candlesticks, and stepped area. To assign a default marker type for series, use the seriesType property. Series property is to be used to specify properties of each series individually. We&#8217;ve already seen the configuration used to [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 1814,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            18,
            85,
            166
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/747"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=747"
                }
            ],
            "version-history": [
                {
                    "count": 4,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/747\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1998,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/747\/revisions\/1998"
                }
            ],
            "wp:featuredmedia": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media\/1814"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=747"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=747"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=747"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 774,
        "date": "2020-05-13T06:46:21",
        "date_gmt": "2020-05-13T06:46:21",
        "guid": {
            "rendered": "http:\/\/angular.foobrdigital.com\/?p=774"
        },
        "modified": "2020-12-25T19:03:39",
        "modified_gmt": "2020-12-25T19:03:39",
        "slug": "histogram-charts",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/histogram-charts\/",
        "title": {
            "rendered": "Histogram Charts"
        },
        "content": {
            "rendered": "\n<p>A histogram is a chart that groups numeric data into buckets, displaying the buckets as segmented columns. They&#8217;re used to depict the distribution of a dataset as how often values fall into ranges. Google Charts automatically chooses the number of buckets for you. All buckets are equal width and have a height proportional to the number of data points in the bucket. Histograms are similar to column charts in other aspects. In this section we&#8217;re going to discuss following types of histogram based charts.<\/p>\n\n\n\n<h2>Basic Histogram<\/h2>\n\n\n\n<p>Following is an example of a basic histogram chart. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>Histogram<\/strong>&nbsp;class to show histogram based chart.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/Histogram chart\nvar chart = new google.visualization.Histogram(document.getElementById('container'));<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_histogram_basic.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'corechart']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = google.visualization.arrayToDataTable(&#91;\n               &#91;'Student Roll No', 'height'],\n               &#91;'1', 80],&#91;'2', 55],&#91;'3', 68],&#91;'4', 80],&#91;'5', 54],\n               &#91;'6', 70],&#91;'7', 85],&#91;'8', 78],&#91;'9', 70],&#91;'10', 58],\n               &#91;'11', 90],&#91;'12', 65],&#91;'13', 88],&#91;'14', 82],&#91;'15', 65],\n               &#91;'16', 86],&#91;'17', 45],&#91;'18', 62],&#91;'19', 84],&#91;'20', 75],\n               &#91;'21', 82],&#91;'22', 75],&#91;'23', 58],&#91;'24', 70],&#91;'25', 85]\t\t  \n            ]);\n              \n            \/\/ Set chart options\n            var options = {\n               title: 'Students height, in cm',\n               legend: { position: 'none' },\n            };\t\t\t\t\n\n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.Histogram(document.getElementById\n            ('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n\n\n\n<h2>Histogram Chart Colors<\/h2>\n\n\n\n<p>Following is an example of a histogram chart with custom color. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>color<\/strong>&nbsp;configuration to change default color of histogram chart.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/ Set chart options\nvar options = {colors: &#91;'green']};<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_histogram_color.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'corechart']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n             var data = google.visualization.arrayToDataTable(&#91;\n               &#91;'Student Roll No', 'height'],\n               &#91;'1', 80],&#91;'2', 55],&#91;'3', 68],&#91;'4', 80],&#91;'5', 54],\n               &#91;'6', 70],&#91;'7', 85],&#91;'8', 78],&#91;'9', 70],&#91;'10', 58],\n               &#91;'11', 90],&#91;'12', 65],&#91;'13', 88],&#91;'14', 82],&#91;'15', 65],\n               &#91;'16', 86],&#91;'17', 45],&#91;'18', 62],&#91;'19', 84],&#91;'20', 75],\n               &#91;'21', 82],&#91;'22', 75],&#91;'23', 58],&#91;'24', 70],&#91;'25', 85]\t\t  \n            ]);\n              \n            \/\/ Set chart options\n            var options = {\n               title: 'Students height, in cm',\n               legend: { position: 'none' },\n               colors: &#91;'green']\n            };\t\t\t\t\n\n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.Histogram(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>A histogram is a chart that groups numeric data into buckets, displaying the buckets as segmented columns. They&#8217;re used to depict the distribution of a dataset as how often values fall into ranges. Google Charts automatically chooses the number of buckets for you. All buckets are equal width and have a height proportional to the [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 1858,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            18,
            85,
            166
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/774"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=774"
                }
            ],
            "version-history": [
                {
                    "count": 3,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/774\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1864,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/774\/revisions\/1864"
                }
            ],
            "wp:featuredmedia": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media\/1858"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=774"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=774"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=774"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 775,
        "date": "2020-05-13T06:48:32",
        "date_gmt": "2020-05-13T06:48:32",
        "guid": {
            "rendered": "http:\/\/angular.foobrdigital.com\/?p=775"
        },
        "modified": "2020-12-25T19:03:39",
        "modified_gmt": "2020-12-25T19:03:39",
        "slug": "line-charts",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/line-charts\/",
        "title": {
            "rendered": "Line Charts"
        },
        "content": {
            "rendered": "\n<p>Line charts are used to draw line based charts. In this section we&#8217;re going to discuss following types of line based charts.<\/p>\n\n\n\n<h2>Basic line<\/h2>\n\n\n\n<p>Following is an example of a basic line chart. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_line_basic.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'corechart','line']});  \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = new google.visualization.DataTable();\n            data.addColumn('string', 'Month');\n            data.addColumn('number', 'Tokyo');\n            data.addColumn('number', 'New York');\n            data.addColumn('number', 'Berlin');\n            data.addColumn('number', 'London');\n            data.addRows(&#91;\n               &#91;'Jan',  7.0, -0.2, -0.9, 3.9],\n               &#91;'Feb',  6.9, 0.8, 0.6, 4.2],\n               &#91;'Mar',  9.5,  5.7, 3.5, 5.7],\n               &#91;'Apr',  14.5, 11.3, 8.4, 8.5],\n               &#91;'May',  18.2, 17.0, 13.5, 11.9],\n               &#91;'Jun',  21.5, 22.0, 17.0, 15.2],\n               \n               &#91;'Jul',  25.2, 24.8, 18.6, 17.0],\n               &#91;'Aug',  26.5, 24.1, 17.9, 16.6],\n               &#91;'Sep',  23.3, 20.1, 14.3, 14.2],\n               &#91;'Oct',  18.3, 14.1, 9.0, 10.3],\n               &#91;'Nov',  13.9,  8.6, 3.9, 6.6],\n               &#91;'Dec',  9.6,  2.5,  1.0, 4.8]\n            ]);\n               \n            \/\/ Set chart options\n            var options = {'title' : 'Average Temperatures of Cities',\n               hAxis: {\n                  title: 'Month'\n               },\n               vAxis: {\n                  title: 'Temperature'\n               },   \n               'width':550,\n               'height':400\t  \n            };\n\n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.LineChart(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n\n\n\n<h2>Customizable line color<\/h2>\n\n\n\n<p>Following is an example of a basic line chart with customized line color. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<h2>Configurations<\/h2>\n\n\n\n<p>We&#8217;ve added&nbsp;<strong>colors<\/strong>&nbsp;configuration to change default line colors.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/ Set chart options\nvar options = {\n   colors: &#91;'#a52714', '#0000ff', '#ff0000', '#00ff00']\n};<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_line_color.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">&lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'corechart','line']});  \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = new google.visualization.DataTable();\n            data.addColumn('string', 'Month');\n            data.addColumn('number', 'Tokyo');\n            data.addColumn('number', 'New York');\n            data.addColumn('number', 'Berlin');\n            data.addColumn('number', 'London');\n            \n            data.addRows(&#91;\n               &#91;'Jan',  7.0, -0.2, -0.9, 3.9],\n               &#91;'Feb',  6.9, 0.8, 0.6, 4.2],\n               &#91;'Mar',  9.5,  5.7, 3.5, 5.7],\n               &#91;'Apr',  14.5, 11.3, 8.4, 8.5],\n               &#91;'May',  18.2, 17.0, 13.5, 11.9],\n               &#91;'Jun',  21.5, 22.0, 17.0, 15.2],\n               \n               &#91;'Jul',  25.2, 24.8, 18.6, 17.0],\n               &#91;'Aug',  26.5, 24.1, 17.9, 16.6],\n               &#91;'Sep',  23.3, 20.1, 14.3, 14.2],\n               &#91;'Oct',  18.3, 14.1, 9.0, 10.3],\n               &#91;'Nov',  13.9,  8.6, 3.9, 6.6],\n               &#91;'Dec',  9.6,  2.5,  1.0, 4.8]\n            ]);\n               \n            \/\/ Set chart options\n            var options = {'title' : 'Average Temperatures of Cities',\n               hAxis: {title: 'Month'},\n               vAxis: {title: 'Temperature'},   \n               'width':550,\n               'height':400,\n               colors: &#91;'#a52714', '#0000ff', '#ff0000', '#00ff00']\n            };\n\n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.LineChart(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Line charts are used to draw line based charts. In this section we&#8217;re going to discuss following types of line based charts. Basic line Following is an example of a basic line chart. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example. Example googlecharts_line_basic.htm [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 1816,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            18,
            85,
            166
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/775"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=775"
                }
            ],
            "version-history": [
                {
                    "count": 3,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/775\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1835,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/775\/revisions\/1835"
                }
            ],
            "wp:featuredmedia": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media\/1816"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=775"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=775"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=775"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 776,
        "date": "2020-05-13T06:49:29",
        "date_gmt": "2020-05-13T06:49:29",
        "guid": {
            "rendered": "http:\/\/angular.foobrdigital.com\/?p=776"
        },
        "modified": "2020-12-25T19:03:39",
        "modified_gmt": "2020-12-25T19:03:39",
        "slug": "maps",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/maps\/",
        "title": {
            "rendered": "Maps"
        },
        "content": {
            "rendered": "\n<p>A Google Map Chart uses Google Maps API to display Map. Data values are displayed as markers on the map. Data values may be coordinates (lat-long pairs) or actual addresses. The map will be scaled accordingly so that it includes all the identified points.<\/p>\n\n\n\n<h2>Basic Map<\/h2>\n\n\n\n<p>Following is an example of a basic map. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>Map<\/strong>&nbsp;class to show map based chart.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/Map chart\nvar chart = new google.visualization.Map(document.getElementById('container'));\n\ufeff<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_map_basic.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.google.com\/jsapi\">&lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'map']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = google.visualization.arrayToDataTable(&#91;\n               &#91;'Country', 'Population'],\n               &#91;'China', 'China: 1,363,800,000'],\n               &#91;'India', 'India: 1,242,620,000'],\n               &#91;'US', 'US: 317,842,000'],\n               &#91;'Indonesia', 'Indonesia: 247,424,598'],\n               &#91;'Brazil', 'Brazil: 201,032,714'],\n               &#91;'Pakistan', 'Pakistan: 186,134,000'],\n               &#91;'Nigeria', 'Nigeria: 173,615,000'],\n               &#91;'Bangladesh', 'Bangladesh: 152,518,015'],\n               &#91;'Russia', 'Russia: 146,019,512'],\n               &#91;'Japan', 'Japan: 127,120,000']\n            ]);\n              \n            \/\/ Set chart options\n            var options = {showTip: true};\t\t\t\t\n\n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.Map(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n\n\n\n<h2>Map using Latitude\/Longitue<\/h2>\n\n\n\n<p>Following is an example of a map using latitude and longitude. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>Map<\/strong>&nbsp;class to show map based chart.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/Map chart\nvar chart = new google.visualization.Map(document.getElementById('container'));<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_map_latitude.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.google.com\/jsapi\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'map']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = google.visualization.arrayToDataTable(&#91;\n               &#91;'Lat', 'Long', 'Name'],\n               &#91;37.4232, -122.0853, 'Work'],\n               &#91;37.4289, -122.1697, 'University'],\n               &#91;37.6153, -122.3900, 'Airport'],\n               &#91;37.4422, -122.1731, 'Shopping']\n            ]);\n              \n            \/\/ Set chart options\n            var options = {showTip: true};\t\t\t\t\n\n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.Map(document.getElementById\n            ('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>A Google Map Chart uses Google Maps API to display Map. Data values are displayed as markers on the map. Data values may be coordinates (lat-long pairs) or actual addresses. The map will be scaled accordingly so that it includes all the identified points. Basic Map Following is an example of a basic map. We&#8217;ve [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 1817,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            18,
            85,
            166
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/776"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=776"
                }
            ],
            "version-history": [
                {
                    "count": 3,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/776\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1837,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/776\/revisions\/1837"
                }
            ],
            "wp:featuredmedia": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media\/1817"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=776"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=776"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=776"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 777,
        "date": "2020-05-13T06:51:23",
        "date_gmt": "2020-05-13T06:51:23",
        "guid": {
            "rendered": "http:\/\/angular.foobrdigital.com\/?p=777"
        },
        "modified": "2020-12-25T19:03:38",
        "modified_gmt": "2020-12-25T19:03:38",
        "slug": "organization-chart",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/organization-chart\/",
        "title": {
            "rendered": "Organization Chart"
        },
        "content": {
            "rendered": "\n<p>Organization chart helps in rendering a hierarchy of nodes, used to portray superior\/subordinate relationships in an organization. For example, A family tree is a type of org chart.. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<h2>Configurations<\/h2>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>OrgChart<\/strong>&nbsp;class to show organization based chart.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/organization chart\nvar chart = new google.visualization.OrgChart(document.getElementById('container'));<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_organization_chart.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'orgchart']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = new google.visualization.DataTable();   \n            data.addColumn('string', 'Name');\n            data.addColumn('string', 'Manager');\n            data.addColumn('string', 'ToolTip');\n\n            \/\/ For each orgchart box, provide the name, manager, and tooltip to show.\n            data.addRows(&#91;\n               &#91;{v:'Robert', f:'Robert&lt;div style=\"color:red; font-style:italic\">President&lt;\/div>'},'', 'President'],\n               &#91;{v:'Jim', f:'Jim&lt;div style=\"color:red; font-style:italic\">Vice President&lt;\/div>'},'Robert', 'Vice President'],\n               &#91;'Alice', 'Robert', ''],\n               &#91;'Bob', 'Jim', 'Bob Sponge'],\n               &#91;'Carol', 'Bob', '']\n            ]);\t\t\t\n\n            \/\/ Set chart options\n            var options = {allowHtml:true};\n                  \n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.OrgChart(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Organization chart helps in rendering a hierarchy of nodes, used to portray superior\/subordinate relationships in an organization. For example, A family tree is a type of org chart.. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example. Configurations We&#8217;ve used&nbsp;OrgChart&nbsp;class to show organization based [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 1818,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            18,
            85,
            166
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/777"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=777"
                }
            ],
            "version-history": [
                {
                    "count": 3,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/777\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1999,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/777\/revisions\/1999"
                }
            ],
            "wp:featuredmedia": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media\/1818"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=777"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=777"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=777"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 778,
        "date": "2020-05-13T06:52:22",
        "date_gmt": "2020-05-13T06:52:22",
        "guid": {
            "rendered": "http:\/\/angular.foobrdigital.com\/?p=778"
        },
        "modified": "2020-12-25T19:03:38",
        "modified_gmt": "2020-12-25T19:03:38",
        "slug": "pie-charts",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/pie-charts\/",
        "title": {
            "rendered": "Pie Charts"
        },
        "content": {
            "rendered": "\n<p>Pie charts are used to draw pie based charts. In this section we&#8217;re going to discuss following types of pie based charts.<\/p>\n\n\n\n<h2>Basic Pie<\/h2>\n\n\n\n<p>Following is an example of a basic pie chart. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>PieChart<\/strong>&nbsp;class to show pie based chart.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/pie chart\nvar chart = new google.visualization.PieChart(document.getElementById('container'));\n\ufeff<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_pie_basic.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'corechart']});     \n      &lt;\/script>\n   &lt;\/head>\n\n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = new google.visualization.DataTable();\n            data.addColumn('string', 'Browser');\n            data.addColumn('number', 'Percentage');\n            data.addRows(&#91;\n               &#91;'Firefox', 45.0],\n               &#91;'IE', 26.8],\n               &#91;'Chrome', 12.8],\n               &#91;'Safari', 8.5],\n               &#91;'Opera', 6.2],\n               &#91;'Others', 0.7]\n            ]);\n               \n            \/\/ Set chart options\n            var options = {\n               'title':'Browser market shares at a specific website, 2014',\n               'width':550,\n               'height':400\n            };\n\n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.PieChart(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n\n\n\n<h2>3D Pie Chart<\/h2>\n\n\n\n<p>Following is an example of a 3d Pie chart. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<h2>Configurations<\/h2>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>is3D<\/strong>&nbsp;configuration to set a pie chart as donut chart.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/ Set chart options\nvar options = { \n   is3D:true\n};<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_pie_3d.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'corechart']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = new google.visualization.DataTable();\n            data.addColumn('string', 'Browser');\n            data.addColumn('number', 'Percentage');\n            data.addRows(&#91;\n               &#91;'Firefox', 45.0],\n               &#91;'IE', 26.8],\n               &#91;'Chrome', 12.8],\n               &#91;'Safari', 8.5],\n               &#91;'Opera', 6.2],\n               &#91;'Others', 0.7]\n            ]);\n               \n            \/\/ Set chart options\n            var options = {\n               'title':'Browser market shares at a specific website, 2014',\n               'width':550,\n               'height':400,\n               is3D:true\n            };\n\n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.PieChart(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Pie charts are used to draw pie based charts. In this section we&#8217;re going to discuss following types of pie based charts. Basic Pie Following is an example of a basic pie chart. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example. We&#8217;ve used&nbsp;PieChart&nbsp;class [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 1819,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            18,
            85,
            166
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/778"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=778"
                }
            ],
            "version-history": [
                {
                    "count": 3,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/778\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1841,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/778\/revisions\/1841"
                }
            ],
            "wp:featuredmedia": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media\/1819"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=778"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=778"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=778"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 779,
        "date": "2020-05-13T06:53:11",
        "date_gmt": "2020-05-13T06:53:11",
        "guid": {
            "rendered": "http:\/\/angular.foobrdigital.com\/?p=779"
        },
        "modified": "2020-12-25T19:03:38",
        "modified_gmt": "2020-12-25T19:03:38",
        "slug": "sankey-charts",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/sankey-charts\/",
        "title": {
            "rendered": "Sankey Charts"
        },
        "content": {
            "rendered": "\n<p>A sankey chart is a visualization tool and is used to depict a flow from one set of values to another. Connected objects are called nodes and the connections are called links. Sankeys are used to show a many-to-many mapping between two domains or multiple paths through a set of stages.<\/p>\n\n\n\n<h2>&nbsp;Basic Sankey<\/h2>\n\n\n\n<p>Following is an example of a basic sankey diagram. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>Sankey<\/strong>&nbsp;class to show sankey diagram.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/Map chart\nvar chart = new google.visualization.Sankey(document.getElementById('container'));<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_sankey_basic.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.google.com\/jsapi\">&lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'sankey']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = new google.visualization.DataTable();   \n            data.addColumn('string', 'From');\n            data.addColumn('string', 'To');\n            data.addColumn('number', 'Weight');\n\n            data.addRows(&#91;\n               &#91; 'Brazil', 'Portugal', 5 ],\n               &#91; 'Brazil', 'France', 1 ],\n               &#91; 'Brazil', 'Spain', 1 ],\n               &#91; 'Brazil', 'England', 1 ],\n               \n               &#91; 'Canada', 'Portugal', 1 ],\n               &#91; 'Canada', 'France', 5 ],\n               &#91; 'Canada', 'England', 1 ],\n               \n               &#91; 'Mexico', 'Portugal', 1 ],\n               &#91; 'Mexico', 'France', 1 ],\n               &#91; 'Mexico', 'Spain', 5 ],\n               &#91; 'Mexico', 'England', 1 ],\n               \n               &#91; 'USA', 'Portugal', 1 ],\n               &#91; 'USA', 'France', 1 ],\n               &#91; 'USA', 'Spain', 1 ],\n               &#91; 'USA', 'England', 5 ]\n            ]);\t\n\n            \/\/ Set chart options\n            var options = {width: 550};\n                  \n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.Sankey(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n\n\n\n<h2>Multilevel Sankey Chart<\/h2>\n\n\n\n<p>Following is an example of a Sankey diagram with multiple levels. We&#8217;ve already seen the configuration used to draw this chart in\u00a0Google Charts Configuration Syntax\u00a0chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<p>We&#8217;ve used\u00a0<strong>Sankey<\/strong>\u00a0class to show Sankey diagram.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/Sankey chart\nvar chart = new google.visualization.Sankey(document.getElementById('container'));\n\ufeff<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_sankey_multilevel.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.google.com\/jsapi\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'sankey']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = new google.visualization.DataTable();   \n            data.addColumn('string', 'From');\n            data.addColumn('string', 'To');\n            data.addColumn('number', 'Weight');\n\n            data.addRows(&#91;\n               &#91; 'Brazil', 'Portugal', 5 ],\n               &#91; 'Brazil', 'France', 1 ],\n               &#91; 'Brazil', 'Spain', 1 ],\n               &#91; 'Brazil', 'England', 1 ],\n               \n               &#91; 'Canada', 'Portugal', 1 ],\n               &#91; 'Canada', 'France', 5 ],\n               &#91; 'Canada', 'England', 1 ],\n               \n               &#91; 'Mexico', 'Portugal', 1 ],\n               &#91; 'Mexico', 'France', 1 ],\n               &#91; 'Mexico', 'Spain', 5 ],\n               &#91; 'Mexico', 'England', 1 ],\n               \n               &#91; 'USA', 'Portugal', 1 ],\n               &#91; 'USA', 'France', 1 ],\n               &#91; 'USA', 'Spain', 1 ],\n               &#91; 'USA', 'England', 5 ],\n               \n               &#91; 'Portugal', 'Angola', 2 ],\n               &#91; 'Portugal', 'Senegal', 1 ],\n               &#91; 'Portugal', 'Morocco', 1 ],\n               &#91; 'Portugal', 'South Africa', 3 ],\n               \n               &#91; 'France', 'Angola', 1 ],\n               &#91; 'France', 'Senegal', 3 ],\n               &#91; 'France', 'Mali', 3 ],\n               &#91; 'France', 'Morocco', 3 ],\n               &#91; 'France', 'South Africa', 1 ],\n               \n               &#91; 'Spain', 'Senegal', 1 ],\n               &#91; 'Spain', 'Morocco', 3 ],\n               &#91; 'Spain', 'South Africa', 1 ],\n               \n               &#91; 'England', 'Angola', 1 ],\n               &#91; 'England', 'Senegal', 1 ],\n               &#91; 'England', 'Morocco', 2 ],\n               &#91; 'England', 'South Africa', 7 ],\n               \n               &#91; 'South Africa', 'China', 5 ],\n               &#91; 'South Africa', 'India', 1 ],\n               &#91; 'South Africa', 'Japan', 3 ],\n               \n               &#91; 'Angola', 'China', 5 ],\n               &#91; 'Angola', 'India', 1 ],\n               &#91; 'Angola', 'Japan', 3 ],\n               \n               &#91; 'Senegal', 'China', 5 ],\n               &#91; 'Senegal', 'India', 1 ],\n               &#91; 'Senegal', 'Japan', 3 ],\n               \n               &#91; 'Mali', 'China', 5 ],\n               &#91; 'Mali', 'India', 1 ],\n               &#91; 'Mali', 'Japan', 3 ],\n               \n               &#91; 'Morocco', 'China', 5 ],\n               &#91; 'Morocco', 'India', 1 ],\n               &#91; 'Morocco', 'Japan', 3 ]\n            ]);\t\n\n            \/\/ Set chart options\n            var options = {width: 550};\n                  \n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.Sankey(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>A sankey chart is a visualization tool and is used to depict a flow from one set of values to another. Connected objects are called nodes and the connections are called links. Sankeys are used to show a many-to-many mapping between two domains or multiple paths through a set of stages. &nbsp;Basic Sankey Following is [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 1820,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            18,
            85,
            166
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/779"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=779"
                }
            ],
            "version-history": [
                {
                    "count": 4,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/779\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1985,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/779\/revisions\/1985"
                }
            ],
            "wp:featuredmedia": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media\/1820"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=779"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=779"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=779"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 810,
        "date": "2020-05-13T06:54:39",
        "date_gmt": "2020-05-13T06:54:39",
        "guid": {
            "rendered": "http:\/\/angular.foobrdigital.com\/?p=810"
        },
        "modified": "2020-12-25T19:03:38",
        "modified_gmt": "2020-12-25T19:03:38",
        "slug": "scatter-charts",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/scatter-charts\/",
        "title": {
            "rendered": "Scatter Charts"
        },
        "content": {
            "rendered": "\n<p>Sankey Charts, Scatter Charts, Stepped area charts, Table, Timelines, TreeMap, Trendlines are used to draw scatter based charts. In this section we&#8217;re going to discuss following types of scatter based charts.<\/p>\n\n\n\n<h2>&nbsp;Basic Scatter<\/h2>\n\n\n\n<p>Following is an example of a basic scatter chart. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>ScatterChart<\/strong>&nbsp;class to show scatter based chart.<\/p>\n\n\n\n<pre class=\"wp-block-preformatted\">\/\/scatter chart\nvar chart = new google.visualization.ScatterChart(document.getElementById('container'));\n<\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_scatter_basic.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'corechart']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = new google.visualization.DataTable();\n            data.addColumn('number', 'Age');\n            data.addColumn('number', 'Weight');\n            data.addRows(&#91;\n               &#91; 8,      12],\n               &#91; 4,      5.5],\n               &#91; 11,     14],\n               &#91; 4,      5],\n               &#91; 3,      3.5],\n               &#91; 6.5,    7]\n            ]);\n               \n            \/\/ Set chart options\n            var options = {\n               'title':'Age vs Weight',\n               'width':550,\n               'height':400,\n               'legend': 'none'\n            };\n\n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.ScatterChart(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n\n\n\n<h2>Material Scatter&nbsp;<\/h2>\n\n\n\n<p>Following is an example of a material scatter chart. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>Scatter<\/strong>&nbsp;class to show material chart.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/classic chart\nvar chart = new google.visualization.ScatterChart(document.getElementById('container'));\n\n\/\/Material chart\nvar chart = new google.charts.Scatter(document.getElementById('container'));<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_scatter_material.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'corechart','scatter']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = new google.visualization.DataTable();\n            data.addColumn('number', 'Age');\n            data.addColumn('number', 'Weight');\n            data.addRows(&#91;\n               &#91; 8,      12],\n               &#91; 4,      5.5],\n               &#91; 11,     14],\n               &#91; 4,      5],\n               &#91; 3,      3.5],\n               &#91; 6.5,    7]\n            ]);\n               \n            \/\/ Set chart options\n            var options = {\n               'title':'Age vs Weight',\n               'width':550,\n               'height':400\t  \n            };\n\n            \/\/ Instantiate and draw the chart.\n            var chart = new google.charts.Scatter(document.getElementById('container'));\n            chart.draw(data, google.charts.Scatter.convertOptions(options));\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Sankey Charts, Scatter Charts, Stepped area charts, Table, Timelines, TreeMap, Trendlines are used to draw scatter based charts. In this section we&#8217;re going to discuss following types of scatter based charts. &nbsp;Basic Scatter Following is an example of a basic scatter chart. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 1821,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            18,
            85,
            166
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/810"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=810"
                }
            ],
            "version-history": [
                {
                    "count": 4,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/810\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1845,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/810\/revisions\/1845"
                }
            ],
            "wp:featuredmedia": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media\/1821"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=810"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=810"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=810"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 811,
        "date": "2020-05-13T06:55:58",
        "date_gmt": "2020-05-13T06:55:58",
        "guid": {
            "rendered": "http:\/\/angular.foobrdigital.com\/?p=811"
        },
        "modified": "2020-12-25T19:03:38",
        "modified_gmt": "2020-12-25T19:03:38",
        "slug": "stepped-area-charts",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/stepped-area-charts\/",
        "title": {
            "rendered": "Stepped Area Charts"
        },
        "content": {
            "rendered": "\n<p>A stepped area chart is a step based area chart. We&#8217;re going to discuss following types of stepped area charts.<\/p>\n\n\n\n<h2>Basic Stepped<\/h2>\n\n\n\n<p>Following is an example of a basic stepped area chart. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>SteppedAreaChart<\/strong>&nbsp;class to show stepped area chart.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/SteppedAreaChart chart\nvar chart = new google.visualization.SteppedAreaChart(document.getElementById('container'));<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_stepped_basic.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.google.com\/jsapi\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'corechart']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = google.visualization.arrayToDataTable(&#91;\n               &#91;'Director (Year)',  'Rotten Tomatoes', 'IMDB'],\n               &#91;'Saqib (1935)', 8.4,         7.9],\n               &#91;'Shahbaz (1959)',     6.9,         6.5],\n               &#91;'Mubeen (1978)',        6.5,         6.4],\n               &#91;'Ahmad (2008)',      4.4,         6.2]\n            ]);\n\n            var options = {\n               title: 'The decline of \\'The 39 Steps\\'',\n               vAxis: {title: 'Accumulated Rating'}      \n            };\n                  \n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.SteppedAreaChart(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n\n\n\n<h2>&nbsp;Stacked Stepped<\/h2>\n\n\n\n<p>&nbsp;<\/p>\n\n\n\n<p>Following is an example of a stacked stepped area chart. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>isStacked<\/strong>&nbsp;configuration to show stacked chart.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/ Set chart options\nvar options = {\n   isStacked: true\n};<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_stepped_stacked.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.google.com\/jsapi\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'corechart']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = google.visualization.arrayToDataTable(&#91;\n               &#91;'Director (Year)',  'Rotten Tomatoes', 'IMDB'],\n               &#91;'Alfred Hitchcock (1935)', 8.4,         7.9],\n               &#91;'Ralph Thomas (1959)',     6.9,         6.5],\n               &#91;'Don Sharp (1978)',        6.5,         6.4],\n               &#91;'James Hawes (2008)',      4.4,         6.2]\n            ]);\n\n            var options = {\n               title: 'The decline of \\'The 39 Steps\\'',\n               vAxis: {title: 'Accumulated Rating'},\n               isStacked: true      \n            };\n                  \n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.SteppedAreaChart(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n\n\n\n<p><\/p>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>A stepped area chart is a step based area chart. We&#8217;re going to discuss following types of stepped area charts. Basic Stepped Following is an example of a basic stepped area chart. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example. We&#8217;ve used&nbsp;SteppedAreaChart&nbsp;class to [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 1822,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            18,
            85,
            166
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/811"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=811"
                }
            ],
            "version-history": [
                {
                    "count": 4,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/811\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2000,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/811\/revisions\/2000"
                }
            ],
            "wp:featuredmedia": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media\/1822"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=811"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=811"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=811"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 812,
        "date": "2020-05-13T06:57:29",
        "date_gmt": "2020-05-13T06:57:29",
        "guid": {
            "rendered": "http:\/\/angular.foobrdigital.com\/?p=812"
        },
        "modified": "2020-12-25T19:03:38",
        "modified_gmt": "2020-12-25T19:03:38",
        "slug": "table-chart",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/table-chart\/",
        "title": {
            "rendered": "Table Chart"
        },
        "content": {
            "rendered": "\n<p>Table chart helps in rendering a table which can be sorted and paged. Table cells can be formatted using format strings, or by directly inserting HTML as cell values. Numeric values are right-aligned by default; boolean values are displayed as check marks or cross marks. Users can select single rows either with the keyboard or the mouse. Column headers can be used for sorting. The header row remains fixed during scrolling. The table fires events corresponding to user interaction. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<h2>Configurations<\/h2>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>Table<\/strong>&nbsp;class to show Table based chart.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/table chart\nvar chart = new google.visualization.Table(document.getElementById('container'));<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_table_chart.htm<\/em>Live Demo<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'table']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = new google.visualization.DataTable();\n            data.addColumn('string', 'Name');\n            data.addColumn('number', 'Salary');\n            data.addColumn('boolean', 'Full Time Employee');\n            data.addRows(&#91;\n               &#91;'Mike',  {v: 10000, f: '$10,000'}, true],\n               &#91;'Jim',   {v:8000,   f: '$8,000'},  false],\n               &#91;'Alice', {v: 12500, f: '$12,500'}, true],\n               &#91;'Bob',   {v: 7000,  f: '$7,000'},  true]\n            ]);\n\n            var options = {\n               showRowNumber: true,\n               width: '100%', \n               height: '100%'\n            };\n                  \n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.Table(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Table chart helps in rendering a table which can be sorted and paged. Table cells can be formatted using format strings, or by directly inserting HTML as cell values. Numeric values are right-aligned by default; boolean values are displayed as check marks or cross marks. Users can select single rows either with the keyboard or [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 1823,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            18,
            85,
            166
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/812"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=812"
                }
            ],
            "version-history": [
                {
                    "count": 2,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/812\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1850,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/812\/revisions\/1850"
                }
            ],
            "wp:featuredmedia": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media\/1823"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=812"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=812"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=812"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 813,
        "date": "2020-05-13T06:59:05",
        "date_gmt": "2020-05-13T06:59:05",
        "guid": {
            "rendered": "http:\/\/angular.foobrdigital.com\/?p=813"
        },
        "modified": "2020-12-25T19:03:38",
        "modified_gmt": "2020-12-25T19:03:38",
        "slug": "timelines-charts",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/timelines-charts\/",
        "title": {
            "rendered": "Timelines Charts"
        },
        "content": {
            "rendered": "\n<p>Timelines depicts how a set of resources are used over time. We&#8217;re going to discuss following types of Timelines charts.<\/p>\n\n\n\n<h2>Basic Timelines<\/h2>\n\n\n\n<p>Following is an example of a basic timelines chart. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>Timeline<\/strong>&nbsp;class to show timelines diagram.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/Timeline chart\nvar chart = new google.visualization.Timeline(document.getElementById('container'));\n\ufeff<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_timelines_basic.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.google.com\/jsapi\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'timeline']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = new google.visualization.DataTable();\n            data.addColumn({ type: 'string', id: 'President' });\n            data.addColumn({ type: 'date', id: 'Start' });\n            data.addColumn({ type: 'date', id: 'End' });\n            data.addRows(&#91;\n            &#91; 'Washington', new Date(1789, 3, 30), new Date(1797, 2, 4) ],\n            &#91; 'Adams',      new Date(1797, 2, 4),  new Date(1801, 2, 4) ],\n            &#91; 'Jefferson',  new Date(1801, 2, 4),  new Date(1809, 2, 4) ]]);\n\n            var options = {      \n               width: '100%', \n               height: '100%'\n            };\n                  \n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.Timeline(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n\n\n\n<h2>data labels<\/h2>\n\n\n\n<p>Following is an example of a timelines chart with data labels. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>Timeline<\/strong>&nbsp;class to show timelines diagram.<\/p>\n\n\n\n<pre class=\"wp-block-preformatted\">\/\/Timeline chart\nvar chart = new google.visualization.Timeline(document.getElementById('container'));\n<\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_timelines_labels.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.google.com\/jsapi\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'timeline']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = new google.visualization.DataTable();\n            data.addColumn({ type: 'string', id: 'President' });\n            data.addColumn({ type: 'string', id: 'Name' });\n            data.addColumn({ type: 'date', id: 'Start' });\n            data.addColumn({ type: 'date', id: 'End' });\n            data.addRows(&#91;\n            &#91; '1', 'George Washington', new Date(1789, 3, 30), new Date(1797, 2, 4) ],\n            &#91; '2', 'John Adams',      new Date(1797, 2, 4),  new Date(1801, 2, 4) ],\n            &#91; '3', 'Thomas Jefferson',  new Date(1801, 2, 4),  new Date(1809, 2, 4) ]]);\n\n            var options = {      \n               width: '100%', \n               height: '100%'\t  \n            };\n                  \n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.Timeline(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>Timelines depicts how a set of resources are used over time. We&#8217;re going to discuss following types of Timelines charts. Basic Timelines Following is an example of a basic timelines chart. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example. We&#8217;ve used&nbsp;Timeline&nbsp;class to show [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 1824,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            18,
            85,
            166
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/813"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=813"
                }
            ],
            "version-history": [
                {
                    "count": 4,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/813\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2119,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/813\/revisions\/2119"
                }
            ],
            "wp:featuredmedia": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media\/1824"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=813"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=813"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=813"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 814,
        "date": "2020-05-13T07:01:14",
        "date_gmt": "2020-05-13T07:01:14",
        "guid": {
            "rendered": "http:\/\/angular.foobrdigital.com\/?p=814"
        },
        "modified": "2020-12-25T19:03:38",
        "modified_gmt": "2020-12-25T19:03:38",
        "slug": "treemap-chart",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/treemap-chart\/",
        "title": {
            "rendered": "TreeMap Chart"
        },
        "content": {
            "rendered": "\n<p>TreeMap is a visual representation of a data tree, where each node may have zero or more children, and one parent (except for the root). Each node is displayed as a rectangle, can be sized and colored according to values that we assign. Sizes and colors are valued relative to all other nodes in the graph. Following is an example of a treemap chart. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<h2>Configurations<\/h2>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>TreeMap<\/strong>&nbsp;class to show treemap diagram.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/TreeMap chart\nvar chart = new google.visualization.TreeMap(document.getElementById('container'));\n\ufeff<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_treemap.htm<\/em>Live Demo<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.google.com\/jsapi\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'treemap']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = new google.visualization.DataTable();\n            var data = google.visualization.arrayToDataTable(&#91;\n               &#91;'Location', 'Parent', 'Market trade volume (size)', 'Market increase\/decrease (color)'],\n               &#91;'Global',    null,                 0,                               0],\n               &#91;'America',   'Global',             0,                               0],\n               &#91;'Europe',    'Global',             0,                               0],\n               &#91;'Asia',      'Global',             0,                               0],\n               &#91;'Australia', 'Global',             0,                               0],\n               &#91;'Africa',    'Global',             0,                               0],  \n               \n               &#91;'USA',       'America',            52,                              31],\n               &#91;'Mexico',    'America',            24,                              12],\n               &#91;'Canada',    'America',            16,                              -23],\n               \n               &#91;'France',    'Europe',             42,                              -11],\n               &#91;'Germany',   'Europe',             31,                              -2],\n               &#91;'Sweden',    'Europe',             22,                              -13],   \n               \n               &#91;'China',     'Asia',               36,                              4],\n               &#91;'Japan',     'Asia',               20,                              -12],\n               &#91;'India',     'Asia',               40,                              63],                  \n               \n               &#91;'Egypt',     'Africa',             21,                              0],          \n               &#91;'Congo',     'Africa',             10,                              12],\n               &#91;'Zaire',     'Africa',             8,                               10]\n            ]);\n            var options = {      \n               minColor: '#f00',\n               midColor: '#ddd',\n               maxColor: '#0d0',\n               headerHeight: 15,\n               fontColor: 'black',\n               showScale: true\n            };\n                  \n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.TreeMap(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>TreeMap is a visual representation of a data tree, where each node may have zero or more children, and one parent (except for the root). Each node is displayed as a rectangle, can be sized and colored according to values that we assign. Sizes and colors are valued relative to all other nodes in the [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 1859,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            18,
            85,
            166
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/814"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=814"
                }
            ],
            "version-history": [
                {
                    "count": 2,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/814\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1865,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/814\/revisions\/1865"
                }
            ],
            "wp:featuredmedia": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media\/1859"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=814"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=814"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=814"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 815,
        "date": "2020-05-13T07:02:02",
        "date_gmt": "2020-05-13T07:02:02",
        "guid": {
            "rendered": "http:\/\/angular.foobrdigital.com\/?p=815"
        },
        "modified": "2020-12-25T19:03:38",
        "modified_gmt": "2020-12-25T19:03:38",
        "slug": "trendlines-charts",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/trendlines-charts\/",
        "title": {
            "rendered": "Trendlines Charts"
        },
        "content": {
            "rendered": "\n<p>A trendline is a line superimposed on a chart to reveal the overall direction of the data. Google Charts can automatically generate trendlines for Sankey Charts, Scatter Charts, Stepped area charts, Table, Timelines, TreeMap, Trendlines, Bar Charts, Column Charts, and Line Charts.. We&#8217;re going to discuss following types of trendlines charts.<\/p>\n\n\n\n<h2>&nbsp;Basic Trendlines<\/h2>\n\n\n\n<p>Following is an example of a basic trendlines chart. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>trendlines<\/strong>&nbsp;configuration to show trendlines diagram.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>var options = {\n   trendlines: { 0: {} }    \/\/ Draw a trendline for data series 0.\n};<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_trendlines_basic.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.google.com\/jsapi\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'corechart']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = new google.visualization.DataTable();\n            data.addColumn('number', 'Age');\n            data.addColumn('number', 'Weight');\n            data.addRows(&#91;\n               &#91; 8,      12],\n               &#91; 4,      5.5],\n               &#91; 11,     14],\n               &#91; 4,      5],\n               &#91; 3,      3.5],\n               &#91; 6.5,    7]\n            ]);\n               \n            \/\/ Set chart options\n            var options = {\n               'title':'Age vs Weight',\n               'width':550,\n               'height':400,\n               'legend': 'none',\n               trendlines: { 0: {} }    \/\/ Draw a trendline for data series 0.\n            };\n\n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.ScatterChart(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n\n\n\n<h2>Exponential Trendlines<\/h2>\n\n\n\n<p>Following is an example of a exponential trendlines chart. We&#8217;ve already seen the configuration used to draw this chart in&nbsp;Google Charts Configuration Syntax&nbsp;chapter. So, let&#8217;s see the complete example.<\/p>\n\n\n\n<p>We&#8217;ve used&nbsp;<strong>trendlines<\/strong>&nbsp;configuration to show trendlines diagram.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>var options = {\n   trendlines: { 0: {type: 'exponential'} }    \/\/ Draw a trendline for data series 0.\n};<\/code><\/pre>\n\n\n\n<h2>Example<\/h2>\n\n\n\n<p><em>googlecharts_trendlines_exponential.htm<\/em><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;html>\n   &lt;head>\n      &lt;title>Google Charts Tutorial&lt;\/title>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.gstatic.com\/charts\/loader.js\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\" src = \"https:\/\/www.google.com\/jsapi\">\n      &lt;\/script>\n      &lt;script type = \"text\/javascript\">\n         google.charts.load('current', {packages: &#91;'corechart']});     \n      &lt;\/script>\n   &lt;\/head>\n   \n   &lt;body>\n      &lt;div id = \"container\" style = \"width: 550px; height: 400px; margin: 0 auto\">\n      &lt;\/div>\n      &lt;script language = \"JavaScript\">\n         function drawChart() {\n            \/\/ Define the chart to be drawn.\n            var data = new google.visualization.DataTable();\n            data.addColumn('number', 'Age');\n            data.addColumn('number', 'Weight');\n            data.addRows(&#91;\n               &#91; 8,      12],\n               &#91; 4,      5.5],\n               &#91; 11,     14],\n               &#91; 4,      5],\n               &#91; 3,      3.5],\n               &#91; 6.5,    7]\n            ]);\n               \n            \/\/ Set chart options\n            var options = {\n               'title':'Age vs Weight',\n               'width':550,\n               'height':400,\n               'legend': 'none',\n               trendlines: { 0: {type: 'exponential'} }   \/\/ Draw a trendline for data series 0.\n            };\n\n            \/\/ Instantiate and draw the chart.\n            var chart = new google.visualization.ScatterChart(document.getElementById('container'));\n            chart.draw(data, options);\n         }\n         google.charts.setOnLoadCallback(drawChart);\n      &lt;\/script>\n   &lt;\/body>\n&lt;\/html><\/code><\/pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>A trendline is a line superimposed on a chart to reveal the overall direction of the data. Google Charts can automatically generate trendlines for Sankey Charts, Scatter Charts, Stepped area charts, Table, Timelines, TreeMap, Trendlines, Bar Charts, Column Charts, and Line Charts.. We&#8217;re going to discuss following types of trendlines charts. &nbsp;Basic Trendlines Following is [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 3,
        "featured_media": 1826,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            18,
            85,
            166
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/815"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/3"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=815"
                }
            ],
            "version-history": [
                {
                    "count": 3,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/815\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 1853,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/815\/revisions\/1853"
                }
            ],
            "wp:featuredmedia": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media\/1826"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=815"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=815"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=815"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    },
    {
        "id": 791,
        "date": "2020-05-13T07:18:23",
        "date_gmt": "2020-05-13T07:18:23",
        "guid": {
            "rendered": "http:\/\/angular.foobrdigital.com\/?p=791"
        },
        "modified": "2020-12-25T19:03:38",
        "modified_gmt": "2020-12-25T19:03:38",
        "slug": "validation",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/angular.foobrdigital.com\/validation\/",
        "title": {
            "rendered": "Validation"
        },
        "content": {
            "rendered": "\n<p>While adding or modifying data, it is important to validate the user input. For example, we may need to ensure that the value of a field is always not null. We can use&nbsp;<strong>! (non-nullable)<\/strong>&nbsp;type marker in GraphQL to perform such validation.<\/p>\n\n\n\n<p>The syntax for using the&nbsp;<strong>!<\/strong>&nbsp;type marker is as given below \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>type TypeName {\n   field1:String!,\n   field2:String!,\n   field3:Int!\n}<\/code><\/pre>\n\n\n\n<p>The above syntax ensures that all the fields are not null.<\/p>\n\n\n\n<p>If we want to implement additional rules like checking a string&#8217;s length or checking if a number is within a given range, we can define custom validators. The custom validation logic will be a part of the resolver function. Let us understand this with the help of an example.<\/p>\n\n\n\n<h2>Illustration &#8211; Implementing Custom Validators<\/h2>\n\n\n\n<p>Let us create a sign-up form with basic validation. The form will have email, first name and password fields.<\/p>\n\n\n\n<h3>Step 1 \u2212 Download and Install Required Dependencies for the Project<\/h3>\n\n\n\n<p>Create a folder named&nbsp;<strong>validation-app<\/strong>.&nbsp;Change the directory to&nbsp;validation-app&nbsp;from the terminal. Follow steps 3 to 5 explained in the Environment Setup chapter.<\/p>\n\n\n\n<h3>Step 2 \u2212 Create a Schema<\/h3>\n\n\n\n<p>Add&nbsp;<strong>schema.graphql<\/strong>&nbsp;file in the project folder&nbsp;<strong>validation-app<\/strong>&nbsp;and add the following code \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>type Query {\n   greeting:String\n}\n\ntype Mutation {\n   signUp(input:SignUpInput):String\n}\n\ninput SignUpInput {\n   email:String!,\n   password:String!,\n   firstName:String!\n}<\/code><\/pre>\n\n\n\n<p><strong>Note<\/strong>&nbsp;\u2212 We can use the input type SignUpInput to reduce the number of parameters in signUp function. So, signUp function takes only one parameter of type&nbsp;SignUpInput.<\/p>\n\n\n\n<h3>Step 3 \u2212 Create Resolvers<\/h3>\n\n\n\n<p>Create a file&nbsp;<strong>resolvers.js<\/strong>&nbsp;in the project folder and add the following code \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>const Query = {\n   greeting:() => \"Hello\"\n}\n\nconst Mutation ={\n   signUp:(root,args,context,info) => {\n\n      const {email,firstName,password} = args.input;\n\n      const emailExpression = \/^((&#91;^&lt;>()\\&#91;\\]\\\\.,;:\\s@\"]+(\\.&#91;^&lt;>()\\&#91;\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\&#91;&#91;0-9]{1,3}\\.&#91;0-9]{1,3}\\.&#91;0-9]{1,3}\\.&#91;0-9]{1,3}\\])|((&#91;a-zA-Z\\-0-9]+\\.)+&#91;a-zA-Z]{2,}))$\/;\n      \n      const isValidEmail =  emailExpression.test(String(email).toLowerCase())\n      if(!isValidEmail)\n      throw new Error(\"email not in proper format\")\n\n      if(firstName.length > 15)\n      throw new Error(\"firstName should be less than 15 characters\")\n\n      if(password.length &lt; 8 )\n      throw new Error(\"password should be minimum 8 characters\")\n      \n      return \"success\";\n   }\n}\nmodule.exports = {Query,Mutation}<\/code><\/pre>\n\n\n\n<p>The resolver function,&nbsp;signUp&nbsp;accepts parameters&nbsp;email, password&nbsp;and&nbsp;firstName. These will be passed through&nbsp;input variable so that it can be accessed through&nbsp;args.input.<\/p>\n\n\n\n<h3>Step 4 \u2212 Run the Application<\/h3>\n\n\n\n<p>Create a server.js file. Refer step 8 in the Environment Setup Chapter. Execute the command&nbsp;<em>npm start<\/em>&nbsp;in the terminal. The server will be up and running on 9000 port. Here, we will use GraphQL as a client to test the application.<\/p>\n\n\n\n<p>Open the browser and enter the URL&nbsp;<strong>http:\/\/localhost:9000\/graphiql<\/strong>.&nbsp;Type the following query in the editor \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>mutation doSignUp($input:SignUpInput) {\n   signUp(input:$input)\n}<\/code><\/pre>\n\n\n\n<p>Since input to sign-up function is a complex type, we need to use query variables in GraphiQL. For this, we need to first give a name to the query and call it doSignUp, the&nbsp;$input&nbsp;is a query variable.<\/p>\n\n\n\n<p>The following query variable must be entered in query variables tab of GraphiQL \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>{\n   \"input\":{\n      \"email\": \"abc@abc\",\n      \"firstName\": \"kannan\",\n      \"password\": \"pass@1234\"\n   }\n}<\/code><\/pre>\n\n\n\n<p>The errors array contains the details of validation errors as shown below \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>{\n   \"data\": {\n      \"signUp\": null\n   },\n   \n   \"errors\": &#91;\n      {\n         \"message\": \"email not in proper format\",\n         \"locations\": &#91;\n            {\n               \"line\": 2,\n               \"column\": 4\n            }\n         ],\n         \"path\": &#91;\n            \"signUp\"\n         ]\n      }\n   ]\n}<\/code><\/pre>\n\n\n\n<p>We have to enter a proper input for each field as given below \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>{\n   \"input\":{\n      \"email\": \"abc@abc.com\",\n      \"firstName\": \"kannan\",\n      \"password\": \"pass@1234\"\n   }\n}<\/code><\/pre>\n\n\n\n<p>The response is as follows \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>{\n   \"data\": {\n      \"signUp\": \"success\"\n   }\n}<\/code><\/pre>\n\n\n\n<p>Here, in the below query, we are not assigning any password.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>{\n   \"input\":{\n      \"email\": \"abc@abc.com\",\n      \"firstName\": \"kannan\"\n   }\n}<\/code><\/pre>\n\n\n\n<p>If a required field is not provided, then GraphQL server will display the following error \u2212<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>{\n   \"errors\": &#91;\n      {\n         \"message\": \"Variable \\\"$input\\\" got invalid value {\\\"email\\\":\\\"abc@abc.com\\\",\\\"firstName\\\":\\\"kannan\\\"}; Field value.password of required type String! was not provided.\",\n         \"locations\": &#91;\n            {\n               \"line\": 1,\n               \"column\": 19\n            }\n         ]\n      }\n   ]\n}<\/code><\/pre>\n",
            "protected": false
        },
        "excerpt": {
            "rendered": "<p>While adding or modifying data, it is important to validate the user input. For example, we may need to ensure that the value of a field is always not null. We can use&nbsp;! (non-nullable)&nbsp;type marker in GraphQL to perform such validation. The syntax for using the&nbsp;!&nbsp;type marker is as given below \u2212 The above syntax [&hellip;]<\/p>\n",
            "protected": false
        },
        "author": 2,
        "featured_media": 1827,
        "comment_status": "open",
        "ping_status": "open",
        "sticky": false,
        "template": "",
        "format": "standard",
        "meta": [],
        "categories": [
            18,
            85,
            166
        ],
        "tags": [],
        "_links": {
            "self": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/791"
                }
            ],
            "collection": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts"
                }
            ],
            "about": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/types\/post"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/users\/2"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/comments?post=791"
                }
            ],
            "version-history": [
                {
                    "count": 4,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/791\/revisions"
                }
            ],
            "predecessor-version": [
                {
                    "id": 2001,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/posts\/791\/revisions\/2001"
                }
            ],
            "wp:featuredmedia": [
                {
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media\/1827"
                }
            ],
            "wp:attachment": [
                {
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/media?parent=791"
                }
            ],
            "wp:term": [
                {
                    "taxonomy": "category",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/categories?post=791"
                },
                {
                    "taxonomy": "post_tag",
                    "embeddable": true,
                    "href": "https:\/\/angular.foobrdigital.com\/wp-json\/wp\/v2\/tags?post=791"
                }
            ],
            "curies": [
                {
                    "name": "wp",
                    "href": "https:\/\/api.w.org\/{rel}",
                    "templated": true
                }
            ]
        }
    }
]