[
  {
    "id": 3949,
    "date": "2020-08-13T06:14:26",
    "date_gmt": "2020-08-13T06:14:26",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=6"
    },
    "modified": "2020-08-13T06:14:26",
    "modified_gmt": "2020-08-13T06:14:26",
    "slug": "html-tutorial",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-tutorial/",
    "title": {
      "rendered": "HTML Tutorial"
    },
    "content": {
      "rendered": "\n<p><strong>HTML tutorial</strong>&nbsp;or HTML 5 tutorial provides basic and advanced concepts of HTML. Our HTML tutorial is developed for beginners and professionals. In our tutorial, every topic is given step-by-step so that you can learn it in a very easy way. If you are new in learning HTML, then you can learn HTML from basic to a professional level and after learning HTML with CSS and JavaScript you will be able to create your own interactive and dynamic website. But Now We will focus on HTML only in this tutorial.</p>\n\n\n\n<p>The major points of HTML are given below:</p>\n\n\n\n<ul><li>HTML stands for HyperText Markup Language.</li><li>HTML is used to create web pages and web applications.</li><li>HTML is widely used language on the web.</li><li>We can create a static website by HTML only.</li><li>Technically, HTML is a Markup language rather than a programming language.</li></ul>\n\n\n\n<h2>HTML Example with HTML Editor</h2>\n\n\n\n<p>In this tutorial, you will get a lot of HTML examples, at least one example for each topic with explanation. You can also edit and run these examples, with our online HTML editor. Learning HTML is fun, and it&#8217;s very easy to learn.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE>  \n&lt;html>  \n&lt;head>  \n&lt;title>Web page title&lt;/title>  \n&lt;/head>  \n&lt;body>  \n&lt;h1>Write Your First Heading&lt;/h1>  \n&lt;p>Write Your First Paragraph.&lt;/p>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>HTML tutorial&nbsp;or HTML 5 tutorial provides basic and advanced concepts of HTML. Our HTML tutorial is developed for beginners and professionals. In our tutorial, every topic is given step-by-step so that you can learn it in a very easy way. If you are new in learning HTML, then you can learn HTML from basic to [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3949"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3949"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3949/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3949"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3949"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3949"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3950,
    "date": "2020-08-13T06:15:34",
    "date_gmt": "2020-08-13T06:15:34",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=8"
    },
    "modified": "2020-08-13T06:15:34",
    "modified_gmt": "2020-08-13T06:15:34",
    "slug": "what-is-html",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/what-is-html/",
    "title": {
      "rendered": "What is HTML"
    },
    "content": {
      "rendered": "\n<p>HTML is an acronym which stands for&nbsp;<strong>Hyper Text Markup Language</strong>&nbsp;which is used for creating web pages and web applications. Let&#8217;s see what is meant by Hypertext Markup Language, and Web page.</p>\n\n\n\n<p><strong>Hyper Text:</strong>&nbsp;HyperText simply means &#8220;Text within Text.&#8221; A text has a link within it, is a hypertext. Whenever you click on a link which brings you to a new webpage, you have clicked on a hypertext. HyperText is a way to link two or more web pages (HTML documents) with each other.</p>\n\n\n\n<p><strong>Markup language:</strong>&nbsp;A markup language is a computer language that is used to apply layout and formatting conventions to a text document. Markup language makes text more interactive and dynamic. It can turn text into images, tables, links, etc.</p>\n\n\n\n<p><strong>Web Page:</strong>&nbsp;A web page is a document which is commonly written in HTML and translated by a web browser. A web page can be identified by entering an URL. A Web page can be of the static or dynamic type.&nbsp;<strong>With the help of HTML only, we can create static web pages</strong>.</p>\n\n\n\n<p>Hence, HTML is a markup language which is used for creating attractive web pages with the help of styling, and which looks in a nice format on a web browser. An HTML document is made of many HTML tags and each HTML tag contains different content.</p>\n\n\n\n<p><strong>Let&#8217;s see a simple example of HTML.</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE>  \n&lt;html>  \n&lt;head>  \n&lt;title>Web page title&lt;/title>  \n&lt;/head>  \n&lt;body>  \n&lt;h1>Write Your First Heading&lt;/h1>  \n&lt;p>Write Your First Paragraph.&lt;/p>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p><ins><ins></ins></ins></p>\n\n\n\n<h2>Description of HTML Example</h2>\n\n\n\n<p><strong>&lt;!DOCTYPE&gt;:</strong>&nbsp;It defines the document type or it instruct the browser about the version of HTML.</p>\n\n\n\n<p><strong>&lt;html &gt;</strong>&nbsp;:This tag informs the browser that it is an HTML document. Text between html tag describes the web document. It is a container for all other elements of HTML except &lt;!DOCTYPE&gt;</p>\n\n\n\n<p><strong>&lt;head&gt;:</strong>&nbsp;It should be the first element inside the &lt;html&gt; element, which contains the metadata(information about the document). It must be closed before the body tag opens.</p>\n\n\n\n<p><strong>&lt;title&gt;:</strong>&nbsp;As its name suggested, it is used to add title of that HTML page which appears at the top of the browser window. It must be placed inside the head tag and should close immediately. (Optional)</p>\n\n\n\n<p><strong>&lt;body&gt;&nbsp;</strong>: Text between body tag describes the body content of the page that is visible to the end user. This tag contains the main content of the HTML document.</p>\n\n\n\n<p><strong>&lt;h1&gt;</strong>&nbsp;: Text between &lt;h1&gt; tag describes the first level heading of the webpage.</p>\n\n\n\n<p><strong>&lt;p&gt;&nbsp;</strong>: Text between &lt;p&gt; tag describes the paragraph of the webpage.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Brief History of HTML</h2>\n\n\n\n<p>In the late 1980&#8217;s , a physicist, Tim Berners-Lee who was a contractor at CERN, proposed a system for CERN researchers. In 1989, he wrote a memo proposing an internet based hypertext system.</p>\n\n\n\n<p><strong>Tim Berners-Lee</strong>&nbsp;is known as the father of HTML. The first available description of HTML was a document called &#8220;HTML Tags&#8221; proposed by Tim in late 1991. The latest version of HTML is HTML5, which we will learn later in this tutorial.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML Versions</h2>\n\n\n\n<p>Since the time HTML was invented there are lots of HTML versions in market, the brief introduction about the HTML version is given below:</p>\n\n\n\n<p><strong>HTML 1.0:</strong>&nbsp;The first version of HTML was 1.0, which was the barebones version of HTML language, and it was released in1991.</p>\n\n\n\n<p><strong>HTML 2.0:</strong>&nbsp;This was the next version which was released in 1995, and it was standard language version for website design. HTML 2.0 was able to support extra features such as form-based file upload, form elements such as text box, option button, etc.</p>\n\n\n\n<p><strong>HTML 3.2:</strong>&nbsp;HTML 3.2 version was published by W3C in early 1997. This version was capable of creating tables and providing support for extra options for form elements. It can also support a web page with complex mathematical equations. It became an official standard for any browser till January 1997. Today it is practically supported by most of the browsers.</p>\n\n\n\n<p><strong>HTML 4.01:</strong>&nbsp;HTML 4.01 version was released on December 1999, and it is a very stable version of HTML language. This version is the current official standard, and it provides added support for stylesheets (CSS) and scripting ability for various multimedia elements.</p>\n\n\n\n<p><strong>HTML5 :</strong>&nbsp;HTML5 is the newest version of HyperText Markup language. The first draft of this version was announced in January 2008. There are two major organizations one is W3C (World Wide Web Consortium), and another one is WHATWG( Web Hypertext Application Technology Working Group) which are involved in the development of HTML 5 version, and still, it is under development.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Features of HTML</h2>\n\n\n\n<p>1) It is a very&nbsp;<strong>easy and simple language</strong>. It can be easily understood and modified.</p>\n\n\n\n<p>2) It is very easy to make an&nbsp;<strong>effective presentation</strong>&nbsp;with HTML because it has a lot of formatting tags.</p>\n\n\n\n<p>3) It is a&nbsp;<strong>markup language</strong>, so it provides a flexible way to design web pages along with the text.</p>\n\n\n\n<p>4) It facilitates programmers to add a&nbsp;<strong>link</strong>&nbsp;on the web pages (by html anchor tag), so it enhances the interest of browsing of the user.</p>\n\n\n\n<p>5) It is&nbsp;<strong>platform-independent</strong>&nbsp;because it can be displayed on any platform like Windows, Linux, and Macintosh, etc.</p>\n\n\n\n<p>6) It facilitates the programmer to add&nbsp;<strong>Graphics, Videos, and Sound</strong>&nbsp;to the web pages which makes it more attractive and interactive.</p>\n\n\n\n<p>7) HTML is a case-insensitive language, which means we can use tags either in lower-case or upper-case.</p>\n\n\n\n<h4>NOTE: It is recommended to write all tags in lower-case for consistency, readability, etc.</h4>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>HTML is an acronym which stands for&nbsp;Hyper Text Markup Language&nbsp;which is used for creating web pages and web applications. Let&#8217;s see what is meant by Hypertext Markup Language, and Web page. Hyper Text:&nbsp;HyperText simply means &#8220;Text within Text.&#8221; A text has a link within it, is a hypertext. Whenever you click on a link which [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3950"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3950"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3950/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3950"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3950"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3950"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3951,
    "date": "2020-08-13T06:16:32",
    "date_gmt": "2020-08-13T06:16:32",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=10"
    },
    "modified": "2020-08-13T06:16:32",
    "modified_gmt": "2020-08-13T06:16:32",
    "slug": "html-text-editors",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-text-editors/",
    "title": {
      "rendered": "HTML text Editors"
    },
    "content": {
      "rendered": "\n<ul><li>An HTML file is a text file, so to create an HTML file we can use any text editors.</li><li>Text editors are the programs which allow editing in a written text, hence to create a web page we need to write our code in some text editor.</li><li>There are various types of text editors available which you can directly download, but for a beginner, the best text editor is Notepad (Windows) or TextEdit (Mac).</li><li>After learning the basics, you can easily use other professional text editors which are,&nbsp;<strong>Notepad++, Sublime Text, Vim, etc</strong>.</li><li>In our tutorial, we will use Notepad and sublime text editor. Following are some easy ways to create your first web page with Notepad, and sublime text.</li></ul>\n\n\n\n<h2>A. HTML code with Notepad. (Recommended for Beginners)</h2>\n\n\n\n<p>Notepad is a simple text editor and suitable for beginners to learn HTML. It is available in all versions of Windows, from where you easily access it.</p>\n\n\n\n<p><strong>Step 1: Open Notepad (Windows)</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/text-editors.png\" alt=\"text Editors\"/></figure>\n\n\n\n<p><strong>Step 2: Write code in HTML</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/text-editors2.png\" alt=\"text Editors\"/></figure>\n\n\n\n<p><strong>Step 3: Save the HTML file with .htm or .html extension.</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/text-editors3.png\" alt=\"text Editors\"/></figure>\n\n\n\n<p><strong>Step 4: Open the HTML page in your web browser.</strong></p>\n\n\n\n<p>To run the HTML page, you need to open the file location, where you have saved the file and then either double-click on file or click on open with option</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/text-editors4.png\" alt=\"text Editors\"/></figure>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/text-editors5.png\" alt=\"text Editors\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>B. HTML code with Sublime Text-editor.(Recommended after learning basics of HTML)</h2>\n\n\n\n<p>When you will learn the basics of HTML, then you can use some professional text editors, which will help you to write an efficient and fast code. So to use Sublime Text editors, first it needs to download and install from internet. You can easily download it from this https://www.sublimetext.com/download link and can install in your PC. When installation of Sublime text editor done then you can follow the simple steps to use it:</p>\n\n\n\n<p><strong>Step 1: Open Sublime Text editor(Windows 8):</strong></p>\n\n\n\n<p>To open Sublime Text editor go to&nbsp;<strong>Start screen ⤏ type Sublime Text⤏ Open</strong>&nbsp;it. To open a new page press&nbsp;<strong>CTRL+N.</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/text-editors6.png\" alt=\"text Editors\"/></figure>\n\n\n\n<p><strong>Step 2: Save the page before writing any code.</strong></p>\n\n\n\n<p>To save your page in Sublime Text press Ctrl+S or go to File option ⤏ save, to save a file use extension .htm or .html. We recommend to save the file first then write the code because after saving the page sublime text editor will give you suggestions to write code.</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/text-editors7.png\" alt=\"text Editors\"/></figure>\n\n\n\n<p><strong>Step 3: Write the code in Sublime Text editor</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/text-editors8.png\" alt=\"text Editors\"/></figure>\n\n\n\n<p><strong>Step 4: Open the HTML page in your Browser</strong></p>\n\n\n\n<p>To execute or open this page in Web browser just&nbsp;<strong>right click</strong>&nbsp;by mouse on sublime text page and click on&nbsp;<strong>Open in Browser</strong>.</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/text-editors9.png\" alt=\"text Editors\"/></figure>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/text-editors10.png\" alt=\"text Editors\"/></figure>\n\n\n\n<h4>Note: You can execute HTML file in any browser, but there are some tags which are not supported by Some Web browser.</h4>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>An HTML file is a text file, so to create an HTML file we can use any text editors. Text editors are the programs which allow editing in a written text, hence to create a web page we need to write our code in some text editor. There are various types of text editors available [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3951"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3951"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3951/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3951"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3951"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3951"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3952,
    "date": "2020-08-13T06:18:28",
    "date_gmt": "2020-08-13T06:18:28",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=12"
    },
    "modified": "2020-08-13T06:18:28",
    "modified_gmt": "2020-08-13T06:18:28",
    "slug": "building-blocks-of-html",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/building-blocks-of-html/",
    "title": {
      "rendered": "Building blocks of HTML"
    },
    "content": {
      "rendered": "\n<p>An HTML document consist of its basic building blocks which are:</p>\n\n\n\n<ul><li><strong>Tags:</strong>&nbsp;An HTML tag surrounds the content and apply meaning to it. It is written between &lt; and &gt; brackets.</li><li><strong>Attribute:</strong>&nbsp;An attribute in HTML provides extra information about the element, and it is applied within the start tag. An HTML attribute contains two fields: name &amp; value.</li></ul>\n\n\n\n<h2>Syntax</h2>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;tag name  attribute_name= \" attr_value\"> content &lt;/ tag name>   </code></pre>\n\n\n\n<ul><li><strong>Elements:</strong>&nbsp;An HTML element is an individual component of an HTML file. In an HTML file, everything written within tags are termed as HTML elements.</li></ul>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-building-blocks.png\" alt=\"HTML Building blocks \"/></figure>\n\n\n\n<h2>Example:</h2>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n  &lt;head>  \n    &lt;title>The basic building blocks of HTML&lt;/title>  \n &lt;/head>  \n  &lt;body>  \n       &lt;h2>The building blocks&lt;/h2>  \n       &lt;p>This is a paragraph tag&lt;/p>  \n       &lt;p style=\"color: red\">The style is attribute of paragraph tag&lt;/p>  \n       &lt;span>The element contains tag, attribute and content&lt;/span>  \n  &lt;/body>  \n&lt;/html>   </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h2>The building blocks</h2>\n\n\n\n<p>This is a paragraph tag</p>\n\n\n\n<p>The style is attribute of paragraph tagThe element contains tag, attribute and content</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>An HTML document consist of its basic building blocks which are: Tags:&nbsp;An HTML tag surrounds the content and apply meaning to it. It is written between &lt; and &gt; brackets. Attribute:&nbsp;An attribute in HTML provides extra information about the element, and it is applied within the start tag. An HTML attribute contains two fields: name [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3952"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3952"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3952/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3952"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3952"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3952"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3953,
    "date": "2020-08-13T06:34:06",
    "date_gmt": "2020-08-13T06:34:06",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=16"
    },
    "modified": "2020-08-13T06:34:06",
    "modified_gmt": "2020-08-13T06:34:06",
    "slug": "html-attribute",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-attribute/",
    "title": {
      "rendered": "HTML Attribute"
    },
    "content": {
      "rendered": "\n<ul><li>HTML attributes are special words which provide additional information about the elements or attributes are the modifier of the HTML element.</li><li>Each element or tag can have attributes, which defines the behaviour of that element.</li><li>Attributes should always be applied with start tag.</li><li>The Attribute should always be applied with its name and value pair.</li><li>The Attributes name and values are case sensitive, and it is recommended by W3C that it should be written in Lowercase only.</li><li>You can add multiple attributes in one HTML element, but need to give space between two attributes.</li></ul>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Syntax</h2>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;element attribute_name=\"value\">content&lt;/element>  </code></pre>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Example</h2>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;head>  \n&lt;/head>  \n&lt;body>  \n    &lt;h1> This is Style attribute&lt;/h1>  \n   &lt;p style=\"height: 50px; color: blue\">It will add style property in element&lt;/p>  \n    &lt;p style=\"color: red\">It will change the color of content&lt;/p>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-attribute.png\" alt=\"HTML Attribute\"/></figure>\n\n\n\n<p><strong>Explanation of above example:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;p style=\"height: 50px; color: blue\">It will add style property in element&lt;/p>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p>In the above statement, we have used paragraph tags in which we have applied style attribute. This attribute is used for applying CSS property on any HTML element. It provides height to paragraph element of 50px and turns it colour to blue.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;p style=\"color: red\">It will change the color of content&lt;/p>  </code></pre>\n\n\n\n<p>In the above statement we have again used style attribute in paragraph tag, which turns its colour red.</p>\n\n\n\n<h4>Note: There are some commonly used attributes are given below, and the complete list and explanation of all attributes are given in HTML attributes List.</h4>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>The title attribute in HTML</h2>\n\n\n\n<p><strong>Description:</strong>&nbsp;The title attribute is used as text tooltip in most of the browsers. It display its text when user move the cursor over a link or any text. You can use it with any text or link to show the description about that link or text. In our example, we are taking this with paragraph tag and heading tag.</p>\n\n\n\n<h2>Example</h2>\n\n\n\n<p><strong>With &lt;h1&gt; tag:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;h1 title=\"This is heading tag\">Example of title attribute&lt;/h1>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>With &lt;p&gt; tag:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;p title=\"This is paragraph tag\">Move the cursor over the heading and paragraph, and you will see a description as a tooltip&lt;/p>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Code:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n  &lt;head>  \n &lt;/head>  \n&lt;body>  \n      \n  &lt;h1 title=\"This is heading tag\">Example of title attribute&lt;/h1>  \n  &lt;p title=\"This is paragraph tag\">Move the cursor over the heading and paragraph, and you will see a description as a tooltip&lt;/p>  \n  \n&lt;/body>  \n&lt;/html> </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-title-attribute.png\" alt=\"Title Attribute\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>The href attribute in HTML</h2>\n\n\n\n<p><strong>Description:</strong>&nbsp;The href attribute is the main attribute of &lt;a&gt; anchor tag. This attribute gives the link address which is specified in that link.&nbsp;<strong>The href attribute provides the hyperlink, and if it is blank, then it will remain in same page</strong>.</p>\n\n\n\n<h2>Example</h2>\n\n\n\n<p><strong>With link address:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;a href=\"https://www.codemeals.com/html-anchor\">This is a link&lt;/a>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Without link address:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;a href=\"\">This is a link&lt;/a>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-href-attribute.png\" alt=\"HTML Attribute\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>The src Attribute</h2>\n\n\n\n<p>The&nbsp;<strong>src</strong>&nbsp;attribute is one of the important and required attribute of&nbsp;<strong>&lt;img&gt;</strong>&nbsp;element. It is source for the image which is required to display on browser. This attribute can contain image in same directory or another directory. The image name or source should be correct else browser will not display the image.</p>\n\n\n\n<h2>Example</h2>\n\n\n\n<ol><li><strong>&lt;</strong><strong>img</strong>&nbsp;src=&#8221;whitepeacock.jpg&#8221;&nbsp;height=&#8221;400&#8243;&nbsp;width=&#8221;600&#8243;<strong>&gt;</strong>&nbsp;&nbsp;</li></ol>\n\n\n\n<p>Test it Now</p>\n\n\n\n<h4>Note: The above example also have height and width attribute, which define the height and width of image on web page.</h4>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-src-attribute.png\" alt=\"HTML Attribute\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Quotes: single quotes or double quotes?</h2>\n\n\n\n<p>In this chapter you have seen that, we have used attribute with double quotes, but some people might use single quotes in HTML. So use of single quotes with HTML attribute, is also allowed. The following both statements are absolutely fine.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;a href=\"https://www.codemeals.com\">A link to HTML.&lt;/a>  \n&lt;a href='https://www.codemeals.com'>A link to HTML.&lt;/a>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p>IN HTML5, you can also omit use of quotes around attribute values.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;a href=https://www.codemeals.com>A link to HTML.&lt;/a>  </code></pre>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>HTML attributes are special words which provide additional information about the elements or attributes are the modifier of the HTML element. Each element or tag can have attributes, which defines the behaviour of that element. Attributes should always be applied with start tag. The Attribute should always be applied with its name and value pair. [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3953"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3953"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3953/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3953"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3953"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3953"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3954,
    "date": "2020-08-13T06:37:15",
    "date_gmt": "2020-08-13T06:37:15",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=19"
    },
    "modified": "2020-08-13T06:37:15",
    "modified_gmt": "2020-08-13T06:37:15",
    "slug": "html-elements",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-elements/",
    "title": {
      "rendered": "HTML Elements"
    },
    "content": {
      "rendered": "\n<p>An HTML file is made of elements. These elements are responsible for creating web pages and define content in that webpage. An element in HTML usually consist of a start tag &lt;tag name&gt;, close tag &lt;/tag name&gt; and content inserted between them.&nbsp;<strong>Technically, an element is a collection of start tag, attributes, end tag, content between them</strong>.</p>\n\n\n\n<h4>Note: Some elements does not have end tag and content, these elements are termed as empty elements or self-closing element or void elements.</h4>\n\n\n\n<p>Such as:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;p> Hello world!!! &lt;/p>   </code></pre>\n\n\n\n<h2>Example</h2>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;head>  \n    &lt;title>WebPage&lt;/title>  \n&lt;/head>  \n&lt;body>  \n   &lt;h1>This is my first web page&lt;/h1>  \n    &lt;h2> How it looks?&lt;/h2>  \n     &lt;p>It looks Nice!!!!!&lt;/p>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-elements.png\" alt=\"HTML Elements\"/></figure>\n\n\n\n<ul><li>All the content written between body elements are visible on web page.</li></ul>\n\n\n\n<p><strong>Void element:</strong>&nbsp;All the elements in HTML do not require to have start tag and end tag, some elements does not have content and end tag such elements are known as Void elements or empty elements.&nbsp;<strong>These elements are also called as unpaired tag</strong>.</p>\n\n\n\n<p><strong>Some Void elements are &lt;br&gt; (represents a line break) , &lt;hr&gt;(represents a horizontal line), etc.</strong></p>\n\n\n\n<p><strong>Nested HTML Elements:</strong>&nbsp;HTML can be nested, which means an element can contain another element.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Block-level and Inline HTML elements</h2>\n\n\n\n<p>For the default display and styling purpose in HTML, all the elements are divided into two categories:</p>\n\n\n\n<ul><li>Block-level element</li><li>Inline element</li></ul>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Block-level element:</h2>\n\n\n\n<ul><li>These are the elements, which structure main part of web page, by dividing a page into coherent blocks.</li><li>A block-level element always start with new line and takes the full width of web page, from left to right.</li><li>These elements can contain block-level as well as inline elements.</li></ul>\n\n\n\n<p>Following are the block-level elements in HTML.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;address>, &lt;article>, &lt;aside>, &lt;blockquote>, &lt;canvas>, &lt;dd>, &lt;div>, &lt;dl>, &lt;dt>, &lt;fieldset>, &lt;figcaption>, &lt;figure>, &lt;footer>, &lt;form>, &lt;h1>-&lt;h6>, &lt;header>, &lt;hr>, &lt;li>, &lt;main>, &lt;nav>, &lt;noscript>, &lt;ol>, &lt;output>, &lt;p>, &lt;pre>, &lt;section>, &lt;table>, &lt;tfoot>, &lt;ul> and &lt;video>.</code></pre>\n\n\n\n<h4>Note: All these elements are described in later chapters.</h4>\n\n\n\n<h2>Example:</h2>\n\n\n\n<pre class=\"wp-block-code\"><code></code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-block-level-and-inline-elements.png\" alt=\"Block-level and Inline HTML elements\"/></figure>\n\n\n\n<p>In the above example we have usedtag, which defines a section in a web page, and takes full width of page.</p>\n\n\n\n<p>We have used style attribute which is used to styling the HTML content, and the background color are showing that it&#8217;s a block level element.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Inline elements:</h2>\n\n\n\n<ul><li>Inline elements are those elements, which differentiate the part of a given text and provide it a particular function.</li><li>These elements does not start with new line and take width as per requirement.</li><li>The Inline elements are mostly used with other elements.</li><li></li></ul>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;a>, &lt;abbr>, &lt;acronym>, &lt;b>, &lt;bdo>, &lt;big>, &lt;br>, &lt;button>, &lt;cite>, &lt;code>, &lt;dfn>, &lt;em>, &lt;i>, &lt;img>, &lt;input>, &lt;kbd>, &lt;label>, &lt;map>, &lt;object>, &lt;q>, &lt;samp>, &lt;script>, &lt;select>, &lt;small>, &lt;span>, &lt;strong>, &lt;sub>, &lt;sup>, &lt;textarea>, &lt;time>, &lt;tt>, &lt;var></code></pre>\n\n\n\n<h2>Example:</h2>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n    &lt;head>  \n    &lt;/head>  \n&lt;body>  \n    &lt;a href=\"https://www.codemeals.com/html-tutorial\">Click on link&lt;/a>  \n    &lt;span style=\"background-color: lightblue\">this is inline element&lt;/span>  \n    &lt;p>This will take width of text only&lt;/p>  \n &lt;/body>  \n&lt;/html>   </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong><img src=\"https://static.javatpoint.com/htmlpages/images/html-block-level-and-inline-elements2.png\" alt=\"Block-level and Inline HTML elements\"></p>\n\n\n\n<p>Following is the list of the some main elements used in HTML:</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Start tag</th><th>Content</th><th>End tag</th><th>Description</th></tr><tr><td>&lt;h1&gt; &#8230;&#8230; &lt;h6&gt;</td><td>These are headings of HTML</td><td>&lt;/h1&gt;??..&lt;/h6&gt;</td><td>These elements are used to provide the headings of page.</td></tr><tr><td>&lt;p&gt;</td><td>This is the paragraph</td><td>&lt;/p&gt;</td><td>This element is used to display a content in form of paragraph.</td></tr><tr><td>&lt;div&gt;</td><td>This is div section</td><td>&lt;/div&gt;</td><td>This element is used to provide a section in web page.</td></tr><tr><td>&lt;br&gt;</td><td></td><td></td><td>This element is used to provide a line break. ( void element)</td></tr><tr><td>&lt;hr&gt;</td><td></td><td></td><td>This element is used to provide a horizontal line. (void element)</td></tr></tbody></table></figure>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>An HTML file is made of elements. These elements are responsible for creating web pages and define content in that webpage. An element in HTML usually consist of a start tag &lt;tag name&gt;, close tag &lt;/tag name&gt; and content inserted between them.&nbsp;Technically, an element is a collection of start tag, attributes, end tag, content between [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3954"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3954"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3954/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3954"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3954"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3954"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3955,
    "date": "2020-08-13T06:42:16",
    "date_gmt": "2020-08-13T06:42:16",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=21"
    },
    "modified": "2020-08-13T06:42:16",
    "modified_gmt": "2020-08-13T06:42:16",
    "slug": "html-formatting",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-formatting/",
    "title": {
      "rendered": "HTML Formatting"
    },
    "content": {
      "rendered": "\n<p><strong>HTML Formatting</strong>&nbsp;is a process of formatting text for better look and feel. HTML provides us ability to format text without using CSS. There are many formatting tags in HTML. These tags are used to make text bold, italicized, or underlined. There are almost 14 options available that how text appears in HTML and XHTML.</p>\n\n\n\n<p>In HTML the formatting tags are divided into two categories:</p>\n\n\n\n<ul><li>Physical tag: These tags are used to provide the visual appearance to the text.</li><li>Logical tag: These tags are used to add some logical or semantic value to the text.</li></ul>\n\n\n\n<h4>NOTE: There are some physical and logical tags which may give same visual appearance, but they will be different in semantics.</h4>\n\n\n\n<p>Here, we are going to learn 14 HTML formatting tags. Following is the list of HTML formatting text.</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Element name</th><th>Description</th></tr><tr><td>&lt;b&gt;</td><td>This is a physical tag, which is used to bold the text written between it.</td></tr><tr><td>&lt;strong&gt;</td><td>This is a logical tag, which tells the browser that the text is important.</td></tr><tr><td>&lt;i&gt;</td><td>This is a physical tag which is used to make text italic.</td></tr><tr><td>&lt;em&gt;</td><td>This is a logical tag which is used to display content in italic.</td></tr><tr><td>&lt;mark&gt;</td><td>This tag is used to highlight text.</td></tr><tr><td>&lt;u&gt;</td><td>This tag is used to underline text written between it.</td></tr><tr><td>&lt;tt&gt;</td><td>This tag is used to appear a text in teletype. (not supported in HTML5)</td></tr><tr><td>&lt;strike&gt;</td><td>This tag is used to draw a strikethrough on a section of text. (Not supported in HTML5)</td></tr><tr><td>&lt;sup&gt;</td><td>It displays the content slightly above the normal line.</td></tr><tr><td>&lt;sub&gt;</td><td>It displays the content slightly below the normal line.</td></tr><tr><td>&lt;del&gt;</td><td>This tag is used to display the deleted content.</td></tr><tr><td>&lt;ins&gt;</td><td>This tag displays the content which is added</td></tr><tr><td>&lt;big&gt;</td><td>This tag is used to increase the font size by one conventional unit.</td></tr><tr><td>&lt;small&gt;</td><td>This tag is used to decrease the font size by one unit from base font size.</td></tr></tbody></table></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>1) Bold Text</h2>\n\n\n\n<p>HTML&lt;b&gt; and &lt;strong&gt; formatting elements</p>\n\n\n\n<p>The HTML &lt;b&gt; element is a physical tag which display text in bold font, without any logical importance. If you write anything within &lt;b&gt;&#8230;&#8230;&#8230;&#8230;&lt;/b&gt; element, is shown in bold letters.</p>\n\n\n\n<p>See this example:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;p> &lt;b>Write Your First Paragraph in bold text.&lt;/b>&lt;/p>     </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<p><strong>Write Your First Paragraph in bold text.</strong></p>\n\n\n\n<p>The HTML &lt;strong&gt; tag is a logical tag, which displays the content in bold font and informs the browser about its logical importance. If you write anything between &lt;strong&gt;???????. &lt;/strong&gt;, is shown important text.</p>\n\n\n\n<p>See this example:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;head>  \n    &lt;title>formatting elements&lt;/title>  \n&lt;/head>  \n&lt;body>  \n&lt;h1>Explanation of formatting element&lt;/h1>  \n&lt;p>&lt;strong>This is an important content&lt;/strong>, and this is normal content&lt;/p>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<p><strong>This is an important content, and this is normal content</strong></p>\n\n\n\n<h3>Example</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;head>  \n    &lt;title>formatting elements&lt;/title>  \n&lt;/head>  \n&lt;body>  \n&lt;h1>Explanation of formatting element&lt;/h1>  \n&lt;p>&lt;strong>This is an important content&lt;/strong>, and this is normal content&lt;/p>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>2) Italic Text</h2>\n\n\n\n<p><strong>HTML &lt;i&gt; and &lt;em&gt; formatting elements</strong></p>\n\n\n\n<p>The HTML &lt;i&gt; element is physical element, which display the enclosed content in italic font, without any added importance. If you write anything within &lt;i&gt;&#8230;&#8230;&#8230;&#8230;&lt;/i&gt; element, is shown in italic letters.</p>\n\n\n\n<p>See this example:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;p> &lt;i>Write Your First Paragraph in italic text.&lt;/i>&lt;/p></code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<p><em>Write Your First Paragraph in italic text.</em></p>\n\n\n\n<p>The HTML &lt;em&gt; tag is a logical element, which will display the enclosed content in italic font, with added semantics importance.</p>\n\n\n\n<p><strong>See this example:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;p>&lt;em>This is an important content&lt;/em>, which displayed in italic font.&lt;/p>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<p><em>This is an important content</em>, which displayed in italic font.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;head>  \n    &lt;title>formatting elements&lt;/title>  \n&lt;/head>  \n&lt;body>  \n&lt;h1>Explanation of italic formatting element&lt;/h1>  \n&lt;p>&lt;em>This is an important content&lt;/em>, which displayed in italic font.&lt;/p>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p><ins><ins></ins></ins></p>\n\n\n\n<h2>3) HTML Marked formatting</h2>\n\n\n\n<p>If you want to mark or highlight a text, you should write the content within &lt;mark&gt;&#8230;&#8230;&#8230;&lt;/mark&gt;.</p>\n\n\n\n<p>See this example:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;h2>  I want to put a &lt;mark> Mark&lt;/mark> on your face&lt;/h2>   </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h2>I want to put a&nbsp;<mark>Mark</mark>&nbsp;on your face</h2>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>4) Underlined Text</h2>\n\n\n\n<p>If you write anything within &lt;u&gt;&#8230;&#8230;&#8230;&lt;/u&gt; element, is shown in underlined text.</p>\n\n\n\n<p>See this example:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;p>Hello &lt;tt>Write Your First Paragraph in monospaced font.&lt;/tt>&lt;/p>   </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<p>Write Your First Paragraph in underlined text.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>5) Strike Text</h2>\n\n\n\n<p>Anything written within &lt;strike&gt;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;..&lt;/strike&gt; element is displayed with strikethrough. It is a thin line which cross the statement.</p>\n\n\n\n<p>See this example:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;p>Hello &lt;tt>Write Your First Paragraph in monospaced font.&lt;/tt>&lt;/p>   </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<p>Write Your First Paragraph with strikethrough.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>6) Monospaced Font</h2>\n\n\n\n<p>If you want that each letter has the same width then you should write the content within &lt;tt&gt;&#8230;&#8230;&#8230;&#8230;.&lt;/tt&gt; element.</p>\n\n\n\n<p>Note: We know that most of the fonts are known as variable-width fonts because different letters have different width. (for example: &#8216;w&#8217; is wider than &#8216;i&#8217;). Monospaced Font provides similar space among every letter.</p>\n\n\n\n<p>See this example:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;p>Hello &lt;tt>Write Your First Paragraph in monospaced font.&lt;/tt>&lt;/p>   </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<p>Hello&nbsp;Write Your First Paragraph in monospaced font.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>7) Superscript Text</h2>\n\n\n\n<p>If you put the content within &lt;sup&gt;&#8230;&#8230;&#8230;&#8230;..&lt;/sup&gt; element, is shown in superscript; means it is displayed half a character&#8217;s height above the other characters.</p>\n\n\n\n<p>See this example:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;p>Hello &lt;sup>Write Your First Paragraph in superscript.&lt;/sup>&lt;/p></code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<p>Hello&nbsp;<sup>Write Your First Paragraph in superscript.</sup></p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>8) Subscript Text</h2>\n\n\n\n<p>If you put the content within &lt;sub&gt;&#8230;&#8230;&#8230;&#8230;..&lt;/sub&gt; element, is shown in subscript ; means it is displayed half a character&#8217;s height below the other characters.</p>\n\n\n\n<p>See this example:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;p>Hello &lt;sub>Write Your First Paragraph in subscript.&lt;/sub>&lt;/p>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<p>Hello&nbsp;<sub>Write Your First Paragraph in subscript.</sub></p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>9) Deleted Text</h2>\n\n\n\n<p>Anything that puts within &lt;del&gt;&#8230;&#8230;&#8230;.&lt;/del&gt; is displayed as deleted text.</p>\n\n\n\n<p>See this example:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;p>Hello &lt;del>Delete your first paragraph.&lt;/del>&lt;/p>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong>Hello</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>10) Inserted Text</h2>\n\n\n\n<p>Anything that puts within &lt;ins&gt;&#8230;&#8230;&#8230;.&lt;/ins&gt; is displayed as inserted text.</p>\n\n\n\n<p>See this example:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;p> &lt;del>Delete your first paragraph.&lt;/del>&lt;ins>Write another paragraph.&lt;/ins>&lt;/p>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<p><del>Delete your first paragraph.</del><ins>Write another paragraph.</ins></p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>11) Larger Text</h2>\n\n\n\n<p>If you want to put your font size larger than the rest of the text then put the content within &lt;big&gt;&#8230;&#8230;&#8230;&lt;/big&gt;. It increase one font size larger than the previous one.</p>\n\n\n\n<p>See this example:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;p>Hello &lt;big>Write the paragraph in larger font.&lt;/big>&lt;/p> </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<p>Hello&nbsp;Write the paragraph in larger font.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>12) Smaller Text</h2>\n\n\n\n<p>If you want to put your font size smaller than the rest of the text then put the content within &lt;small&gt;&#8230;&#8230;&#8230;&lt;/small&gt;tag. It reduces one font size than the previous one.</p>\n\n\n\n<p>See this example:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;p>Hello &lt;small>Write the paragraph in smaller font.&lt;/small>&lt;/p>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<p>Hello&nbsp;<small>Write the paragraph in smaller font.</small></p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>HTML Formatting&nbsp;is a process of formatting text for better look and feel. HTML provides us ability to format text without using CSS. There are many formatting tags in HTML. These tags are used to make text bold, italicized, or underlined. There are almost 14 options available that how text appears in HTML and XHTML. In [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3955"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3955"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3955/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3955"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3955"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3955"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3956,
    "date": "2020-08-13T06:44:14",
    "date_gmt": "2020-08-13T06:44:14",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=23"
    },
    "modified": "2020-08-13T06:44:14",
    "modified_gmt": "2020-08-13T06:44:14",
    "slug": "html-heading",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-heading/",
    "title": {
      "rendered": "HTML Heading"
    },
    "content": {
      "rendered": "\n<p>A HTML heading or HTML h tag can be defined as a title or a subtitle which you want to display on the webpage. When you place the text within the heading tags &lt;h1&gt;&#8230;&#8230;&#8230;&lt;/h1&gt;, it is displayed on the browser in the bold format and size of the text depends on the number of heading.</p>\n\n\n\n<p>There are six different HTML headings which are defined with the &lt;h1&gt; to &lt;h6&gt; tags, from highest level h1 (main heading) to the least level h6 (least important heading).</p>\n\n\n\n<p>h1 is the largest heading tag and h6 is the smallest one. So h1 is used for most important heading and h6 is used for least important.</p>\n\n\n\n<p><strong>Headings in HTML helps the search engine to understand and index the structure of web page.</strong></p>\n\n\n\n<h4>Note: The main keyword of the whole content of a webpage should be display by h1 heading tag.</h4>\n\n\n\n<p>See this example:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;h1>Heading no. 1&lt;/h1>  \n&lt;h2>Heading no. 2&lt;/h2>  \n&lt;h3>Heading no. 3&lt;/h3>  \n&lt;h4>Heading no. 4&lt;/h4>  \n&lt;h5>Heading no. 5&lt;/h5>  \n&lt;h6>Heading no. 6&lt;/h6>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h1>Heading no. 1</h1>\n\n\n\n<h2>Heading no. 2</h2>\n\n\n\n<h3>Heading no. 3</h3>\n\n\n\n<h4>Heading no. 4</h4>\n\n\n\n<h5>Heading no. 5</h5>\n\n\n\n<h6>Heading no. 6</h6>\n\n\n\n<h4>Heading elements (h1&#8230;.h6) should be used for headings only. They should not be used just to make text bold or big.</h4>\n\n\n\n<ul><li><strong>HTML headings can also be used with nested elements. Following are different codes to display the way to use heading elements.</strong></li></ul>\n\n\n\n<p><strong>Example:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n &lt;head>  \n    &lt;title>Heading elements&lt;/title>  \n &lt;/head>  \n &lt;body>  \n     &lt;h1>This is main heading of page. &lt;/h1>  \n      &lt;p>h1 is the most important heading, which is used to display the keyword of page &lt;/p>  \n     &lt;h2>This is first sub-heading&lt;/h2>  \n      &lt;p>h2 describes the first sub heading of page. &lt;/p>  \n     &lt;h3>This is Second sub-heading&lt;/h3>  \n      &lt;p>h3 describes the second sub heading of page.&lt;/p>  \n      &lt;p>We can use h1 to h6 tag to use the different sub-heading with their paragraphs if         \n                     required.   \n                &lt;/p>  \n   &lt;/body>  \n&lt;/html></code></pre>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-heading.png\" alt=\"HTML Heading\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Supporting Browsers</h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><td>Element</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/chrome_browser.png\" alt=\"chrome browser\">&nbsp;Chrome</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/ie_browser.png\" alt=\"ie browser\">&nbsp;IE</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/firefox_browser.png\" alt=\"firefox browser\">&nbsp;Firefox</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/opera_browser.png\" alt=\"opera browser\">&nbsp;Opera</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/safari_browser.png\" alt=\"safari browser\">&nbsp;Safari</td></tr><tr><td>&lt;h1&gt; to &lt;h6&gt;</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td></tr></tbody></table></figure>\n\n\n\n<p><ins></ins></p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>A HTML heading or HTML h tag can be defined as a title or a subtitle which you want to display on the webpage. When you place the text within the heading tags &lt;h1&gt;&#8230;&#8230;&#8230;&lt;/h1&gt;, it is displayed on the browser in the bold format and size of the text depends on the number of heading. [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3956"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3956"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3956/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3956"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3956"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3956"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3957,
    "date": "2020-08-13T06:46:09",
    "date_gmt": "2020-08-13T06:46:09",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=25"
    },
    "modified": "2020-08-13T06:46:09",
    "modified_gmt": "2020-08-13T06:46:09",
    "slug": "html-paragraph",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-paragraph/",
    "title": {
      "rendered": "HTML Paragraph"
    },
    "content": {
      "rendered": "\n<p>HTML paragraph or HTML p tag is used to define a paragraph in a webpage. Let&#8217;s take a simple example to see how it work. It is a notable point that a browser itself add an empty line before and after a paragraph. An HTML &lt;p&gt; tag indicates starting of new paragraph.</p>\n\n\n\n<h4>Note: If we are using various &lt;p&gt; tags in one HTML file then browser automatically adds a single blank line between the two paragraphs.</h4>\n\n\n\n<p>See this example:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;p>This is first paragraph.&lt;/p>  \n&lt;p>This is second paragraph.&lt;/p>  \n&lt;p>This is third paragraph.&lt;/p>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p>Output:</p>\n\n\n\n<p>This is first paragraph.</p>\n\n\n\n<p>This is second paragraph.</p>\n\n\n\n<p>This is third paragraph.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Space inside HTML Paragraph</h2>\n\n\n\n<p>If you put a lot of spaces inside the HTML p tag, browser removes extra spaces and extra line while displaying the page. The browser counts number of spaces and lines as a single one.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;p>  \nI am  \ngoing to provide  \nyou a tutorial on HTML  \nand hope that it will  \nbe very beneficial for you.  \n&lt;/p>  \n&lt;p>  \nLook, I put here a lot  \nof spaces                    but            I know, Browser will ignore it.  \n&lt;/p>  \n&lt;p>  \nYou cannot determine the display of HTML&lt;/p>  \n&lt;p>because resized windows may create different result.  \n&lt;/p>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p>Output:</p>\n\n\n\n<p>I am going to provide you a tutorial on HTML and hope that it will be very beneficial for you.</p>\n\n\n\n<p>Look, I put here a lot of spaces but I know, Browser will ignore it.</p>\n\n\n\n<p>You cannot determine the display of HTML</p>\n\n\n\n<p>because resized windows may create different result.</p>\n\n\n\n<p>As you can see, all the extra lines and unnecessary spaces are removed by the browser.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>How to Use &lt;br&gt; and &lt;hr&gt; tag with paragraph?</h2>\n\n\n\n<p>An HTML &lt;br&gt; tag is used for line break and it can be used with paragraph elements. Following is the example to show how to use &lt;br&gt; with &lt;p&gt; element.</p>\n\n\n\n<p><strong>Example:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n     &lt;head>  \n    &lt;/head>  \n  &lt;body>  \n      &lt;h2> Use of line break with pragraph tag&lt;/h2>  \n          &lt;p>&lt;br>Papa and mama, and baby and Dot,  \n     &lt;br>Willie and me?the whole of the lot  \n               &lt;br>Of us all went over in Bimberlie's sleigh,  \n                 &lt;br>To grandmama's house on Christmas day.  \n          &lt;/p>  \n   &lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-paragraph.png\" alt=\"HTML Paragraph\"/></figure>\n\n\n\n<p>An HTML &lt;hr&gt; tag is used to apply a horizontal line between two statements or two paragraphs. Following is the example which is showing use of &lt;hr&gt; tag with paragraph.</p>\n\n\n\n<p><strong>Example:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n &lt;head>  \n    &lt;/head>  \n &lt;body>  \n   &lt;h2> Example to show a horizontal line with paragraphs&lt;/h2>  \n     &lt;p> An HTML hr tag draw a horizontal line and separate two paragraphs with that line.&lt;hr> it will start a new paragraph.  \n     &lt;/p>  \n  &lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-paragraph2.png\" alt=\"HTML Paragraph\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p><ins><ins></ins></ins></p>\n\n\n\n<h2>Supporting Browsers</h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><td>Element</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/chrome_browser.png\" alt=\"chrome browser\">&nbsp;Chrome</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/ie_browser.png\" alt=\"ie browser\">&nbsp;IE</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/firefox_browser.png\" alt=\"firefox browser\">&nbsp;Firefox</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/opera_browser.png\" alt=\"opera browser\">&nbsp;Opera</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/safari_browser.png\" alt=\"safari browser\">&nbsp;Safari</td></tr><tr><td>&lt;p&gt;</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td></tr></tbody></table></figure>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>HTML paragraph or HTML p tag is used to define a paragraph in a webpage. Let&#8217;s take a simple example to see how it work. It is a notable point that a browser itself add an empty line before and after a paragraph. An HTML &lt;p&gt; tag indicates starting of new paragraph. Note: If we [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3957"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3957"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3957/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3957"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3957"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3957"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3948,
    "date": "2020-08-13T07:23:26",
    "date_gmt": "2020-08-13T07:23:26",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=27"
    },
    "modified": "2020-08-13T07:23:26",
    "modified_gmt": "2020-08-13T07:23:26",
    "slug": "html-phrase-tag",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-phrase-tag/",
    "title": {
      "rendered": "HTML Phrase tag"
    },
    "content": {
      "rendered": "\n<p>The HTML phrase tags are special purpose tags, which defines the structural meaning of a block of text or semantics of text. Following is the list of phrase tags, some of which we have already discussed in HTML formatting.</p>\n\n\n\n<ul><li>Abbreviation tag : &lt;abbr&gt;</li><li>Acronym tag: &lt;acronym&gt; (not supported in HTML5)</li><li>Marked tag: &lt;mark&gt;</li><li>Strong tag: &lt;strong&gt;</li><li>Emphasized tag : &lt;em&gt;</li><li>Definition tag: &lt;dfn&gt;</li><li>Quoting tag: &lt;blockquote&gt;</li><li>Short quote tag : &lt;q&gt;</li><li>Code tag: &lt;code&gt;</li><li>Keyboard tag: &lt;kbd&gt;</li><li>Address tag: &lt;address&gt;</li></ul>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>1. Text Abbreviation tag</h2>\n\n\n\n<p>This tag is used to abbreviate a text. To abbreviate a text, write text between &lt;abbr&gt; and &lt;/abbr&gt; tag.</p>\n\n\n\n<h2>Example</h2>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;p>An &lt;abbr title = \"Hypertext Markup language\">HTML &lt;/abbr>language is used to create web pages. &lt;/p>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-phrase-tag.png\" alt=\"HTML Phrase tag\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>2. Marked tag:</h2>\n\n\n\n<p>The content written between &lt;mark&gt; and &lt;/mark&gt; tag will show as yellow mark on browser. This tag is used to highlight a particular text.</p>\n\n\n\n<h2>Example</h2>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;p>This tag will &lt;mark>highlight&lt;/mark> the text.&lt;/p>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-phrase-tag2.png\" alt=\"HTML Phrase tag\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>3. Strong text:</h2>\n\n\n\n<p>This tag is used to display the important text of the content. The text written between &lt;strong&gt; and &lt;/strong&gt; will be displayed as important text.</p>\n\n\n\n<h2>Example</h2>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;p>In HTML it is recommended to use &lt;strong>lower-case&lt;/strong>, while writing a code. &lt;/p>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-phrase-tag3.png\" alt=\"HTML Phrase tag\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>4. Emphasized text</h2>\n\n\n\n<p>This tag is used to emphasize the text, and displayed the text in italic form. The text written between &lt;em&gt; and &lt;/em&gt; tag will italicized the text.</p>\n\n\n\n<h2>Example</h2>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;p>HTML is an &lt;em>easy &lt;/em>to learn language.&lt;/p>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-phrase-tag4.png\" alt=\"HTML Phrase tag\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>5. Definition tag:</h2>\n\n\n\n<p>When you use the &lt;dfn&gt; and &lt;/dfn&gt; tags, it allow to specify the keyword of the content. Following is the example to show how to definition element.</p>\n\n\n\n<h2>Example</h2>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;p>&lt;dfn>HTML &lt;/dfn> is a markup language. &lt;/p>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-phrase-tag5.png\" alt=\"HTML Phrase tag\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>6. Quoting text:</h2>\n\n\n\n<p>The HTML &lt;blockquote&gt; element shows that the enclosed content is quoted from another source. The Source URL can be given using the cite attribute, and text representation of source can display using&nbsp;<strong>&lt;cite&gt; &#8230;.. &lt;/cite&gt;element</strong>.</p>\n\n\n\n<h2>Example</h2>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;blockquote cite=\"https://www.keepinspiring.me/famous-quotes/\">&lt;p>?The first step toward success is taken when you refuse to be a captive of the environment in which you first find yourself.?&lt;/p>&lt;/blockquote>   \n &lt;cite>-Mark Caine&lt;/cite>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-phrase-tag6.png\" alt=\"HTML Phrase tag\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>7. Short Quotations:</h2>\n\n\n\n<p>An HTML &lt;q&gt; &#8230;&#8230;. &lt;/q&gt; element defines a short quotation. If you will put any content between &lt;q&gt; &#8230;&#8230;. &lt;/q&gt;, then it will enclose the text in double quotes.</p>\n\n\n\n<h2>Example:</h2>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;p>Steve Jobs said: &lt;q>If You Are Working On Something That You Really Care About, You Don?t Have To Be Pushed. The Vision Pulls You.&lt;/q>?&lt;/p>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-phrase-tag7.png\" alt=\"HTML Phrase tag\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>8. Code tags</h2>\n\n\n\n<p>The HTML &lt;code> &lt;/code> element is used to display the part of computer code. It will display the content in monospaced font.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;p>First Java program&lt;/p>  \n      &lt;p>&lt;code>class Simple{ public static void main(String args&#91;]){   \n       System.out.println(\"Hello Java\"); }} &lt;/code>  \n     &lt;/p>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-phrase-tag8.png\" alt=\"HTML Phrase tag\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>9. Keyboard Tag</h2>\n\n\n\n<p>In HTML the keyboard tag, &lt;kbd>, indicates that a section of content is a user input from keyboard.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;p>Please press &lt;kbd>Ctrl&lt;/kbd> + &lt;kbd>Shift&lt;/kbd> + t&lt;kbd>&lt;/kbd> to restore page on chrome.&lt;/p>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-phrase-tag9.png\" alt=\"HTML Phrase tag\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>10. Address tag</h2>\n\n\n\n<p>An HTML &lt;address> tag defines the contact information about the author of the content. The content written between &lt;address> and &lt;/address> tag, then it will be displayed in italic font.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;address> You can ask your queries by contact us on &lt;a href=\"\">example123@newdomain.com&lt;/a>  \n   &lt;br> You can also visit at: &lt;br>58 S. Garfield Street. Villa Rica, GA 30187.  \n  &lt;/address>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-phrase-tag10.png\" alt=\"HTML Phrase tag\"/></figure>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>The HTML phrase tags are special purpose tags, which defines the structural meaning of a block of text or semantics of text. Following is the list of phrase tags, some of which we have already discussed in HTML formatting. Abbreviation tag : &lt;abbr&gt; Acronym tag: &lt;acronym&gt; (not supported in HTML5) Marked tag: &lt;mark&gt; Strong tag: [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3948"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3948"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3948/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3948"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3948"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3948"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3958,
    "date": "2020-08-13T07:25:46",
    "date_gmt": "2020-08-13T07:25:46",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=29"
    },
    "modified": "2020-08-13T07:25:46",
    "modified_gmt": "2020-08-13T07:25:46",
    "slug": "html-anchor",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-anchor/",
    "title": {
      "rendered": "HTML Anchor"
    },
    "content": {
      "rendered": "\n<p>The&nbsp;<strong>HTML anchor tag</strong>&nbsp;defines&nbsp;<em>a hyperlink that links one page to another page</em>. It can create hyperlink to other web page as well as files, location, or any URL. The &#8220;href&#8221; attribute is the most important attribute of the HTML a tag. and which links to destination page or URL.</p>\n\n\n\n<h2>href attribute of HTML anchor tag</h2>\n\n\n\n<p>The href attribute is used to define the address of the file to be linked. In other words, it points out the destination page.</p>\n\n\n\n<p>The syntax of HTML anchor tag is given below.</p>\n\n\n\n<pre class=\"wp-block-preformatted\">&lt;a href = \"...........\"&gt; Link Text &lt;/a&gt;\n</pre>\n\n\n\n<p>Let&#8217;s see an example of HTML anchor tag.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;a href=\"second.html\">Click for Second Page&lt;/a>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Specify a location for Link using target attribute</h2>\n\n\n\n<p>If we want to open that link to another page then we can use target attribute of &lt;a&gt; tag. With the help of this link will be open in next page.</p>\n\n\n\n<h2>Example:</h2>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;head>  \n    &lt;title>&lt;/title>  \n&lt;/head>  \n&lt;body>  \n&lt;p>Click on &lt;a href=\"https://www.codemeals.com/\" target=\"_blank\"> this-link &lt;/a>to go on home page of codemeals.&lt;/p>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-anchor.png\" alt=\"HTML Anchor\"/></figure>\n\n\n\n<p><strong>Note:</strong></p>\n\n\n\n<ul><li>The&nbsp;<strong>target</strong>&nbsp;attribute can only use with href attribute in anchor tag.</li><li>If we will not use target attribute then link will open in same page.</li></ul>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Appearance of HTML anchor tag</h2>\n\n\n\n<p>An&nbsp;<strong>unvisited link</strong>&nbsp;is displayed underlined and blue.</p>\n\n\n\n<p>A&nbsp;<strong>visited link</strong>&nbsp;displayed underlined and purple.</p>\n\n\n\n<p>An&nbsp;<strong>active link</strong>&nbsp;is underlined and red.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p><ins><ins></ins></ins></p>\n\n\n\n<h2>Supporting Browsers</h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><td>Element</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/chrome_browser.png\" alt=\"chrome browser\">&nbsp;Chrome</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/ie_browser.png\" alt=\"ie browser\">&nbsp;IE</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/firefox_browser.png\" alt=\"firefox browser\">&nbsp;Firefox</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/opera_browser.png\" alt=\"opera browser\">&nbsp;Opera</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/safari_browser.png\" alt=\"safari browser\">&nbsp;Safari</td></tr><tr><td>&lt;a&gt;</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td></tr></tbody></table></figure>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>The&nbsp;HTML anchor tag&nbsp;defines&nbsp;a hyperlink that links one page to another page. It can create hyperlink to other web page as well as files, location, or any URL. The &#8220;href&#8221; attribute is the most important attribute of the HTML a tag. and which links to destination page or URL. href attribute of HTML anchor tag The [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3958"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3958"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3958/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3958"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3958"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3958"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3959,
    "date": "2020-08-13T07:28:11",
    "date_gmt": "2020-08-13T07:28:11",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=31"
    },
    "modified": "2020-08-13T07:28:11",
    "modified_gmt": "2020-08-13T07:28:11",
    "slug": "html-image",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-image/",
    "title": {
      "rendered": "HTML Image"
    },
    "content": {
      "rendered": "\n<p><strong>HTML img tag</strong>&nbsp;is used to display image on the web page. HTML img tag is an empty tag that contains attributes only, closing tags are not used in HTML image element.</p>\n\n\n\n<p>Let&#8217;s see an example of HTML image.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;h2>HTML Image Example&lt;/h2>  \n&lt;img src=\"good_morning.jpg\" alt=\"Good Morning Friends\"/>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p>Output:</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/good-morning.jpg\" alt=\"Good Morning Friends\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Attributes of HTML img tag</h2>\n\n\n\n<p>The src and alt are important attributes of HTML img tag. All attributes of HTML image tag are given below.</p>\n\n\n\n<h4>1) src</h4>\n\n\n\n<p>It is a necessary attribute that describes the source or path of the image. It instructs the browser where to look for the image on the server.</p>\n\n\n\n<p>The location of image may be on the same directory or another server.</p>\n\n\n\n<h4>2) alt</h4>\n\n\n\n<p>The alt attribute defines an alternate text for the image, if it can&#8217;t be displayed. The value of the alt attribute describe the image in words. The alt attribute is considered good for SEO prospective.</p>\n\n\n\n<h4>3) width</h4>\n\n\n\n<p>It is an optional attribute which is used to specify the width to display the image. It is not recommended now. You should apply CSS in place of width attribute.</p>\n\n\n\n<h4>4) height</h4>\n\n\n\n<p>It h3 the height of the image. The HTML height attribute also supports iframe, image and object elements. It is not recommended now. You should apply CSS in place of height attribute.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Use of height and width attribute with img tag</h2>\n\n\n\n<p>You have learnt about how to insert an image in your web page, now if we want to give some height and width to display image according to our requirement, then we can set it with height and width attributes of image.</p>\n\n\n\n<h2>Example:</h2>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;img src=\"animal.jpg\" height=\"180\" width=\"300\" alt=\"animal image\">  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-image.png\" alt=\"HTML Image\"/></figure>\n\n\n\n<h4>Note: Always try to insert the image with height and width, else it may flicker while displaying on webpage.</h4>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Use of alt attribute</h2>\n\n\n\n<p>We can use alt attribute with&nbsp;&nbsp;tag. It will display an alternative text in case if image cannot be displayed on browser. Following is the example for alt attribute:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;img src=\"animal.png\" height=\"180\" width=\"300\" alt=\"animal image\">      </code></pre>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-image2.png\" alt=\"HTML Image\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>How to get image from another directory/folder?</h2>\n\n\n\n<p>To insert an image in your web, that image must be present in your same folder where you have put the HTML file. But if in some case image is available in some other directory then you can access the image like this:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;img src=\"E:/images/animal.png\" height=\"180\" width=\"300\" alt=\"animal image\">  </code></pre>\n\n\n\n<p>In above statement we have put image in local disk E&#8212;&#8212;&gt;images folder&#8212;&#8212;&gt;animal.png.</p>\n\n\n\n<h4>Note: If src URL will be incorrect or misspell then it will not display your image on web page, so try to put correct URL.</h4>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Use &lt;img&gt; tag as a link</h2>\n\n\n\n<p>We can also link an image with other page or we can use an image as a link. To do this, put &lt;img&gt; tag inside the &lt;a&gt; tag.</p>\n\n\n\n<h2>Example:</h2>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;a href=\"https://www.codemeals.com/what-is-robotics\">&lt;img src=\"robot.jpg\" height=\"100\" width=\"100\">&lt;/a>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/robot.jpg\" alt=\"HTML Image\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Supporting Browsers</h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><td>Element</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/chrome_browser.png\" alt=\"chrome browser\">&nbsp;Chrome</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/ie_browser.png\" alt=\"ie browser\">&nbsp;IE</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/firefox_browser.png\" alt=\"firefox browser\">&nbsp;Firefox</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/opera_browser.png\" alt=\"opera browser\">&nbsp;Opera</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/safari_browser.png\" alt=\"safari browser\">&nbsp;Safari</td></tr><tr><td>&lt;img&gt;</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td></tr></tbody></table></figure>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>HTML img tag&nbsp;is used to display image on the web page. HTML img tag is an empty tag that contains attributes only, closing tags are not used in HTML image element. Let&#8217;s see an example of HTML image. Test it Now Output: Attributes of HTML img tag The src and alt are important attributes of [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3959"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3959"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3959/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3959"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3959"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3959"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3960,
    "date": "2020-08-13T07:37:34",
    "date_gmt": "2020-08-13T07:37:34",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=35"
    },
    "modified": "2020-08-13T07:37:34",
    "modified_gmt": "2020-08-13T07:37:34",
    "slug": "html-lists",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-lists/",
    "title": {
      "rendered": "HTML Lists"
    },
    "content": {
      "rendered": "\n<p>HTML Lists are used to specify lists of information. All lists may contain one or more list elements. There are three different types of HTML lists:</p>\n\n\n\n<ol><li>Ordered List or Numbered List (ol)</li><li>Unordered List or Bulleted List (ul)</li><li>Description List or Definition List (dl)</li></ol>\n\n\n\n<h4>Note: We can create a list inside another list, which will be termed as nested List.</h4>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML Ordered List or Numbered List</h2>\n\n\n\n<p>In the ordered HTML lists, all the list items are marked with numbers by default. It is known as numbered list also. The ordered list starts with &lt;ol> tag and the list items start with &lt;li> tag.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;ol>  \n &lt;li>Aries&lt;/li>  \n &lt;li>Bingo&lt;/li>  \n &lt;li>Leo&lt;/li>  \n &lt;li>Oracle&lt;/li>  \n&lt;/ol>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p>Output:</p>\n\n\n\n<ol><li>Aries</li><li>Bingo</li><li>Leo</li><li>Oracle</li></ol>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>Click here for full details of HTML ordered list. HTML Ordered List</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p><ins><ins></ins></ins></p>\n\n\n\n<h2>HTML Unordered List or Bulleted List</h2>\n\n\n\n<p>In HTML Unordered list, all the list items are marked with bullets. It is also known as bulleted list also. The Unordered list starts with &lt;ul> tag and list items start with the &lt;li> tag.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;ul>  \n &lt;li>Aries&lt;/li>  \n &lt;li>Bingo&lt;/li>  \n &lt;li>Leo&lt;/li>  \n &lt;li>Oracle&lt;/li>  \n&lt;/ul>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p>Output:</p>\n\n\n\n<ul><li>Aries</li><li>Bingo</li><li>Leo</li><li>Oracle</li></ul>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>Click here for full details of HTML unordered list. HTML Unordered List</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML Description List or Definition List</h2>\n\n\n\n<p>HTML Description list is also a list style which is supported by HTML and XHTML. It is also known as definition list where entries are listed like a dictionary or encyclopedia.</p>\n\n\n\n<p>The definition list is very appropriate when you want to present glossary, list of terms or other name-value list.</p>\n\n\n\n<p>The HTML definition list contains following three tags:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;dl> tag defines the start of the list.\n&lt;dt> tag defines a term.\n&lt;dd> tag defines the term definition (description).\n</code></pre>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;dl>  \n  &lt;dt>Aries&lt;/dt>  \n  &lt;dd>-One of the 12 horoscope sign.&lt;/dd>  \n  &lt;dt>Bingo&lt;/dt>  \n  &lt;dd>-One of my evening snacks&lt;/dd>  \n &lt;dt>Leo&lt;/dt>  \n &lt;dd>-It is also an one of the 12 horoscope sign.&lt;/dd>  \n  &lt;dt>Oracle&lt;/dt>  \n  &lt;dd>-It is a multinational technology corporation.&lt;/dd>   \n&lt;/dl>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p>Output:Aries-One of the 12 horoscope sign.Bingo-One of my evening snacksLeo-It is also an one of the 12 horoscope sign.Oracle-It is a multinational technology corporation.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>Click here for full details of HTML description list. HTML Description List</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML Nested List</h2>\n\n\n\n<p>A list within another list is termed as nested list. If you want a bullet list inside a numbered list then such type of list will called as nested list.</p>\n\n\n\n<p><strong>Code:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;head>  \n    &lt;title>Nested list&lt;/title>  \n&lt;/head>  \n&lt;body>  \n    &lt;p>List of Indian States with thier capital&lt;/p>  \n&lt;ol>  \n    &lt;li>Delhi  \n        &lt;ul>  \n            &lt;li>NewDelhi&lt;/li>  \n        &lt;/ul>  \n    &lt;/li>  \n    &lt;li>Haryana  \n        &lt;ul>  \n            &lt;li>Chandigarh&lt;/li>  \n        &lt;/ul>  \n    &lt;/li>  \n    &lt;li>Gujarat  \n        &lt;ul>  \n            &lt;li>Gandhinagar&lt;/li>  \n        &lt;/ul>  \n    &lt;/li>  \n    &lt;li>Rajasthan   \n        &lt;ul>  \n            &lt;li>Jaipur&lt;/li>  \n        &lt;/ul>  \n    &lt;/li>  \n    &lt;li>Maharashtra  \n        &lt;ul>  \n            &lt;li>Mumbai&lt;/li>  \n        &lt;/ul>  \n    &lt;/li>  \n    &lt;li>Uttarpradesh  \n        &lt;ul>  \n            &lt;li>Lucknow&lt;/li>&lt;/ul>  \n    &lt;/li>  \n&lt;/ol>  \n&lt;/body>  \n&lt;/html> </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-lists.png\" alt=\"HTML Lists\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Supporting Browsers</h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><td>Element</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/chrome_browser.png\" alt=\"chrome browser\">&nbsp;Chrome</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/ie_browser.png\" alt=\"ie browser\">&nbsp;IE</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/firefox_browser.png\" alt=\"firefox browser\">&nbsp;Firefox</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/opera_browser.png\" alt=\"opera browser\">&nbsp;Opera</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/safari_browser.png\" alt=\"safari browser\">&nbsp;Safari</td></tr><tr><td>&lt;ol&gt;&lt;ul&gt;&lt;dl&gt;</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td></tr></tbody></table></figure>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>HTML Lists are used to specify lists of information. All lists may contain one or more list elements. There are three different types of HTML lists: Ordered List or Numbered List (ol) Unordered List or Bulleted List (ul) Description List or Definition List (dl) Note: We can create a list inside another list, which will [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3960"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3960"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3960/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3960"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3960"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3960"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3961,
    "date": "2020-08-13T07:41:47",
    "date_gmt": "2020-08-13T07:41:47",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=37"
    },
    "modified": "2020-08-13T07:41:47",
    "modified_gmt": "2020-08-13T07:41:47",
    "slug": "html-ordered-list-html-numbered-list",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-ordered-list-html-numbered-list/",
    "title": {
      "rendered": "HTML Ordered List | HTML Numbered List"
    },
    "content": {
      "rendered": "\n<p><strong>HTML Ordered List</strong>&nbsp;or Numbered List displays elements in numbered format. The HTML ol tag is used for ordered list. We can use ordered list to represent items either in numerical order format or alphabetical order format, or any format where an order is emphasized. There can be different types of numbered list:</p>\n\n\n\n<ul><li>Numeric Number (1, 2, 3)</li><li>Capital Roman Number (I II III)</li><li>Small Romal Number (i ii iii)</li><li>Capital Alphabet (A B C)</li><li>Small Alphabet (a b c)</li></ul>\n\n\n\n<p>To represent different ordered lists, there are 5 types of attributes in &lt;ol&gt; tag.</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Type</th><th>Description</th></tr><tr><td>Type &#8220;1&#8221;</td><td>This is the default type. In this type, the list items are numbered with numbers.</td></tr><tr><td>Type &#8220;I&#8221;</td><td>In this type, the list items are numbered with upper case roman numbers.</td></tr><tr><td>Type &#8220;i&#8221;</td><td>In this type, the list items are numbered with lower case roman numbers.</td></tr><tr><td>Type &#8220;A&#8221;</td><td>In this type, the list items are numbered with upper case letters.</td></tr><tr><td>Type &#8220;a&#8221;</td><td>In this type, the list items are numbered with lower case letters.</td></tr></tbody></table></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML Ordered List Example</h2>\n\n\n\n<p>Let&#8217;s see the example of HTML ordered list that displays 4 topics in numbered list. Here we are not defining type=&#8221;1&#8243; because it is the default type.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;ol>  \n &lt;li>HTML&lt;/li>  \n &lt;li>Java&lt;/li>  \n &lt;li>JavaScript&lt;/li>  \n &lt;li>SQL&lt;/li>  \n&lt;/ol>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p>Output:</p>\n\n\n\n<ol><li>HTML</li><li>Java</li><li>JavaScript</li><li>SQL</li></ol>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>ol type=&#8221;I&#8221;</h2>\n\n\n\n<p>Let&#8217;s see the example to display list in roman number uppercase.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;ol type=\"I\">  \n &lt;li>HTML&lt;/li>  \n &lt;li>Java&lt;/li>  \n &lt;li>JavaScript&lt;/li>  \n &lt;li>SQL&lt;/li>  \n&lt;/ol></code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p>Output:</p>\n\n\n\n<ol type=\"I\"><li>HTML</li><li>Java</li><li>JavaScript</li><li>SQL</li></ol>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>ol type=&#8221;i&#8221;</h2>\n\n\n\n<p>Let&#8217;s see the example to display list in roman number lowercase.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;ol type=\"i\">  \n &lt;li>HTML&lt;/li>  \n &lt;li>Java&lt;/li>  \n &lt;li>JavaScript&lt;/li>  \n &lt;li>SQL&lt;/li>  \n&lt;/ol></code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p>Output:</p>\n\n\n\n<ol type=\"i\"><li>HTML</li><li>Java</li><li>JavaScript</li><li>SQL</li></ol>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>ol type=&#8221;A&#8221;</h2>\n\n\n\n<p>Let&#8217;s see the example to display list in alphabet uppercase.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;ol type=\"A\">  \n &lt;li>HTML&lt;/li>  \n &lt;li>Java&lt;/li>  \n &lt;li>JavaScript&lt;/li>  \n &lt;li>SQL&lt;/li>  \n&lt;/ol>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p>Output:</p>\n\n\n\n<ol type=\"A\"><li>HTML</li><li>Java</li><li>JavaScript</li><li>SQL</li></ol>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>ol type=&#8221;a&#8221;</h2>\n\n\n\n<p>Let&#8217;s see the example to display list in alphabet lowercase.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;ol type=\"a\">  \n &lt;li>HTML&lt;/li>  \n &lt;li>Java&lt;/li>  \n &lt;li>JavaScript&lt;/li>  \n &lt;li>SQL&lt;/li>  \n&lt;/ol>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p>Output:</p>\n\n\n\n<ol type=\"a\"><li>HTML</li><li>Java</li><li>JavaScript</li><li>SQL</li></ol>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>start attribute</h2>\n\n\n\n<p>The start attribute is used with ol tag to specify from where to start the list items.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;ol type=\"1\" start=\"5\"> : It will show numeric values starting with \"5\".</code></pre>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;ol type=\"A\" start=\"5\"> : It will show capital alphabets starting with \"E\".</code></pre>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;ol type=\"a\" start=\"5\"> : It will show lower case alphabets starting with \"e\".</code></pre>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;ol type=\"I\" start=\"5\"> : It will show Roman upper case value starting with \"V\".</code></pre>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;ol type=\"i\" start=\"5\"> : It will show Roman lower case value starting with \"v\".</code></pre>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;ol type=\"i\" start=\"5\">  \n &lt;li>HTML&lt;/li>  \n &lt;li>Java&lt;/li>  \n &lt;li>JavaScript&lt;/li>  \n &lt;li>SQL&lt;/li>  \n&lt;/ol>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p>Output:</p>\n\n\n\n<ol type=\"i\" start=\"5\"><li>HTML</li><li>Java</li><li>JavaScript</li><li>SQL</li></ol>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>reversed Attribute:</h2>\n\n\n\n<p>This is a Boolean attribute of HTML &lt;ol> tag, and it is new in HTML5 version. If you use the reversed attribute with</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;ol reversed>  \n&lt;li>HTML&lt;/li>  \n&lt;li>Java&lt;/li>  \n&lt;li>JavaScript&lt;/li>  \n&lt;li>SQL&lt;/li>  \n &lt;/ol>  </code></pre>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>HTML Ordered List&nbsp;or Numbered List displays elements in numbered format. The HTML ol tag is used for ordered list. We can use ordered list to represent items either in numerical order format or alphabetical order format, or any format where an order is emphasized. There can be different types of numbered list: Numeric Number (1, [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3961"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3961"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3961/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3961"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3961"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3961"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3962,
    "date": "2020-08-13T07:43:51",
    "date_gmt": "2020-08-13T07:43:51",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=39"
    },
    "modified": "2020-08-13T07:43:51",
    "modified_gmt": "2020-08-13T07:43:51",
    "slug": "html-unordered-list-html-bulleted-list",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-unordered-list-html-bulleted-list/",
    "title": {
      "rendered": "HTML Unordered List | HTML Bulleted List"
    },
    "content": {
      "rendered": "\n<p><strong>HTML Unordered List</strong>&nbsp;or Bulleted List displays elements in bulleted format . We can use unordered list where we do not need to display items in any particular order. The HTML ul tag is used for the unordered list. There can be 4 types of bulleted list:</p>\n\n\n\n<ul><li>disc</li><li>circle</li><li>square</li><li>none</li></ul>\n\n\n\n<p>To represent different ordered lists, there are 4 types of attributes in &lt;ul&gt; tag.</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Type</th><th>Description</th></tr><tr><td>Type &#8220;disc&#8221;</td><td>This is the default style. In this style, the list items are marked with bullets.</td></tr><tr><td>Type &#8220;circle&#8221;</td><td>In this style, the list items are marked with circles.</td></tr><tr><td>Type &#8220;square&#8221;</td><td>In this style, the list items are marked with squares.</td></tr><tr><td>Type &#8220;none&#8221;</td><td>In this style, the list items are not marked .</td></tr></tbody></table></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML Unordered List Example</h2>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;ul>  \n &lt;li>HTML&lt;/li>  \n &lt;li>Java&lt;/li>  \n &lt;li>JavaScript&lt;/li>  \n &lt;li>SQL&lt;/li>  \n&lt;/ul>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p>Output:</p>\n\n\n\n<ul><li>HTML</li><li>Java</li><li>JavaScript</li><li>SQL</li></ul>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>ul type=&#8221;circle&#8221;</h2>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;ul type=\"circle\">  \n &lt;li>HTML&lt;/li>  \n &lt;li>Java&lt;/li>  \n &lt;li>JavaScript&lt;/li>  \n &lt;li>SQL&lt;/li>  \n&lt;/ul>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p>Output:</p>\n\n\n\n<ul><li>HTML</li><li>Java</li><li>JavaScript</li><li>SQL</li></ul>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>ul type=&#8221;square&#8221;</h2>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;ul type=\"square\">  \n &lt;li>HTML&lt;/li>  \n &lt;li>Java&lt;/li>  \n &lt;li>JavaScript&lt;/li>  \n &lt;li>SQL&lt;/li>  \n&lt;/ul> </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p>Output:</p>\n\n\n\n<ul><li>HTML</li><li>Java</li><li>JavaScript</li><li>SQL</li></ul>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>ul type=&#8221;none&#8221;</h2>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;ul type=\"none\">  \n &lt;li>HTML&lt;/li>  \n &lt;li>Java&lt;/li>  \n &lt;li>JavaScript&lt;/li>  \n &lt;li>SQL&lt;/li>  \n&lt;/ul>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p>Output:</p>\n\n\n\n<ul><li>HTML</li><li>Java</li><li>JavaScript</li><li>SQL</li></ul>\n\n\n\n<h4>Note: The type attribute is not supported in HTML5, instead of type you can use CSS property of list-style-type. Following is the example to show the CSS property for ul tag.</h4>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;ul style=\"list-style-type: square;\">  \n    &lt;li>HTML&lt;/li>  \n    &lt;li>Java&lt;/li>  \n    &lt;li>JavaScript&lt;/li>  \n    &lt;li>SQL&lt;/li>  \n  &lt;/ul>  </code></pre>\n\n\n\n<p><strong>Code:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n &lt;head>  \n  &lt;/head>  \n &lt;body>  \n &lt;h2>The type attribute with CSS property&lt;/h2>  \n   &lt;ul style=\"list-style-type: square;\">  \n    &lt;li>HTML&lt;/li>  \n     &lt;li>Java&lt;/li>  \n           &lt;li>JavaScript&lt;/li>  \n           &lt;li>SQL&lt;/li>  \n    &lt;/ul>  \n &lt;/body>  \n&lt;/html>     </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-unordered-list-bulleted-list.png\" alt=\"HTML Unordered List | HTML Bulleted List\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Supporting Browsers</h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><td>Element</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/chrome_browser.png\" alt=\"chrome browser\">&nbsp;Chrome</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/ie_browser.png\" alt=\"ie browser\">&nbsp;IE</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/firefox_browser.png\" alt=\"firefox browser\">&nbsp;Firefox</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/opera_browser.png\" alt=\"opera browser\">&nbsp;Opera</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/safari_browser.png\" alt=\"safari browser\">&nbsp;Safari</td></tr><tr><td>&lt;ul&gt;</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td></tr></tbody></table></figure>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>HTML Unordered List&nbsp;or Bulleted List displays elements in bulleted format . We can use unordered list where we do not need to display items in any particular order. The HTML ul tag is used for the unordered list. There can be 4 types of bulleted list: disc circle square none To represent different ordered lists, [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3962"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3962"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3962/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3962"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3962"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3962"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3879,
    "date": "2020-08-13T07:44:53",
    "date_gmt": "2020-08-13T07:44:53",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=41"
    },
    "modified": "2020-08-13T07:44:53",
    "modified_gmt": "2020-08-13T07:44:53",
    "slug": "html-description-list-html-definition-list",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-description-list-html-definition-list/",
    "title": {
      "rendered": "HTML Description List | HTML Definition List"
    },
    "content": {
      "rendered": "\n<p><strong>HTML Description List</strong>&nbsp;or Definition List displays elements in definition form like in dictionary. The &lt;dl&gt;, &lt;dt&gt; and &lt;dd&gt; tags are used to define description list.</p>\n\n\n\n<p>The 3 HTML description list tags are given below:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;dl> tag defines the description list.\n&lt;dt> tag defines data term.\n&lt;dd> tag defines data definition (description).</code></pre>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;dl>  \n  &lt;dt>HTML&lt;/dt>  \n  &lt;dd>is a markup language&lt;/dd>  \n  &lt;dt>Java&lt;/dt>  \n  &lt;dd>is a programming language and platform&lt;/dd>  \n &lt;dt>JavaScript&lt;/dt>  \n &lt;dd>is a scripting language&lt;/dd>  \n  &lt;dt>SQL&lt;/dt>  \n  &lt;dd>is a query language&lt;/dd>   \n&lt;/dl>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p>Output:HTMLis a markup languageJavais a programming language and platformJavaScriptis a scripting languageSQLis a query language</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Supporting Browsers</h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><td>Element</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/chrome_browser.png\" alt=\"chrome browser\">&nbsp;Chrome</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/ie_browser.png\" alt=\"ie browser\">&nbsp;IE</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/firefox_browser.png\" alt=\"firefox browser\">&nbsp;Firefox</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/opera_browser.png\" alt=\"opera browser\">&nbsp;Opera</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/safari_browser.png\" alt=\"safari browser\">&nbsp;Safari</td></tr><tr><td>&lt;dl&gt;</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td></tr></tbody></table></figure>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>HTML Description List&nbsp;or Definition List displays elements in definition form like in dictionary. The &lt;dl&gt;, &lt;dt&gt; and &lt;dd&gt; tags are used to define description list. The 3 HTML description list tags are given below: Test it Now Output:HTMLis a markup languageJavais a programming language and platformJavaScriptis a scripting languageSQLis a query language Supporting Browsers Element [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3879"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3879"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3879/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3879"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3879"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3879"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3880,
    "date": "2020-08-13T07:51:24",
    "date_gmt": "2020-08-13T07:51:24",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=43"
    },
    "modified": "2020-08-13T07:51:24",
    "modified_gmt": "2020-08-13T07:51:24",
    "slug": "html-form",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-form/",
    "title": {
      "rendered": "HTML Form"
    },
    "content": {
      "rendered": "\n<p>An&nbsp;<strong>HTML form</strong>&nbsp;is&nbsp;<em>a section of a document</em>&nbsp;which contains controls such as text fields, password fields, checkboxes, radio buttons, submit button, menus etc.</p>\n\n\n\n<p>An HTML form facilitates the user to enter data that is to be sent to the server for processing such as name, email address, password, phone number, etc. .</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Why use HTML Form</h2>\n\n\n\n<p>HTML forms are required if you want to collect some data from of the site visitor.</p>\n\n\n\n<p>For example: If a user want to purchase some items on internet, he/she must fill the form such as shipping address and credit/debit card details so that item can be sent to the given address.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML Form Syntax</h2>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form action=\"server url\" method=\"get|post\">  \n  //input controls e.g. textfield, textarea, radiobutton, button  \n&lt;/form> </code></pre>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML Form Tags</h2>\n\n\n\n<p>Let&#8217;s see the list of HTML 5 form tags.</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Tag</th><th>Description</th></tr><tr><td>&lt;form&gt;</td><td>It defines an HTML form to enter inputs by the used side.</td></tr><tr><td>&lt;input&gt;</td><td>It defines an input control.</td></tr><tr><td>&lt;textarea&gt;</td><td>It defines a multi-line input control.</td></tr><tr><td>&lt;label&gt;</td><td>It defines a label for an input element.</td></tr><tr><td>&lt;fieldset&gt;</td><td>It groups the related element in a form.</td></tr><tr><td>&lt;legend&gt;</td><td>It defines a caption for a &lt;fieldset&gt; element.</td></tr><tr><td>&lt;select&gt;</td><td>It defines a drop-down list.</td></tr><tr><td>&lt;optgroup&gt;</td><td>It defines a group of related options in a drop-down list.</td></tr><tr><td>&lt;option&gt;</td><td>It defines an option in a drop-down list.</td></tr><tr><td>&lt;button&gt;</td><td>It defines a clickable button.</td></tr></tbody></table></figure>\n\n\n\n<p><ins><ins></ins></ins></p>\n\n\n\n<h2>HTML 5 Form Tags</h2>\n\n\n\n<p>Let&#8217;s see the list of HTML 5 form tags.</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Tag</th><th>Description</th></tr><tr><td>&lt;datalist&gt;</td><td>It specifies a list of pre-defined options for input control.</td></tr><tr><td>&lt;keygen&gt;</td><td>It defines a key-pair generator field for forms.</td></tr><tr><td>&lt;output&gt;</td><td>It defines the result of a calculation.</td></tr></tbody></table></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML &lt;form&gt; element</h2>\n\n\n\n<p>The HTML &lt;form&gt; element provide a document section to take input from user. It provides various interactive controls for submitting information to web server such as text field, text area, password field, etc.</p>\n\n\n\n<h4>Note: The &lt;form&gt; element does not itself create a form but it is container to contain all required form elements, such as &lt;input&gt;, &lt;label&gt;, etc.</h4>\n\n\n\n<p><strong>Syntax:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \n//Form elements  \n&lt;/form>  </code></pre>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML &lt;input&gt; element</h2>\n\n\n\n<p>The HTML &lt;input&gt; element is fundamental form element. It is used to create form fields, to take input from user. We can apply different input filed to gather different information form user. Following is the example to show the simple text input.</p>\n\n\n\n<h2>Example:</h2>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;body>  \n  &lt;form>  \n     Enter your name  &lt;br>  \n    &lt;input type=\"text\" name=\"username\">  \n  &lt;/form>  \n&lt;/body>  </code></pre>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-form.png\" alt=\"HTML Form\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML TextField Control</h2>\n\n\n\n<p>The type=&#8221;text&#8221; attribute of input tag creates textfield control also known as single line textfield control. The name attribute is optional, but it is required for the server side component such as JSP, ASP, PHP etc.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \n    First Name: &lt;input type=\"text\" name=\"firstname\"/> &lt;br/>  \n    Last Name:  &lt;input type=\"text\" name=\"lastname\"/> &lt;br/>  \n &lt;/form></code></pre>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-textfield-control.png\" alt=\"HTML TextField Control\"/></figure>\n\n\n\n<h4>Note: If you will omit &#8216;name&#8217; attribute then the text filed input will not be submitted to server.</h4>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML &lt;textarea&gt; tag in form</h2>\n\n\n\n<p>The &lt;textarea&gt; tag in HTML is used to insert multiple-line text in a form. The size of &lt;textarea&gt; can be specify either using &#8220;rows&#8221; or &#8220;cols&#8221; attribute or by CSS.</p>\n\n\n\n<p><strong>Example:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;head>  \n    &lt;title>Form in HTML&lt;/title>  \n&lt;/head>  \n&lt;body>  \n  &lt;form>  \n        Enter your address:&lt;br>  \n      &lt;textarea rows=\"2\" cols=\"20\">&lt;/textarea>  \n  &lt;/form>  \n&lt;/body>  \n&lt;/html></code></pre>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-textarea-tag-in-form.png\" alt=\"HTML textarea tag in form\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Label Tag in Form</h2>\n\n\n\n<p>It is considered better to have label in form. As it makes the code parser/browser/user friendly.</p>\n\n\n\n<p>If you click on the label tag, it will focus on the text control. To do so, you need to have for attribute in label tag that must be same as id attribute of input tag.</p>\n\n\n\n<h4>NOTE: It is good to use &lt;label> tag with form, although it is optional but if you will use it, then it will provide a focus when you tap or click on label tag. It is more worthy with touchscreens.</h4>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \n    &lt;label for=\"firstname\">First Name: &lt;/label> &lt;br/>  \n              &lt;input type=\"text\" id=\"firstname\" name=\"firstname\"/> &lt;br/>  \n   &lt;label for=\"lastname\">Last Name: &lt;/label>  \n              &lt;input type=\"text\" id=\"lastname\" name=\"lastname\"/> &lt;br/>  \n &lt;/form></code></pre>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-label-tag-in-form.png\" alt=\"HTML Label Tag in Form\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML Password Field Control</h2>\n\n\n\n<p>The password is not visible to the user in password field control.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \n    &lt;label for=\"password\">Password: &lt;/label>  \n              &lt;input type=\"password\" id=\"password\" name=\"password\"/> &lt;br/>  \n&lt;/form></code></pre>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-password-field-control.png\" alt=\"HTML Password Field Control\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML 5 Email Field Control</h2>\n\n\n\n<p>The email field in new in HTML 5. It validates the text for correct email address. You must use @ and . in this field.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \n    &lt;label for=\"email\">Email: &lt;/label>  \n              &lt;input type=\"email\" id=\"email\" name=\"email\"/> &lt;br/>  \n&lt;/form>  </code></pre>\n\n\n\n<p>It will display in browser like below:</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-5-email-field-control.png\" alt=\"HTML 5 Email Field Control\"/></figure>\n\n\n\n<h4>Note: If we will not enter the correct email, it will display error like:</h4>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-5-email-field-control2.png\" alt=\"HTML 5 Email Field Control\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Radio Button Control</h2>\n\n\n\n<p>The radio button is used to select one option from multiple options. It is used for selection of gender, quiz questions etc.</p>\n\n\n\n<p>If you use one name for all the radio buttons, only one radio button can be selected at a time.</p>\n\n\n\n<p>Using radio buttons for multiple options, you can only choose a single option at a time.ADVERTISEMENT</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \n    &lt;label for=\"gender\">Gender: &lt;/label>  \n              &lt;input type=\"radio\" id=\"gender\" name=\"gender\" value=\"male\"/>Male  \n              &lt;input type=\"radio\" id=\"gender\" name=\"gender\" value=\"female\"/>Female &lt;br/>  \n&lt;/form>  </code></pre>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/radio-button-control.png\" alt=\"Radio Button Control\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Checkbox Control</h2>\n\n\n\n<p>The checkbox control is used to check multiple options from given checkboxes.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \nHobby:&lt;br>  \n              &lt;input type=\"checkbox\" id=\"cricket\" name=\"cricket\" value=\"cricket\"/>  \n                 &lt;label for=\"cricket\">Cricket&lt;/label> &lt;br>  \n              &lt;input type=\"checkbox\" id=\"football\" name=\"football\" value=\"football\"/>  \n                 &lt;label for=\"football\">Football&lt;/label> &lt;br>  \n              &lt;input type=\"checkbox\" id=\"hockey\" name=\"hockey\" value=\"hockey\"/>  \n                 &lt;label for=\"hockey\">Hockey&lt;/label>  \n&lt;/form>  </code></pre>\n\n\n\n<h4>Note: These are similar to radio button except it can choose multiple options at a time and radio button can select one button at a time, and its display.</h4>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/checkbox-control.png\" alt=\"Checkbox Control\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Submit button control</h2>\n\n\n\n<p>HTML&nbsp;<strong>&lt;input type=&#8221;submit&#8221;&gt;</strong>&nbsp;are used to add a submit button on web page. When user clicks on submit button, then form get submit to the server.</p>\n\n\n\n<p>Syntax:</p>\n\n\n\n<ol><li><strong>&lt;</strong><strong>input</strong>&nbsp;type=&#8221;submit&#8221;&nbsp;value=&#8221;submit&#8221;<strong>&gt;</strong>&nbsp;&nbsp;</li></ol>\n\n\n\n<p>The type = submit , specifying that it is a submit button</p>\n\n\n\n<p>The value attribute can be anything which we write on button on web page.</p>\n\n\n\n<p>The name attribute can be omit here.</p>\n\n\n\n<p><strong>Example:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \n    &lt;label for=\"name\">Enter name&lt;/label>&lt;br>  \n    &lt;input type=\"text\" id=\"name\" name=\"name\">&lt;br>  \n    &lt;label for=\"pass\">Enter Password&lt;/label>&lt;br>  \n    &lt;input type=\"Password\" id=\"pass\" name=\"pass\">&lt;br>  \n    &lt;input type=\"submit\" value=\"submit\">  \n&lt;/form> </code></pre>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/submit-button-control.png\" alt=\"Submit button control\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML &lt;fieldset&gt; element:</h2>\n\n\n\n<p>The &lt;fieldset&gt; element in HTML is used to group the related information of a form. This element is used with &lt;legend&gt; element which provide caption for the grouped elements.</p>\n\n\n\n<p><strong>Example:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \n     &lt;fieldset>  \n      &lt;legend>User Information:&lt;/legend>  \n    &lt;label for=\"name\">Enter name&lt;/label>&lt;br>  \n&lt;input type=\"text\" id=\"name\" name=\"name\">&lt;br>  \n&lt;label for=\"pass\">Enter Password&lt;/label>&lt;br>  \n&lt;input type=\"Password\" id=\"pass\" name=\"pass\">&lt;br>  \n&lt;input type=\"submit\" value=\"submit\">  \n&lt;/fieldset>  \nlt;/form>  </code></pre>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-fieldset-element.png\" alt=\"HTML fieldset element\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML Form Example</h2>\n\n\n\n<p>Following is the example for a simple form of registration.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n &lt;html>  \n &lt;head>  \n  &lt;title>Form in HTML&lt;/title>  \n&lt;/head>  \n &lt;body>  \n     &lt;h2>Registration form&lt;/h2>  \n    &lt;form>  \n     &lt;fieldset>  \n        &lt;legend>User personal information&lt;/legend>  \n        &lt;label>Enter your full name&lt;/label>&lt;br>  \n        &lt;input type=\"text\" name=\"name\">&lt;br>  \n         &lt;label>Enter your email&lt;/label>&lt;br>  \n         &lt;input type=\"email\" name=\"email\">&lt;br>  \n         &lt;label>Enter your password&lt;/label>&lt;br>  \n         &lt;input type=\"password\" name=\"pass\">&lt;br>  \n         &lt;label>confirm your password&lt;/label>&lt;br>  \n         &lt;input type=\"password\" name=\"pass\">&lt;br>  \n         &lt;br>&lt;label>Enter your gender&lt;/label>&lt;br>  \n         &lt;input type=\"radio\" id=\"gender\" name=\"gender\" value=\"male\"/>Male  &lt;br>  \n         &lt;input type=\"radio\" id=\"gender\" name=\"gender\" value=\"female\"/>Female &lt;br/>    \n         &lt;input type=\"radio\" id=\"gender\" name=\"gender\" value=\"others\"/>others &lt;br/>   \n          &lt;br>Enter your Address:&lt;br>  \n         &lt;textarea>&lt;/textarea>&lt;br>  \n         &lt;input type=\"submit\" value=\"sign-up\">  \n     &lt;/fieldset>  \n  &lt;/form>  \n &lt;/body>  \n&lt;/html></code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-form-example.png\" alt=\"HTML Form Example\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML Form Example</h2>\n\n\n\n<p>Let&#8217;s see a simple example of creating HTML form.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form action=\"#\">  \n&lt;table>  \n&lt;tr>  \n    &lt;td class=\"tdLabel\">&lt;label for=\"register_name\" class=\"label\">Enter name:&lt;/label>&lt;/td>  \n    &lt;td>&lt;input type=\"text\" name=\"name\" value=\"\" id=\"register_name\" style=\"width:160px\"/>&lt;/td>  \n&lt;/tr>  \n&lt;tr>  \n    &lt;td class=\"tdLabel\">&lt;label for=\"register_password\" class=\"label\">Enter password:&lt;/label>&lt;/td>  \n    &lt;td>&lt;input type=\"password\" name=\"password\" id=\"register_password\" style=\"width:160px\"/>&lt;/td>  \n&lt;/tr>  \n&lt;tr>  \n    &lt;td class=\"tdLabel\">&lt;label for=\"register_email\" class=\"label\">Enter Email:&lt;/label>&lt;/td>  \n    &lt;td  \n>&lt;input type=\"email\" name=\"email\" value=\"\" id=\"register_email\" style=\"width:160px\"/>&lt;/td>  \n&lt;/tr>  \n&lt;tr>  \n    &lt;td class=\"tdLabel\">&lt;label for=\"register_gender\" class=\"label\">Enter Gender:&lt;/label>&lt;/td>  \n    &lt;td>  \n&lt;input type=\"radio\" name=\"gender\" id=\"register_gendermale\" value=\"male\"/>  \n&lt;label for=\"register_gendermale\">male&lt;/label>  \n&lt;input type=\"radio\" name=\"gender\" id=\"register_genderfemale\" value=\"female\"/>  \n&lt;label for=\"register_genderfemale\">female&lt;/label>  \n    &lt;/td>  \n&lt;/tr>  \n&lt;tr>  \n    &lt;td class=\"tdLabel\">&lt;label for=\"register_country\" class=\"label\">Select Country:&lt;/label>&lt;/td>  \n    &lt;td>&lt;select name=\"country\" id=\"register_country\" style=\"width:160px\">  \n    &lt;option value=\"india\">india&lt;/option>  \n    &lt;option value=\"pakistan\">pakistan&lt;/option>  \n    &lt;option value=\"africa\">africa&lt;/option>  \n    &lt;option value=\"china\">china&lt;/option>  \n    &lt;option value=\"other\">other&lt;/option>  \n&lt;/select>  \n&lt;/td>  \n&lt;/tr>  \n&lt;tr>  \n    &lt;td colspan=\"2\">&lt;div align=\"right\">&lt;input type=\"submit\" id=\"register_0\" value=\"register\"/>  \n&lt;/div>&lt;/td>  \n&lt;/tr>  \n&lt;/table>  \n&lt;/form>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Supporting Browsers</h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><td>Element</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/chrome_browser.png\" alt=\"chrome browser\">&nbsp;Chrome</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/ie_browser.png\" alt=\"ie browser\">&nbsp;IE</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/firefox_browser.png\" alt=\"firefox browser\">&nbsp;Firefox</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/opera_browser.png\" alt=\"opera browser\">&nbsp;Opera</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/safari_browser.png\" alt=\"safari browser\">&nbsp;Safari</td></tr><tr><td>&lt;form&gt;</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td></tr></tbody></table></figure>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>An&nbsp;HTML form&nbsp;is&nbsp;a section of a document&nbsp;which contains controls such as text fields, password fields, checkboxes, radio buttons, submit button, menus etc. An HTML form facilitates the user to enter data that is to be sent to the server for processing such as name, email address, password, phone number, etc. . Why use HTML Form HTML [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3880"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3880"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3880/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3880"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3880"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3880"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3881,
    "date": "2020-08-13T08:03:32",
    "date_gmt": "2020-08-13T08:03:32",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=45"
    },
    "modified": "2020-08-13T08:03:32",
    "modified_gmt": "2020-08-13T08:03:32",
    "slug": "html-form-input-types",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-form-input-types/",
    "title": {
      "rendered": "HTML Form Input Types"
    },
    "content": {
      "rendered": "\n<p>In HTML &lt;input type=&#8221; &#8220;&gt; is an important element of HTML form. The &#8220;type&#8221; attribute of input element can be various types, which defines information field. Such as &lt;input type=&#8221;text&#8221; name=&#8221;name&#8221;&gt; gives a text box.</p>\n\n\n\n<h2>Following is a list of all types of &lt;input&gt; element of HTML.</h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>type=&#8221; &#8220;</th><th>Description</th></tr><tr><td>text</td><td>Defines a one-line text input field</td></tr><tr><td>password</td><td>Defines a one-line password input field</td></tr><tr><td>submit</td><td>Defines a submit button to submit the form to server</td></tr><tr><td>reset</td><td>Defines a reset button to reset all values in the form.</td></tr><tr><td>radio</td><td>Defines a radio button which allows select one option.</td></tr><tr><td>checkbox</td><td>Defines checkboxes which allow select multiple options form.</td></tr><tr><td>button</td><td>Defines a simple push button, which can be programmed to perform a task on an event.</td></tr><tr><td>file</td><td>Defines to select the file from device storage.</td></tr><tr><td>image</td><td>Defines a graphical submit button.</td></tr></tbody></table></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p><strong>HTML5 added new types on &lt;input&gt; element. Following is the list of types of elements of HTML5</strong></p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>type=&#8221; &#8220;</th><th>Description</th></tr><tr><td>color</td><td>Defines an input field with a specific color.</td></tr><tr><td>date</td><td>Defines an input field for selection of date.</td></tr><tr><td>datetime-local</td><td>Defines an input field for entering a date without time zone.</td></tr><tr><td>email</td><td>Defines an input field for entering an email address.</td></tr><tr><td>month</td><td>Defines a control with month and year, without time zone.</td></tr><tr><td>number</td><td>Defines an input field to enter a number.</td></tr><tr><td>url</td><td>Defines a field for entering URL</td></tr><tr><td>week</td><td>Defines a field to enter the date with week-year, without time zone.</td></tr><tr><td>search</td><td>Defines a single line text field for entering a search string.</td></tr><tr><td>tel</td><td>Defines an input field for entering the telephone number.</td></tr></tbody></table></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p><strong>Following is the description about types of &lt;input&gt; element with examples.</strong></p>\n\n\n\n<h3>1. &lt;input type=&#8221;text&#8221;&gt;:</h3>\n\n\n\n<p>&lt;input&gt; element of type &#8220;text&#8221; are used to define a single-line input text field.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \n    &lt;label>Enter first name&lt;/label>&lt;br>  \n    &lt;input type=\"text\" name=\"firstname\">&lt;br>  \n    &lt;label>Enter last name&lt;/label>&lt;br>  \n    &lt;input type=\"text\" name=\"lastname\">&lt;br>  \n    &lt;p>&lt;strong>Note:&lt;/strong>The default maximum cahracter lenght is 20.&lt;/p>  \n&lt;/form>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h3>Input &#8220;text&#8221; type:</h3>\n\n\n\n<p>The&nbsp;<strong>&#8220;text&#8221;</strong>field defines a sinlge line input text field.Enter first name</p>\n\n\n\n<p>Enter last name</p>\n\n\n\n<p><strong>Note:</strong>The default maximum cahracter lenght is 20.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>2. &lt;input type=&#8221;password&#8221;&gt;:</h3>\n\n\n\n<p>The &lt;input&gt; element of type &#8220;password&#8221; allow a user to enter the password securely in a webpage. The entered text in password filed converted into &#8220;*&#8221; or &#8220;.&#8221;, so that it cannot be read by another user.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \n    &lt;label>Enter User name&lt;/label>&lt;br>  \n    &lt;input type=\"text\" name=\"firstname\">&lt;br>  \n    &lt;label>Enter Password&lt;/label>&lt;br>  \n    &lt;input type=\"Password\" name=\"password\">&lt;br>  \n    &lt;br>&lt;input type=\"submit\" value=\"submit\">  \n&lt;/form>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h3>Input &#8220;password&#8221; type:</h3>\n\n\n\n<p>The&nbsp;<strong>&#8220;password&#8221;</strong>field defines a sinlge line input password field to enter the password securely.Enter User name</p>\n\n\n\n<p>Enter Password</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>3. &lt;input type=&#8221;submit&#8221;&gt;:</h3>\n\n\n\n<p>The &lt;input&gt; element of type &#8220;submit&#8221; defines a submit button to submit the form to the server when the &#8220;click&#8221; event occurs.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form action=\"https://www.codemeals.com/html-tutorial\">  \n    &lt;label>Enter User name&lt;/label>&lt;br>  \n    &lt;input type=\"text\" name=\"firstname\">&lt;br>  \n    &lt;label>Enter Password&lt;/label>&lt;br>  \n    &lt;input type=\"Password\" name=\"password\">&lt;br>  \n    &lt;br>&lt;input type=\"submit\" value=\"submit\">  \n&lt;/form> </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h3>Input &#8220;submit&#8221; type:</h3>\n\n\n\n<p>Enter User name</p>\n\n\n\n<p>Enter Password</p>\n\n\n\n<p>After clicking on submit button, this will submit the form to server and will redirect the page to&nbsp;<strong>action&nbsp;</strong>value.We will learn about &#8220;action&#8221; attribute in later chapters</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>4. &lt;input type=&#8221;reset&#8221;&gt;:</h3>\n\n\n\n<p>The &lt;input&gt; type &#8220;reset&#8221; is also defined as a button but when the user performs a click event, it by default reset the all inputted values.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \n    &lt;label>User id: &lt;/label>  \n     &lt;input type=\"text\" name=\"user-id\" value=\"user\">  \n              &lt;label>Password: &lt;/label>  \n     &lt;input type=\"password\" name=\"pass\" value=\"pass\">&lt;br>&lt;br>   \n     &lt;input type=\"submit\" value=\"login\">  \n      &lt;input type=\"reset\" value=\"Reset\">  \n&lt;/form>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h3>Input &#8220;reset&#8221; type:</h3>\n\n\n\n<p>User id:&nbsp;&nbsp;Password:&nbsp;</p>\n\n\n\n<p>Try to change the input values of user id and password, then when you click on reset, it will reset input fields with default values.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>5. &lt;input type=&#8221;radio&#8221;&gt;:</h3>\n\n\n\n<p>The &lt;input&gt; type &#8220;radio&#8221; defines the radio buttons, which allow choosing an option between a set of related options. At a time only one radio button option can be selected at a time.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \n  &lt;p>Kindly Select your favorite color&lt;/p>  \n  &lt;input type=\"radio\" name=\"color\" value=\"red\"> Red &lt;br>  \n  &lt;input type=\"radio\" name=\"color\" value=\"blue\"> blue &lt;br>  \n  &lt;input type=\"radio\" name=\"color\" value=\"green\">green &lt;br>  \n  &lt;input type=\"radio\" name=\"color\" value=\"pink\">pink &lt;br>  \n  &lt;input type=\"submit\" value=\"submit\">  \n&lt;/form></code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h3>Input &#8220;radio&#8221; type</h3>\n\n\n\n<p>Kindly Select your favorite color&nbsp;Red<br>&nbsp;blue<br>green<br>pink</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>6. &lt;input type=&#8221;checkbox&#8221;&gt;:</h3>\n\n\n\n<p>The &lt;input&gt; type &#8220;checkbox&#8221; are displayed as square boxes which can be checked or unchecked to select the choices from the given options.</p>\n\n\n\n<h4>Note: The &#8220;radio&#8221; buttons are similar to checkboxes, but there is an important difference between both types: radio buttons allow the user to select only one option at a time, whereas checkbox allows a user to select zero to multiple options at a time.</h4>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>   \n      &lt;label>Enter your Name:&lt;/label>  \n      &lt;input type=\"text\" name=\"name\">  \n      &lt;p>Kindly Select your favourite sports&lt;/p>  \n      &lt;input type=\"checkbox\" name=\"sport1\" value=\"cricket\">Cricket&lt;br>  \n      &lt;input type=\"checkbox\" name=\"sport2\" value=\"tennis\">Tennis&lt;br>  \n      &lt;input type=\"checkbox\" name=\"sport3\" value=\"football\">Football&lt;br>  \n      &lt;input type=\"checkbox\" name=\"sport4\" value=\"baseball\">Baseball&lt;br>  \n      &lt;input type=\"checkbox\" name=\"sport5\" value=\"badminton\">Badminton&lt;br>&lt;br>  \n      &lt;input type=\"submit\" value=\"submit\">  \n  &lt;/form>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h2>Input &#8220;checkbox&#8221; type</h2>\n\n\n\n<h3>Registration Form</h3>\n\n\n\n<p>Enter your Name:&nbsp;</p>\n\n\n\n<p>Kindly Select your favorite sportsCricket<br>Tennis<br>Football<br>Baseball<br>Badminton</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>7. &lt;input type=&#8221;button&#8221;&gt;:</h3>\n\n\n\n<p>The &lt;input&gt; type &#8220;button&#8221; defines a simple push button, which can be programmed to control a functionally on any event such as, click event.</p>\n\n\n\n<h4>Note: It mainly works with JavaScript.</h4>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \n     &lt;input type=\"button\" value=\"Clcik me \" onclick=\"alert('you are learning HTML')\">  \n&lt;/form></code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h2>Input &#8220;button&#8221; type.</h2>\n\n\n\n<p>Click the button to see the result:</p>\n\n\n\n<h4>Note: In the above example we have used the &#8220;alert&#8221; of JS, which you will learn in our JS tutorial. It is used to show a pop window.</h4>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>8. &lt;input type=&#8221;file&#8221;&gt;:</h3>\n\n\n\n<p>The &lt;input&gt; element with type &#8220;file&#8221; is used to select one or more files from user device storage. Once you select the file, and after submission, this file can be uploaded to the server with the help of JS code and file API.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \n     &lt;label>Select file to upload:&lt;/label>  \n     &lt;input type=\"file\" name=\"newfile\">  \n     &lt;input type=\"submit\" value=\"submit\">  \n&lt;/form>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h2>Input &#8220;file&#8221; type.</h2>\n\n\n\n<p>We can choose any type of file until we do not specify it! The selected file will appear at next to &#8220;choose file&#8221; optionSelect file to upload:&nbsp;&nbsp;</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>9. &lt;input type=&#8221;image&#8221;&gt;:</h3>\n\n\n\n<p>The &lt;input&gt; type &#8220;image&#8221; is used to represent a submit button in the form of image.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!-- wp:list {\"ordered\":true} -->\n&lt;ol>&lt;li>&amp;lt;!DOCTYPE&amp;nbsp;html&lt;strong>&amp;gt;&lt;/strong>&amp;nbsp;&amp;nbsp;&lt;/li>&lt;li class=\"\">&lt;strong>&amp;lt;&lt;/strong>&lt;strong>html&lt;/strong>&lt;strong>&amp;gt;&lt;/strong>&amp;nbsp;&amp;nbsp;&lt;/li>&lt;li>&lt;strong>&amp;lt;&lt;/strong>&lt;strong>body&lt;/strong>&lt;strong>&amp;gt;&lt;/strong>&amp;nbsp;&amp;nbsp;&lt;/li>&lt;li class=\"\">&lt;strong>&amp;lt;&lt;/strong>&lt;strong>h2&lt;/strong>&lt;strong>&amp;gt;&lt;/strong>Input&amp;nbsp;\"image\"&amp;nbsp;type.&lt;strong>&amp;lt;/&lt;/strong>&lt;strong>h2&lt;/strong>&lt;strong>&amp;gt;&lt;/strong>&amp;nbsp;&amp;nbsp;&lt;/li>&lt;li>&lt;strong>&amp;lt;&lt;/strong>&lt;strong>p&lt;/strong>&lt;strong>&amp;gt;&lt;/strong>We&amp;nbsp;can&amp;nbsp;create&amp;nbsp;an&amp;nbsp;image&amp;nbsp;as&amp;nbsp;submit&amp;nbsp;button&lt;strong>&amp;lt;/&lt;/strong>&lt;strong>p&lt;/strong>&lt;strong>&amp;gt;&lt;/strong>&amp;nbsp;&amp;nbsp;&lt;/li>&lt;li class=\"\">&amp;nbsp;&amp;nbsp;&lt;strong>&amp;lt;&lt;/strong>&lt;strong>form&lt;/strong>&lt;strong>&amp;gt;&lt;/strong>&amp;nbsp;&amp;nbsp;&lt;/li>&lt;li>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;strong>&amp;lt;&lt;/strong>&lt;strong>label&lt;/strong>&lt;strong>&amp;gt;&lt;/strong>User&amp;nbsp;id:&lt;strong>&amp;lt;/&lt;/strong>&lt;strong>label&lt;/strong>&lt;strong>&amp;gt;&lt;/strong>&lt;strong>&amp;lt;&lt;/strong>&lt;strong>br&lt;/strong>&lt;strong>&amp;gt;&lt;/strong>&amp;nbsp;&amp;nbsp;&lt;/li>&lt;li class=\"\">&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;strong>&amp;lt;&lt;/strong>&lt;strong>input&lt;/strong>&amp;nbsp;type=\"text\"&amp;nbsp;name=\"name\"&lt;strong>&amp;gt;&lt;/strong>&lt;strong>&amp;lt;&lt;/strong>&lt;strong>br&lt;/strong>&lt;strong>&amp;gt;&lt;/strong>&lt;strong>&amp;lt;&lt;/strong>&lt;strong>br&lt;/strong>&lt;strong>&amp;gt;&lt;/strong>&amp;nbsp;&amp;nbsp;&lt;/li>&lt;li>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;strong>&amp;lt;&lt;/strong>&lt;strong>input&lt;/strong>&amp;nbsp;type=\"image\"&amp;nbsp;alt=\"Submit\"&amp;nbsp;src=\"login.png\"&amp;nbsp;&amp;nbsp;width=\"100px\"&lt;strong>&amp;gt;&lt;/strong>&amp;nbsp;&amp;nbsp;&lt;/li>&lt;li class=\"\">&amp;nbsp;&amp;nbsp;&lt;strong>&amp;lt;/&lt;/strong>&lt;strong>form&lt;/strong>&lt;strong>&amp;gt;&lt;/strong>&amp;nbsp;&amp;nbsp;&lt;/li>&lt;li>&amp;nbsp;&amp;nbsp;&lt;/li>&lt;li class=\"\">&amp;nbsp;&lt;strong>&amp;lt;/&lt;/strong>&lt;strong>body&lt;/strong>&lt;strong>&amp;gt;&lt;/strong>&amp;nbsp;&amp;nbsp;&lt;/li>&lt;li>&lt;strong>&amp;lt;/&lt;/strong>&lt;strong>html&lt;/strong>&lt;strong>&amp;gt;&lt;/strong>&amp;nbsp;&amp;nbsp;&lt;/li>&lt;/ol>\n&lt;!-- /wp:list -->\n\n&lt;!-- wp:separator -->\n&lt;hr class=\"wp-block-separator\"/>\n&lt;!-- /wp:separator --></code></pre>\n\n\n\n<h2>HTML5 newly added &lt;input&gt; types element</h2>\n\n\n\n<h3>1. &lt;input type=&#8221;color&#8221;&gt;:</h3>\n\n\n\n<p>The &lt;input&gt; type &#8220;color&#8221; is used to define an input field which contains a colour. It allows a user to specify the colour by the visual colour interface on a browser.</p>\n\n\n\n<h4>Note: The &#8220;color&#8221; type only supports color value in hexadecimal format, and the default value is #000000 (black).</h4>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \n    Pick your Favorite color: &lt;br>&lt;br>  \n    &lt;input type=\"color\" name=\"upclick\" value=\"#a52a2a\"> Upclick&lt;br>&lt;br>  \n    &lt;input type=\"color\" name=\"downclick\" value=\"#f5f5dc\"> Downclick  \n&lt;/form></code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h3>Input &#8220;color&#8221; types:</h3>\n\n\n\n<p>Pick your Favorite color:</p>\n\n\n\n<p>&nbsp;Up-click</p>\n\n\n\n<p>&nbsp;Down-click</p>\n\n\n\n<p><strong>Note:</strong>The default value of &#8220;color&#8221; type is #000000 (black). It only supports color value in hexadecimal format.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>2. &lt;input type=&#8221;date&#8221;&gt;:</h3>\n\n\n\n<p>The &lt;input&gt; element of type &#8220;date&#8221; generates an input field, which allows a user to input the date in a given format. A user can enter the date by text field or by date picker interface.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \n    Select Start and End Date: &lt;br>&lt;br>  \n      &lt;input type=\"date\" name=\"Startdate\"> Start date:&lt;br>&lt;br>  \n      &lt;input type=\"date\" name=\"Enddate\"> End date:&lt;br>&lt;br>  \n     &lt;input type=\"submit\">  \n&lt;/form>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h3>Input &#8220;date&#8221; type</h3>\n\n\n\n<p>Select Start and End Date:</p>\n\n\n\n<p>&nbsp;Start date:</p>\n\n\n\n<p>&nbsp;End date:</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>3. &lt;input type=&#8221;datetime-local&#8221;&gt;:</h3>\n\n\n\n<p>The &lt;input&gt; element of type &#8220;datetime-local&#8221; creates input filed which allow a user to select the date as well as local time in the hour and minute without time zone information.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \n    &lt;label>  \n      Select the meeting schedule: &lt;br>&lt;br>  \n      Select date &amp; time: &lt;input type=\"datetime-local\" name=\"meetingdate\"> &lt;br>&lt;br>  \n    &lt;/label>  \n      &lt;input type=\"submit\">  \n&lt;/form>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h3>Input &#8220;datetime-local&#8221; type</h3>\n\n\n\n<p>Select the meeting schedule:</p>\n\n\n\n<p>Select date &amp; time:&nbsp;</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>4. &lt;input type=&#8221;email&#8221;&gt;:</h3>\n\n\n\n<p>The &lt;input&gt; type &#8220;email&#8221; creates an input filed which allow a user to enter the e-mail address with pattern validation. The multiple attributes allow a user to enter more than one email address.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \n         &lt;label>&lt;b>Enter your Email-address&lt;/b>&lt;/label>  \n        &lt;input type=\"email\" name=\"email\" required>  \n        &lt;input type=\"submit\">  \n         &lt;p>&lt;strong>Note:&lt;/strong>User can also enter multiple email addresses separating by comma or whitespace as following: &lt;/p>  \n         &lt;label>&lt;b>Enter multiple Email-addresses&lt;/b>&lt;/label>  \n         &lt;input type=\"email\" name=\"email\"  multiple>  \n        &lt;input type=\"submit\">  \n&lt;/form>     </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h3>Input &#8220;email&#8221; type</h3>\n\n\n\n<p><strong>Enter your Email-address</strong></p>\n\n\n\n<p><strong>Note:</strong>User can also enter multiple email addresses separating by comma or whitespace as following:<strong>Enter multiple Email-addresses</strong></p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>5. &lt;input type=&#8221;month&#8221;&gt;:</h3>\n\n\n\n<p>The &lt;input&gt; type &#8220;month&#8221; creates an input field which allows a user to easily enter month and year in the format of &#8220;MM, YYYY&#8221; where MM defines month value, and YYYY defines the year value. New</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \n    &lt;label>Enter your Birth Month-year: &lt;/label>  \n    &lt;input type=\"month\" name=\"newMonth\">  \n    &lt;input type=\"submit\">  \n&lt;/form> </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h3>Input &#8220;month&#8221; type:</h3>\n\n\n\n<p>Enter your Birth Month-year:&nbsp;&nbsp;</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>6. &lt;input type=&#8221;number&#8221;&gt;:</h3>\n\n\n\n<p>The &lt;input&gt; element type number creates input filed which allows a user to enter the numeric value. You can also restrict to enter a minimum and maximum value using min and max attribute.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \n    &lt;label>Enter your age: &lt;/label>  \n    &lt;input type=\"number\" name=\"num\" min=\"50\" max=\"80\">  \n     &lt;input type=\"submit\">  \n&lt;/form>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h3>Input &#8220;number&#8221; type</h3>\n\n\n\n<p>Enter your age:&nbsp;&nbsp;</p>\n\n\n\n<p><strong>Note:</strong>It will allow to enter number in range of 50-80. If you want to enter number other than range, it will show an error.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>7. &lt;input type=&#8221;url&#8221;&gt;:</h3>\n\n\n\n<p>The &lt;input&gt; element of type &#8220;url&#8221; creates an input filed which enables user to enter the URL.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \n    &lt;label>Enter your website URL: &lt;/label>  \n    &lt;input type=\"url\" name=\"website\" placeholder=\"http://example.com\">&lt;br>  \n    &lt;input type=\"submit\" value=\"send data\">  \n&lt;/form>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h3>Input &#8220;url&#8221; type</h3>\n\n\n\n<p>Enter your website URL:&nbsp;</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>8. &lt;input type=&#8221;week&#8221;&gt;:</h3>\n\n\n\n<p>The &lt;input&gt; type week creates an input field which allows a user to select a week and year form the drop-down calendar without time zone.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \n    &lt;label>&lt;b>Select your best week of year:&lt;/b>&lt;/label>&lt;br>&lt;br>  \n    &lt;input type=\"week\" name=\"bestweek\">  \n    &lt;input type=\"submit\" value=\"Send data\">  \n &lt;/form> </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h2>Input &#8220;week&#8221; type</h2>\n\n\n\n<p><strong>Select your best week of year:</strong></p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>9. &lt;input type=&#8221;search&#8221;&gt;:</h3>\n\n\n\n<p>The &lt;input&gt; type &#8220;search&#8221; creates an input filed which allows a user to enter a search string. These are functionally symmetrical to the text input type, but may be styled differently.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \n    &lt;label>Search here:&lt;/label>  \n    &lt;input type=\"search\" name=\"q\">  \n    &lt;input type=\"submit\" value=\"search\">  \n&lt;/form>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h2>Input &#8220;search&#8221; type</h2>\n\n\n\n<p>Search here:&nbsp;&nbsp;</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>10. &lt;input type=&#8221;tel&#8221;&gt;:</h3>\n\n\n\n<p>The &lt;input&gt; element of type ?tel? creates an input filed to enter the telephone number. The &#8220;tel&#8221; type does not have default validation such as email, because telephone number pattern can vary worldwide.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \n      &lt;label>&lt;b>Enter your Telephone Number(in format of xxx-xxx-xxxx):&lt;/b>&lt;/label>  \n      &lt;input type=\"tel\" name=\"telephone\" pattern=\"&#91;0-9]{3}-&#91;0-9]{3}-&#91;0-9]{4}\" required>  \n      &lt;input type=\"submit\">&lt;br>&lt;br>  \n   &lt;/form> </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h2>Input &#8220;tel&#8221; type</h2>\n\n\n\n<p><strong>Enter your Telephone Number(in format of xxx-xxx-xxxx):</strong></p>\n\n\n\n<p><strong>Note:</strong>&nbsp;Here we are using two attributes that are &#8220;pattern&#8221; and&#8221;required&#8221; which will allow user to enter the number in given format and it is required to enter the number in input field.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>In HTML &lt;input type=&#8221; &#8220;&gt; is an important element of HTML form. The &#8220;type&#8221; attribute of input element can be various types, which defines information field. Such as &lt;input type=&#8221;text&#8221; name=&#8221;name&#8221;&gt; gives a text box. Following is a list of all types of &lt;input&gt; element of HTML. type=&#8221; &#8220; Description text Defines a one-line text [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3881"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3881"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3881/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3881"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3881"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3881"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3882,
    "date": "2020-08-13T08:11:38",
    "date_gmt": "2020-08-13T08:11:38",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=47"
    },
    "modified": "2020-08-13T08:11:38",
    "modified_gmt": "2020-08-13T08:11:38",
    "slug": "html-form-attribute",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-form-attribute/",
    "title": {
      "rendered": "HTML form Attribute"
    },
    "content": {
      "rendered": "\n<h2>HTML &lt;form&gt; element attributes</h2>\n\n\n\n<p>In HTML there are various attributes available for &lt;form&gt; element which are given below:</p>\n\n\n\n<h2>HTML action attribute</h2>\n\n\n\n<p>The action attribute of &lt;form&gt; element defines the process to be performed on form when form is submitted, or it is a URI to process the form information.</p>\n\n\n\n<p>The action attribute value defines the web page where information proceed. It can be .php, .jsp, .asp, etc. or any URL where you want to process your form.</p>\n\n\n\n<h4>Note: If action attribute value is blank then form will be processed to the same page.</h4>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form action=\"action.html\" method=\"post\">  \n&lt;label>User Name:&lt;/label>&lt;br>  \n&lt;input type=\"text\" name=\"name\">&lt;br>&lt;br>  \n&lt;label>User Password&lt;/label>&lt;br>  \n&lt;input type=\"password\" name=\"pass\">&lt;br>&lt;br>  \n &lt;input type=\"submit\">  \n   &lt;/form>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h2>Demo of action attribute of form element</h2>\n\n\n\n<p>User Name:</p>\n\n\n\n<p>User Password</p>\n\n\n\n<p><strong>It will redirect to a new page &#8220;action.html&#8221; when you click on submit button</strong></p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>HTML method attribute</h3>\n\n\n\n<p>The method attribute defines the HTTP method which browser used to submit the form. The possible values of method attribute can be:</p>\n\n\n\n<ul><li><strong>post:</strong>&nbsp;We can use the post value of method attribute when we want to process the sensitive data as it does not display the submitted data in URL.</li></ul>\n\n\n\n<h3>Example:</h3>\n\n\n\n<ol><li><strong>&lt;</strong><strong>form</strong>&nbsp;action=&#8221;action.html&#8221;&nbsp;method=&#8221;post&#8221;<strong>&gt;</strong>&nbsp;&nbsp;</li></ol>\n\n\n\n<ul><li><strong>get:</strong>&nbsp;The get value of method attribute is default value while submitting the form. But this is not secure as it displays data in URL after submitting the form.</li></ul>\n\n\n\n<h3>Example:</h3>\n\n\n\n<ol><li><strong>&lt;</strong><strong>form</strong>&nbsp;action=&#8221;action.html&#8221;&nbsp;method=&#8221;get&#8221;<strong>&gt;</strong>&nbsp;&nbsp;</li></ol>\n\n\n\n<p>When submitting the data, it will display the entered data in the form of:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>file:///D:/HTML/action.html?name=codemealst&amp;pass=123</code></pre>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML target attribute</h2>\n\n\n\n<p>The target attribute defines where to open the response after submitting the form. The following are the keywords used with the target attribute.</p>\n\n\n\n<ul><li><strong>_self:</strong>&nbsp;If we use _self as an attribute value, then the response will display in current page only.</li></ul>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form action=\"action.html\" method=\"get\" target=\"_self\">  </code></pre>\n\n\n\n<pre class=\"wp-block-code\"><code>_blank: If we use _blank as an attribute it will load the response in a new page.</code></pre>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form action=\"action.html\" method=\"get\" target=\"_blank\"></code></pre>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML autocomplete attribute</h2>\n\n\n\n<p>The HTML autocomplete attribute is a newly added attribute of HTML5 which enables an input field to complete automatically. It can have two values &#8220;on&#8221; and &#8220;off&#8221; which enables autocomplete either ON or OFF. The default value of autocomplete attribute is &#8220;on&#8221;.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form action=\"action.html\" method=\"get\" autocomplete=\"on\">  </code></pre>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form action=\"action.html\" method=\"get\" autocomplete=\"off\"></code></pre>\n\n\n\n<h4>Note: it can be used with &lt;form&gt; element and &lt;input&gt; element both.</h4>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML enctype attribute</h2>\n\n\n\n<p>The HTML enctype attribute defines the encoding type of form-content while submitting the form to the server. The possible values of enctype can be:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>application/x-www-form-urlencoded: It is default encoding type if the enctype attribute is not included in the form. All characters are encoded before submitting the form.</code></pre>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form action=\"action.html\" method=\"post\" enctype=\"application/x-www-form-urlencoded\" > </code></pre>\n\n\n\n<pre class=\"wp-block-code\"><code>multipart/form-data: It does not encode any character. It is used when our form contains file-upload controls.</code></pre>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form action=\"action.html\" method=\"post\" enctype=\"multipart/form-data\"></code></pre>\n\n\n\n<pre class=\"wp-block-code\"><code>text/plain (HTML5): In this encoding type only space are encoded into + symbol and no any other special character encoded.</code></pre>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form action=\"action.html\" method=\"post\" enctype=\"text/plain\" > </code></pre>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML novalidate attribute HTML5</h2>\n\n\n\n<p>The novalidate attribute is newly added Boolean attribute of HTML5. If we apply this attribute in form then it does not perform any type of validation and submit the form.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form action = \"action.html\" method = \"get\" novalidate>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h2>Fill the form</h2>\n\n\n\n<p>Enter name:</p>\n\n\n\n<p>Enter age:</p>\n\n\n\n<p>Enter email:</p>\n\n\n\n<p><strong>Try to change the form detials with novalidate atttribute and without novalidate attribute and see the difference.</strong></p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML &lt;input&gt; element attribute</h2>\n\n\n\n<h2>HTML name attribute</h2>\n\n\n\n<p>The HTML name attribute defines the name of an input element. The name and value attribute are included in HTTP request when we submit the form.</p>\n\n\n\n<h4>Note: One should not omit the name attribute as when we submit the form the HTTP request includes both name-value pair and if name is not available it will not process that input field.</h4>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form action = \"action.html\" method = \"get\">  \n         Enter name:&lt;br>&lt;input type=\"name\" name=\"uname\">&lt;br>  \n         Enter age:&lt;br>&lt;input type=\"number\" name=\"age\">&lt;br>  \n         Enter email:&lt;br>&lt;input type=\"email\">&lt;br>  \n         &lt;input type=\"submit\" value=\"Submit\">  \n      &lt;/form>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h2>Fill the form</h2>\n\n\n\n<p>Enter name:</p>\n\n\n\n<p>Enter age:</p>\n\n\n\n<p>Enter email:</p>\n\n\n\n<p><strong>Note: If you will not use name attribute in any input field, then that input field will not be submitted, when submit the form.</strong></p>\n\n\n\n<p>Click on submit and see the URL where email is not included in HTTP request as we have not used name attribute in the email input field</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML value attribute</h2>\n\n\n\n<p>The HTML value attribute defines the initial value or default value of an input field.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \n        &lt;label>Enter your Name&lt;/label>&lt;br>  \n        &lt;input type=\"text\" name=\"uname\" value=\"Enter Name\">&lt;br>&lt;br>  \n        &lt;label>Enter your Email-address&lt;/label>&lt;br>  \n        &lt;input type=\"text\" name=\"uname\" value=\"Enter email\">&lt;br>&lt;br>  \n          &lt;label>Enter your password&lt;/label>&lt;br>  \n        &lt;input type=\"password\" name=\"pass\" value=\"\">&lt;br>&lt;br>  \n        &lt;input type=\"submit\" value=\"login\">  \n   &lt;/form>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h2>Fill the form</h2>\n\n\n\n<p>Enter your Name</p>\n\n\n\n<p>Enter your Email-address</p>\n\n\n\n<p>Enter your password</p>\n\n\n\n<p><strong>Note: In password input filed the value attribute will always unclear</strong></p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML required attribute HTML5</h2>\n\n\n\n<p>HTML required is a Boolean attribute which specifies that user must fill that filed before submitting the form.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \n        &lt;label>Enter your Email-address&lt;/label>&lt;br>  \n        &lt;input type=\"text\" name=\"uname\" required>&lt;br>&lt;br>  \n         &lt;label>Enter your password&lt;/label>&lt;br>  \n        &lt;input type=\"password\" name=\"pass\">&lt;br>&lt;br>  \n        &lt;input type=\"submit\" value=\"login\">  \n   &lt;/form>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h2>Fill the form</h2>\n\n\n\n<p>Enter your Email-address</p>\n\n\n\n<p>Enter your password</p>\n\n\n\n<p><strong>If you will try to submit the form without completing email field then it will give an error pop up.</strong></p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML autofocus attribute HTML5</h2>\n\n\n\n<p>The autofocus is a Boolean attribute which enables a field automatically focused when a webpage loads.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \n        &lt;label>Enter your Email-address&lt;/label>&lt;br>  \n        &lt;input type=\"text\" name=\"uname\" autofocus>&lt;br>&lt;br>  \n         &lt;label>Enter your password&lt;/label>&lt;br>  \n        &lt;input type=\"password\" name=\"pass\">&lt;br>&lt;br>  \n        &lt;input type=\"submit\" value=\"login\">  \n   &lt;/form></code></pre>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML placeholder attribute HTML5</h2>\n\n\n\n<p>The placeholder attribute specifies a text within an input field which informs the user about the expected input of that filed.</p>\n\n\n\n<p>The placeholder attribute can be used with text, password, email, and URL values.</p>\n\n\n\n<p>When the user enters the value, the placeholder will be automatically removed.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;form>  \n        &lt;label>Enter your name&lt;/label>&lt;br>  \n        &lt;input type=\"text\" name=\"uname\" placeholder=\"Your name\">&lt;br>&lt;br>  \n            &lt;label>Enter your Email address&lt;/label>&lt;br>  \n        &lt;input type=\"email\" name=\"email\" placeholder=\"example@gmail.com\">&lt;br>&lt;br>  \n            &lt;label>Enter your password&lt;/label>&lt;br>  \n        &lt;input type=\"password\" name=\"pass\" placeholder=\"your password\">&lt;br>&lt;br>  \n        &lt;input type=\"submit\" value=\"login\">  \n    &lt;/form>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h3>Registration form</h3>\n\n\n\n<p>Enter your name</p>\n\n\n\n<p>Enter your Email address</p>\n\n\n\n<p>Enter your password</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML disabled attribute</h2>\n\n\n\n<p>The HTML disabled attribute when applied then it disable that input field. The disabled field does not allow the user to interact with that field.</p>\n\n\n\n<p>The disabled input filed does not receive click events, and these input value will not be sent to the server when submitting the form.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;input type=\"text\" name=\"uname\" disabled>&lt;br>&lt;br>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h3>Registration form</h3>\n\n\n\n<p>Enter User name</p>\n\n\n\n<p>Enter your Email address</p>\n\n\n\n<p>Enter your password</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML size attribute</h2>\n\n\n\n<p>The size attribute controls the size of the input field in typed characters.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;label>Account holder name&lt;/label>&lt;br>  \n        &lt;input type=\"text\" name=\"uname\" size=\"40\" required>&lt;br>&lt;br>  \n        &lt;label>Account number&lt;/label>&lt;br>  \n        &lt;input type=\"text\" name=\"an\" size=\"30\" required>&lt;br>&lt;br>  \n        &lt;label>CVV&lt;/label>&lt;br>  \n        &lt;input type=\"text\" name=\"cvv\"  size=\"1\" required>&lt;br>&lt;br>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h3>Registration form with disbaled attribute</h3>\n\n\n\n<p>Account holder name</p>\n\n\n\n<p>Account number</p>\n\n\n\n<p>CVV</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML form attribute</h2>\n\n\n\n<p>HTML form attribute allows a user to specify an input filed outside the form but remains the part of the parent form.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>User email: &lt;br>&lt;input type=\"email\" name=\"email\"  form=\"fcontrol\"  required>&lt;br>  \n         &lt;input type=\"submit\" form=\"fcontrol\">  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong>User Name:</p>\n\n\n\n<p>User password:</p>\n\n\n\n<p>The email field is outside the form but still it will remain part of the formUser email:</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>HTML &lt;form&gt; element attributes In HTML there are various attributes available for &lt;form&gt; element which are given below: HTML action attribute The action attribute of &lt;form&gt; element defines the process to be performed on form when form is submitted, or it is a URI to process the form information. The action attribute value defines the [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3882"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3882"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3882/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3882"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3882"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3882"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3883,
    "date": "2020-08-13T08:15:20",
    "date_gmt": "2020-08-13T08:15:20",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=49"
    },
    "modified": "2020-08-13T08:15:20",
    "modified_gmt": "2020-08-13T08:15:20",
    "slug": "html-style-using-css",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-style-using-css/",
    "title": {
      "rendered": "HTML style using CSS"
    },
    "content": {
      "rendered": "\n<p>Let&#8217;s suppose we have created our web page using a simple HTML code, and we want something which can present our page in a correct format, and visibly attractive. So to do this, we can style our web page with CSS (Cascading Stylesheet) properties.</p>\n\n\n\n<p>CSS is used to apply the style in the web page which is made up of HTML elements. It describes the look of the webpage.</p>\n\n\n\n<p>CSS provides various style properties such as background color, padding, margin, border-color, and many more, to style a webpage.</p>\n\n\n\n<p>Each property in CSS has a name-value pair, and each property is separated by a semicolon (;).</p>\n\n\n\n<h4>Note: In this chapter, we have given a small overview of CSS. You will learn everything in depth about CSS in our CSS tutorial.</h4>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;body style=\"text-align: center;\">  \n      &lt;h2 style=\"color: red;\">Welcome to javaTpoint&lt;/h2>  \n      &lt;p style=\"color: blue; font-size: 25px; font-style: italic ;\">This is a great website to learn technologies in very simple way. &lt;/p>  \n&lt;/body>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p>In the above example, we have used a style attribute to provide some styling format to our code.</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h2>Welcome to javaTpoint</h2>\n\n\n\n<p>This is a great website to learn technologies in very simple way.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Three ways to apply CSS</h2>\n\n\n\n<p>To use CSS with HTML document, there are three ways:</p>\n\n\n\n<ul><li><strong>Inline CSS:</strong>&nbsp;Define CSS properties using style attribute in the HTML elements.</li><li><strong>Internal or Embedded CSS:</strong>&nbsp;Define CSS using &lt;style&gt; tag in &lt;head&gt; section.</li><li><strong>External CSS:</strong>&nbsp;Define all CSS property in a separate .css file, and then include the file with HTML file using&nbsp;tag in section.</li></ul>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Inline CSS:</h2>\n\n\n\n<p>Inline CSS is used to apply CSS in a single element. It can apply style uniquely in each element.</p>\n\n\n\n<p>To apply inline CSS, you need to use style attribute within HTML element. We can use as many properties as we want, but each property should be separated by a semicolon (;).</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;h3 style=\"color: red;  \n            font-style: italic;  \n            text-align: center;  \n            font-size: 50px;  \n            padding-top: 25px;\">Learning HTML using Inline CSS&lt;/h3>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<h3>Learning HTML using Inline CSS</h3>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Internal CSS:</h2>\n\n\n\n<p>An Internal stylesheets contains the CSS properties for a webpage in &lt;head&gt; section of HTML document. To use Internal CSS, we can use class and id attributes.</p>\n\n\n\n<p>We can use internal CSS to apply a style for a single HTML page.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;head>  \n                  &lt;style>  \n      /*Internal CSS using element name*/  \n            body{background-color:lavender;  \n             text-align: center;}  \n             h2{font-style: italic;  \n              font-size: 30px;  \n              color: #f08080;}  \n            p{font-size: 20px;}  \n        /*Internal CSS using class name*/  \n            .blue{color: blue;}  \n            .red{color: red;}  \n            .green{color: green;}  \n      &lt;/style>  \n    &lt;/head>  \n  &lt;body>  \n   &lt;h2>Learning HTML with internal CSS&lt;/h2>  \n    &lt;p class=\"blue\">This is a blue color paragraph&lt;/p>  \n    &lt;p class=\"red\">This is a red color paragraph&lt;/p>  \n    &lt;p class=\"green\">This is a green color paragraph&lt;/p>  \n  &lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<h4>Note: In the above example, we have used a class attribute which you will learn in the next chapter.</h4>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>External CSS:</h2>\n\n\n\n<p>An external CSS contains a separate CSS file which only contains style code using the class name, id name, tag name, etc. We can use this CSS file in any HTML file by including it in HTML file using &lt;link&gt; tag.</p>\n\n\n\n<p>If we have multiple HTML pages for an application and which use similar CSS, then we can use external CSS.</p>\n\n\n\n<p>There are two files need to create to apply external CSS</p>\n\n\n\n<ul><li>First, create the HTML file</li><li>Create a CSS file and save it using the .css extension (This file only will only contain the styling code.)</li><li>Link the CSS file in your HTML file using&nbsp;tag in header section of HTML document.</li></ul>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;head>  \n    &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">  \n    &lt;/head>  \n  &lt;body>  \n   &lt;h2>Learning HTML with External CSS&lt;/h2>  \n    &lt;p class=\"blue\">This is a blue color paragraph&lt;/p>  \n    &lt;p class=\"red\">This is a red color paragraph&lt;/p>  \n    &lt;p class=\"green\">This is a green color paragraph&lt;/p>  \n  &lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<pre class=\"wp-block-code\"><code>CSS file:body{\nbackground-color:lavender;\ntext-align: center;\n}\nh2{\nfont-style: italic;\nsize: 30px;\ncolor: #f08080;\n}\np{\nfont-size: 20px;\n}</code></pre>\n\n\n\n<pre class=\"wp-block-code\"><code>.blue{\ncolor: blue;\n}\n.red{\ncolor: red;\n}\n.green{\ncolor: green;\n}</code></pre>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Commonly used CSS properties:</h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Properties-name</th><th>Syntax</th><th>Description</th></tr><tr><td>background-color</td><td>background-color:red;</td><td>It defines the background color of that element.</td></tr><tr><td>color</td><td>color: lightgreen;</td><td>It defines the color of text of an element</td></tr><tr><td>padding</td><td>padding: 20px;</td><td>It defines the space between content and the border.</td></tr><tr><td>margin</td><td>margin: 30px; margin-left:</td><td>It creates space around an element.</td></tr><tr><td>font-family</td><td>font-family: cursive;</td><td>Font-family defines a font for a particular element.</td></tr><tr><td>Font-size</td><td>font-size: 50px;</td><td>Font-size defines a font size for a particular element.</td></tr><tr><td>text-align</td><td>text-align: left;</td><td>It is used to align the text in a selected position.</td></tr></tbody></table></figure>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Let&#8217;s suppose we have created our web page using a simple HTML code, and we want something which can present our page in a correct format, and visibly attractive. So to do this, we can style our web page with CSS (Cascading Stylesheet) properties. CSS is used to apply the style in the web page [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3883"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3883"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3883/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3883"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3883"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3883"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3939,
    "date": "2020-08-13T08:19:10",
    "date_gmt": "2020-08-13T08:19:10",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=51"
    },
    "modified": "2020-08-13T08:19:10",
    "modified_gmt": "2020-08-13T08:19:10",
    "slug": "html-classes",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-classes/",
    "title": {
      "rendered": "HTML Classes"
    },
    "content": {
      "rendered": "\n<h2>Class Attribute in HTML</h2>\n\n\n\n<p>The HTML class attribute is used to specify a single or multiple class names for an HTML element. The class name can be used by CSS and JavaScript to do some tasks for HTML elements. You can use this class in CSS with a specific class, write a period (.) character, followed by the name of the class for selecting elements.</p>\n\n\n\n<p>A class attribute can be defined within &lt;style&gt; tag or in separate file using the (.) character.</p>\n\n\n\n<p>In an HTML document, we can use the same class attribute name with different elements.</p>\n\n\n\n<h2>Defining an HTML class</h2>\n\n\n\n<p>To create an HTML class, firstly define style for HTML class using &lt;style&gt; tag within &lt;head&gt; section as following example:</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;head>  \n    &lt;style>  \n        .headings{   \n            color: lightgreen;  \n            font-family: cursive;  \n            background-color: black; }  \n    &lt;/style>  \n&lt;/head> </code></pre>\n\n\n\n<p>We have define style for a class name &#8220;headings&#8221;, and we can use this class name with any of HTML element in which we want to provide such styling. We just need to follow the following syntax to use it.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;tag class=\"ghf\"> content &lt;/tag>  </code></pre>\n\n\n\n<h3>Example 1:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;head>  \n    &lt;style>  \n        .headings{   \n            color: lightgreen;  \n            font-family: cursive;  \n            background-color: black; }  \n    &lt;/style>  \n&lt;/head>  \n&lt;body>  \n&lt;h1 class=\"headings\">This is first heading&lt;/h1>  \n&lt;h2 class=\"headings\">This is Second heading&lt;/h2>  \n&lt;h3 class=\"headings\">This is third heading&lt;/h3>  \n&lt;h4 class=\"headings\">This is fourth heading&lt;/h4>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Another Example with different class name</h2>\n\n\n\n<h3>Example:</h3>\n\n\n\n<p>Let&#8217;s use a class name &#8220;Fruit&#8221; with CSS to style all elements.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;style>    \n.fruit {    \n    background-color: orange;    \n    color: white;    \n    padding: 10px;    \n}     \n&lt;/style>    \n    \n&lt;h2 class=\"fruit\">Mango&lt;/h2>    \n&lt;p>Mango is king of all fruits.&lt;/p>    \n    \n&lt;h2 class=\"fruit\">Orange&lt;/h2>    \n&lt;p>Oranges are full of Vitamin C.&lt;/p>    \n    \n&lt;h2 class=\"fruit\">Apple&lt;/h2>    \n&lt;p>An apple a day, keeps the Doctor away.&lt;/p> </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p>Here you can see that we have used the class name &#8220;fruit&#8221; with (.) to use all its elements.</p>\n\n\n\n<h4>Note: You can use class attribute on any HTML element. The class name is case-sensitive.</h4>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Class Attribute in JavaScript</h2>\n\n\n\n<p>You can use JavaScript access elements with a specified class name by using the getElementsByClassName() method.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<p>Let&#8217;s hide all the elements with class name &#8220;fruit&#8221; when the user click on the button.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>    \n&lt;html>    \n&lt;body>    \n    \n&lt;h2>Class Attribute with JavaScript&lt;/h2>    \n&lt;p>Click the button, to hide all elements with the class name \"fruit\", with JavaScript:&lt;/p>    \n    \n&lt;button onclick=\"myFunction()\">Hide elements&lt;/button>    \n    \n    \n&lt;h2 class=\"fruit\">Mango&lt;/h2>    \n&lt;p>Mango is king of all fruits.&lt;/p>    \n    \n&lt;h2 class=\"fruit\">Orange&lt;/h2>    \n&lt;p>Oranges are full of Vitamin C.&lt;/p>    \n    \n&lt;h2 class=\"fruit\">Apple&lt;/h2>    \n&lt;p>An apple a day, keeps the Doctor away.&lt;/p>    \n    \n&lt;script>    \nfunction myFunction() {    \n  var x = document.getElementsByClassName(\"fruit\");    \n  for (var i = 0; i &lt; x.length; i++) {    \n    x&#91;i].style.display = \"none\";    \n  }    \n}    \n&lt;/script>    \n    \n&lt;/body>    \n&lt;/html>    </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<h4>Note: You will learn more about JavaScript in our JavaScript tutorial.</h4>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Multiple Classes</h2>\n\n\n\n<p>You can use multiple class names (more than one) with HTML elements. These class names must be separated by a space.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<p>Let&#8217;s style elements with class name &#8220;fruit&#8221; and also with a class name &#8220;center&#8221;.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>    \n&lt;html>    \n&lt;style>    \n.fruit {    \n    background-color: orange;    \n    color: white;    \n    padding: 10px;    \n}     \n    \n.center {    \n    text-align: center;    \n}    \n&lt;/style>    \n&lt;body>    \n    \n&lt;h2>Multiple Classes&lt;/h2>    \n&lt;p>All three elements have the class name \"fruit\". In addition, Mango also have the class name \"center\", which center-aligns the text.&lt;/p>    \n    \n&lt;h2 class=\"fruit center\">Mango&lt;/h2>    \n&lt;h2 class=\"fruit\">Orange&lt;/h2>    \n&lt;h2 class=\"fruit\">Apple&lt;/h2>    \n    \n&lt;/body>    \n&lt;/html> </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p>You can see that the first element &lt;h2&gt; belongs to both the &#8220;fruit&#8221; class and the &#8220;center&#8221; class.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Same class with Different Tag</h2>\n\n\n\n<p>You can use the same class name with different tags like &lt;h2&gt; and &lt;p&gt; etc. to share the same style.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>    \n&lt;html>    \n&lt;style>    \n.fruit {    \n  background-color: orange;    \n  color: white;    \n  padding: 10px;    \n}     \n&lt;/style>    \n&lt;body>    \n&lt;h2>Same Class with Different Tag&lt;/h2>    \n&lt;h2 class=\"fruit\">Mango&lt;/h2>    \n&lt;p class=\"fruit\">Mango is the king of all fruits.&lt;/p>    \n&lt;/body>    \n&lt;/html>  </code></pre>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Class Attribute in HTML The HTML class attribute is used to specify a single or multiple class names for an HTML element. The class name can be used by CSS and JavaScript to do some tasks for HTML elements. You can use this class in CSS with a specific class, write a period (.) character, [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3939"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3939"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3939/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3939"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3939"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3939"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3940,
    "date": "2020-08-13T08:20:38",
    "date_gmt": "2020-08-13T08:20:38",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=53"
    },
    "modified": "2020-08-13T08:20:38",
    "modified_gmt": "2020-08-13T08:20:38",
    "slug": "html-id-attribute",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-id-attribute/",
    "title": {
      "rendered": "HTML Id Attribute"
    },
    "content": {
      "rendered": "\n<p>The&nbsp;<strong>id attribute</strong>&nbsp;is used to specify the unique ID for an element of the HTML document. It allocates the unique identifier which is used by the&nbsp;<strong>CSS</strong>&nbsp;and the&nbsp;<strong>JavaScript</strong>&nbsp;for performing certain tasks.</p>\n\n\n\n<h4>Note: In the Cascading Style sheet (CSS), we can easily select an element with the specific id by using the # symbol followed by id.</h4>\n\n\n\n<h4>Note: JavaScript can access an element with the given ID by using the getElementById() method.</h4>\n\n\n\n<h3>Syntax</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;tag id=\"value\">  </code></pre>\n\n\n\n<p><strong>Example 1:</strong> The following example describes how to use the id attribute in CSS document:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;head>  \n&lt;title>  \nExample of Id attribute in CSS  \n&lt;/title>  \n&lt;style>  \n#Cars {  \npadding: 40px;  \nbackground-color: lightblue;  \ncolor: black;      \ntext-align: center;  \n}   \n  \n#Bikes  \n{  \npadding: 50px;  \nbackground-color: lightGreen;  \ntext-align: center;  \n}  \n&lt;/style>  \n&lt;/head>  \n&lt;body>  \n&lt;p> Use CSS to style an element with the id: &lt;/p>  \n&lt;h1 id=\"Cars\"> Cars &lt;/h1>  \n&lt;h1 id=\"Bikes\"> Bikes &lt;/h1>  \n&lt;/body>  \n&lt;/html>   </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-id-attribute.png\" alt=\"HTML Id Attribute\"/></figure>\n\n\n\n<p><strong>Example 2:</strong> The following example describes how to use the ID attribute in JavaScript.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>   \n&lt;head>   \n&lt;title> Date Attribute &lt;/title>   \n&lt;script>   \nfunction viewdate() {   \nvar x = document.getElementById(\"dob\").value;   \ndocument.getElementById(\"demo\").innerHTML = x;   \n&lt;/script>   \n&lt;/head>   \n&lt;body>   \nEmployee Name: &lt;input type=\"text\" placeholder=\"Your Good name\"/>   \n&lt;br>  \n&lt;br>  \nDate of Joining:   \n&lt;input type=\"date\" id=\"dob\">  \n&lt;br>   \n&lt;button onclick=\"viewdate()\"> Submit   \n&lt;/button>   \n&lt;br>  \n&lt;h2 id=\"demo\"> &lt;/h2>   \n&lt;/body>   \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-id-attribute2.png\" alt=\"HTML Id Attribute\"/></figure>\n\n\n\n<h2>Browser Support</h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><td>Element</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/chrome_browser.png\" alt=\"chrome browser\">&nbsp;Chrome</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/ie_browser.png\" alt=\"ie browser\">&nbsp;IE</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/firefox_browser.png\" alt=\"firefox browser\">&nbsp;Firefox</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/opera_browser.png\" alt=\"opera browser\">&nbsp;Opera</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/safari_browser.png\" alt=\"safari browser\">&nbsp;Safari</td></tr><tr><td><strong>&lt;id&gt;</strong></td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td></tr></tbody></table></figure>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>The&nbsp;id attribute&nbsp;is used to specify the unique ID for an element of the HTML document. It allocates the unique identifier which is used by the&nbsp;CSS&nbsp;and the&nbsp;JavaScript&nbsp;for performing certain tasks. Note: In the Cascading Style sheet (CSS), we can easily select an element with the specific id by using the # symbol followed by id. Note: [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3940"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3940"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3940/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3940"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3940"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3940"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3941,
    "date": "2020-08-13T08:23:18",
    "date_gmt": "2020-08-13T08:23:18",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=55"
    },
    "modified": "2020-08-13T08:23:18",
    "modified_gmt": "2020-08-13T08:23:18",
    "slug": "html-iframes",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-iframes/",
    "title": {
      "rendered": "HTML iframes"
    },
    "content": {
      "rendered": "\n<p>HTML Iframe is used to display a nested webpage (a webpage within a webpage). The HTML &lt;iframe&gt; tag defines an inline frame, hence it is also called as an Inline frame.</p>\n\n\n\n<p>An HTML iframe embeds another document within the current HTML document in the rectangular region.</p>\n\n\n\n<p>The webpage content and iframe contents can interact with each other using JavaScript.</p>\n\n\n\n<h3>Iframe Syntax</h3>\n\n\n\n<p>An HTML iframe is defined with the &lt;iframe> tag:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;iframe src=\"URL\">&lt;/iframe>  </code></pre>\n\n\n\n<p>Here, &#8220;src&#8221; attribute specifies the web address (URL) of the inline frame page.</p>\n\n\n\n<h2>Set Width and Height of iframe</h2>\n\n\n\n<p>You can set the width and height of iframe by using &#8220;width&#8221; and &#8220;height&#8221; attributes. By default, the attributes values are specified in pixels but you can also set them in percent. i.e. 50%, 60% etc.</p>\n\n\n\n<h3>Example: (Pixels)</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>    \n&lt;html>    \n&lt;body>    \n&lt;h2>HTML Iframes example&lt;/h2>    \n&lt;p>Use the height and width attributes to specify the size of the iframe:&lt;/p>    \n&lt;iframe src=\"https://www.javatpoint.com/\" height=\"300\" width=\"400\">&lt;/iframe>    \n&lt;/body>    \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<h3>Example: (Percentage)</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>    \n&lt;html>    \n&lt;body>    \n&lt;h2>HTML Iframes&lt;/h2>    \n&lt;p>You can use the height and width attributes to specify the size of the iframe:&lt;/p>    \n&lt;iframe src=\"https://www.javatpoint.com/\" height=\"50%\" width=\"70%\">&lt;/iframe>    \n&lt;/body>    \n&lt;/html>    </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p>You can also use CSS to set the height and width of the iframe.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>    \n&lt;html>    \n&lt;body>    \n&lt;h2>HTML Iframes&lt;/h2>    \n&lt;p>Use the CSS height and width properties to specify the size of the iframe:&lt;/p>    \n&lt;iframe src=\"https://www.javatpoint.com/\" style=\"height:300px;width:400px\">&lt;/iframe>    \n&lt;/body>    \n&lt;/html>    </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Remove the border of iframe</h2>\n\n\n\n<p>By default, an iframe contains a border around it. You can remove the border by using &lt;style&gt; attribute and CSS border property.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>    \n&lt;html>    \n&lt;body>    \n&lt;h2>Remove the Iframe Border&lt;/h2>    \n&lt;p>This iframe example doesn't have any border&lt;/p>     \n&lt;iframe src=\"https://www.javatpoint.com/\" style=\"border:none;\">&lt;/iframe>    \n&lt;/body>    \n&lt;/html>   </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p>You can also change the size, color, style of the iframe&#8217;s border.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>    \n&lt;html>    \n&lt;body>    \n&lt;h2>Custom Iframe Border&lt;/h2>    \n&lt;iframe src=\"https://www.javatpoint.com/\" style=\"border:2px solid tomato;\">&lt;/iframe>    \n&lt;/body>    \n&lt;/html>    </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Iframe Target for a link</h2>\n\n\n\n<p>You can set a target frame for a link by using iframe. Your specified target attribute of the link must refer to the name attribute of the iframe.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;body>  \n  \n&lt;h2>Iframe - Target for a Link&lt;/h2>  \n&lt;iframe height=\"300px\" width=\"100%\" src=\"new.html\" name=\"iframe_a\">&lt;/iframe>  \n&lt;p>&lt;a href=\"https://www.javatpoint.com\" target=\"iframe_a\">JavaTpoint.com&lt;/a>&lt;/p>  \n&lt;p>The name of iframe and link target must have same value else link will not open as a frame. &lt;/p>  \n  \n&lt;/body>  \n&lt;/html></code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-iframes.png\" alt=\"HTML iframes\"/></figure>\n\n\n\n<p><strong>new.hmtl output code:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>\n&lt;html>\n&lt;head>\n\t&lt;style>\n\n\tp{ font-size: 50px;\n         color: red;}\n&lt;/style>\n&lt;/head>\n&lt;body style=\"background-color: #c7f15e;\">\n  &lt;p>This is a link  below the ifarme click on link to open new iframe. &lt;/p>\n&lt;/body>\n&lt;/html></code></pre>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Embed YouTube video using iframe</h2>\n\n\n\n<p>You can also add a YouTube video on your webpage using the &lt;iframe&gt; tag. The attached video will be played at your webpage and you can also set height, width, autoplay, and many more properties for the video.</p>\n\n\n\n<p>Following are some steps to add YouTube video on your webpage:</p>\n\n\n\n<ul><li>Goto YouTube video which you want to embed.</li><li>Click on SHARE ➦ under the video.</li><li>Click on Embed &lt;&gt; option.</li><li>Copy HTML code.</li><li>Paste the code in your HTML file</li><li>Change height, width, and other properties (as per requirement).</li></ul>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;iframe width=\"550\" height=\"315\" src=\"https://www.youtube.com/embed/JHq3pL4cdy4\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen style=\"padding:20px;\">&lt;/iframe>  \n        &lt;iframe width=\"550\" height=\"315\" src=\"https://www.youtube.com/embed/O5hShUO6wxs\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" style=\"padding:20px;\">>&lt;/iframe>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-iframes2.png\" alt=\"HTML iframes\"/></figure>\n\n\n\n<h2>Attributes of &lt;iframe&gt;</h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Attribute name</th><th>Value</th><th>Description</th></tr><tr><td>allowfullscreen</td><td></td><td>If true then that frame can be opened in full screen.</td></tr><tr><td>height</td><td>Pixels</td><td>It defines the height of the embedded iframe, and the default height is 150 px.</td></tr><tr><td>name</td><td>text</td><td>It gives the name to the iframe. The name attribute is important if you want to create a link in one frame.</td></tr><tr><td>frameborder</td><td>1 or 0</td><td>It defines whether iframe should have a border or not. (Not supported in HTML5).</td></tr><tr><td>Width</td><td>Pixels</td><td>It defines the width of embedded frame, and default width is 300 px.</td></tr><tr><td>src</td><td>URL</td><td>The src attribute is used to give the path name or file name which content to be loaded into iframe.</td></tr><tr><td>sandbox</td></tr><tr><td></td><td>This attribute is used to apply extra restrictions for the content of the frame</td></tr><tr><td>allow-forms</td><td>It allows submission of the form if this keyword is not used then form submission is blocked.</td></tr><tr><td>allow-popups</td><td>It will enable popups, and if not applied then no popup will open.</td></tr><tr><td>allow-scripts</td><td>It will enable the script to run.</td></tr><tr><td>allow-same-origin</td><td>If this keyword is used then the embedded resource will be treated as downloaded from the same source.</td></tr><tr><td>srcdoc</td><td></td><td>The srcdoc attribute is used to show the HTML content in the inline iframe. It overrides the src attribute (if a browser supports).</td></tr><tr><td>scrolling</td></tr><tr><td></td><td>It indicates that browser should provide a scroll bar for the iframe or not. (Not supported in HTML5)</td></tr><tr><td>auto</td><td>Scrollbar only shows if the content of iframe is larger than its dimensions.</td></tr><tr><td>yes</td><td>Always shows scroll bar for the iframe.</td></tr><tr><td>no</td><td>Never shows scrollbar for the iframe.</td></tr></tbody></table></figure>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>HTML Iframe is used to display a nested webpage (a webpage within a webpage). The HTML &lt;iframe&gt; tag defines an inline frame, hence it is also called as an Inline frame. An HTML iframe embeds another document within the current HTML document in the rectangular region. The webpage content and iframe contents can interact with [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3941"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3941"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3941/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3941"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3941"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3941"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3942,
    "date": "2020-08-13T08:29:36",
    "date_gmt": "2020-08-13T08:29:36",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=57"
    },
    "modified": "2020-08-13T08:29:36",
    "modified_gmt": "2020-08-13T08:29:36",
    "slug": "html-javascript",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-javascript/",
    "title": {
      "rendered": "HTML JavaScript"
    },
    "content": {
      "rendered": "\n<p>A Script is a small program which is used with HTML to make web pages more attractive, dynamic and interactive, such as an alert popup window on mouse click. Currently, the most popular scripting language is JavaScript used for websites.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;body>  \n&lt;h2>Use JavaScript to Change Text&lt;/h2>  \n&lt;p id=\"demo\">&lt;/p>  \n&lt;script>  \ndocument.getElementById(\"demo\").innerHTML = \"Hello JavaTpoint\";  \n&lt;/script>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML &lt;script&gt; Tag</h2>\n\n\n\n<p>The HTML &lt;script&gt; tag is used to specify a client-side script. It may be an internal or external JavaScript which contains scripting statements, hence we can place &lt;script&gt; tag within &lt;body&gt; or &lt;head&gt; section.</p>\n\n\n\n<p>It is mainly used to manipulate images, form validation and change content dynamically. JavaScript uses document.getElementById() method to select an HTML element.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;body>  \n&lt;h2>Use JavaScript to Change Text&lt;/h2>  \n&lt;p id=\"demo\">&lt;/p>  \n&lt;script>  \ndocument.getElementById(\"demo\").innerHTML = \"Hello JavaTpoint\";  \n&lt;/script>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML events with JavaScript</h2>\n\n\n\n<p>An event is something which user does, or browser does such as mouse click or page loading are examples of events, and JavaScript comes in the role if we want something to happen on these events.</p>\n\n\n\n<p>HTML provides event handler attributes which work with JavaScript code and can perform some action on an event.</p>\n\n\n\n<h3>Syntax:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;element event = \"JS code\">  </code></pre>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;input type=\"button\" value=\"Click\" onclick=\"alert('Hi, how are you')\"> </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>Click Event Example\nClick on the button and you csn see a pop-up window with a message\n</code></pre>\n\n\n\n<p>HTML can have following events such as:</p>\n\n\n\n<ul><li><strong>Form events:</strong>&nbsp;reset, submit, etc.</li><li><strong>Select events:</strong>&nbsp;text field, text area, etc.</li><li><strong>Focus event:</strong>&nbsp;focus, blur, etc.</li><li><strong>Mouse events:</strong>&nbsp;select, mouseup, mousemove, mousedown, click, dblclick, etc.</li></ul>\n\n\n\n<p>Following are the list for Window event attributes:</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Event Event Name</th><th>Handler Name</th><th>Occurs when</th></tr><tr><td>onBlur</td><td>blur</td><td>When form input loses focus</td></tr><tr><td>onClick</td><td>click</td><td>When the user clicks on a form element or a link</td></tr><tr><td>onSubmit</td><td>submit</td><td>When user submits a form to the server.</td></tr><tr><td>onLoad</td><td>load</td><td>When page loads in a browser.</td></tr><tr><td>onFocus</td><td>focus</td><td>When user focuses on an input field.</td></tr><tr><td>onSelect</td><td>select</td><td>When user selects the form input filed.</td></tr></tbody></table></figure>\n\n\n\n<h4>Note: You will learn more about JavaScript Events in our JavaScript tutorial.</h4>\n\n\n\n<p>Let&#8217;s see what JavaScript can do:</p>\n\n\n\n<p><strong>1) JavaScript can change HTML content.</strong></p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;body>  \n&lt;p>JavaScript can change the content of an HTML element:&lt;/p>  \n&lt;button type=\"button\" onclick=\"myFunction()\">Click Me!&lt;/button>  \n&lt;p id=\"demo\">&lt;/p>  \n&lt;script>  \nfunction myFunction() {   \n    document.getElementById(\"demo\").innerHTML = \"Hello JavaTpoint!\";  \n}  \n&lt;/script>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>2) JavaScript can change HTML style</strong></p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;body>  \n&lt;p id=\"demo\">JavaScript can change the style of an HTML element.&lt;/p>  \n&lt;script>  \nfunction myFunction() {  \n    document.getElementById(\"demo\").style.fontSize = \"25px\";   \n    document.getElementById(\"demo\").style.color = \"brown\";  \n    document.getElementById(\"demo\").style.backgroundColor = \"lightgreen\";         \n}  \n&lt;/script>  \n&lt;button type=\"button\" onclick=\"myFunction()\">Click Me!&lt;/button>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>3) JavaScript can change HTML attributes.</strong></p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;body>  \n&lt;script>  \nfunction light(sw) {  \n    var pic;  \n    if (sw == 0) {  \n        pic = \"pic_lightoff.png\"  \n    } else {  \n        pic = \"pic_lighton.png\"  \n    }  \n    document.getElementById('myImage').src = pic;  \n}  \n&lt;/script>  \n&lt;img id=\"myImage\" src=\"pic_lightoff.png\" width=\"100\" height=\"180\">  \n&lt;p>  \n&lt;button type=\"button\" onclick=\"light(1)\">Light On&lt;/button>  \n&lt;button type=\"button\" onclick=\"light(0)\">Light Off&lt;/button>  \n&lt;/p>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Use External Script</h2>\n\n\n\n<p>Suppose, you have various HTML files which should have same script, then we can put our JavaScript code in separate file and can call in HTML file. Save JavaScript external files using .js extension.</p>\n\n\n\n<h4>Note: Do not add &lt;script&gt; tag in the external file, and provide the complete path where you have put the JS file.</h4>\n\n\n\n<h3>Syntax:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;script type=\"text/javascript\" src=\"URL \">&lt;/script></code></pre>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n   &lt;head>  \n    &lt;script type=\"text/javascript\" src=\"external.js\">&lt;/script>  \n    &lt;/head>  \n     &lt;body>  \n      &lt;h2>External JavaScript Example&lt;/h2>  \n       &lt;form onsubmit=\"fun()\">  \n         &lt;label>Enter your name:&lt;/label>&lt;br>  \n      &lt;input type=\"text\" name=\"uname\" id=\"frm1\">&lt;br>  \n       &lt;label>Enter your Email-address:&lt;/label>&lt;br>    \n      &lt;input type=\"email\" name=\"email\">&lt;br>  \n      &lt;input type=\"submit\">  \n  &lt;/form>  \n &lt;/body>  \n &lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>JavaScript code:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>function fun() {  \n       var x = document.getElementById(\"frm1\").value;  \n        alert(\"Hi\"+\" \"+x+ \"you have successfully submitted the details\");  \n    }</code></pre>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-javascript.png\" alt=\"HTML JavaScript\"/></figure>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML &lt;noscript&gt; Tag</h2>\n\n\n\n<pre class=\"wp-block-code\"><code>HTML &lt;noscript> tag is used to write disabled script in the browser. The text written within &lt;noscript>&lt;/noscript> tag is not displayed on the browser.</code></pre>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;body>  \n&lt;p id=\"demo\">&lt;/p>  \n&lt;script>  \ndocument.getElementById(\"demo\").innerHTML = \"Hello JavaScript!\";  \n&lt;/script>  \n&lt;noscript>This text is not visible in the browser.&lt;/noscript>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>A Script is a small program which is used with HTML to make web pages more attractive, dynamic and interactive, such as an alert popup window on mouse click. Currently, the most popular scripting language is JavaScript used for websites. Example: Test it Now HTML &lt;script&gt; Tag The HTML &lt;script&gt; tag is used to specify [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3942"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3942"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3942/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3942"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3942"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3942"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3943,
    "date": "2020-08-13T08:31:23",
    "date_gmt": "2020-08-13T08:31:23",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=59"
    },
    "modified": "2020-08-13T08:31:23",
    "modified_gmt": "2020-08-13T08:31:23",
    "slug": "html-comments",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-comments/",
    "title": {
      "rendered": "HTML Comments"
    },
    "content": {
      "rendered": "\n<p>Comments are some text or code written in your code to give an explanation about the code, and not visible to the user. Comments which are used for HTML file are known as HTML comments. Anything written between these tags will be ignored by the browser, so comments will not be visible on the webpage.</p>\n\n\n\n<p>Comments of any code make code easy to understand and increase readability of code.</p>\n\n\n\n<p>Comments are also part of the code, which gives an explanation of the code.</p>\n\n\n\n<h2>How to add comment In HTML</h2>\n\n\n\n<p>You can add comments in your HTML file using &lt;! &#8212; &#8230; &#8211;&gt; tag. So if you will write anything between theses comment tag that will be treated as comment and browser will not read it.</p>\n\n\n\n<h3>Syntax</h3>\n\n\n\n<ol><li>&lt;!&nbsp;&#8212;&nbsp;Write&nbsp;commented&nbsp;text&nbsp;here&nbsp;&#8211;&gt;&nbsp;&nbsp;</li></ol>\n\n\n\n<h4>Note: The commented code will not be visible to a webpage, and hence you can use comment tag for documentation purpose, and debugging purpose:</h4>\n\n\n\n<p>Such as:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!--   &lt;p>There is some text&lt;/p>  \n       &lt;p>There is second text&lt;/p> --> </code></pre>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;!-- This is Header section -->  \n&lt;head>  \n    &lt;!-- Internal CSS -->  \n    &lt;style>  \n        body{  \n            text-align: center;  \n            background-color: #f0f8ff;  \n            font-size: 30px;  \n            color: red;  \n        }  \n    &lt;/style>  \n&lt;/head>  \n  \n&lt;!-- This is body section, write code here which you want to display on web-page -->  \n&lt;body>  \n    &lt;!-- heading tag -->  \n &lt;h2>First WebPage&lt;/h2>  \n  \n &lt;!-- Paragraph tag -->  \n &lt;p>Write your Content here!!!&lt;/p>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>Multiline Comment</h2>\n\n\n\n<p>In HTML code, we can also comments multiple lines at a time. In multiline comment we can use any description about code or multiple line code to debug, etc.</p>\n\n\n\n<h3>Syntax</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!---  \nYour code is commented.   \nWrite description of code.  \nIt will not display at webpage.   \n--> </code></pre>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;h2>Cake Gallery&lt;/h2>  \n&lt;!-- This is image for a yummy cake  \nyou can see it on your web-page  \nof your favorite browser -->  \n&lt;img src=\"https://static.javatpoint.com/htmlpages/images/cake.png\" alt=\"cake image\" height=\"300px\"  \n width=\"300px\">  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/cake.png\" alt=\"HTML Comments\"/></figure>\n\n\n\n<h2>Supporting Browsers</h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><td><strong>Element</strong></td><td><img src=\"https://static.javatpoint.com/htmlpages/images/chrome_browser.png\" alt=\"chrome browser\">&nbsp;Chrome</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/ie_browser.png\" alt=\"ie browser\">&nbsp;IE</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/firefox_browser.png\" alt=\"firefox browser\">&nbsp;Firefox</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/opera_browser.png\" alt=\"opera browser\">&nbsp;Opera</td><td><img src=\"https://static.javatpoint.com/htmlpages/images/safari_browser.png\" alt=\"safari browser\">&nbsp;Safari</td></tr><tr><td><strong>&lt;!&#8211; &#8211;&gt;</strong></td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td></tr></tbody></table></figure>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Comments are some text or code written in your code to give an explanation about the code, and not visible to the user. Comments which are used for HTML file are known as HTML comments. Anything written between these tags will be ignored by the browser, so comments will not be visible on the webpage. [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3943"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3943"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3943/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3943"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3943"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3943"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3944,
    "date": "2020-08-13T08:35:37",
    "date_gmt": "2020-08-13T08:35:37",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=61"
    },
    "modified": "2020-08-13T08:35:37",
    "modified_gmt": "2020-08-13T08:35:37",
    "slug": "html-file-paths",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-file-paths/",
    "title": {
      "rendered": "HTML File Paths"
    },
    "content": {
      "rendered": "\n<p>An HTML file path is used to describe the location of a file in a website folder. File paths are like an address of file for a web browser. We can link any external resource to add in our HTML file with the help of file paths such as images, file, CSS file, JS file, video, etc.</p>\n\n\n\n<p>The src or href attribute requires an attribute to link any external source to HTML file.</p>\n\n\n\n<p>Following are the different types to specify file paths:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;img src=\"picture.jpg\"> It specifies that picture.jpg is located in the same folder as the current page.\n&lt;img src=\"images/picture.jpg\"> It specifies that picture.jpg is located in the images folder in the current folder.\n&lt;img src=\"/images/picture.jpg\"> It specifies that picture.jpg is located in the images folder at the root of the current web.\n&lt;img src=\"../picture.jpg\"> It specifies that picture.jpg is located in the folder one level up from the current folder.</code></pre>\n\n\n\n<p>File paths are used on webpages to link external files like:</p>\n\n\n\n<ol><li>Web pages</li><li>Images</li><li>Style sheets</li><li>JavaScript</li></ol>\n\n\n\n<p>There are two types of File Paths:</p>\n\n\n\n<ol><li>Absolute File Paths</li><li>Relative File Paths</li></ol>\n\n\n\n<h2>Absolute File Paths</h2>\n\n\n\n<p>Absolute file path specifies full URL address.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;body>  \n&lt;h2>Using a Full URL File Path&lt;/h2>  \n&lt;img src=\"https://www.javatpoint.com/images/nature-1.jpg\" alt=\"image\" style=\"width:300px\">  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<h2>Relative File Paths</h2>\n\n\n\n<p>The relative file path specifies to a file which is related to the location of current page.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<p>Let&#8217;s take an example to see how the file path points to a file in the images folder located at the root of the current web.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;body>  \n&lt;h2>Using a Relative File Path&lt;/h2>  \n&lt;img src=\"/images/nature-2.jpg\" alt=\"Mountain\" style=\"width:300px\">  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<p>This is how a file path points to a file in the images folder located in the current folder.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;body>  \n&lt;h2>Using a Relative File Path&lt;/h2>  \n&lt;img src=\"images/nature-3.jpg\" alt=\"Mountain\" style=\"width:300px\">  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<p>When the images folder located in the folder one level above the current folder.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;body>  \n&lt;h2>Using a Relative File Path&lt;/h2>  \n&lt;img src=\"../images/nature4.jpg\" alt=\"Mountain\" style=\"width:300px\">  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<h2>Important Points for File path:</h2>\n\n\n\n<ul><li>Always remember to use proper URL, file name, image name, else it will not display on the webpage.</li><li>Try to use relative file paths, so that your code will be independent of URL.</li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>An HTML file path is used to describe the location of a file in a website folder. File paths are like an address of file for a web browser. We can link any external resource to add in our HTML file with the help of file paths such as images, file, CSS file, JS file, [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3944"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3944"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3944/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3944"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3944"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3944"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3884,
    "date": "2020-08-13T08:42:45",
    "date_gmt": "2020-08-13T08:42:45",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=63"
    },
    "modified": "2020-08-13T08:42:45",
    "modified_gmt": "2020-08-13T08:42:45",
    "slug": "html-head",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-head/",
    "title": {
      "rendered": "HTML Head"
    },
    "content": {
      "rendered": "\n<p>The HTML &lt;head&gt; element is used as a container for metadata (data about data). It is used between &lt;html&gt; tag and &lt;body&gt; tag.</p>\n\n\n\n<p>The head of an HTML document is a part whose content is not displayed in the browser on page loading. It just contains metadata about the HTML document which specifies data about the HTML document.</p>\n\n\n\n<p>An HTML head can contain lots of metadata information or can have very less or no information, it depends on our requirement. But head part has a crucial role an HTML document while creating a website.</p>\n\n\n\n<p>Metadata defines the document title, character set, styles, links, scripts, and other meta information.</p>\n\n\n\n<p>Following is a list of tags used in metadata:</p>\n\n\n\n<ul><li>&lt;title&gt;</li><li>&lt;style&gt;</li><li>&lt;meta&gt;</li><li>&lt;link&gt;</li><li>&lt;script&gt;</li><li>&lt;base&gt;</li></ul>\n\n\n\n<h2>HTML &lt;title&gt; Element</h2>\n\n\n\n<p>The HTML &lt;title&gt; element is used to define the title of the document. It is used in all HTML/XHTML documents. The &lt;title&gt; element must be placed between &lt;head&gt; element, and one document can only have one title element.</p>\n\n\n\n<p><strong>What does &lt;title&gt; element do?</strong></p>\n\n\n\n<ol><li>It defines a title in the browser tab.</li><li>It provides a title for the page when it is added to favorites.</li><li>It displays a title for the page in search engine results.</li></ol>\n\n\n\n<h4>Note: The title element must be specific about the document and its recommended length is 65 to 70 characters including spaces.</h4>\n\n\n\n<p><strong>Example:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;head>  \n  &lt;title>This Page Title&lt;/title>  \n&lt;/head>  \n&lt;body>  \n&lt;p>The body's content is displayed in the browser window.&lt;/p>  \n&lt;p>The content of the title element is displayed in the browser tab, in favorites and in search engine results.&lt;/p>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<h2>HTML &lt;style&gt; Element</h2>\n\n\n\n<p>The HTML &lt;style&gt; element is used to style the HTML page. The &lt;style&gt; element can have CSS properties for that HTML page only. If we want to apply CSS for multiple pages then we should use separate CSS file.</p>\n\n\n\n<p><strong>Example:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;head>  \n  &lt;title>This is Page Title&lt;/title>  \n  &lt;style>  \n    body {background-color: pink;}  \n    h1 {color: red;}      \n    p {color: blue;}  \n  &lt;/style>  \n&lt;/head>    \n&lt;body>  \n&lt;h1>This is a Heading&lt;/h1>  \n&lt;p>This is a paragraph.&lt;/p>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<h2>HTML &lt;link&gt; Element</h2>\n\n\n\n<p>The HTML &lt;link&gt; element is used to link an external style sheet to your webpage. The &lt;link&gt; element contains main two attributes which are &#8220;rel&#8221; and &#8220;href&#8221;. The rel attribute indicates that it is a stylesheet, and href gives the path to that external file.</p>\n\n\n\n<p><strong>Example:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n &lt;html>  \n &lt;head>  \n    &lt;title>This is title&lt;/title>  \n    &lt;link rel=\"stylesheet\" href=\"style.css\">  \n   &lt;/head>  \n   &lt;body>  \n    &lt;h2>Web-page with external CSS&lt;/h2>  \n    &lt;p>This is looking a cool page&lt;/p>  \n   &lt;/body>  \n &lt;/html></code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<h2>HTML &lt;meta&gt; Element</h2>\n\n\n\n<p>The HTML &lt;meta&gt; element is used to specify the character set, page description, keywords, authors and other metadata on the webpage.</p>\n\n\n\n<p>Metadata is mainly used by browsers, search engines, and other web services to rank your webpage better.</p>\n\n\n\n<p><strong>Let&#8217;s see how to use metadata:</strong></p>\n\n\n\n<p><strong>To define a character set:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;meta charset=\"UTF-8\"> </code></pre>\n\n\n\n<p>The charset attribute specifies the character encoding. In this example we have set it to &#8220;UTF-8&#8221; which means it can handle to display any language.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;head>  \n&lt;meta charset=\"UTF-8\">    \n&lt;/head>  \n&lt;body>  \n&lt;p>This is written in English language&lt;span style=\"color: blue\"> My friend's name is.......&lt;/span>&lt;/p>  \n&lt;p>This is Chinese language &lt;span style=\"color: red\">Wǒ de péngyǒu jiào&lt;/span>&lt;/p>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Output:</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-head.png\" alt=\"HTML\nHead\"/></figure>\n\n\n\n<p><strong>To define a description of your webpage:</strong></p>\n\n\n\n<ol><li>&lt;meta&nbsp;name=&#8221;description&#8221;&nbsp;content=&#8221;Free&nbsp;Web&nbsp;tutorials&#8221;&gt;&nbsp;&nbsp;</li></ol>\n\n\n\n<p>If you give a meta description then it will be useful for the relevant search to perform by search engines.</p>\n\n\n\n<p><strong>To define keywords for search engines:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;meta name=\"keywords\" content=\"HTML, CSS, XML, JavaScript\">  </code></pre>\n\n\n\n<p>The keyword value is also used to provide keywords for a search engine, but it may ignore by browser due to spammers.</p>\n\n\n\n<p><strong>To define author of the webpage:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;meta name=\"author\" content=\"Akon\">  </code></pre>\n\n\n\n<p>The author value specifies the name of the person who wrote the page content, and it is useful to automatically extract author information by some content management systems.</p>\n\n\n\n<p><strong>To refresh document every 30 seconds:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;meta http-equiv=\"refresh\" content=\"30\">  </code></pre>\n\n\n\n<p>Meta refresh is used to provide instructions to the browser to automatically refresh the page after the given time interval. As in above example it will automatically refresh after 30 sec</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;meta http-equiv=\"refresh\" content=\"10; url=https://www.javatpoint.com/html-head>  </code></pre>\n\n\n\n<p>If you add an URL with content value, then it will redirect to that page after the time limit will over.</p>\n\n\n\n<p><strong>Example:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n &lt;head>  \n   &lt;meta http-equiv=\"refresh\" content=\"5; url=https://www.javatpoint.com/html-head\">  \n &lt;/head>  \n   &lt;body>  \n    &lt;h2>Meta element Example&lt;/h2>  \n   &lt;p style=\"color: green;\">Kindly wait for 5 seconds and after 5 seconds it will automatically redirect to URL specified in meta tag&lt;/p>  \n &lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Following is an example to show how to use all Meta elements within HTML head</strong></p>\n\n\n\n<p><strong>Example:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;head>  \n&lt;meta charset=\"UTF-8\">  \n&lt;meta name=\"description\" content=\"Free Web tutorials\">  \n&lt;meta name=\"keywords\" content=\"HTML,CSS,XML,JavaScript\">  \n&lt;meta name=\"author\" content=\"Akon\">  \n&lt;/head>  \n&lt;body>  \n&lt;p>All the meta information are set.&lt;/p>  \n&lt;/body>  \n&lt;/html></code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<h2>Use &lt;meta&gt; tag to set the Viewport</h2>\n\n\n\n<p>This method is introduced in HTML5 to take control over the viewport by using &lt;meta&gt; tag.</p>\n\n\n\n<p>Viewport is the user&#8217;s visible area of a webpage. It changes from device to device and appears smaller on mobile phones than computer screens.</p>\n\n\n\n<p><strong>Syntax for &lt;meta> viewport element:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> </code></pre>\n\n\n\n<p>Here, the&nbsp;<strong>&lt;meta&gt; viewport</strong>&nbsp;element specifies how to control the page&#8217;s dimensions and scaling.</p>\n\n\n\n<p>The&nbsp;<strong>width=device-width</strong>&nbsp;is used to set the width of the page to follow the screen-width of the device (which will vary depending on the device).</p>\n\n\n\n<p>The&nbsp;<strong>initial-scale=1.0</strong>&nbsp;is used to set the initial zoom level when the page is first loaded by the browser.</p>\n\n\n\n<p><strong>Example of a web page without the viewport &lt;meta> tag:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;body>  \n  \n&lt;p>&lt;b>To understand this example, you should open this page on a phone or a tablet.&lt;/b>&lt;/p>  \n  \n&lt;img src=\"image.jpg\" alt=\"image\" width=\"460\" height=\"345\">  \n  \n&lt;p>  \nLorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut   \nlaoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation   \nullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel   \neum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu   \nfeugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum  \nzzril delenit augue duis dolore te feugait nulla facilisi. Nam liber tempor cum soluta nobis   \neleifend option congue nihil imperdiet doming id quod mazim placerat facer possim assum.  \nNam liber tempor cum soluta nobis eleifend option congue nihil imperdiet doming id quod mazim placerat  \nfacer possim assum.  \n&lt;/p>  \n  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p><strong>Example of a web page with the viewport &lt;meta> tag:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;head>  \n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>  \n&lt;style>  \nimg {  \n    max-width: 100%;  \n    height: auto;  \n}  \n&lt;/style>  \n&lt;/head>  \n&lt;body>  \n&lt;p>&lt;b>To understand this example, you should open this page on a phone or a tablet.&lt;/b>&lt;/p>  \n  \n&lt;img src=\"image.jpg\" alt=\"image\" width=\"460\" height=\"345\">  \n  \n&lt;p>  \nLorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut   \nlaoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation   \nullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel   \neum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu   \nfeugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum  \nzzril delenit augue duis dolore te feugait nulla facilisi. Nam liber tempor cum soluta nobis   \neleifend option congue nihil imperdiet doming id quod mazim placerat facer possim assum.  \nNam liber tempor cum soluta nobis eleifend option congue nihil imperdiet doming id quod mazim placerat  \nfacer possim assum.  \n&lt;/p>  \n  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<h4>Note: To see the difference clearly, open this page on smartphone or tablet.</h4>\n\n\n\n<h2>HTML &lt;base&gt; Element</h2>\n\n\n\n<p>The HTML &lt;base&gt; element is used to specify the base URL and base target for all relative URLs in a page.</p>\n\n\n\n<p><strong>Example:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;head>  \n&lt;title>Page Title&lt;/title>  \n&lt;base href=\"https://static.javatpoint.com/htmlpages/images/\" target=\"_blank\">  \n&lt;/head>  \n&lt;body>  \n&lt;img src=\"html5.png\">  \n&lt;p>We have specified a base URL, the browser will look for the image \"html5.png\"   \nat \"https://static.javatpoint.com/htmlpages/images/html5.png\"&lt;/p>  \n&lt;p>&lt;a href=\" https://www.javatpoint.com\">JavatPoint&lt;/a>&lt;/p>  \n&lt;p>The link above will open in a new window because base target is set to \"_blank\".&lt;/p>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<h2>HTML &lt;script&gt; element</h2>\n\n\n\n<p>HTML &lt;script&gt; element is used to apply client side JavaScript for the same page or to add an external JavaScript file to current page.</p>\n\n\n\n<p><strong>Example:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;head>  \n    &lt;script>  \n        function fun() {  \n        document.getElementById(\"p\").style.color=\"green\";     \n        }  \n    &lt;/script>  \n&lt;/head>  \n&lt;body>  \n&lt;h2>Script within Head element&lt;/h2>  \n&lt;p id=\"p\">This will change the color&lt;/p>  \n&lt;button type=\"button\" onclick=\"fun()\">Click me&lt;/button>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<p>If we want to use some external JavaScript file then it can be applied by:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;script src=\".js file_path\">  </code></pre>\n\n\n\n<h2>Excluding &lt;html&gt;, &lt;head&gt; and &lt;body&gt; elements</h2>\n\n\n\n<p>HTML 5 facilitates us to omit the &lt;html&gt;, the &lt;body&gt;, and the &lt;head&gt; tag.</p>\n\n\n\n<p><strong>Example:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;title>Page Title&lt;/title>  \n&lt;h1>This is a heading&lt;/h1>  \n&lt;p>This is a paragraph.&lt;/p>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<h4>Note: It is not recommended to omit the &lt;html&gt; and &lt;body&gt; tags. Omitting these tags can crash DOM or XML software and produce errors in older browsers (IE9).</h4>\n\n\n\n<p>However, you can omit the &lt;head&gt; tag.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>The HTML &lt;head&gt; element is used as a container for metadata (data about data). It is used between &lt;html&gt; tag and &lt;body&gt; tag. The head of an HTML document is a part whose content is not displayed in the browser on page loading. It just contains metadata about the HTML document which specifies data about [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3884"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3884"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3884/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3884"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3884"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3884"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3885,
    "date": "2020-08-13T08:46:56",
    "date_gmt": "2020-08-13T08:46:56",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=65"
    },
    "modified": "2020-08-13T08:46:56",
    "modified_gmt": "2020-08-13T08:46:56",
    "slug": "html-layouts",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-layouts/",
    "title": {
      "rendered": "HTML Layouts"
    },
    "content": {
      "rendered": "\n<p>HTML layouts provide a way to arrange web pages in well-mannered, well-structured, and in responsive form or we can say that HTML layout specifies a way in which the web pages can be arranged. Web-page layout works with arrangement of visual elements of an HTML document.</p>\n\n\n\n<p><strong>Web page</strong>&nbsp;layout is the most important part to keep in mind while creating a website so that our website can appear professional with the great look. You can also use CSS and JAVASCRIPT based frameworks for creating layouts for responsive and dynamic website designing.</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/html-layouts.png\" alt=\"HTML Layouts\"/></figure>\n\n\n\n<p>Every website has a specific layout to display content in a specific manner.</p>\n\n\n\n<p>Following are different HTML5 elements which are used to define the different parts of a webpage.</p>\n\n\n\n<ul><li>&lt;header&gt;: It is used to define a header for a document or a section.</li><li>&lt;nav&gt;: It is used to define a container for navigation links</li><li>&lt;section&gt;: It is used to define a section in a document</li><li>&lt;article&gt;: It is used to define an independent self-contained article</li><li>&lt;aside&gt;: It is used to define content aside from the content (like a sidebar)</li><li>&lt;footer&gt;: It is used to define a footer for a document or a section</li><li>&lt;details&gt;: It is used to define additional details</li><li>&lt;summary&gt;: It is used to define a heading for the &lt;details&gt; element</li></ul>\n\n\n\n<h4>NOTE: HTML layouts create an individual space for every part of the web page. So that every element can arrange in a significant order.</h4>\n\n\n\n<h2>Description of various Layout elements</h2>\n\n\n\n<h3>HTML &lt;header&gt;</h3>\n\n\n\n<p>The &lt;header&gt; element is used to create header section of web pages. The header contains the introductory content, heading element, logo or icon for the webpage, and authorship information.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;header style=\"background-color: #303030;  height: 80px; width: 100%\">  \n      &lt;h1 style=\"font-size: 30px; color: white;text-align: center; padding-top: 15px;\">Welcome to     MyFirstWebpage&lt;/h1>  \n   &lt;/header>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>HTML &lt;nav&gt;</h3>\n\n\n\n<p>The &lt;nav&gt; elements is a container for the main block of navigation links. It can contain links for the same page or for other pages.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;nav style=\"background-color:#bcdeef;\">  \n        &lt;h1 style=\"text-align: center;\">Navgation Links&lt;/h1>  \n        &lt;ul>  \n            &lt;li>&lt;a href=\"#\">link1&lt;/a>&lt;/li>  \n            &lt;li>&lt;a href=\"#\">link2&lt;/a>&lt;/li>  \n            &lt;li>&lt;a href=\"#\">link3&lt;/a>&lt;/li>  \n            &lt;li>&lt;a href=\"#\">link4&lt;/a>&lt;/li>  \n        &lt;/ul>  \n    &lt;/nav>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>HTML &lt;section&gt;</h3>\n\n\n\n<p>HTML &lt;section&gt; elements represent a separate section of a web page which contains related element grouped together. It can contain: text, images, tables, videos, etc.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;section style=\"background-color:#ff7f50; width: 100%; border: 1px solid black;\">  \n    &lt;h2>Introduction to HTML&lt;/h2>  \n    &lt;p>HTML is a markup language which is used for creating attractive web pages with the help of styling, and which looks in a nice format on a web browser..&lt;/p>  \n  &lt;/section>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>HTML &lt;article&gt;</h3>\n\n\n\n<p>The HTMLtag is used to contain a self-contained article such as big story, huge article, etc.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;article style=\"width: 100%; border:2px solid black; background-color: #fff0f5;\">  \n    &lt;h2>History of Computer&lt;/h2>  \n    &lt;p>Write your content here for the history of computer&lt;/p>  \n&lt;/article>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>HTML &lt;aside&gt;</h3>\n\n\n\n<p>HTML &lt;aside&gt; define aside content related to primary content. The &lt;aside&gt; content must be related to the primary content. It can function as side bar for the main content of web page.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;aside style=\"background-color:#e6e6fa\">  \n    &lt;h2>Sidebar information&lt;/h2>  \n    &lt;p>This conatins information which will represent like a side bar for a webpage&lt;/p>  \n  &lt;/aside>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>HTML &lt;footer></h3>\n\n\n\n<pre class=\"wp-block-code\"><code>HTML &lt;footer> element defines the footer for that document or web page. It mostly contains information about author, copyright, other links, etc.</code></pre>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;footer style=\"background-color: #f0f8ff; width: 100%; text-align: center;\">  \n    &lt;h3>Footer Example&lt;/h3>  \n    &lt;p>© Copyright 2018-2020. &lt;/p>  \n&lt;/footer>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>HTML &lt;details&gt;</h3>\n\n\n\n<p>HTML &lt;details&gt; element is used to add extra details about the web page and use can hide or show the details as per requirement.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;details style=\"background-color: #f5deb3\">  \n    &lt;summary>This is visible section: click to show other details&lt;/summary>  \n    &lt;p>This section only shows if user want to see it. &lt;/p>  \n &lt;/details>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3>HTML &lt;summary&gt;</h3>\n\n\n\n<p>HTML &lt;summary&gt; element is used with the &lt;details&gt; element in a web page. It is used as summary, captions about the content of &lt;details&gt; element.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;details>  \n    &lt;summary>HTML is acronym for?&lt;/summary>  \n    &lt;p style=\"color: blue; font-size: 20px;\">Hypertext Markup Language&lt;/p>  \n &lt;/details>  </code></pre>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>HTML layouts provide a way to arrange web pages in well-mannered, well-structured, and in responsive form or we can say that HTML layout specifies a way in which the web pages can be arranged. Web-page layout works with arrangement of visual elements of an HTML document. Web page&nbsp;layout is the most important part to keep [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3885"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3885"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3885/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3885"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3885"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3885"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3886,
    "date": "2020-08-13T08:58:11",
    "date_gmt": "2020-08-13T08:58:11",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=67"
    },
    "modified": "2020-08-13T08:58:11",
    "modified_gmt": "2020-08-13T08:58:11",
    "slug": "html-layout-techniques",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-layout-techniques/",
    "title": {
      "rendered": "HTML Layout Techniques"
    },
    "content": {
      "rendered": "\n<p>Creating layouts are the most important things while designing a website, as it will ensure that your website looks in a well-arranged way and the content appears easy to understand. There are various techniques, and frameworks available for creating layouts, but here we will learn about simple techniques. You can use the following methods to create multicolumn layouts:</p>\n\n\n\n<ul><li>HTML tables (Try not to use)</li><li>CSS float property</li><li>CSS framework</li><li>CSS flexbox</li><li>Layout using div</li></ul>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML Tables (Not Recommended)</h2>\n\n\n\n<p>HTML table-based layout is one of the easiest ways for creating a layout, as table use only rows and column-based format, but HTML tables are not recommended for your page layout. Theelement is designed to display tabular data. It is not good for a layout. Although first creating a layout is easy, but if you want to change or redesign your website, then it will be a complicated task.</p>\n\n\n\n<p>Following is an example for the creation of a simple web page layout using HTML table.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n &lt;head>  \n    &lt;style>  \n        li{  \n            display: inline-block;  \n            padding: 10px;}  \n        a{  \n            color:#20b2aa;  \n        }  \n      &lt;/style>  \n &lt;/head>  \n&lt;body>  \n     &lt;!-- Header Section -->  \n       &lt;table width=\"100%\" style=\"border-collapse:collapse;\">  \n           &lt;tr>  \n            &lt;td colspan=\"2\" style=\"background-color:#1a1a1a; text-align: center;\">  \n                &lt;h3 style=\"font-size: 30px; color: #ff6a6a;\">codemeals Table-layout&lt;/h3>  \n            &lt;/td>  \n         &lt;/tr>  \n   &lt;!-- Nav Section -->  \n          &lt;tr>  \n                        &lt;td colspan=\"2\" style=\"background-color:#666666;\">  \n                &lt;ul>  \n                                                      &lt;li>&lt;a href=\"#\">Home&lt;/a>&lt;/li>  \n                &lt;li>&lt;a href=\"#\">Menu&lt;/a>&lt;/li>  \n                &lt;li>&lt;a href=\"#\">About-us&lt;/a>&lt;/li>  \n                &lt;li>&lt;a href=\"#\">Contact us&lt;/a>&lt;/li>  \n            &lt;/ul>  \n                                        &lt;/td>  \n          &lt;/tr>  \n   &lt;!-- Main Section -->  \n          &lt;tr>  \n             &lt;td style=\"background-color:#e6e6fa; width:80%; height: 400px; text-align: center;\">  \n               &lt;p>Write your content Here&lt;/p>  \n              &lt;/td>  \n              &lt;td style=\"background-color:#a7e6fb; height: 400px;\">  \n                 &lt;p>This is your side bar&lt;/p>  \n              &lt;/td>  \n         &lt;/tr>  \n     &lt;!-- Footer Section -->  \n           &lt;tr>  \n             &lt;td colspan=\"2\" style=\"background-color:#2e2e2e; text-align: center;\">  \n                &lt;p style=\"color:#f08080\">©&lt;strong>Copyright codemeals.com&lt;/strong>&lt;/p>  \n            &lt;/td>  \n          &lt;/tr>  \n    &lt;/table>  \n &lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<h4>Note: This example is just for show you how to create layout using table but it&#8217;s not recommended to use table layout.</h4>\n\n\n\n<h2>CSS Frameworks</h2>\n\n\n\n<p>CSS provides many frameworks like W3.CSS, Bootstrap, and many more, to create your layout fast. Using CSS frameworks you can easily create a responsive and attractive web layout. You just need to add a link for these frameworks, and you can use all properties available in the framework.</p>\n\n\n\n<h2>CSS Float</h2>\n\n\n\n<p>You can create an entire web layout using CSS float property.</p>\n\n\n\n<p><strong>Advantage:</strong>&nbsp;It is very easy to learn and use. You just learn how the float and clear properties work.</p>\n\n\n\n<p><strong>Disadvantage:</strong>&nbsp;Floating elements are tied to the document flow, which may harm the flexibility.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;head>  \n&lt;style>  \ndiv.container {  \n    width: 100%;  \n    border: 1px solid gray;  \n}  \n  \nheader, footer {  \n    padding: 1em;  \n    color: white;  \n    background-color: #000080;  \n    clear: left;  \n    text-align: center;  \n}  \n  \nnav {  \n    float: left;  \n    max-width: 160px;  \n    margin: 0;  \n    padding: 1em;  \n}  \n  \nnav ul {  \n    list-style-type: none;  \n    padding: 0;  \n}  \n  \nnav ul a {  \n    text-decoration: none;  \n}  \n  \narticle {  \n    margin-left: 170px;  \n    border-left: 1px solid gray;  \n    padding: 1em;  \n    overflow: hidden;  \n}  \n&lt;/style>  \n&lt;/head>  \n&lt;body>  \n  \n&lt;div class=\"container\">  \n  \n&lt;header>  \n&lt;h1>Tutorials Gallery&lt;/h1>  \n&lt;/header>  \n  \n&lt;nav>  \n&lt;ul>  \n&lt;li>&lt;a href=\"#\">HTML&lt;/a>&lt;/li>  \n&lt;li>&lt;a href=\"#\">CSS&lt;/a>&lt;/li>  \n&lt;li>&lt;a href=\"#\">JavaScript&lt;/a>&lt;/li>  \n&lt;/ul>  \n&lt;/nav>  \n&lt;article>  \n&lt;h1>HTML&lt;/h1>  \n&lt;p>HTML tutorial or HTML 5 tutorial provides basic and advanced concepts of html. Our HTML tutorial is   \ndeveloped for beginners and professionals.&lt;/p>  \n&lt;p>TML is an acronym which stands for Hyper Text Markup Language. Let's see what is Hyper Text and what is Markup Language?&lt;/p>  \n&lt;/article>  \n&lt;footer>Copyright © codemeals.com&lt;/footer>  \n&lt;/div>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<h2>CSS Flexbox</h2>\n\n\n\n<p>Flexbox is a new layout mode in CSS3.</p>\n\n\n\n<p><strong>Advantage:</strong>&nbsp;It ensures that the page layout must accommodate different screen sizes and different display devices.</p>\n\n\n\n<p><strong>Disadvantages:</strong>&nbsp;It does not work in IE10 and earlier.</p>\n\n\n\n<h3>Example:</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;head>  \n&lt;style>  \n.flex-container {  \n    display: -webkit-flex;  \n    display: flex;    \n    -webkit-flex-flow: row wrap;  \n    flex-flow: row wrap;  \n    text-align: center;  \n}  \n  \n.flex-container > * {  \n    padding: 15px;  \n    -webkit-flex: 1 100%;  \n    flex: 1 100%;  \n}  \n  \n.article {  \n    text-align: left;  \n}  \n  \nheader {background: #000080;color:white;}  \nfooter {background: #000080;color:white;}  \n.nav {background:#eee;}  \n  \n.nav ul {  \n    list-style-type: none;  \n    padding: 0;  \n}  \n.nav ul a {  \n    text-decoration: none;  \n}  \n  \n@media all and (min-width: 768px) {  \n    .nav {text-align:left;-webkit-flex: 1 auto;flex:1 auto;-webkit-order:1;order:1;}  \n    .article {-webkit-flex:5 0px;flex:5 0px;-webkit-order:2;order:2;}  \n    footer {-webkit-order:3;order:3;}  \n}  \n&lt;/style>  \n&lt;/head>  \n&lt;body>  \n  \n&lt;div class=\"flex-container\">  \n&lt;header>  \n&lt;h1>City Gallery&lt;/h1>  \n&lt;/header>  \n  \n&lt;nav class=\"nav\">  \n&lt;ul>  \n&lt;li>&lt;a href=\"#\">HTML&lt;/a>&lt;/li>  \n&lt;li>&lt;a href=\"#\">CSS&lt;/a>&lt;/li>  \n&lt;li>&lt;a href=\"#\">JavaScript&lt;/a>&lt;/li>  \n&lt;/ul>  \n&lt;/nav>  \n  \n&lt;article class=\"article\">  \n&lt;h1>HTML&lt;/h1>  \n&lt;p>HTML tutorial or HTML 5 tutorial provides basic and advanced concepts of html. Our HTML tutorial is   \ndeveloped for beginners and professionals.&lt;/p>  \n&lt;p>TML is an acronym which stands for Hyper Text Markup Language. Let's see what is Hyper Text and what is Markup Language?&lt;/p>  \n&lt;p>&lt;strong>Resize this page to see what happens!&lt;/strong>&lt;/p>  \n&lt;/article>  \n  \n&lt;footer>Copyright © codemeals.com&lt;/footer>  \n&lt;/div>  \n  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<h3>Layout using div</h3>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;head>  \n    &lt;title>Webpage using div&lt;/title>  \n    &lt;style>  \n        body{  \n            margin:0px;  \n        }  \n        .header{  \n                padding: 10px;  \n                background-color:#455e64;  \n                text-align: center;  \n               }  \n          .header h2{  \n            color: black; }  \n              /*===============&#91;Nav CSS]==========*/  \n              .nav{  \n                background-color:#243238;  \n                padding: 5px;  \n                }  \n               \n              .nav li{  \n              list-style: none;  \n              display: inline-block;  \n              padding: 8px;  \n               }  \n           .nav a{  \n            color: #fff;  \n           }  \n             \n          .nav ul li a:hover{  \n            text-decoration: none;  \n            color: #7fffd4;  \n           }  \n              .lside{  \n                 float: left;  \n               width: 80%;  \n               min-height: 440px;  \n               background-color: #f0f8ff;  \n               text-align: center;  \n              }  \n           .rside  \n           {  \n            text-align: center;  \n            float: right;  \n            width: 20%;  \n              min-height: 440px;  \n             background-color:  #c1cdcd;  \n           }  \n           .footer{  \n             height: 44px;  \n                background-color:#455e64;   \n            text-align: center;   \n            padding-top: 10px;}  \n  \n            .footer p{  \n                color:  #8fbc8f;  \n            }  \n  \n    &lt;/style>  \n&lt;/head>  \n&lt;body>  \n&lt;div>  \n    &lt;div class=\"header\">  \n      &lt;h2>codemeals Div Layout&lt;/h2>  \n    &lt;/div>  \n            &lt;!-- Nav -->  \n        &lt;div class=\"nav\">  \n            &lt;ul>  \n                &lt;li>&lt;a href=\"#\">HOME&lt;/a>&lt;/li>  \n                &lt;li>&lt;a href=\"#\">MENU&lt;/a>&lt;/li>  \n                &lt;li>&lt;a href=\"#\">ABOUT&lt;/a>&lt;/li>  \n                &lt;li>&lt;a href=\"#\">CONTACT&lt;/a>&lt;/li>  \n                &lt;li style=\"float: right;\">&lt;a href=\"#\">LOGIN&lt;/a>&lt;/li>  \n                &lt;li style=\"float: right;\">&lt;a href=\"#\">SIGN-UP&lt;/a>&lt;/li>  \n            &lt;/ul>  \n        &lt;/div>  \n       \n      &lt;!-- main -->  \n        &lt;div style=\"height:440px\">  \n            &lt;div class=\"lside\">     \n                &lt;p>Write your content here&lt;/p>  \n            &lt;/div>  \n        &lt;!-- side -->  \n            &lt;div class=\"rside\">  \n                &lt;p>This is side&lt;/p>  \n            &lt;/div>  \n        &lt;/div>  \n      &lt;!-- footer -->  \n       &lt;div class=\"footer\">  \n        &lt;p>©&lt;strong>Copyright codemeals.com&lt;/strong>&lt;/p>  \n    &lt;/div>      \n &lt;/div>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Creating layouts are the most important things while designing a website, as it will ensure that your website looks in a well-arranged way and the content appears easy to understand. There are various techniques, and frameworks available for creating layouts, but here we will learn about simple techniques. You can use the following methods to [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3886"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3886"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3886/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3886"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3886"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3886"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3887,
    "date": "2020-08-13T09:00:30",
    "date_gmt": "2020-08-13T09:00:30",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=69"
    },
    "modified": "2020-08-13T09:00:30",
    "modified_gmt": "2020-08-13T09:00:30",
    "slug": "html-responsive",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-responsive/",
    "title": {
      "rendered": "HTML Responsive"
    },
    "content": {
      "rendered": "\n<p><strong>Responsive Web design</strong></p>\n\n\n\n<p>Responsive web design is used to make your web page look appropriate, good, and well placedon all devices (desktop, tablet, smartphone etc.)</p>\n\n\n\n<p>Responsive web design uses HTML and CSS to resize, hide, shrink, enlarge, or move the content. It makes the content look good on any screen.</p>\n\n\n\n<p><strong>Set the viewport</strong></p>\n\n\n\n<p>Let&#8217;s see how to set the viewport.</p>\n\n\n\n<p><strong>how to set the viewport</strong></p>\n\n\n\n<h2>Responsive Images</h2>\n\n\n\n<p>Images which can be scaled nicely to fit any browser size are known as responsive images.</p>\n\n\n\n<h2>How to make Image Responsive?</h2>\n\n\n\n<p><strong>By using the width property</strong></p>\n\n\n\n<p>Set the CSS width property to 100% to make the image responsive and scale up and down.</p>\n\n\n\n<p><strong>Example</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">  \n&lt;body>  \n&lt;h2>Responsive Image&lt;/h2>  \n&lt;p>When we set the CSS width property to 100%, it makes the image responsive.    \nResize the browser window to see the effect.&lt;/p>  \n&lt;img src=\"img_girl.jpg\" style=\"width:100%;\">( change image)  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<h4>Note: A problem with the above method (width: 100%) is that the image can be scaled up to be larger than its original size. So, it is better to use the max-width property instead.</h4>\n\n\n\n<h2>By using the max-width Property</h2>\n\n\n\n<p>This method is best and most used because it facilitates that the image will scale down if it has to, but never scale up to be larger than its original size.</p>\n\n\n\n<p><strong>Example</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">  \n&lt;body>  \n&lt;h2>Responsive Image&lt;/h2>  \n&lt;p>\"max-width:100%\" makes the image responsive and also ensures that the image   \ndoesn't get bigger than its original size.&lt;/p>  \n&lt;p>Resize the browser window to see the effect.&lt;/p>  \n&lt;img src=\"img_girl.jpg\" style=\"max-width:100%;height:auto;\"> (Change the image)   \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<h2>Change images according to the browser width</h2>\n\n\n\n<p>By using the HTML &lt;picture&gt; element, you can set two or more imagesaccording to the browser width. It will change the picture when you change the browser-size. i.e. desktop and phone.</p>\n\n\n\n<p><strong>Example</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">  \n&lt;body>  \n&lt;h2>Change Images Depending on Browser Width&lt;/h2>  \n&lt;p>Resize the browser width and the image will change at 600px and 1500px.&lt;/p>  \n&lt;picture>  \n&lt;source srcset=\"img_smallflower.jpg\" media=\"(max-width: 600px)\">(Change image)  \n&lt;source srcset=\"img_flowers.jpg\" media=\"(max-width: 1500px)\">(Change image)  \n&lt;source srcset=\"flowers.jpg\">  \n&lt;img src=\"img_flowers.jpg\" alt=\"Flowers\" style=\"width:auto;\">  \n&lt;/picture>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<h2>Responsive Text-size</h2>\n\n\n\n<p>We can make the text size responsive by using the &#8220;uv&#8221; unit. It means viewport-width. By using this, we can make the text size to follow the browserwindow screen.</p>\n\n\n\n<p><strong>Example</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">  \n&lt;body>  \n&lt;h1 style=\"font-size:10vw;\">Here size is 10vw.&lt;/h1>  \n&lt;p style=\"font-size:6vw;\">Here size is 6vw.&lt;/p>  \n&lt;p style=\"font-size:4vw;\">Here size is 4vw.&lt;/p>  \n&lt;p>Resize the browser window to see how the text size changes.&lt;/p>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<h4>Note: viewport specifies the browser window size. 1vw = 1% of viewport width. Means, if the viewport is 100cm wide, 1vw is 1.0cm.</h4>\n\n\n\n<h2>Media Query</h2>\n\n\n\n<p>We can also use media query to make responsive websites. Read the details of media query from here: <strong>Media Query</strong></p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Responsive Web design Responsive web design is used to make your web page look appropriate, good, and well placedon all devices (desktop, tablet, smartphone etc.) Responsive web design uses HTML and CSS to resize, hide, shrink, enlarge, or move the content. It makes the content look good on any screen. Set the viewport Let&#8217;s see [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3887"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3887"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3887/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3887"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3887"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3887"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3945,
    "date": "2020-08-13T09:02:44",
    "date_gmt": "2020-08-13T09:02:44",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=71"
    },
    "modified": "2020-08-13T09:02:44",
    "modified_gmt": "2020-08-13T09:02:44",
    "slug": "html-computer-code",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-computer-code/",
    "title": {
      "rendered": "HTML Computer code"
    },
    "content": {
      "rendered": "\n<p>When we are programming, sometimes it is mandatory to show the Output result, error message, or coding part to user on a webpage. Hence to solve this issue HTML uses different tags for the user inputs, codes, programs, etc. With the help of these tags, you will be able to write codes to display on your webpage.</p>\n\n\n\n<p>Following is a list of some tags which are used in HTML for this task.</p>\n\n\n\n<ul><li>&lt;code&gt;</li><li>&lt;kbd&gt;</li><li>&lt;samp&gt;</li><li>&lt;var&gt;</li><li>&lt;pre&gt;</li></ul>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML &lt;code&gt; element</h2>\n\n\n\n<p>It is used to represent some programming code on your website. The content written between&nbsp;<code>tag will be displayed in default monospace font.</code></p>\n\n\n\n<p><strong>Example:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;body>  \n&lt;h2>Computer Code&lt;/h2>  \n&lt;p>This is a programming code:&lt;/p>  \n&lt;code>  \nx = 5;&lt;br>  \ny = 6;&lt;br>  \nz = x + y;  \n&lt;/code>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML &lt;kbd&gt; Element</h2>\n\n\n\n<p>It is used to represent user input, keyboard input, voice command etc. Text written within &lt;kbd&gt;&#8230;..&lt;/kbd&gt; tags is typically displayed in the browser&#8217;s default monospace font.</p>\n\n\n\n<p><strong>Example:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;body>  \n&lt;h2>The kbd Element&lt;/h2>  \n&lt;kbd>This is how  content written within kbd element looks like.&lt;/kbd>&lt;/p>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML &lt;samp&gt; Element</h2>\n\n\n\n<p>The HTML &lt;samp&gt; element is used to represent a program&#8217;s output. Text written within samp element is typically displayed in the browser&#8217;s default monospace font.</p>\n\n\n\n<p><strong>Example:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;body>  \n&lt;h2>The samp Element&lt;/h2>  \n&lt;samp>This is how the content within samp element looks like. &lt;/samp>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML &lt;var&gt; element</h2>\n\n\n\n<p>The HTML &lt;var&gt; element is used to define a variable. The variable could be a variable in a mathematical expression or a variable in programming context.</p>\n\n\n\n<p><strong>Example:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;body>  \n&lt;h2>The var Element&lt;/h2>  \n&lt;p>This is a famous formula: &lt;var>E&lt;/var> = &lt;var>mc&lt;/var>&lt;sup>2&lt;/sup>.&lt;/p>  \n&lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h2>HTML &lt;pre&gt; element</h2>\n\n\n\n<p>The &lt;pre&gt; element defines preformatted text, which displays the content within it in a fixed-width font. It keeps the content into its original format and ignores all formatting.</p>\n\n\n\n<p><strong>Example:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;body>  \n&lt;h3>Example of pre tag&lt;/h3>  \n  &lt;pre>  \n    This is content written   \n    within pre tag, and  pre tag will ignore all   \n    spaces,     break lines, and will display the content   \n    as in original format.   \n  &lt;/pre>  \n &lt;/body>  \n&lt;/html>  </code></pre>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>When we are programming, sometimes it is mandatory to show the Output result, error message, or coding part to user on a webpage. Hence to solve this issue HTML uses different tags for the user inputs, codes, programs, etc. With the help of these tags, you will be able to write codes to display on [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3945"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3945"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3945/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3945"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3945"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3945"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3946,
    "date": "2020-08-13T09:04:11",
    "date_gmt": "2020-08-13T09:04:11",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=73"
    },
    "modified": "2020-08-13T09:04:11",
    "modified_gmt": "2020-08-13T09:04:11",
    "slug": "html-entities",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-entities/",
    "title": {
      "rendered": "HTML Entities"
    },
    "content": {
      "rendered": "\n<p>HTML character entities are used as a replacement of reserved characters in HTML. You can also replace characters that are not present on your keyboard by entities.</p>\n\n\n\n<p>These characters are replaced because some characters are reserved in HTML. HTML entities provide a wide range of characters which can allow you to add icons, geometric shapes, mathematical operators, etc.</p>\n\n\n\n<p><strong>For example:</strong>&nbsp;if you use less than (&lt;) or greater than (&gt;) symbols in your text, the browser can mix them with tags that&#8217;s why character entities are used in HTML to display reserved characters.</p>\n\n\n\n<h2>How to use an entity:</h2>\n\n\n\n<p>You can use an entity in your HTML document by name or by a numerical character reference. Each entity starts with symbol ampersand (&amp;) and ends with a semicolon (;).</p>\n\n\n\n<p><strong>Syntax:</strong></p>\n\n\n\n<ol><li>&amp;entity_name;&nbsp;&nbsp;</li><li class=\"\">&nbsp;&nbsp;OR&nbsp;&nbsp;</li><li>&amp;#entity_number;&nbsp;&nbsp;</li></ol>\n\n\n\n<h3>Most used HTML Character Entities</h3>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Result</th><th>Description</th><th>Entity Name</th><th>Entity Number</th></tr><tr><td>&nbsp;</td><td>non-breaking space</td><td>&amp;nbsp;</td><td>160</td></tr><tr><td>&lt;</td><td>less than</td><td>&amp;lt;</td><td>60</td></tr><tr><td>&gt;</td><td>greater than</td><td>&amp;gt;</td><td>62</td></tr><tr><td>&amp;</td><td>ampersand</td><td>&amp;amp;</td><td>38</td></tr><tr><td>&#8220;</td><td>double quotation mark</td><td>&amp;quot;</td><td>34</td></tr><tr><td>&#8216;</td><td>single quotation mark (apostrophe)</td><td>&amp;apos;</td><td>39</td></tr><tr><td>¢</td><td>cent</td><td>&amp;cent;</td><td>162</td></tr><tr><td>£</td><td>pound</td><td>&amp;pound;</td><td>163</td></tr><tr><td>¥</td><td>yen</td><td>&amp;yen;</td><td>165</td></tr><tr><td>€</td><td>Euro</td><td>&amp;euro;</td><td>8364</td></tr><tr><td>©</td><td>copyright</td><td>&amp;copy;</td><td>169</td></tr><tr><td>®</td><td>registered trademark</td><td>&amp;reg;</td><td>174</td></tr></tbody></table></figure>\n\n\n\n<h4>Note:Entity names are case sensitive.</h4>\n\n\n\n<p><strong>Advantage of entity name:</strong>&nbsp;An entity name is easy to remember.</p>\n\n\n\n<p><strong>Disadvantage of entity name:</strong>&nbsp;Browsers may not support all entity names, but the support for numbers is good.</p>\n\n\n\n<p><strong>Example:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>  \n&lt;html>  \n&lt;head>  \n&lt;title>&lt;/title>  \n&lt;/head>  \n &lt;body>  \n    &lt;h3>HTML entity example&lt;/h3>  \n    &lt;p> \"This is the content written within entity\"&lt;/p>  \n    &lt;p> &lt;p> Paragraph tag &lt;/p>  \n &lt;/body>  \n&lt;/html>  </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<h2>Diacritical Marks in HTML</h2>\n\n\n\n<p>There are some special types of letters used in HTML whichhave some glyph added to the top or below the letters. These glyphs are called diacritical mark.</p>\n\n\n\n<p>Some diacritical marks, like grave ( &nbsp; ̀) and acute ( &nbsp; ́) are called accents.Diacritical marks can be used both above and below a letter, inside a letter, and between two letters.</p>\n\n\n\n<p><strong>Following is a list of some diacritical marks:</strong></p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Mark</th><th>Character</th><th>Construct</th><th>Result</th></tr><tr><td>&nbsp;̀</td><td>a</td><td>a&amp;#768;</td><td>à</td></tr><tr><td>&nbsp;́</td><td>a</td><td>a&amp;#769;</td><td>á</td></tr><tr><td>̂</td><td>a</td><td>a&amp;#770;</td><td>â</td></tr><tr><td>&nbsp;̃</td><td>a</td><td>a&amp;#771;</td><td>ã</td></tr><tr><td>&nbsp;̀</td><td>O</td><td>O&amp;#768;</td><td>Ò</td></tr><tr><td>&nbsp;́</td><td>O</td><td>O&amp;#769;</td><td>Ó</td></tr><tr><td>̂</td><td>O</td><td>O&amp;#770;</td><td>Ô</td></tr><tr><td>&nbsp;̃</td><td>O</td><td>O&amp;#771;</td><td>Õ</td></tr></tbody></table></figure>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>HTML character entities are used as a replacement of reserved characters in HTML. You can also replace characters that are not present on your keyboard by entities. These characters are replaced because some characters are reserved in HTML. HTML entities provide a wide range of characters which can allow you to add icons, geometric shapes, [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3946"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3946"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3946/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3946"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3946"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3946"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3888,
    "date": "2020-08-13T09:05:26",
    "date_gmt": "2020-08-13T09:05:26",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=75"
    },
    "modified": "2020-08-13T09:05:26",
    "modified_gmt": "2020-08-13T09:05:26",
    "slug": "html-symbols",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-symbols/",
    "title": {
      "rendered": "HTML Symbols"
    },
    "content": {
      "rendered": "\n<p>There are many mathematical, technical and currency symbols which are not present on a normal keyboard. We have to use HTML entity names to add such symbols to an HTML page.</p>\n\n\n\n<p>If there no entity name exists, you can use an entity number, a decimal, or hexadecimal reference.</p>\n\n\n\n<p><strong>Example:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>     \n      &lt;html>        \n       &lt;body>    \n          &lt;h3>The Currency Symbols&lt;/h3>  \n                   &lt;p>This is Indian Rupee symbol &lt;b>₹&lt;b>&lt;/p>   \n         &lt;p>This is Euro symbol &lt;b>€&lt;/b>&lt;/p>      \n         &lt;p> This is Dollar symbol &lt;b>#36;&lt;/b>&lt;/p>    \n       &lt;/body>      \n    &lt;/html>    </code></pre>\n\n\n\n<p>Test it Now</p>\n\n\n\n<h2>Mathematical Symbols Supported by HTML</h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Char</th><th>Number</th><th>Entity</th><th>Description</th></tr><tr><td>∀</td><td>&amp;#8704;</td><td>&amp;forall;</td><td>FOR ALL</td></tr><tr><td>∂</td><td>&amp;#8706;</td><td>&amp;part;</td><td>PARTIAL DIFFERENTIAL</td></tr><tr><td>∃</td><td>&amp;#8707;</td><td>&amp;exist;</td><td>THERE EXISTS</td></tr><tr><td>∅</td><td>&amp;#8709;</td><td>&amp;empty;</td><td>EMPTY SETS</td></tr><tr><td>∇</td><td>&amp;#8711;</td><td>&amp;nabla;</td><td>NABLA</td></tr><tr><td>∈</td><td>&amp;#8712;</td><td>&amp;isin;</td><td>ELEMENT OF</td></tr><tr><td>∉</td><td>&amp;#8713;</td><td>&amp;notin;</td><td>NOT AN ELEMENT OF</td></tr><tr><td>∋</td><td>&amp;#8715;</td><td>&amp;ni;</td><td>CONTAINS AS MEMBER</td></tr><tr><td>∏</td><td>&amp;#8719;</td><td>&amp;prod;</td><td>N-ARY PRODUCT</td></tr><tr><td>∑</td><td>&amp;#8721;</td><td>&amp;sum;</td><td>N-ARY SUMMATION</td></tr></tbody></table></figure>\n\n\n\n<h2>Greek Symbols Supported by HTML</h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Char</th><th>Number</th><th>Entity</th><th>Description</th></tr><tr><td>Α</td><td>&amp;#913;</td><td>&amp;Alpha;</td><td>GREEK CAPITAL LETTER ALPHA</td></tr><tr><td>Β</td><td>&amp;#914;</td><td>&amp;Beta;</td><td>GREEK CAPITAL LETTER BETA</td></tr><tr><td>Γ</td><td>&amp;#915;</td><td>&amp;Gamma;</td><td>GREEK CAPITAL LETTER GAMMA</td></tr><tr><td>Δ</td><td>&amp;#916;</td><td>&amp;Delta;</td><td>GREEK CAPITAL LETTER DELTA</td></tr><tr><td>Ε</td><td>&amp;#917;</td><td>&amp;Epsilon;</td><td>GREEK CAPITAL LETTER EPSILON</td></tr><tr><td>Ζ</td><td>&amp;#918;</td><td>&amp;Zeta;</td><td>GREEK CAPITAL LETTER ZETA</td></tr></tbody></table></figure>\n\n\n\n<h2>Some Important Symbols Supported by HTML</h2>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Char</th><th>Number</th><th>Entity</th><th>Description</th></tr><tr><td>©</td><td>&amp;#169;</td><td>&amp;copy;</td><td>COPYRIGHT SIGN</td></tr><tr><td>®</td><td>&amp;#174;</td><td>&amp;reg;</td><td>REGISTERED SIGN</td></tr><tr><td>€</td><td>&amp;#8364;</td><td>&amp;euro;</td><td>EURO SIGN</td></tr><tr><td>&#x2122;</td><td>&amp;#8482;</td><td>&amp;trade;</td><td>TRADEMARK</td></tr><tr><td>←</td><td>&amp;#8592;</td><td>&amp;larr;</td><td>LEFTWARDS ARROW</td></tr><tr><td>↑</td><td>&amp;#8593;</td><td>&amp;uarr;</td><td>UPWARDS ARROW</td></tr><tr><td>→</td><td>&amp;#8594;</td><td>&amp;rarr;</td><td>RIGHTWARDS ARROW</td></tr><tr><td>↓</td><td>&amp;#8595;</td><td>&amp;darr;</td><td>DOWNWARDS ARROW</td></tr><tr><td>&#x2660;</td><td>&amp;#9824;</td><td>&amp;spades;</td><td>BLACK SPADE SUIT</td></tr><tr><td>&#x2663;</td><td>&amp;#9827;</td><td>&amp;clubs;</td><td>BLACK CLUB SUIT</td></tr><tr><td>&#x2665;</td><td>&amp;#9829;</td><td>&amp;hearts;</td><td>BLACK HEART SUIT</td></tr><tr><td>&#x2666;</td><td>&amp;#9830;</td><td>&amp;diams;</td><td>BLACK DIAMOND SUIT</td></tr></tbody></table></figure>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>There are many mathematical, technical and currency symbols which are not present on a normal keyboard. We have to use HTML entity names to add such symbols to an HTML page. If there no entity name exists, you can use an entity number, a decimal, or hexadecimal reference. Example: Test it Now Mathematical Symbols Supported [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3888"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3888"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3888/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3888"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3888"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3888"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3889,
    "date": "2020-08-13T09:06:13",
    "date_gmt": "2020-08-13T09:06:13",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=77"
    },
    "modified": "2020-08-13T09:06:13",
    "modified_gmt": "2020-08-13T09:06:13",
    "slug": "html-charset",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-charset/",
    "title": {
      "rendered": "HTML Charset"
    },
    "content": {
      "rendered": "\n<p>HTML Charset is also called HTML Character Sets or HTML Encoding. It is used to display an HTML page properly and correctly because for displaying anything correctly, a web browser must know which character set (character encoding) to use.</p>\n\n\n\n<h2>HTML Character Encoding</h2>\n\n\n\n<p>There are various types of Character Encoding which are given below:</p>\n\n\n\n<h2>ASCII Character Set</h2>\n\n\n\n<p>ASCII stands for American Standard Code for Information Interchange. In HTML, the first ever character encoding standard is the ASCII standard. ASCII provides 128 different alphanumeric characters that could be used on the internet: numbers (0-9), English letters (A-Z), and some special characters like! $ + &#8211; ( ) @ &lt;&gt; .</p>\n\n\n\n<p>The main problem with ASCII encoding was it contains a limited range of characters. It contains mainly 128 characters.</p>\n\n\n\n<h2>ANSI Character Set</h2>\n\n\n\n<p>ANSI stands for&nbsp;<strong>American National Standard Institute</strong>. It is character set standard which is an extended version of standard ASCII character set. It supports 256 character set. ANSI also called as Windows-1252, and it was the default character set for Windows up to Windows 95.</p>\n\n\n\n<h2>ISO-8859-1 Character Set</h2>\n\n\n\n<p>ISO-8859-1 was the default character encoding in HTML 2.0. It was also an extension of ASCII standard with International characters. It also used full bytes (8-bits) to show characters.</p>\n\n\n\n<h2>UTF-8 Character Set</h2>\n\n\n\n<p>UTF-8 is a variable width character encoding which covers almost all of the characters and symbols in the world. ANSI (Windows-1252) was the original Windows character set, which supported 256 different character codes.</p>\n\n\n\n<p>ISO-8859-1 was the default character set for HTML 4. This character set also supported 256 different character codes.</p>\n\n\n\n<p>Why UTF 8 is also supported in HTML4?</p>\n\n\n\n<p>Because ANSI and ISO-8859-1 were so limited, HTML 4 also supported UTF-8.The default character encoding for HTML5 is UTF-8.</p>\n\n\n\n<p><strong>UTF-8 syntax for HTML4:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;meta http-equiv=\"Content-Type\" content=\"text/html;charset=ISO-8859-1\">  </code></pre>\n\n\n\n<p><strong>UTF-8 syntax for HTML5:</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;meta charset=\"UTF-8\"> </code></pre>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>HTML Charset is also called HTML Character Sets or HTML Encoding. It is used to display an HTML page properly and correctly because for displaying anything correctly, a web browser must know which character set (character encoding) to use. HTML Character Encoding There are various types of Character Encoding which are given below: ASCII Character [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3889"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3889"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3889/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3889"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3889"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3889"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3947,
    "date": "2020-08-13T09:06:45",
    "date_gmt": "2020-08-13T09:06:45",
    "guid": {
      "rendered": "http://learnhtml.foobrdigital.com/?p=79"
    },
    "modified": "2020-08-13T09:06:45",
    "modified_gmt": "2020-08-13T09:06:45",
    "slug": "html-url-encode",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/html-url-encode/",
    "title": {
      "rendered": "HTML URL Encode"
    },
    "content": {
      "rendered": "\n<h2>What is URL?</h2>\n\n\n\n<p>URL stands for Uniform Resource Locator. It is actually a web address. A URL can contain words i.e. (codemeals.com) or an Internet Protocol (IP) address i.e.195.201.68.81. But most of the user use URL in the form of words because it is easy to remember than numbers.</p>\n\n\n\n<p><strong>Syntax of a URL:</strong></p>\n\n\n\n<ol><li>scheme://prefix.domain:port/path/filename&nbsp;&nbsp;</li></ol>\n\n\n\n<p>Here,</p>\n\n\n\n<ul><li><strong>scheme</strong> is used to define the type of Internet service (most common is http or https).</li><li><strong>prefix</strong> is used to define a domain prefix (default for http is www).</li><li><strong>domain</strong> is used to define the Internet domain name (like codemeals.com).</li><li><strong>port</strong> is used to define the port number at the host (default for http is 80).</li><li><strong>path</strong> is used to define a path at the server (If omitted: the root directory of the site).</li><li><strong>filename</strong> is used to define the name of a document or resource.</li></ul>\n\n\n\n<p><strong>Following is a list of some common types of schemes used in URL:</strong></p>\n\n\n\n<ul><li>http(HyperText Transfer Protocol):Common web pages. Not encrypted.</li><li>https (Secure HyperText Transfer Protocol):Secure web pages. Encrypted.</li><li>ftp(File Transfer Protocol): Downloading or uploading files.</li><li>file: A file on your computer.</li></ul>\n\n\n\n<h2>URL Encoding</h2>\n\n\n\n<p>URL encoding is used to convert non-ASCII characters into a format that can be used over the Internet because a URL is sent over the Internet by using the ASCII character-set only. If a URL contains characters outside the ASCII set, the URL has to be converted.</p>\n\n\n\n<p>In URL encoding, the non-ASCII characters are replaced with a &#8220;%&#8221; followed by hexadecimal digits.</p>\n\n\n\n<p>URLs cannot contain spaces. URL encoding normally replaces a space with a plus (+) sign, or %20.</p>\n\n\n\n<p><strong>Following is a list of some character sets which are encoded by browser after submitting the text.</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://static.javatpoint.com/htmlpages/images/url-encode.PNG\" alt=\"url encode\"/></figure>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>What is URL? URL stands for Uniform Resource Locator. It is actually a web address. A URL can contain words i.e. (codemeals.com) or an Internet Protocol (IP) address i.e.195.201.68.81. But most of the user use URL in the form of words because it is easy to remember than numbers. Syntax of a URL: scheme://prefix.domain:port/path/filename&nbsp;&nbsp; Here, [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [
      14
    ],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3947"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=3947"
        }
      ],
      "version-history": [
        {
          "count": 0,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/3947/revisions"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=3947"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=3947"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=3947"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  }
]