[{"id":4077,"date":"2020-07-21T11:44:19","date_gmt":"2020-07-21T11:44:19","guid":{"rendered":"http://javascript.foobrdigital.com/?p=226"},"modified":"2020-07-21T11:44:19","modified_gmt":"2020-07-21T11:44:19","slug":"overview-6","status":"publish","type":"post","link":"https://computerprogramming.foobrdigital.com/overview-6/","title":{"rendered":"Overview"},"content":{"rendered":"\n<h2>What is Ember.js?</h2>\n\n\n\n<p>Ember.js is an open source, free JavaScript client-side framework used for developing web applications. It allows building client side JavaScript applications by providing a complete solution which contains data management and an application flow.</p>\n\n\n\n<p>The original name of Ember.js was&nbsp;<em>SproutCore MVC framework</em>. It was developed by&nbsp;<em>Yehuda Katz</em>&nbsp;and initially released on&nbsp;<em>in December 2011</em>. The stable release of Ember.js is 2.10.0 and this was released on November 28, 2016.</p>\n\n\n\n<h2>Why Ember.js?</h2>\n\n\n\n<p>Consider the following points to understand the use of Ember.js −</p>\n\n\n\n<ul><li>Ember.js is an open source JavaScript framework under MIT license.</li><li>It provides the new binding syntax using the&nbsp;<em>HTMLBars</em>&nbsp;template engine which is a superset of the&nbsp;<em>Handerlbars</em>&nbsp;templating engine.</li><li>It provides the&nbsp;<em>Glimmer rendering engine</em>&nbsp;to increase the rendering speed.</li><li>It provides the&nbsp;<em>Command Line Interface</em>&nbsp;utility that integrates Ember patterns into development process and focuses easily on the developer productivity.</li><li>It supports&nbsp;<em>data binding</em>&nbsp;to create the link between two properties and when one property changes, the other property will get upgraded with the new value.</li></ul>\n\n\n\n<h2>Features of Ember.js</h2>\n\n\n\n<p>Following are the some of the most prominent features of Ember.js −</p>\n\n\n\n<ul><li>Ember.js is used for creating reusable and maintainable JavaScript web applications.</li><li>Ember.js has&nbsp;<em>HTML</em>&nbsp;and&nbsp;<em>CSS</em>&nbsp;at the core of the development model.</li><li>It provides the instance initializers.</li><li>The routes are core features of the Ember.js which are used for managing the URL&#8217;s.</li><li>Ember.js provides&nbsp;<em>Ember Inspector</em>&nbsp;tool for debugging Ember applications.</li><li>Ember.js uses templates that help to automatically update the model, if the content of applications gets changed.</li></ul>\n","protected":false},"excerpt":{"rendered":"<p>What is Ember.js? Ember.js is an open source, free JavaScript client-side framework used for developing web applications. It allows building client side JavaScript applications by providing a complete solution which contains data management and an application flow. The original name of Ember.js was&nbsp;SproutCore MVC framework. It was developed by&nbsp;Yehuda Katz&nbsp;and initially released on&nbsp;in December 2011. [&hellip;]</p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[57,56],"tags":[],"_links":{"self":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/4077"}],"collection":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=4077"}],"version-history":[{"count":0,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/4077/revisions"}],"wp:attachment":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=4077"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=4077"},{"taxonomy":"post_tag","embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=4077"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":4076,"date":"2020-07-21T11:45:13","date_gmt":"2020-07-21T11:45:13","guid":{"rendered":"http://javascript.foobrdigital.com/?p=225"},"modified":"2020-07-21T11:45:13","modified_gmt":"2020-07-21T11:45:13","slug":"installation","status":"publish","type":"post","link":"https://computerprogramming.foobrdigital.com/installation/","title":{"rendered":"Installation"},"content":{"rendered":"\n<p>It is easy to configure Ember.js in your system. By using the Ember CLI (Command Line Interface) utility, you can create and manage your Ember projects. The Ember CLI deals with different kinds of application asset management such as concatenation, minification and versioning and also provide generators to produce components, routes etc.</p>\n\n\n\n<p>To install Ember CLI, you need to have the following dependencies −</p>\n\n\n\n<ul><li><strong>Git</strong> − It is a open source version control system for tracking the changes made in the files. For more information, check the official website of git. Ember uses Git to manage its dependencies.<ul><li><em>Installing Git on Linux</em>: Install the Git on Linux by using this link &#8211; http://git-scm.com/download/linux</li><li><em>Installing Git on Mac</em>: Install the Git on Mac OS by using this link &#8211; https://git-scm.com/download/mac</li><li><em>Installing Git on Linux</em>: Install the Git on Windows by using this link &#8211; https://git-scm.com/download/win</li></ul></li><li><strong>Node.js and npm</strong> − Node.js is an open source, used for developing server side and networking applications. It is written in JavaScript. NPM is a node package manager used for installing, sharing and managing the dependencies in the projects. Ember CLI uses Node.js run time and npm to get the dependencies.</li><li><strong>Bower</strong> − It is used for managing the components such as HTML, CSS, JavaScript, image files etc and can be installed by using the npm.</li><li><strong>Watchman</strong> − This optional dependency can be used to watch the files or directories and execute some actions when they change.</li><li><strong>PhantomJS</strong> − This optional dependency can be used for running browser based unit tests to interact with web page.</li></ul>\n\n\n\n<h2>Installing Ember CLI</h2>\n\n\n\n<p>Ember CLI integrates Ember patterns into development process and focuses easily on the developer productivity. It is used for creating Ember apps with Ember.js and Ember data.</p>\n\n\n\n<p>You can install Ember using npm as in the command given below −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>npm install -g ember-cli\n</code></pre>\n\n\n\n<p>To install the beta version, use the following command −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>npm install -g ember-cli@2.10\n</code></pre>\n\n\n\n<p>To check the successful installation of Ember, use the following command −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>ember -v\n</code></pre>\n\n\n\n<p>After executing the above command, it will show something like this −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>ember-cli: 2.10.1\nnode: 0.12.7\nos: win32 ia32</code></pre>\n","protected":false},"excerpt":{"rendered":"<p>It is easy to configure Ember.js in your system. By using the Ember CLI (Command Line Interface) utility, you can create and manage your Ember projects. The Ember CLI deals with different kinds of application asset management such as concatenation, minification and versioning and also provide generators to produce components, routes etc. To install Ember [&hellip;]</p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[57,56],"tags":[],"_links":{"self":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/4076"}],"collection":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=4076"}],"version-history":[{"count":0,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/4076/revisions"}],"wp:attachment":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=4076"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=4076"},{"taxonomy":"post_tag","embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=4076"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":4075,"date":"2020-07-21T11:45:35","date_gmt":"2020-07-21T11:45:35","guid":{"rendered":"http://javascript.foobrdigital.com/?p=224"},"modified":"2020-07-21T11:45:35","modified_gmt":"2020-07-21T11:45:35","slug":"core-concepts","status":"publish","type":"post","link":"https://computerprogramming.foobrdigital.com/core-concepts/","title":{"rendered":"Core Concepts"},"content":{"rendered":"\n<p>Ember.js has the following core concepts −</p>\n\n\n\n<ul><li>Router</li><li>Templates</li><li>Models</li><li>Components</li></ul>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://www.tutorialspoint.com/emberjs/images/emberjs-core-concepts.jpg\" alt=\"Emberjs Core Concepts\"/></figure>\n\n\n\n<h2>Router and Route Handlers</h2>\n\n\n\n<p>The URL loads the app by entering the URL in the address bar and user will click a link within the app. The Ember uses the router to map the URL to a route handler. The router matches the existing URL to the route which is then used for loading data, displaying the templates and setting up an application state.</p>\n\n\n\n<p>The Route handler performs the following actions −</p>\n\n\n\n<ul><li>It provides the template.</li><li>It defines the model that will be accessible to the template.</li><li>If there is no permission for the user to visit a particular part of the app, then the router will redirect to a new route.</li></ul>\n\n\n\n<h2>Templates</h2>\n\n\n\n<p>Templates are powerful UI for the end-users. Ember template provides user interface look of an application which uses the syntax of Handlebars templates. It builds the front-end application, which is like the regular HTML. It also supports the regular expression and dynamically updates the expression.</p>\n\n\n\n<h2>Model</h2>\n\n\n\n<p>The route handlers render the model that persists information to the web server. It manipulates the data stored in the database. The model is the simple class that extends the functionality of the Ember Data. Ember Data is a library that is tightly coupled with Ember.js to manipulate with the data stored in the database.</p>\n\n\n\n<h2>Components</h2>\n\n\n\n<p>The component controls the user interface behavior which includes two parts −</p>\n\n\n\n<ul><li>a template which is written in JavaScript</li><li>a source file which is written in JavaScript that provides behavior of the components.</li></ul>\n","protected":false},"excerpt":{"rendered":"<p>Ember.js has the following core concepts − Router Templates Models Components Router and Route Handlers The URL loads the app by entering the URL in the address bar and user will click a link within the app. The Ember uses the router to map the URL to a route handler. The router matches the existing [&hellip;]</p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[57,56],"tags":[],"_links":{"self":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/4075"}],"collection":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=4075"}],"version-history":[{"count":0,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/4075/revisions"}],"wp:attachment":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=4075"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=4075"},{"taxonomy":"post_tag","embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=4075"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":4074,"date":"2020-07-21T11:46:54","date_gmt":"2020-07-21T11:46:54","guid":{"rendered":"http://javascript.foobrdigital.com/?p=223"},"modified":"2020-07-21T11:46:54","modified_gmt":"2020-07-21T11:46:54","slug":"creating-and-running-application","status":"publish","type":"post","link":"https://computerprogramming.foobrdigital.com/creating-and-running-application/","title":{"rendered":"Creating and Running Application"},"content":{"rendered":"\n<p>You can easily configure the Ember.js in your system. The installation of Ember.js is explained in the EmberJS Installation chapter.</p>\n\n\n\n<h2>Creating Application</h2>\n\n\n\n<p>Let us create one simple app using Ember.js. First create one folder where you create your applications. For instance, if you have created the &#8220;emberjs-app&#8221; folder, then navigate to this folder as −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>$ cd ~/emberjs-app</code></pre>\n\n\n\n<p>Inside the &#8220;emberjs=app&#8221; folder, create a new project by using the new command −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>$ ember new demo-app</code></pre>\n\n\n\n<p>When you create a project, new command provides the following directory structure with files and directories −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>|-- app\n|-- bower_components\n|-- config\n|-- dist\n|-- node_modules\n|-- public\n|-- tests\n|-- tmp\n|-- vendor\n\nbower.json\nember-cli-build.js\npackage.json\nREADME.md\ntestem.js</code></pre>\n\n\n\n<ul><li><strong>app</strong>&nbsp;− It specifies the folders and files of models, routes, components, templates and styles.</li><li><strong>bower_components / bower.json</strong>&nbsp;− It is used for managing the components such as HTML, CSS, JavaScript, image files etc and can be installed by using the npm. The&nbsp;<em>bower_components</em>&nbsp;directory contains all the Bower components and&nbsp;<em>bower.json</em>&nbsp;contains the list of dependencies which are installed by Ember, Ember CLI Shims and QUnit.</li><li><strong>config</strong>&nbsp;− It contains the&nbsp;<em>environment.js</em>&nbsp;directory which is used for configuring the settings of an application.</li><li><strong>dist</strong>&nbsp;− It includes the output files which are deployed when building the app.</li><li><strong>node_modules / package.json</strong>&nbsp;− NPM is a node package manager for Node.js which is used for installing, sharing and managing the dependencies in the projects. The package.json file includes the current npm dependencies of an application and the listed packages get installed in the&nbsp;<strong>node_modules</strong>&nbsp;directory.</li><li><strong>public</strong>&nbsp;− It includes assets like images, fonts, etc.</li><li><strong>vendor</strong>&nbsp;− It is a directory in which the front-end dependencies such as JavaScript, CSS are not controlled by Bower go.</li><li><strong>tests / testem.js</strong>&nbsp;− The automated tests are stored under the tests folder and the test runner&nbsp;<em>testem</em>&nbsp;of Ember CLI&#8217;s is arranged in&nbsp;<em>testem.js</em>.</li><li><strong>tmp</strong>&nbsp;− It contains the temporary files of Ember CLI.</li><li><strong>ember-cli-build.js</strong>&nbsp;− It specifies how to build the app by using the Ember CLI.</li></ul>\n\n\n\n<h2>Running Application</h2>\n\n\n\n<p>To run the application, navigate to the newly created project directory −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>$ cd demo-app</code></pre>\n\n\n\n<p>We have created the new project and it is ready to run with the command given below −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>$ ember server</code></pre>\n\n\n\n<p>Now open the browser and navigate to&nbsp;<strong>http://localhost:4200/</strong>. You will get the Ember Welcome page as shown in the image below −</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://www.tutorialspoint.com/emberjs/images/emberjs-installation-app.jpg\" alt=\"Ember.js App Example\"/></figure>\n","protected":false},"excerpt":{"rendered":"<p>You can easily configure the Ember.js in your system. The installation of Ember.js is explained in the EmberJS Installation chapter. Creating Application Let us create one simple app using Ember.js. First create one folder where you create your applications. For instance, if you have created the &#8220;emberjs-app&#8221; folder, then navigate to this folder as − Inside the [&hellip;]</p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[57,56],"tags":[],"_links":{"self":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/4074"}],"collection":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=4074"}],"version-history":[{"count":0,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/4074/revisions"}],"wp:attachment":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=4074"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=4074"},{"taxonomy":"post_tag","embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=4074"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":4073,"date":"2020-07-21T11:47:22","date_gmt":"2020-07-21T11:47:22","guid":{"rendered":"http://javascript.foobrdigital.com/?p=222"},"modified":"2020-07-21T11:47:22","modified_gmt":"2020-07-21T11:47:22","slug":"object-model","status":"publish","type":"post","link":"https://computerprogramming.foobrdigital.com/object-model/","title":{"rendered":"Object Model"},"content":{"rendered":"\n<p>In Ember.js, all objects are derived from the Ember.Object. Object-oriented analysis and design technique is called <strong>object modeling</strong>. The Ember.Object supports features such as mixins and constructor methods by using the class system. Ember uses the Ember.Enumerable interface to extend the JavaScript Array prototype to give the observation changes for arrays and also uses the formatting and localization methods to extend the <em>String prototype</em>.</p>\n\n\n\n<p>The following table lists down the different types of object model in Ember.js along with their description −</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>S.No.</th><th>Types &amp; Description</th></tr><tr><td>1</td><td>Classes and InstancesClass is a template or blue print, that has a collection of variables and functions, whereas instances are related to the object of that class. You can create new Ember class by using the Ember.Object&#8217;s <em>extend()</em> method.</td></tr><tr><td>2</td><td>Reopening Classes and InstancesThis is nothing but updating the class implementation without redefining it.</td></tr><tr><td>3</td><td>Computed PropertiesA computed property declares functions as properties and Ember.js automatically calls the computed properties when needed and combines one or more properties in one variable.</td></tr><tr><td>4</td><td>Computed Properties and Aggregate DataThe computed property accesses all items in an array to determine its value.</td></tr><tr><td>5</td><td>ObserversThe observer observes the property such as computed properties and updates the text of the computed property.</td></tr><tr><td>6</td><td>BindingsThe binding is a powerful feature of Ember.js which helps to create a link between two properties and if one of the properties gets changed, the other one is updated automatically.</td></tr></tbody></table></figure>\n","protected":false},"excerpt":{"rendered":"<p>In Ember.js, all objects are derived from the Ember.Object. Object-oriented analysis and design technique is called object modeling. The Ember.Object supports features such as mixins and constructor methods by using the class system. Ember uses the Ember.Enumerable interface to extend the JavaScript Array prototype to give the observation changes for arrays and also uses the formatting and localization methods to [&hellip;]</p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[57,56],"tags":[],"_links":{"self":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/4073"}],"collection":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=4073"}],"version-history":[{"count":0,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/4073/revisions"}],"wp:attachment":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=4073"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=4073"},{"taxonomy":"post_tag","embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=4073"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":4072,"date":"2020-07-21T11:47:52","date_gmt":"2020-07-21T11:47:52","guid":{"rendered":"http://javascript.foobrdigital.com/?p=221"},"modified":"2020-07-21T11:47:52","modified_gmt":"2020-07-21T11:47:52","slug":"router-2","status":"publish","type":"post","link":"https://computerprogramming.foobrdigital.com/router-2/","title":{"rendered":"Router"},"content":{"rendered":"\n<p>Router is a core feature of EmberJs which translates an URL into a series of templates and represents the state of an application.The Ember uses the router to map the URL to a route handler. The router matches the current URL to other routes which are used for loading data, displaying the templates and to set up an application state.</p>\n\n\n\n<p>Route handler performs some actions such as −</p>\n\n\n\n<ul><li>It provides the template.</li><li>It defines the model and it will be accessible to the template.</li><li>If there is no permission for user to visit the particular part of an app, then router will redirect to a new route.</li></ul>\n\n\n\n<p>The following table lists down the different routers in Ember.js along with their description −</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>S.No.</th><th>Types &amp; Description</th></tr><tr><td>1</td><td>Defining RoutesThe router matches the current URL with routes responsible for displaying template, loading data and setting up an application state.</td></tr><tr><td>2</td><td>Specifying a Route&#8217;s ModelTo specify a routes model, you need a template to display the data from the model.</td></tr><tr><td>3</td><td>Rendering a TemplateThe routes are used to render the external template to the screen.</td></tr><tr><td>4</td><td>RedirectingIt is a URL redirection mechanism that redirects the user to a different page when the requested URL is not found.</td></tr><tr><td>5</td><td>Preventing and Retrying TransitionsThe <em>transition.abort()</em> and <em>transition.retry()</em> methods can be used to abort and retry the transition respectively during a route transition.</td></tr><tr><td>6</td><td>Loading/Error SubstatesEmber router provides information of a route loading and errors which occur when loading a route.</td></tr><tr><td>7</td><td>Query ParametersQuery parameters come into view at the right side of the “?” mark in a URL represented as optional key-value pairs.</td></tr><tr><td>8</td><td>Asynchronous RoutingEmber.js router has the ability to handle complex async logic within an application by using asynchronous routing.</td></tr></tbody></table></figure>\n","protected":false},"excerpt":{"rendered":"<p>Router is a core feature of EmberJs which translates an URL into a series of templates and represents the state of an application.The Ember uses the router to map the URL to a route handler. The router matches the current URL to other routes which are used for loading data, displaying the templates and to [&hellip;]</p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[57,56],"tags":[],"_links":{"self":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/4072"}],"collection":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=4072"}],"version-history":[{"count":0,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/4072/revisions"}],"wp:attachment":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=4072"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=4072"},{"taxonomy":"post_tag","embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=4072"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":4071,"date":"2020-07-21T11:48:26","date_gmt":"2020-07-21T11:48:26","guid":{"rendered":"http://javascript.foobrdigital.com/?p=220"},"modified":"2020-07-21T11:48:26","modified_gmt":"2020-07-21T11:48:26","slug":"templates","status":"publish","type":"post","link":"https://computerprogramming.foobrdigital.com/templates/","title":{"rendered":"Templates"},"content":{"rendered":"\n<p>A template is used to create a&nbsp;<em>standard layout</em>&nbsp;across multiple pages. When you change a template, the pages that are based on that template automatically get changed. Templates provide&nbsp;<em>standardization controls</em>.</p>\n\n\n\n<p>The below table shows some more details about templates −</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>S.No.</th><th>Types &amp; Description</th></tr><tr><td>1</td><td>Handlebars BasicsThe Handlebars templating library allows building rich user interface by including static HTML and dynamic content.</td></tr><tr><td>2</td><td>Built-in HelpersHelpers provide extra functionality to the templates and modifies the raw value from models and components into proper format for users.</td></tr><tr><td>3</td><td>ConditionalsEmber.js defines the two conditional statements which help to control the flow of program.</td></tr><tr><td>4</td><td>Displaying List of ItemsYou can display the list of items in an array by using the <em>#each</em> helper.</td></tr><tr><td>5</td><td>Displaying Keys in an ObjectYou can display the keys in the object by using the <em>#each-in</em> helper.</td></tr><tr><td>6</td><td>LinksThe <em>{{link-to}}</em> component can be used to create a link to a route.</td></tr><tr><td>7</td><td>ActionsThe HTML element can be made clickable by using the <em>{{action}}</em> helper.</td></tr><tr><td>8</td><td>Input HelpersThe common form controls can be created by using the <em>{{input}}</em> and <em>{{textarea}}</em> helpers in the Ember.js</td></tr><tr><td>9</td><td>Development HelpersThe template developement can be made easier by using some helpers of Handlebars and Ember.</td></tr><tr><td>10</td><td>Writing HelpersYou can add extra functionality to the templates and converts the raw values from models and components into proper format for the users.</td></tr></tbody></table></figure>\n","protected":false},"excerpt":{"rendered":"<p>A template is used to create a&nbsp;standard layout&nbsp;across multiple pages. When you change a template, the pages that are based on that template automatically get changed. Templates provide&nbsp;standardization controls. The below table shows some more details about templates − S.No. Types &amp; Description 1 Handlebars BasicsThe Handlebars templating library allows building rich user interface by [&hellip;]</p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[57,56],"tags":[],"_links":{"self":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/4071"}],"collection":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=4071"}],"version-history":[{"count":0,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/4071/revisions"}],"wp:attachment":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=4071"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=4071"},{"taxonomy":"post_tag","embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=4071"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":4070,"date":"2020-07-21T11:48:55","date_gmt":"2020-07-21T11:48:55","guid":{"rendered":"http://javascript.foobrdigital.com/?p=219"},"modified":"2020-07-21T11:48:55","modified_gmt":"2020-07-21T11:48:55","slug":"components-2","status":"publish","type":"post","link":"https://computerprogramming.foobrdigital.com/components-2/","title":{"rendered":"Components"},"content":{"rendered":"\n<p>The Ember.js components uses the W3C web component specification and provides true encapsulation UI widgets. It contains the three main specification as&nbsp;<em>templates</em>,&nbsp;<em>shadow DOM</em>&nbsp;and&nbsp;<em>custom elements</em>. The component is declared within the data-template-name which has a path name instead of a plain string and are prefixed with &#8220;components/&#8221;.</p>\n\n\n\n<p>The following table lists down the action events of actions −</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>S.No.</th><th>Action Events &amp; Description</th></tr><tr><td>1</td><td>Defining a ComponentYou can easily define a component in Ember.js and each component must have a dash in their name.</td></tr><tr><td>2</td><td>Component LifecycleComponent lifecycle uses some of the methods in order to execute the code at specific times in a component&#8217;s life.</td></tr><tr><td>3</td><td>Passing Properties to a ComponentThe component doesn&#8217;t access the property directly in the template scope. Therefore, just declare the property at the time of component deceleration.</td></tr><tr><td>4</td><td>Wrapping Content in a ComponentYou can wrap the content in a component by using the templates.</td></tr><tr><td>5</td><td>Customizing a Component&#8217;s ElementYou can customize the component&#8217;s element such as attributes, class names by using a subclass of <em>Ember.Component</em> in the JavaScript.</td></tr><tr><td>6</td><td>Using Block ParamsThe passed properties in a component can give back the result in a block expression.</td></tr><tr><td>7</td><td>Handling EventsThe user events such as double-click, hovering, key press etc can be handled by event handlers. To do this, apply the event name as a method on the component.</td></tr><tr><td>8</td><td>Triggering Changes with ActionsComponents can trigger the changes and communicate with events by using the actions.</td></tr></tbody></table></figure>\n","protected":false},"excerpt":{"rendered":"<p>The Ember.js components uses the W3C web component specification and provides true encapsulation UI widgets. It contains the three main specification as&nbsp;templates,&nbsp;shadow DOM&nbsp;and&nbsp;custom elements. The component is declared within the data-template-name which has a path name instead of a plain string and are prefixed with &#8220;components/&#8221;. The following table lists down the action events of [&hellip;]</p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[57,56],"tags":[],"_links":{"self":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/4070"}],"collection":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=4070"}],"version-history":[{"count":0,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/4070/revisions"}],"wp:attachment":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=4070"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=4070"},{"taxonomy":"post_tag","embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=4070"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":4069,"date":"2020-07-21T11:49:52","date_gmt":"2020-07-21T11:49:52","guid":{"rendered":"http://javascript.foobrdigital.com/?p=218"},"modified":"2020-07-21T11:49:52","modified_gmt":"2020-07-21T11:49:52","slug":"models","status":"publish","type":"post","link":"https://computerprogramming.foobrdigital.com/models/","title":{"rendered":"Models"},"content":{"rendered":"\n<p>Model is a class that extends the functionality of the Ember Data. When a user refreshes the page, the contents of page should be represented by a model. In Ember.js, every route has an associated model. The model helps to improve the performance of application. The Ember Data manipulates the stored data in the server and also works easily with streaming APIs like socket.io and Firebase or WebSockets.</p>\n\n\n\n<h2>Core Concepts</h2>\n\n\n\n<ul><li>Store</li><li>Models</li><li>Records</li><li>Adapter</li><li>Caching</li></ul>\n\n\n\n<h3>Store</h3>\n\n\n\n<p>The store is a central repository and cache of all records available in an application. The route and controllers can access the stored data of your application. The DS.Store is created automatically to share the data among the entire object.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import Ember from 'ember';\n\nexport default Ember.Route.extend ({\n   model() {\n      return this.store.find();\n   }\n});</code></pre>\n\n\n\n<h3>Models</h3>\n\n\n\n<p>Model is a class that extends the functionality of the Ember Data, which specifies relationships with other objects. When a user refreshes the page, the contents of page should be represented by a model.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>import DS from 'ember-data';\n\nexport default DS.Model.extend ({\n   owner: DS.attr(),\n   city: DS.attr()\n});</code></pre>\n\n\n\n<h3>Records</h3>\n\n\n\n<p>A record is an instance of a model that includes the information, which is loaded from a server and you can identify the record by its model <em>type</em> and <em>ID</em>.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>//It finds the record of type 'person' and an 'ID' of 1\nthis.get('store').findRecord('person', 1); // => { id: 1, name: 'steve-buscemi' }</code></pre>\n\n\n\n<h3>Adapter</h3>\n\n\n\n<p>An adapter is an object that is responsible for translating requested records from Ember into appropriate calls to particular server backend. For instance, if you want to find a person with ID of 1, then Ember will load the URL by using HTTP as&nbsp;<em>/person/1</em>.</p>\n\n\n\n<h3>Caching</h3>\n\n\n\n<p>The records can be cached automatically by the store and returns the same object instance when you load the records from the server for the second time. This improves the performance of your application and displays the application UI to the user as fast as possible.</p>\n\n\n\n<p>The following table lists down the details about models −</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>S.No.</th><th>Model Ways &amp; Description</th></tr><tr><td>1</td><td>Defining ModelsModel is a simple class that extends the functionality of the Ember Data.</td></tr><tr><td>2</td><td>Finding RecordsYou can retrieve the records by using the Ember data store.</td></tr><tr><td>3</td><td>Creating and Deleting RecordsYou can create and delete the records on the instance of model.</td></tr><tr><td>4</td><td>RelationshipsEmber.js provides relationship types to specify how the models are related to each other.</td></tr><tr><td>5</td><td>Pushing Records Into The StoreYou can push the records into the store&#8217;s cache without requesting the records from an application.</td></tr><tr><td>6</td><td>Handling MetadataMetadata is a data that is used for specific model or type instead of using record.</td></tr><tr><td>7</td><td>Customizing AdaptersEmber.js Adapter specifies how data is kept on at the backend data store such as URL format and REST API headers.</td></tr></tbody></table></figure>\n","protected":false},"excerpt":{"rendered":"<p>Model is a class that extends the functionality of the Ember Data. When a user refreshes the page, the contents of page should be represented by a model. In Ember.js, every route has an associated model. The model helps to improve the performance of application. The Ember Data manipulates the stored data in the server [&hellip;]</p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[57,56],"tags":[],"_links":{"self":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/4069"}],"collection":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=4069"}],"version-history":[{"count":0,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/4069/revisions"}],"wp:attachment":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=4069"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=4069"},{"taxonomy":"post_tag","embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=4069"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":4068,"date":"2020-07-21T11:51:20","date_gmt":"2020-07-21T11:51:20","guid":{"rendered":"http://javascript.foobrdigital.com/?p=217"},"modified":"2020-07-21T11:51:20","modified_gmt":"2020-07-21T11:51:20","slug":"managing-dependencies","status":"publish","type":"post","link":"https://computerprogramming.foobrdigital.com/managing-dependencies/","title":{"rendered":"Managing Dependencies"},"content":{"rendered":"\n<p>Ember uses NPM and Bower for managing dependencies which are defined in package.json for NPM and&nbsp;<em>bower.json</em>&nbsp;for Bower. For instance, you may require installing SASS for your style sheets which is not installed by Ember while developing Ember app. To accomplish this, use the&nbsp;<em>Ember Addons</em>&nbsp;for sharing the reusable libraries. If you want to install any CSS framework or JavaScript datepicker dependencies, then use the Bower package manager.</p>\n\n\n\n<h2>Addons</h2>\n\n\n\n<p>The <em>Ember CLI</em> can be used to install the Ember Addons by using the following command −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>ember install ember-cli-sass\n</code></pre>\n\n\n\n<p>The&nbsp;<em>ember install command</em>&nbsp;will save all the dependencies to the respective configuration file.</p>\n\n\n\n<h2>Bower</h2>\n\n\n\n<p>It is a package manager for the web which manages the components of HTML, CSS, JavaScript or image files. It basically maintains and monitors all packages and examines new updates. It uses the configuration file&nbsp;<em>bower.json</em>&nbsp;to keep track of applications placed at the root of the Ember CLI project.</p>\n\n\n\n<p>You can install the project dependencies by using the following command −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>bower install &lt;dependencies> --save</code></pre>\n\n\n\n<h2>Assets</h2>\n\n\n\n<p>You can place the third-party JavaScript in the&nbsp;<em>vendor/</em>&nbsp;folder of your project which are not available as an Addon or Bower package and place the own assets such as robots.txt, favicon, etc. in the&nbsp;<em>public/</em>&nbsp;folder of your project. The dependencies which are not installed by Ember while developing the Ember app, should be included by using the manifest file&nbsp;<em>ember-cli-build.js</em>.</p>\n\n\n\n<h2>AMD JavaScript modules</h2>\n\n\n\n<p>You can give the asset path as the first argument and the list of modules and exports as the second argument. You can include these assets in the <em>ember-cli-build.js</em> manifest file as −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>app.import('bower_components/ic-ajax/dist/named-amd/main.js', {\n   exports: {\n      'ic-ajax': &#91;\n         'default',\n         'defineFixture',\n         'lookupFixture',\n         'raw',\n         'request'\n      ]\n   }\n});</code></pre>\n\n\n\n<h2>Environment Specific Assets</h2>\n\n\n\n<p>The different assets can be used in different environments by defining object as first parameter which is an environment name and the value of an object should be used as asset in that environment. In the <em>ember-cli-build.js</em> manifest file, you can include as −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>app.import ({\n   development: 'bower_components/ember/ember.js',\n   production:  'bower_components/ember/ember.prod.js'\n});</code></pre>\n\n\n\n<h2>Other Assets</h2>\n\n\n\n<p>Once all the assets are placed in the&nbsp;<em>public/</em>&nbsp;folder, they will get copied into the dist/ directory. For instance, if you copy a favicon placed at the&nbsp;<em>public/images/favicon.ico</em>&nbsp;folder, this will get copied into the&nbsp;<em>dist/images/favicon.ico</em>&nbsp;directory. The third-party assets can be added manually in the&nbsp;<em>vendor/</em>&nbsp;folder or by using the Bower package manager via the&nbsp;<em>import()</em>&nbsp;option. The assets which are not added by using the&nbsp;<em>import()</em>&nbsp;option, will not be present in the final build.</p>\n\n\n\n<p>For instance, consider the following line of code which imports the assets into the <em>dist/</em> folder.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>app.import('bower_components/font-awesome/fonts/fontawesome-webfont.ttf');</code></pre>\n\n\n\n<p>The above line of code creates a font file in <em>dist/font-awesome/fonts/fontawesomewebfont.ttf</em>. You can also place the above file at a different path as shown below −</p>\n\n\n\n<pre class=\"wp-block-code\"><code>app.import('bower_components/font-awesome/fonts/fontawesome-webfont.ttf', {\n   destDir: 'assets'\n});</code></pre>\n\n\n\n<p>It will copy the font file in&nbsp;<em>dist/assets/fontawesome-webfont.ttf</em>.</p>\n","protected":false},"excerpt":{"rendered":"<p>Ember uses NPM and Bower for managing dependencies which are defined in package.json for NPM and&nbsp;bower.json&nbsp;for Bower. For instance, you may require installing SASS for your style sheets which is not installed by Ember while developing Ember app. To accomplish this, use the&nbsp;Ember Addons&nbsp;for sharing the reusable libraries. If you want to install any CSS [&hellip;]</p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[57,56],"tags":[],"_links":{"self":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/4068"}],"collection":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=4068"}],"version-history":[{"count":0,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/4068/revisions"}],"wp:attachment":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=4068"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=4068"},{"taxonomy":"post_tag","embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=4068"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":4067,"date":"2020-07-21T11:51:47","date_gmt":"2020-07-21T11:51:47","guid":{"rendered":"http://javascript.foobrdigital.com/?p=216"},"modified":"2020-07-21T11:51:47","modified_gmt":"2020-07-21T11:51:47","slug":"application-concerns","status":"publish","type":"post","link":"https://computerprogramming.foobrdigital.com/application-concerns/","title":{"rendered":"Application Concerns"},"content":{"rendered":"\n<p>The Ember application can be extended by using the&nbsp;<em>Ember.Application</em>&nbsp;class which declares and configures the objects that are helpful in building your application.</p>\n\n\n\n<p>Application creates the&nbsp;<em>Ember.ApplicationInstance</em>&nbsp;class while running which is used for managing its aspects and it acts as owner for instantiated objects. In short, the&nbsp;<em>Ember.Application</em>&nbsp;class defines the application and the&nbsp;<em>Ember.ApplicationInstance class</em>&nbsp;manages its state.</p>\n\n\n\n<p>The following table lists down more details about models −</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>S.No.</th><th>Model Ways &amp; Description</th></tr><tr><td>1</td><td>Dependency InjectionIt is a process of supplying dependencies of one object to another and used by an Ember application to declare and instantiates the objects and dependencies classes between them.</td></tr><tr><td>2</td><td>InitializersInitializers are used to configure an application as it boots.</td></tr><tr><td>3</td><td>ServicesService is an Ember object which can be made available in the different parts of the application.</td></tr><tr><td>4</td><td>The Run LoopIt is a region where most of the application&#8217;s internal code takes place.</td></tr></tbody></table></figure>\n","protected":false},"excerpt":{"rendered":"<p>The Ember application can be extended by using the&nbsp;Ember.Application&nbsp;class which declares and configures the objects that are helpful in building your application. Application creates the&nbsp;Ember.ApplicationInstance&nbsp;class while running which is used for managing its aspects and it acts as owner for instantiated objects. In short, the&nbsp;Ember.Application&nbsp;class defines the application and the&nbsp;Ember.ApplicationInstance class&nbsp;manages its state. The following [&hellip;]</p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[57,56],"tags":[],"_links":{"self":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/4067"}],"collection":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=4067"}],"version-history":[{"count":0,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/4067/revisions"}],"wp:attachment":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=4067"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=4067"},{"taxonomy":"post_tag","embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=4067"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":4066,"date":"2020-07-21T11:52:22","date_gmt":"2020-07-21T11:52:22","guid":{"rendered":"http://javascript.foobrdigital.com/?p=215"},"modified":"2020-07-21T11:52:22","modified_gmt":"2020-07-21T11:52:22","slug":"configuring-ember-js","status":"publish","type":"post","link":"https://computerprogramming.foobrdigital.com/configuring-ember-js/","title":{"rendered":"Configuring Ember.js"},"content":{"rendered":"\n<p>The Ember.js can be configured for managing the application&#8217;s environment. The configuring Ember.js includes the following topics −</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>S.No.</th><th>Configuring Ways &amp; Description</th></tr><tr><td>1</td><td>Configuring App and Ember CLIYou can configure the Ember App and CLI for managing the application&#8217;s environment.</td></tr><tr><td>2</td><td>Disabling Prototype Extensions and Specifying URL TypeThe prototype extensions can be disabled by setting the <em>EXTEND_PROTOTYPES</em> flag to false and specifying the URL type by using the Ember router options.</td></tr><tr><td>3</td><td>Embedding Applications and Feature FlagsYou can Embed an application into an existing page by changing the root element and feature flags can be enabled based on the project&#8217;s configuration.</td></tr></tbody></table></figure>\n","protected":false},"excerpt":{"rendered":"<p>The Ember.js can be configured for managing the application&#8217;s environment. The configuring Ember.js includes the following topics − S.No. Configuring Ways &amp; Description 1 Configuring App and Ember CLIYou can configure the Ember App and CLI for managing the application&#8217;s environment. 2 Disabling Prototype Extensions and Specifying URL TypeThe prototype extensions can be disabled by [&hellip;]</p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[57,56],"tags":[],"_links":{"self":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/4066"}],"collection":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=4066"}],"version-history":[{"count":0,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/4066/revisions"}],"wp:attachment":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=4066"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=4066"},{"taxonomy":"post_tag","embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=4066"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},{"id":4065,"date":"2020-07-21T11:52:52","date_gmt":"2020-07-21T11:52:52","guid":{"rendered":"http://javascript.foobrdigital.com/?p=214"},"modified":"2020-07-21T11:52:52","modified_gmt":"2020-07-21T11:52:52","slug":"ember-inspector","status":"publish","type":"post","link":"https://computerprogramming.foobrdigital.com/ember-inspector/","title":{"rendered":"Ember Inspector"},"content":{"rendered":"\n<p>Ember inspector is a browser add-on which is used to debug the Ember applications. The Ember inspector includes the following topics −</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>S.No.</th><th>Ember inspector Ways &amp; Description</th></tr><tr><td>1</td><td>Installing the InspectorYou can install the Ember inspector to debug your application.</td></tr><tr><td>2</td><td>Object InspectorThe Ember inspector allows interacting with the Ember objects.</td></tr><tr><td>3</td><td>The View TreeThe view tree provides the current state of an application.</td></tr><tr><td>4</td><td>Inspecting Routes, Data Tab and Library InfoYou can see the list of application&#8217;s routes defined by the inspector and the Data tab is used to display the list of model types.</td></tr><tr><td>5</td><td>Debugging PromisesEmber inspector provides promises based on their states.</td></tr><tr><td>6</td><td>Inspecting Objects and Rendering PerformanceUse the Container for inspecting the object instances and compute the application&#8217;s render time by using the Render Performance option.</td></tr></tbody></table></figure>\n","protected":false},"excerpt":{"rendered":"<p>Ember inspector is a browser add-on which is used to debug the Ember applications. The Ember inspector includes the following topics − S.No. Ember inspector Ways &amp; Description 1 Installing the InspectorYou can install the Ember inspector to debug your application. 2 Object InspectorThe Ember inspector allows interacting with the Ember objects. 3 The View [&hellip;]</p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[57,56],"tags":[],"_links":{"self":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/4065"}],"collection":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"}],"about":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=4065"}],"version-history":[{"count":0,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/4065/revisions"}],"wp:attachment":[{"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=4065"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=4065"},{"taxonomy":"post_tag","embeddable":true,"href":"https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=4065"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}}]